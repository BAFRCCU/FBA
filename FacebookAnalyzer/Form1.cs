using OpenQA.Selenium;
using Bizness;
using OpenQA.Selenium.Chrome;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration;
using System.Data;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Net;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using System.Windows.Forms;
using NAudio.Wave;
using System.Runtime.InteropServices;
using System.Drawing.Drawing2D;
using System.Globalization;
using System.Resources;
using FacebookAnalyzer.Properties;
using System.Security.Policy;
using OpenQA.Selenium.Support.UI;
using System.Data.OleDb;
using System.Collections.ObjectModel;
using OpenQA.Selenium.Interactions;
using Bizness;
using System.Net.Mail;
using System.Net.NetworkInformation;
using System.Reflection;

namespace FacebookAnalyzer
{
    public partial class Form1 : Form
    {


        public string userNameF;
        public string passWordF;
        public Bitmap MyImage;
        public int STEP = 4;
        public bool allimages = false;
        public bool publicTargetImages = false;
        public bool screenshots = false;
        public bool profileFromUrl = false;
        public bool comments = false;
        public bool friends = false;
        Dictionary<string, string> dicoMessenger = new Dictionary<string, string>();
        public string pathToSave = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments);
        public string pathToSaveBAK = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments) + @"\FacebookAnalyzer\";
        public string USERNAME = "Machine : " + Environment.MachineName + " - OS Version : " + Environment.OSVersion + " - User : " + Environment.UserName + " - UserDomain : " + Environment.UserDomainName;
        public ChromeDriver driver;
        public ChromeDriver driverHidden;
        public bool getMessenger = false;
        public bool getContactMessenger = false;
        Dictionary<string, string> dicoDestinatairesFromGrid = new Dictionary<string, string>();
        public bool selected = false;
        //public IList<string, string> listeForSearch = new List<string, string>();
        public List<string> sortedListForSearching = new System.Collections.Generic.List<string>();
        Dictionary<int, int> dicoResultsIndexSearch = new Dictionary<int, int>();
        string pathConfig = AppDomain.CurrentDomain.BaseDirectory;
        string pathConfigParam = AppDomain.CurrentDomain.BaseDirectory;
        Dictionary<string, string> videos = new Dictionary<string, string>();
        ChromeDriver driverMessenger;
        Rectangle resolution;
        static bool profilIsSet = false;
        OvalPictureBox oval;
        FileInfo[] fichiersJournal;
        FileInfo[] fichiersImages;
        FileInfo[] fichiersImagess;
        FileInfo[] fichiers;
        Dictionary<string, string> audios = new Dictionary<string, string>();
        Dictionary<string, Analytics> Analytics = new Dictionary<string, Analytics>();
        StringBuilder resulttsID = new StringBuilder();
        Dictionary<string, string> dicoresulttsID = new Dictionary<string, string>();
        private  int IndexBatch = 0;
        string BATCHFOLDERNAME = "";
        string BATCHDIRNAME = "";
        Batch batch;



        static int Next;
        static int NextMessenger;
        static int Previous;
        public int STEPP = 100;
        bool ONLYSCREENSHOT = false;
        bool FASTMESSENGER = false;
        bool FASTJOURNAL = false;
        bool FASTJOURNALFORBUSINESS = false;
        bool BUSINESSMODE = false;
        bool FROMURL = false;
        bool FROMINSTAGRAM= false;
        bool FRIENDS = true;
        bool FOLLOWERS = true;
        bool GROUPS = true;
        bool INSTAGRAM = false;
        bool FIRSTTIME = true;
        bool GIMMEID = false;
        bool GIMMEIDFORIDENTIFIANT = false;
        bool BATCHING = false;
        bool ScreenshotComments = true;
        public string LANGUAGESELECTED = "";
        string nbrePublications = "";
        public event ThumbnailImageEventHandler OnImageSizeChanged;
 

        private ThumbnailController m_Controller;

        private ImageDialog m_ImageDialog;

        private ImageViewer m_ActiveImageViewer;

        string listItemclick = "";

        public int size = 0;
        ThumbnailFlowLayoutPanel flowLayoutImagesActives = new ThumbnailFlowLayoutPanel();
        Configuration config = ConfigurationManager.OpenExeConfiguration(Assembly.GetEntryAssembly().ManifestModule.FullyQualifiedName);


        //[DllImport("winmm.dll")]
        //private static extern long mciSendString(string command, StringBuilder retstrign, int Returnlength, IntPtr callback);
        // Define the output wav file of the recorded audio
        // Create class-level accessible variables to store the audio recorder and capturer instance
        private WaveFileWriter RecordedAudioWriter = null;
        private WasapiLoopbackCapture CaptureInstance = null;
        


        // Copyright (c) 2020 All Rights Reserved
        // </copyright>
        // <author>Frank Bastin</author>
        public Form1()
        {
            InitializeComponent();
            //dataGridViewMessenger
            //textBoxops.Select();
            GetResolutionScreen();

            //try
            //{
            //    Configuration config = ConfigurationManager.OpenExeConfiguration(Assembly.GetEntryAssembly().ManifestModule.FullyQualifiedName);
            //}
            //catch
            //{

            //}

            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(Form1));
            textBox1.Width = this.Width;
            resolution = Screen.FromControl(this).WorkingArea;
            oval = new OvalPictureBox();

            oval.Anchor = System.Windows.Forms.AnchorStyles.Top;
            oval.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(23)))), ((int)(((byte)(120)))), ((int)(((byte)(242)))));
            //oval.BackColor = Color.Black;
            //oval.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;
            oval.Image = ((System.Drawing.Image)(resources.GetObject("pictureBoxtango.Image")));
            oval.Location = new System.Drawing.Point(pictureBoxtango.Location.X + 13, pictureBoxtango.Location.Y + 13);
            oval.Name = "pictureboxtango";
            oval.Size = new System.Drawing.Size(125, 125);
            oval.SizeMode = System.Windows.Forms.PictureBoxSizeMode.Zoom;
            oval.TabIndex = 8;
            oval.TabStop = false;
            //panel22.SendToBack();
            oval.BringToFront();
            oval.Visible = true;
            pathToSave = pathToSave + @"\FacebookAnalyzer\" + textBoxops.Text;

            if (!BATCHING)
                panelBatching.Visible = false;

            tabPageStart.Controls.Add(oval);
            dataGridViewPictures.ContextMenuStrip = contextMenuStrip3;
            dataGridViewJournal.ContextMenuStrip = contextMenuStrip1;
            flowLayoutPictures.ContextMenuStrip = contextMenuStrip4;
            dataGridView3.ContextMenuStrip = contextMenuStrip5;
            toolTip1.SetToolTip(panel24, "Sélectionnez amis, journal, images ...");
            toolTip1.SetToolTip(pictureBox35, "Sélectionnez amis, journal, images ...");
            toolTip1.SetToolTip(pictureBox59, "Cliquez pour demander de l'aide'");
            toolTip1.SetToolTip(button18, "Cliquez pour enregistrer le case'");
            toolTip1.SetToolTip(buttonImport, "Cliquez pour importer un case'");
            toolTip1.SetToolTip(buttonanalyze, "Cliquez pour télécharger les données");
            toolTip1.SetToolTip(pictureBox5, "Sélectionnez un contact dans la grille et cliquez pour ouvrir la conversation");
            toolTip1.SetToolTip(dataGridViewMessenger, "Double cliquez sur une ligne pour voir screenshot ou sélectionnez pour voir conversation texte");
            toolTip1.SetToolTip(pictureBox67, "MARKETPLACE");
            toolTip1.SetToolTip(buttonInfo, "Information sur la fenêtre");
            toolTip1.SetToolTip(pictureBox71, "GROUPS");
            toolTip1.SetToolTip(labelAMIS, "AMIS/ABONNES");
            toolTip1.SetToolTip(pictureBox30, "AMIS/ABONNES");
            toolTip1.SetToolTip(labelIMAGES, "IMAGES");
            toolTip1.SetToolTip(pictureBox29, "IMAGES");
            toolTip1.SetToolTip(labelCommentss, "COMMENTAIRES");
            toolTip1.SetToolTip(pictureBox33, "COMMENTAIRES");
            toolTip1.SetToolTip(labelJournal, "JOURNAL");
            toolTip1.SetToolTip(pictureBox31, "JOURNAL");
            toolTip1.SetToolTip(labelIdentifiants, "IDENTIFIANTS");
            toolTip1.SetToolTip(pictureBox27, "IDENTIFIANTS");
            toolTip1.SetToolTip(labelLikes, "LIKES");
            toolTip1.SetToolTip(pictureBoxLikes, "LIKES");
            toolTip1.SetToolTip(labelMessenger, "MESSENGER");
            toolTip1.SetToolTip(pictureBox32, "MESSENGER");
            toolTip1.SetToolTip(labelParam, "PARAMETRES");
            toolTip1.SetToolTip(pictureBox28, "PARAMETRES");
            toolTip1.SetToolTip(labelTags, "TAGS");
            toolTip1.SetToolTip(pictureBoxTags, "TAGS");
            toolTip1.SetToolTip(labelMap, "LIEUX");
            toolTip1.SetToolTip(pictureBox62, "LIEUX");
            toolTip1.SetToolTip(labelGroupe, "GROUPES");
            toolTip1.SetToolTip(pictureBox73, "GROUPES");
            toolTip1.SetToolTip(pictureBox74, "paramètres du profil OSINT");
            toolTip1.SetToolTip(pictureBox77, "Cliquez pour fermer mode Batch");
            toolTip1.SetToolTip(pictureBox78, "Cliquez pour nouveau profil");

            dataGridViewIdentifiants.ContextMenuStrip = contextMenuStrip6;


            ImageList iconsList = new ImageList();
            iconsList.TransparentColor = Color.Blue;
            iconsList.ColorDepth = ColorDepth.Depth32Bit;
            iconsList.ImageSize = new Size(40, 40);
            iconsList.Images.Add(global::FacebookAnalyzer.Properties.Resources._8_81096_facebook_messenger_white_icon_bts_stickers_messenger_hd2);
            iconsList.Images.Add(global::FacebookAnalyzer.Properties.Resources.anonymous);
            iconsList.Images.Add(global::FacebookAnalyzer.Properties.Resources.instagram_logos_png_images_free_download_2);
            iconsList.Images.Add(((System.Drawing.Image)(resources.GetObject("pictureBox27.Image"))));
            iconsList.Images.Add(((System.Drawing.Image)(resources.GetObject("pictureBox72.Image"))));

            tabControl1.ImageList = iconsList;
            MESSENGERR.ImageIndex = 0;
            tabPage7.ImageIndex = 1;
            tabPageInstagram.ImageIndex = 2;
            IDS.ImageIndex = 3;
            DISCREET.ImageIndex = 4;
            if (checkBoxHidepassword.Checked)
            {
                textBoxPASSWORD.PasswordChar = '*';
            }
            else
                textBoxPASSWORD.PasswordChar = '\0';

            label56.Text = pathToSaveBAK;
                        

            m_AddImageDelegate = new DelegateAddImage(this.AddImage);
            m_ImageDialog = new ImageDialog();




            m_Controller = new ThumbnailController();
            m_Controller.OnStart += new ThumbnailControllerEventHandler(m_Controller_OnStart);
            m_Controller.OnAdd += new ThumbnailControllerEventHandler(m_Controller_OnAdd);
            m_Controller.OnEnd += new ThumbnailControllerEventHandler(m_Controller_OnEnd);

            flowLayoutImagesActives.Visible = true;
            flowLayoutImagesActives.Dock = System.Windows.Forms.DockStyle.Fill;
            flowLayoutImagesActives.FlowDirection = FlowDirection.LeftToRight;
            //flowLayoutImagesActives.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)
            //| System.Windows.Forms.AnchorStyles.Left)));
            flowLayoutImagesActives.AutoScroll = true;
            flowLayoutImagesActives.BackColor = System.Drawing.Color.White;
            flowLayoutImagesActives.Location = new System.Drawing.Point(0, 0);
            flowLayoutImagesActives.Name = "flowLayoutImagesActives";
            flowLayoutImagesActives.Size = new System.Drawing.Size(1440, 800);

            if (checkBoxOSINT.Checked)
            {
                try
                {
                    


                    textBoxUSERNAME.Text = config.AppSettings.Settings["OSINTusername"].Value;
                    textBoxPASSWORD.Text = config.AppSettings.Settings["OSINTpassword"].Value;

                    textBox16.Text = config.AppSettings.Settings["OSINTusername"].Value;
                    textBox17.Text = config.AppSettings.Settings["OSINTpassword"].Value;
                }
                catch
                {

                }
                
               

            }
            else
            {
                textBoxUSERNAME.Text = "";
                textBoxPASSWORD.Text = "";

                textBox16.Text = "";
                textBox17.Text = "";
            }


            if (!BUSINESSMODE)
            {
                tabControl1.TabPages.Remove(tabPage5);
            }


            if (backgroundWorker1 != null)
                if (backgroundWorker1.IsBusy)
                    return;

            if (backgroundWorker1 == null)
            {
                backgroundWorker1 = new BackgroundWorker();

                backgroundWorker1.WorkerReportsProgress = true;

                backgroundWorker1.ProgressChanged += new ProgressChangedEventHandler(backgroundWorker1_ProgressChanged);

                backgroundWorker1.DoWork += new DoWorkEventHandler(backgroundWorker1_DoWork);

                backgroundWorker1.RunWorkerCompleted += new RunWorkerCompletedEventHandler(backgroundWorker1_RunWorkerCompleted);

                backgroundWorker1.WorkerSupportsCancellation = true;
            }
            else
            {
                backgroundWorker1.WorkerReportsProgress = true;

                backgroundWorker1.ProgressChanged += new ProgressChangedEventHandler(backgroundWorker1_ProgressChanged);

                backgroundWorker1.DoWork += new DoWorkEventHandler(backgroundWorker1_DoWork);

                backgroundWorker1.RunWorkerCompleted += new RunWorkerCompletedEventHandler(backgroundWorker1_RunWorkerCompleted);

                backgroundWorker1.WorkerSupportsCancellation = true;
            }

            //progressBar1.Visible = true;
            progressBarfriends.Value = 0;
            progressBarfriends.Maximum = STEP;


            dateTimePicker5.Visible = !checkBoxNewLook.Checked;

            if (checkBoxNewLook.Checked)
            {
                label14.Text = "à partir de";
                label14.Location = new Point(1, label14.Location.Y);
            }

            else
            {
                label14.Text = "à";
                label14.Location = new Point(61, label14.Location.Y);
            }
                
        }

        public delegate void ThumbnailImageEventHandler(object sender, ThumbnailImageEventArgs e);
        private void m_Controller_OnStart(object sender, ThumbnailControllerEventArgs e)
        {

        }

        private void m_Controller_OnAdd(object sender, ThumbnailControllerEventArgs e)
        {
            this.AddImage(e.ImageFilename);
            this.Invalidate();
        }

        private void m_Controller_OnEnd(object sender, ThumbnailControllerEventArgs e)
        {
            // thread safe
            if (this.InvokeRequired)
            {
                this.Invoke(new ThumbnailControllerEventHandler(m_Controller_OnEnd), sender, e);
            }
            else
            {
                //this.buttonCancel.Enabled = false;
                //this.buttonBrowseFolder.Enabled = true;
            }
        }

        delegate void DelegateAddImage(string imageFilename);
        private DelegateAddImage m_AddImageDelegate;

        private int ImageSize
        {
            get
            {
                return (64 * 1);
            }
        }
        private void imageViewer_MouseClick(object sender, MouseEventArgs e)
        {
            if (m_ActiveImageViewer != null)
            {
                m_ActiveImageViewer.IsActive = false;
            }

            m_ActiveImageViewer = (ImageViewer)sender;
            m_ActiveImageViewer.IsActive = true;

            if (m_ImageDialog.IsDisposed) m_ImageDialog = new ImageDialog();
            if (!m_ImageDialog.Visible) m_ImageDialog.Show();

            m_ImageDialog.SetImage(m_ActiveImageViewer.ImageLocation);
        }
        
        private void AddImage(string imageFilename)
        {
            if (imageFilename.ToLower().Contains("profile"))
                return;

            // thread safe
            if (this.InvokeRequired)
            {
                this.Invoke(m_AddImageDelegate, imageFilename);
            }
            else
            {
                int size = ImageSize;

                ImageViewer imageViewer = new ImageViewer();
                imageViewer.Dock = DockStyle.Bottom;
                imageViewer.LoadImage(imageFilename, 256, 256);
                imageViewer.Width = size;
                imageViewer.Height = size;
                imageViewer.IsThumbnail = true;
                imageViewer.MouseClick += new MouseEventHandler(imageViewer_MouseClick);
                imageViewer.ContextMenuStrip = contextMenuStrip4;
                imageViewer.Name = imageFilename;

                this.OnImageSizeChanged += new ThumbnailImageEventHandler(imageViewer.ImageSizeChanged);
                
               flowLayoutImagesActives.Controls.Add(imageViewer);
               panelThumbnail.Controls.Add(flowLayoutImagesActives);
                

            }
        }
        public class ThumbnailImageEventArgs : EventArgs
        {
            public ThumbnailImageEventArgs(int size)
            {
                this.Size = size;
            }

            public int Size;
        }


       
        private string GetFacebookID(string url, string email, string pass)
        {
            string idReturn = "999999";

            try
            {
                CookieCollection cookies = new CookieCollection();
                HttpWebRequest request = (HttpWebRequest)WebRequest.Create("https://www.facebook.com");

                request.CookieContainer = new CookieContainer();
                request.CookieContainer.Add(cookies);
                //Get the response from the server and save the cookies from the first request..
                HttpWebResponse response = (HttpWebResponse)request.GetResponse();
                cookies = response.Cookies;

                string getUrl = "https://www.facebook.com/login.php?login_attempt=1";
                //string getUrl = url.Replace("https://www.facebook.com", "https://m.facebook.com");//"https://m.facebook.com/login.php?login_attempt=1";
                //string postData = String.Format("email={0}&pass={1}", email, pass);
                string postData = "lsd=AVo_jqIy&email=" + email + "& pass = " + pass + " & default_persistent = 0 &charset_test =% E2 % 82 % AC % 2C % C2 % B4 % 2C % E2 % 82 % AC % 2C % C2 % B4 % 2C % E6 % B0 % B4 % 2C % D0 % 94 % 2C % D0 % 84 &timezone = -300 & lgnrnd = 072342_0iYK & lgnjs = 1348842228 & locale = en_US";
                HttpWebRequest getRequest = (HttpWebRequest)WebRequest.Create(getUrl);
                getRequest.CookieContainer = new CookieContainer();
                getRequest.CookieContainer.Add(cookies); //recover cookies First request
                getRequest.Method = WebRequestMethods.Http.Post;
                getRequest.UserAgent = "Mozilla/5.0 (Windows NT 10.0; WOW64; rv:56.0) Gecko/20100101 Firefox/56.0";
                getRequest.AllowWriteStreamBuffering = true;
                getRequest.ProtocolVersion = HttpVersion.Version11;
                getRequest.AllowAutoRedirect = true;
                getRequest.ContentType = "application/x-www-form-urlencoded";
                getRequest.KeepAlive = true;

                //request = (HttpWebRequest)WebRequest.Create(url.Replace("https://www.facebook.com", "https://m.facebook.com"));

                byte[] byteArray = Encoding.ASCII.GetBytes(postData);
                getRequest.ContentLength = byteArray.Length;
                Stream newStream = getRequest.GetRequestStream(); //open connection
                newStream.Write(byteArray, 0, byteArray.Length); // Send the data.
                newStream.Close();

                HttpWebResponse getResponse = (HttpWebResponse)getRequest.GetResponse();
                string sourceCode = "";
                using (StreamReader sr = new StreamReader(getResponse.GetResponseStream()))
                {
                    sourceCode = sr.ReadToEnd();
                }

                try
                {
                    if(sourceCode.Contains("rid="))
                        idReturn = sourceCode.Substring(sourceCode.IndexOf("rid=") + 4).Split('&')[0];
                    else
                    {
                        string username = url.Substring(url.LastIndexOf("/") + 1);

                        if (sourceCode.Contains("<a href=\"/" + username))
                        {
                            string cut = sourceCode.Substring(sourceCode.IndexOf("<a href=\"/" + username));

                            if (cut.Contains("%3A"))
                                idReturn = cut.Substring(cut.IndexOf("%3A") + 3).Split(new string[] { "%3A" }, StringSplitOptions.None)[0];
                        }

                    }
                        

                }
                catch
                {

                }


                return idReturn;
            }
            catch
            {
                return "999999";
            }

        }

        //private void InitializeBackgoundWorkers()
        //{
        //    for (var f = 0; f < MaxThreads; f++)
        //    {
        //        threadArray[f] = new BackgroundWorker();

        //        threadArray[f].WorkerReportsProgress = true;

        //        threadArray[f].ProgressChanged += new ProgressChangedEventHandler(backgroundWorker1_ProgressChanged);

        //        threadArray[f].DoWork += new DoWorkEventHandler(backgroundWorker1_DoWork);

        //        threadArray[f].RunWorkerCompleted += new RunWorkerCompletedEventHandler(backgroundWorker1_RunWorkerCompleted);

        //        threadArray[f].WorkerSupportsCancellation = true;
        //        threadArray[f].RunWorkerAsync("Friends");
        //    }
        //}

        private void LaunchBatch(string ecase, int index, bool discreet, string dir)
        {
            if (dataGridViewBatch.Rows.Count == 0)
                return;

         
                textBoxops.Text = ecase.Replace("\\","");
                textBoxUSERNAMEFRIENDS.Text = dataGridViewBatch.Rows[index].Cells[0].Value.ToString();
                checkBox1.Checked = dataGridViewBatch.Rows[index].Cells[1].Value == null ? false : (bool)dataGridViewBatch.Rows[index].Cells[1].Value;
                checkBoxFollowers.Checked = dataGridViewBatch.Rows[index].Cells[2].Value == null ? false : (bool)dataGridViewBatch.Rows[index].Cells[2].Value;
                checkBoxGroupes.Checked = dataGridViewBatch.Rows[index].Cells[3].Value == null ? false : (bool)dataGridViewBatch.Rows[index].Cells[3].Value;
                checkBox2.Checked = dataGridViewBatch.Rows[index].Cells[4].Value == null ? false : (bool)dataGridViewBatch.Rows[index].Cells[4].Value;
                dateTimePicker4.Value = dataGridViewBatch.Rows[index].Cells[5].Value == null ? new DateTime(DateTime.Now.Year,01,01) : new DateTime(Int32.Parse(dataGridViewBatch.Rows[index].Cells[5].Value.ToString()),01,01);
                checkBox3.Checked = dataGridViewBatch.Rows[index].Cells[6].Value == null ? false : (bool)dataGridViewBatch.Rows[index].Cells[6].Value;
                checkBoxLikes.Checked = dataGridViewBatch.Rows[index].Cells[7].Value == null ? false : (bool)dataGridViewBatch.Rows[index].Cells[7].Value;
                checkBoxMap.Checked = dataGridViewBatch.Rows[index].Cells[8].Value == null ? false : (bool)dataGridViewBatch.Rows[index].Cells[8].Value;
                checkBox4.Checked = dataGridViewBatch.Rows[index].Cells[9].Value == null ? false : (bool)dataGridViewBatch.Rows[index].Cells[9].Value;
                checkBox5.Checked = dataGridViewBatch.Rows[index].Cells[10].Value == null ? false : (bool)dataGridViewBatch.Rows[index].Cells[10].Value;

                checkBoxDiscreetMode.Checked = discreet;
                BATCHFOLDERNAME = dataGridViewBatch.Rows[index].Cells[0].Value.ToString().Replace("https://www.facebook.com/","\\");





            buttonanalyze.PerformClick();
           
        }



        private void button1_Click(object sender, EventArgs e)
        {
            //Dictionary<string, string> dico = new Dictionary<string, string>();
            //dico.Add("https://www.facebook.com/cybercaution/friends", "https://www.facebook.com/cybercaution/friends");

            //GetParameters();
            //return;
            //panelAbout.Visible = false;

            if (textBoxops.Text == "")
            {
                textBoxops.BackColor = Color.Red;
                MessageBox.Show("Veuillez remplir le champ OPS");
                return;
            }
            else
                textBoxops.BackColor = Color.White;

            //if (BATCHDIRNAME != "")
            //    pathToSave = BATCHDIRNAME + "\\";

            if (!pathToSave.Contains(textBoxops.Text))
                pathToSave += textBoxops.Text + BATCHFOLDERNAME;

            if (Directory.Exists(pathToSave))
            {
                if(MessageBox.Show("Ce dossier existe déjà. Voulez-vous le supprimer ? ","",MessageBoxButtons.YesNo,MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    EraseDirectory(pathToSave, true);
                }

            }

            if (FIRSTTIME)
            {
                Process[] chromeProcesses = Process.GetProcessesByName("chrome");

                if (chromeProcesses.Count() > 0)
                    if (MessageBox.Show(chromeProcesses.Count() + " process Chrome sont actuellement en mémoire. Voulez-vous les arrêter ? ", "", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                    {
                        try
                        {
                            string arg = @"/C taskkill /f";

                            foreach (Process p in Process.GetProcessesByName("chrome"))
                            {
                                arg += " /pid " + p.Id;
                            }

                            Process pro = new Process();
                            pro.StartInfo.UseShellExecute = false;
                            pro.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;
                            pro.StartInfo.CreateNoWindow = true;
                            pro.StartInfo.RedirectStandardOutput = true;
                            pro.StartInfo.FileName = "cmd.exe";
                            pro.StartInfo.Verb = "runas";
                            pro.StartInfo.Arguments = arg;
                            pro.Start();
                            //Console.WriteLine(Process.StandardOutput.ReadToEnd());
                            pro.WaitForExit();
                            pro.Close();


                        }
                        catch
                        {

                        }
                    }

            }


            FIRSTTIME = false;




            if (textBoxUSERNAMEFRIENDS.Text.EndsWith("/"))
                textBoxUSERNAMEFRIENDS.Text = textBoxUSERNAMEFRIENDS.Text.Substring(0, textBoxUSERNAMEFRIENDS.Text.LastIndexOf('/'));

            if (checkBox1.Checked)
            {
                progressBarfriends.Visible = true;
                
                pictureBoxwaiting.Visible = true;
                pictureBoxwaiting.Refresh();
                pictureBoxlogofacebook.Visible = true;
                pictureBoxlogofacebook.Visible = true;
                pictureBoxlogofacebook.BringToFront();
                pictureBoxwaiting.Refresh();
                pictureBoxlogofacebook.Refresh();
                dataGridView2.Rows.Clear();
                panelFriendss.Visible = true;

                IsANewThread("Friends");
            }

            if (checkBoxFollowers.Checked)
            {
                progressBarfriends.Visible = true;

                pictureBoxwaiting.Visible = true;
                pictureBoxwaiting.Refresh();
                pictureBoxlogofacebook.Visible = true;
                pictureBoxlogofacebook.Visible = true;
                pictureBoxlogofacebook.BringToFront();
                pictureBoxwaiting.Refresh();
                pictureBoxlogofacebook.Refresh();
                dataGridView2.Rows.Clear();
                panelFriendss.Visible = true;

                IsANewThread("Followers");
            }

            if (checkBoxGroupes.Checked)
            {
                progressBarfriends.Visible = true;

                pictureBoxwaiting.Visible = true;
                pictureBoxwaiting.Refresh();
                pictureBoxlogofacebook.Visible = true;
                pictureBoxlogofacebook.Visible = true;
                pictureBoxlogofacebook.BringToFront();
                pictureBoxwaiting.Refresh();
                pictureBoxlogofacebook.Refresh();
                dataGridView2.Rows.Clear();
                panelFriendss.Visible = true;

                IsANewThread("Groups");
            }


            if (checkBox2.Checked)
            {

                
                pictureBoxwaiting.Visible = true;
                pictureBoxwaiting.Refresh();
                pictureBoxlogofacebook.Visible = true;
                pictureBoxlogofacebook.BringToFront();
                pictureBoxwaiting.Refresh();
                pictureBoxlogofacebook.Refresh();
                panelJournalVisible.Visible = true;

                IsANewThread("Journal");
            }
                

            if (checkBox3.Checked)
            {
                //progressBarpictures.Visible = true;
                
                pictureBoxpictures.Visible = false;
                pictureBoxwaiting.Visible = true;
                pictureBoxwaiting.Refresh();
                pictureBoxlogofacebook.Visible = true;
                pictureBoxlogofacebook.BringToFront();
                pictureBoxwaiting.Refresh();
                pictureBoxlogofacebook.Refresh();
                paneImagesWaiting.Visible = true;

                IsANewThread("Pictures");
            }
                

            if (checkBox4.Checked)
            {
                
                pictureBoxwaiting.Visible = true;
                pictureBoxwaiting.Refresh();
                pictureBoxlogofacebook.Visible = true;
                pictureBoxlogofacebook.BringToFront();
                pictureBoxwaiting.Refresh();
                pictureBoxlogofacebook.Refresh();
                panelParmVisible.Visible = true;

                IsANewThread("Parametres");
            }

            if (checkBox5.Checked)
            {
                
                pictureBoxwaiting.Visible = true;
                pictureBoxwaiting.Refresh();
                pictureBoxlogofacebook.Visible = true;
                pictureBoxlogofacebook.BringToFront();
                pictureBoxwaiting.Refresh();
                pictureBoxlogofacebook.Refresh();
                panelCommentsVisible.Visible = true;

                IsANewThread("Comments");
            }

           

            

            if (checkBox6.Checked)
            {
                ONLYSCREENSHOT = true;
            }
            else
                ONLYSCREENSHOT = false;

            //if (checkBoxcomments.Checked || checkBoxfriends.Checked || checkBoxpictures.Checked)
            //{ labelanalyseencours.Visible = true; pictureBoxwaiting.Visible = true; }
            if (pictureBoxtango.Image == global::FacebookAnalyzer.Properties.Resources.target2)
                pictureBoxtango.Image = global::FacebookAnalyzer.Properties.Resources.target2;
            //pictureBoxlogofacebook.Visible = true;

            if (checkBoxBusinessPictures.Checked && BUSINESSMODE)
            {
                pictureBoxwaiting.Visible = true;
                pictureBoxwaiting.Refresh();
                pictureBoxlogofacebook.Visible = true;
                pictureBoxlogofacebook.Visible = true;
                pictureBoxlogofacebook.BringToFront();
                pictureBoxwaiting.Refresh();
                pictureBoxlogofacebook.Refresh();
                IsANewThread("ImagesPictures");
            }

            if (checkBoxBusinessJournal.Checked)
            {
                pictureBoxwaiting.Visible = true;
                pictureBoxwaiting.Refresh();
                pictureBoxlogofacebook.Visible = true;
                pictureBoxlogofacebook.BringToFront();
                pictureBoxwaiting.Refresh();
                pictureBoxlogofacebook.Refresh();                
                panel43.Visible = true;

                IsANewThread("HomepageBusiness");
            }

            if (checkBoxLikes.Checked)
            {
                pictureBoxwaiting.Visible = true;
                pictureBoxwaiting.Refresh();
                pictureBoxlogofacebook.Visible = true;
                pictureBoxlogofacebook.BringToFront();
                pictureBoxwaiting.Refresh();
                pictureBoxlogofacebook.Refresh();
                panel43.Visible = true;
                panelWaitinLikes.Visible = true;

                IsANewThread("Likes");
            }

            if (checkBoxMap.Checked)
            {
                pictureBoxwaiting.Visible = true;
                pictureBoxwaiting.Refresh();
                pictureBoxlogofacebook.Visible = true;
                pictureBoxlogofacebook.BringToFront();
                pictureBoxwaiting.Refresh();
                pictureBoxlogofacebook.Refresh();
                panel43.Visible = true;
                panelWaitingMap.Visible = true;

                IsANewThread("Map");
            }

            //IsANewThread();

            progressBarfriends.Value = 0;
            progressBarfriends.Maximum = STEP;

            progressBarcomments.Value = 0;
            progressBarcomments.Maximum = STEP;

            progressBarpictures.Value = 0;
            progressBarpictures.Maximum = STEP;

            panelIdentifiantsVisible.Visible = false;

            dataGridViewTrace.Rows.Clear();
            dataGridViewDiscreet.Rows.Clear();
            panel53.Visible = true;

            checkBoxDiscreetMode.Enabled = false;
            
            //pictureBoxcomments.Visible = false;
            //pictureBoxfriends.Visible = false;
            //pictureBoxpictures.Visible = false;
            //pictureBoxwaiting.Visible = false;
            
        }

        private void button1_MouseHover(object sender, EventArgs e)
        {
            buttonanalyze.BackColor = Color.White;
        }

        private void backgroundWorker1_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)
        {
            if(!GIMMEIDFORIDENTIFIANT)
            FillIdentifiants();

            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(Form1));


            // StopProcess();
            pictureBoxwaiting.Visible = false;
            pictureBoxwaitingurl.Visible = false;
            FROMURL = false;
            pictureBoxlogofacebook.Visible = false;
           

            labelfriends.Text = "Amis/Abonnes/Groupes";
            labelfriends.Refresh();

            checkBoxDiscreetMode.Enabled = true;
            GIMMEIDFORIDENTIFIANT = false;
            //pathToSave = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments);
            //pathToSave = pathToSave + @"\FacebookAnalyzer\" ;
           

            if (BATCHING && IndexBatch < dataGridViewBatch.Rows.Count - 1)
            {
                profilIsSet = false;
                string ecaseName = labelBatch.Text.Substring(labelBatch.Text.IndexOf("Ecase=") + 6).Split(';')[0];
                string directoryy = labelBatch.Text.Substring(labelBatch.Text.IndexOf("Directory=") + 10).Split(';')[0];


               

                string results = labelAMIS.Text.Substring(labelAMIS.Text.IndexOf("AMIS / ABONNES : ") + 17) + ";";
                results += labelAMIS.Text.Substring(labelAMIS.Text.IndexOf("AMIS / ABONNES : ") + 17) + ";";
                results += labelGroupe.Text.Substring(labelGroupe.Text.IndexOf("GROUPES : ") + 10) + ";";
                results += labelJournal.Text.Substring(labelJournal.Text.IndexOf("JOURNAL : ") + 10) + ";";
                results += labelIMAGES.Text.Substring(labelIMAGES.Text.IndexOf("IMAGES : ") + 9) + ";";
                results += labelLikes.Text.Substring(labelLikes.Text.IndexOf("LIKES : ") + 8) + ";";
                results += labelMap.Text.Substring(labelMap.Text.IndexOf("LIEUX : ") + 8) + ";";
                results += labelCommentss.Text.Substring(labelCommentss.Text.IndexOf("COMMENTAIRES : ") + 15) + ";";
                results += labelParam.Text.Substring(labelParam.Text.IndexOf("PARAMETRES : ") + 13) + ";";
                
                

                batch.SetResultInDataGridResult(results, IndexBatch);

                //on recupere les resultats à partir des labels de resultats
                labelAMIS.Text = "AMIS / ABONNES : 0";
                labelIMAGES.Text = "IMAGES : 0";
                labelCommentss.Text = "COMMENTAIRES : 0";
                labelJournal.Text = "JOURNAL : 0";
                labelIdentifiants.Text = "IDENTIFIANTS : 0";
                labelLikes.Text = "LIKES : 0";
                labelParam.Text = "PARAMETRES : 0";
                labelTags.Text = "TAGS : 0";
                labelMap.Text = "LIEUX : 0";
                labelGroupe.Text = "GROUPES : 0";



                //batch.SetResultInDataGridResult
                //labelAMIS.Text;
                //labelIMAGES.Text;
                //labelCommentss.Text;
                //labelJournal.Text;
                //labelIdentifiants.Text;
                //labelLikes.Text;
                //labelParam.Text;
                //labelTags.Text;
                //labelMap.Text;
                //labelGroupe.Text;


                
                pictureBoxwaiting.Visible = false;
                pictureBox64.Visible = false;
                panel53.Visible = false;
                pictureBoxfriends.Visible = false;
                pictureBoxIdentifiants.Visible = false;
                pictureBoxcomments.Visible = false;
                pictureBoxJournal.Visible = false;
                pictureBoxMapOK.Visible = false;
                pictureBoxParam.Visible = false;
                pictureBox5OKLikes.Visible = false;
                pictureBoxtango.Visible = true;
                pictureBoxtango.BringToFront();
                pictureBoxtango.Refresh();
                panel3.BringToFront();
                panel4.BringToFront();

                SaveCaseForBatching();

                labelID.Text = "";

                IndexBatch++;
                LaunchBatch(ecaseName, IndexBatch, checkBoxDiscreetMode.Checked, directoryy);
            }
            else
            {
                if(batch != null)
                {
                    string results = labelAMIS.Text.Substring(labelAMIS.Text.IndexOf("AMIS / ABONNES : ") + 17) + ";";
                    results += labelAMIS.Text.Substring(labelAMIS.Text.IndexOf("AMIS / ABONNES : ") + 17) + ";";
                    results += labelGroupe.Text.Substring(labelGroupe.Text.IndexOf("GROUPES : ") + 10) + ";";
                    results += labelJournal.Text.Substring(labelJournal.Text.IndexOf("JOURNAL : ") + 10) + ";";
                    results += labelIMAGES.Text.Substring(labelIMAGES.Text.IndexOf("IMAGES : ") + 9) + ";";
                    results += labelLikes.Text.Substring(labelLikes.Text.IndexOf("LIKES : ") + 8) + ";";
                    results += labelMap.Text.Substring(labelMap.Text.IndexOf("LIEUX : ") + 8) + ";";
                    results += labelCommentss.Text.Substring(labelCommentss.Text.IndexOf("COMMENTAIRES : ") + 15) + ";";
                    results += labelParam.Text.Substring(labelParam.Text.IndexOf("PARAMETRES : ") + 13) + ";";

                    batch.SetResultInDataGridResult(results, IndexBatch);

                    SaveCaseForBatching();

                    BATCHING = false;
                    IndexBatch = 0;
                    BATCHFOLDERNAME = "";
                    BATCHDIRNAME = "";
                }



                pictureBox77.Enabled = true;
                labelID.Text = "";
                

            }

        }
        [System.Runtime.InteropServices.DllImport("ole32.dll")]
        static extern void CoFreeUnusedLibraries();
        private void backgroundWorker1_DoWork(object sender, DoWorkEventArgs e)
        {

           


            // while (true)
            //{
            while (!backgroundWorker1.CancellationPending)
            {
                if (GIMMEID)
                {

                    GimmeID(resulttsID.ToString().Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries));
                    GIMMEID = false;
                    break;

                }

                if (GIMMEIDFORIDENTIFIANT)
                {

                    GimmeID(dicoresulttsID);
                    //GIMMEIDFORIDENTIFIANT = false;
                    break;

                }

                

                if (FROMURL)
                {
                    ScrollFacebookPage(textBoxURL.Text, textBoxTitrePage.Text);
                    //ScrollFacebookPageForEvents(textBoxURL.Text, textBoxTitrePage.Text);
                    FROMURL = false;
                    break;
                }

                if (FROMINSTAGRAM)
                {
                    ScrollInstagramPage(textBoxURLInstagram.Text, textBoxTitrePage.Text);
                    //ScrollFacebookPageForEvents(textBoxURL.Text, textBoxTitrePage.Text);
                    FROMINSTAGRAM = false;
                    break;
                }

                if (getContactMessenger)
                    GetContactsMessenger();
                //else
                //if (getMessenger)
                //    Messenger(dicoDestinatairesFromGrid);
                //else
                ///////
                if (checkBox1.Checked && !checkBoxNewLook.Checked)
                {
                    FindAllFriendsFromFacebook();
                    e.Result = "Friends";
                    //break;

                    if (backgroundWorker1.IsBusy)
                        backgroundWorker1.CancelAsync();
                }

                if (checkBox1.Checked && checkBoxNewLook.Checked)
                {
                    FindAllFriendsFromNewFacebook();
                    e.Result = "Friends";
                    //break;

                    if (backgroundWorker1.IsBusy)
                        backgroundWorker1.CancelAsync();
                }

                if (checkBoxFollowers.Checked && checkBoxNewLook.Checked)
                {
                    FindAllFollowersFromNewFacebook();
                    e.Result = "Followers";
                    //break;

                    if (backgroundWorker1.IsBusy)
                        backgroundWorker1.CancelAsync();
                }

                if (checkBoxGroupes.Checked && checkBoxNewLook.Checked)
                {
                    FindAllGroupsFromNewFacebook();
                    e.Result = "Groups";
                    //break;

                    if (backgroundWorker1.IsBusy)
                        backgroundWorker1.CancelAsync();
                }

                if (checkBox2.Checked && !checkBoxNewLook.Checked)
                {
                    //GetHomePage(dateTimePicker5.Value.Year, dateTimePicker4.Value.Year);
                    GetHomePage(dateTimePicker5.Value.Year, dateTimePicker4.Value.Year);
                    e.Result = "Journal";
                }

                if (checkBox2.Checked && checkBoxNewLook.Checked)
                {
                    //GetHomePage(dateTimePicker5.Value.Year, dateTimePicker4.Value.Year);
                    GetHomePageForNewLook(dateTimePicker4.Value);
                    e.Result = "Journal";
                }


                if (checkBox3.Checked && !checkBoxNewLook.Checked)
                {
                    FindAllPicturesFromFacebook(textBoxUSERNAMEFRIENDS.Text);
                    e.Result = "Pictures";
                }

                if (checkBox3.Checked && checkBoxNewLook.Checked)
                {
                    FindAllPicturesFromFacebookForNewLook(textBoxUSERNAMEFRIENDS.Text);
                    e.Result = "Pictures";
                }

                if (checkBox4.Checked && !checkBoxNewLook.Checked)
                {
                    GetParameters();
                    e.Result = "Parameters";
                }
                if (checkBox4.Checked && checkBoxNewLook.Checked)
                {
                    GetParametersForNewLook();
                    e.Result = "Parameters";
                }

                if (checkBox5.Checked)
                {
                    GetAllCommentsForNewLook(0, 0);
                    e.Result = "Comments";
                }

                if (checkBoxBusinessPictures.Checked && BUSINESSMODE)
                {
                    GetPictures();
                    e.Result = "Pictures Business";
                }

                if (checkBoxBusinessJournal.Checked)
                {
                    GetHomePageForBusiness();
                }

                if (checkBoxLikes.Checked && !checkBoxNewLook.Checked)
                {
                    FindAllLikesFromFacebook();
                }

                if (checkBoxLikes.Checked && checkBoxNewLook.Checked)
                {
                    FindAllLikesFromFacebookForNewLook();
                }
                                

                if (checkBoxMap.Checked && checkBoxNewLook.Checked)
                {
                    FindAllMapFromNewFacebook();
                }

                

            }
        }

        private void FindAllGroupsFromNewFacebook()
        {

            //IsANewThread();
            backgroundWorker1.ReportProgress(-90);
            backgroundWorker1.ReportProgress(-8888, 0);
            backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " début du scraping des groupes");

            string targetName = textBoxops.Text;
            string titrePage = "";
            string urlFriend = textBoxUSERNAMEFRIENDS.Text;
            string urlFollowers = textBoxUSERNAMEFRIENDS.Text;
            string urlGroups = textBoxUSERNAMEFRIENDS.Text;
            string ID = "";
            //pour cacher fenetre DOS

            if (driver == null)
            {
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " initialisation du driver");
                InitializeDriver();
                // 2. Go to the "Google" homepage
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture de la page facebook login");
                driver.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }

                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driver.FindElementById("email");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driver.FindElementById("pass");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driver.FindElementById("loginbutton").Click();
                Thread.Sleep(2500);
                //searchButton.Click();

                //u_0_8
                //"menuBar']//*[@class='menuItem']"
                // 2. Go to the "Google" homepage
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture de la page facebook du target");
                driver.Navigate().GoToUrl(urlFriend);
                titrePage = driver.Title;
                Thread.Sleep(5000);
            }

            System.Random rnd = new System.Random();
            backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture de la page facebook du target");
            driver.Navigate().GoToUrl(urlFriend);
            titrePage = driver.Title;
            Thread.Sleep(5000);

            if (!profilIsSet)
                GetProfileInformations(backgroundWorker1);



            if (GROUPS)
            {
                ///////////////////////////////////////------------------------------------------------------ les groupes

                if (urlGroups.Contains("id="))
                {
                    urlGroups = urlGroups + "&sk=rgroups";
                }
                else
                {
                    urlGroups = urlGroups + "/groups";
                }

                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture de la page Groupes");

                driver.Navigate().GoToUrl(urlGroups);
                //driver.Manage().Window.Maximize();
                Thread.Sleep(1500);

                //try
                //{
                //    if (driver.FindElementsByXPath("//img[@class='hu5pjgll']")[0].GetAttribute("src").Contains("404"))
                //    {
                //        backgroundWorker1.ReportProgress(-100);
                //        Thread.Sleep(2000);

                //        backgroundWorker1.CancelAsync();

                //        return;
                //    }

                //}
                //catch
                //{

                //}

                if (isElementPresent(driver, "//img[@class='hu5pjgll']"))
                {
                    backgroundWorker1.ReportProgress(-100);
                    Thread.Sleep(2000);

                    backgroundWorker1.CancelAsync();


                    return;
                }

                if (!Directory.Exists(pathToSave + "\\GROUPS"))
                {
                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " création de " + pathToSave + "\\GROUPS");
                    Directory.CreateDirectory(pathToSave + "\\GROUPS");
                }
                    

                ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top

                Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                long innerHeightt = (long)innerHeight;
                long scroll = (long)innerHeight;
                long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                scrollHeight = scrollHeight + scroll;
                int hauteur = 450;

                //IWebElement Element = driver.FindElementByXPath("//div[@class='_5h60 _30f']");
                //Element.FindElements(By.TagName("li"))[0].FindElements(By.TagName("a"))[0].GetAttribute("data-hovercard");


                //if (!Element.Text.ToLower().Contains("abonnés"))
                try
                {
                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " scrolling de la page Groupes ");
                    Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                    int ii = 1;
                    while (scrollHeight >= innerHeightt)
                    {
                        //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                        //Thread.Sleep(1000);

                        Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                        imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                        //Save the screenshot
                        imageScreenshott.SaveAsFile(pathToSave + @"\GROUPS\" + "_" + ii + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                        Thread.Sleep(100);



                        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                        if ((scrollHeight - innerHeightt) < 200)
                        {
                            Thread.Sleep(5000);
                        }
                        else
                            Thread.Sleep(2500);


                        scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
                        Thread.Sleep(2000);


                        if (scrollHeight <= innerHeightt)
                        {
                            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                            Thread.Sleep(2000);
                            scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                        }

                        scrollHeight = scrollHeight + scroll;
                        innerHeightt = innerHeightt + hauteur;
                        ii++;
                    }
                }
                catch
                {
                    //e.printStackTrace();
                }

                //IList<IWebElement> els = driver.FindElementsByXPath("//div[@class='bp9cbjyn ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi n1f8r23x rq0escxv j83agx80 bi6gxh9e discj3wi hv4rvrfc ihqw7lf3 dati1w0a gfomwglr']");//i1fnvgqd lhclo0ds btwxx1t3 j83agx80
                IList<IWebElement> els = driver.FindElementsByXPath("//div[@class='dati1w0a ihqw7lf3 hv4rvrfc discj3wi']")[0].FindElements(By.XPath(".//div[@class='bp9cbjyn ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi n1f8r23x rq0escxv j83agx80 bi6gxh9e discj3wi hv4rvrfc ihqw7lf3 dati1w0a gfomwglr']"));

                //elll = driver.FindElementByXPath("//div[@class='j83agx80 l9j0dhe7 k4urcfbm']");
                //IList<IWebElement> els = elll.FindElements(By.XPath("div[@class='bp9cbjyn ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi n1f8r23x rq0escxv j83agx80 bi6gxh9e discj3wi hv4rvrfc ihqw7lf3 dati1w0a gfomwglr']"));
                //els = elll.FindElements(By.XPath("//div[@class='bp9cbjyn ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi n1f8r23x rq0escxv j83agx80 bi6gxh9e discj3wi hv4rvrfc ihqw7lf3 dati1w0a gfomwglr']"));  //elll.FindElements(By.TagName("div"));
                //if (!Element.Text.ToLower().Contains("abonnés"))
                try
                {
                    Dictionary<string, ForGrid> dicoProff = new Dictionary<string, ForGrid>();
                    Dictionary<string, string> dicoPicturess = new Dictionary<string, string>();
                    backgroundWorker1.ReportProgress(-8888, els.Count);
                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " scraping de la page Groupes : " + els.Count());
                    foreach (IWebElement ell in els)
                    {
                        if (ell.GetAttribute("class") != "bp9cbjyn ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi n1f8r23x rq0escxv j83agx80 bi6gxh9e discj3wi hv4rvrfc ihqw7lf3 dati1w0a gfomwglr")
                            continue;
                        try
                        {
                            IWebElement aa = ell.FindElement(By.TagName("a"));
                            string urll = aa.GetAttribute("href");

                            if (!urll.Contains("profile.php?id="))
                                urll = urll.Split('?')[0];
                            else
                                urll = urll = urll.Split('&')[0];

                            if (urll.Contains("#"))
                                continue;


                            //d'abord l'url et l'id


                            //string idd = aa.GetAttribute("data-hovercard");
                            //if (idd == null && ell.GetAttribute("innerHTML").Contains("data-profileid="))
                            //    idd = ell.GetAttribute("innerHTML").Substring(ell.GetAttribute("innerHTML").IndexOf("data-profileid=\"") + 16).Split('"')[0];
                            //else
                            //if (idd.Contains("data-profileid=\""))
                            //    idd = idd.Substring(idd.IndexOf("data-profileid=\"") + 16).Split('"')[0];
                            //else
                            //    idd = idd.Substring(idd.IndexOf("?id=") + 4).Split('&')[0];

                            string imageProff = "";
                            string labelProff = "";

                            //if (ell.Text.Contains("membres"))
                            //    labelProff = "GP_";

                            //try
                            //{
                            //maintenant l'image
                            imageProff = aa.FindElement(By.TagName("img")).GetAttribute("src");
                            labelProff = labelProff + ell.Text.Split(new string[] { "\r" }, StringSplitOptions.RemoveEmptyEntries)[0];
                            //}
                            //catch
                            //{
                            ////maintenant l'image
                            //imageProff = ell.FindElement(By.TagName("img")).GetAttribute("src");
                            //labelProff = ell.FindElement(By.TagName("img")).GetAttribute("aria-label");
                            //}

                            ForGrid forGrid = new ForGrid();
                            forGrid.Url = urll;
                            forGrid.Id = imageProff.Substring(imageProff.IndexOf("_") + 1).Split('_')[0];
                            forGrid.Label = labelProff.Replace("<", "").Replace(">", "").Replace("?", "").Replace(":", "").Replace("'", "").Replace("|", "").Replace("\\", "").Replace("/", "").Replace("\"", "");

                            if (!dicoProff.ContainsKey(imageProff))
                                dicoProff.Add(imageProff, forGrid);

                            if (!dicoPicturess.ContainsKey(imageProff))
                                dicoPicturess.Add(imageProff, urll);

                            Analytics analy = new Analytics();
                            analy.Category = "GROUPS";

                            //analy.PathToPicture = userNameTag + "_" + idTag + "_" + numTag + i + ".png";
                            try
                            {
                                analy.Username = forGrid.Label;
                                analy.Url = forGrid.Url;
                                analy.PathToPicture = forGrid.PathToPicture;
                                analy.PathToPicture = "\\PicturesProfiles\\" + forGrid.Label.ToString() + "_" + forGrid.Id + ".jpg";
                            }
                            catch
                            {

                            }


                            if (!Analytics.ContainsKey(analy.Category + ";" + analy.Username + ";" + analy.Url))
                                Analytics.Add(analy.Category + ";" + analy.Username + ";" + analy.Url, analy);
                        }
                        catch
                        {
                            continue;
                        }

                        backgroundWorker1.ReportProgress(-88888, 1);
                        Thread.Sleep(100);

                    }

                    if (!Directory.Exists(pathToSave + "\\PicturesProfilesGroups"))
                    {
                        backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " création de " + pathToSave + "\\PicturesProfilesGroups");
                        Directory.CreateDirectory(pathToSave + "\\PicturesProfilesGroups");
                    }
                        



                    int count = 0;
                    int j = 0;
                    backgroundWorker1.ReportProgress(-8888, dicoProff.Count);

                    foreach (string file in Directory.GetFiles(pathToSave + "\\PicturesProfilesGroups"))
                    {
                        File.Delete(file);
                    }
                    Thread.Sleep(500);

                    if (dicoProff.Count > 0)
                    {
                        backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " téléchargement des images de profile des Groupes");

                        foreach (string profile in dicoProff.Keys)
                        {
                            using (var client = new WebClient())
                            {


                                try

                                {

                                    client.DownloadFile(profile, pathToSave + "\\PicturesProfilesGroups\\" + ((ForGrid)dicoProff[profile]).Label.ToString() + "_" + ((ForGrid)dicoProff[profile]).Id + ".jpg");
                                    Thread.Sleep(500);
                                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " " + ((ForGrid)dicoProff[profile]).Label.ToString());


                                }
                                catch (Exception ex)
                                {
                                    //MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT DE LA PHOTO DE PROFIL");
                                    //return;
                                }



                            }


                            //backgroundWorker1.ReportProgress(j);
                            

                            ForGrid forGridd = dicoProff[profile];
                            backgroundWorker1.ReportProgress(-9, forGridd);
                            j++;
                        }

                    }




                }
                catch (Exception exx)
                {

                }

                backgroundWorker1.ReportProgress(-10000);
                Thread.Sleep(2000);

                backgroundWorker1.CancelAsync();

            }
        }

        private void FindAllFollowersFromNewFacebook()
        {
            backgroundWorker1.ReportProgress(-90);
            backgroundWorker1.ReportProgress(-7777, 0);
            backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " début du scraping des abonnés ");


            string targetName = textBoxops.Text;
            string titrePage = "";
            string urlFriend = textBoxUSERNAMEFRIENDS.Text;
            string urlFollowers = textBoxUSERNAMEFRIENDS.Text;
            string urlGroups = textBoxUSERNAMEFRIENDS.Text;
            string ID = "";
            //pour cacher fenetre DOS

            if (driver == null)
            {
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " initialisation du driver ");

                InitializeDriver();
                // 2. Go to the "Google" homepage

                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " connexion page facebook login ");
                driver.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }

                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driver.FindElementById("email");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driver.FindElementById("pass");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driver.FindElementById("loginbutton").Click();
                Thread.Sleep(2500);
                //searchButton.Click();

                //u_0_8
                //"menuBar']//*[@class='menuItem']"
                // 2. Go to the "Google" homepage
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture page abonnés ");
                driver.Navigate().GoToUrl(urlFriend);
                titrePage = driver.Title;
                Thread.Sleep(5000);
            }

            System.Random rnd = new System.Random();

            backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture page abonnés ");
            driver.Navigate().GoToUrl(urlFriend);
            titrePage = driver.Title;
            Thread.Sleep(5000);

            if (!profilIsSet)
                GetProfileInformations(backgroundWorker1);




            if (FOLLOWERS)
            {
                ///////////////////////////////////////------------------------------------------------------ les followers

                if (urlFollowers.Contains("id="))
                {
                    urlFollowers = urlFollowers + "&sk=followers";
                }
                else
                {
                    urlFollowers = urlFollowers + "/followers";
                }

                driver.Navigate().GoToUrl(urlFollowers);
                //driver.Manage().Window.Maximize();
                Thread.Sleep(1500);

                //try
                //{
                //    if (driver.FindElementsByXPath("//img[@class='hu5pjgll']")[0].GetAttribute("src").Contains("404"))
                //    {
                //        backgroundWorker1.ReportProgress(-100);
                //        Thread.Sleep(2000);

                //        backgroundWorker1.CancelAsync();

                //        return;
                //    }

                //}
                //catch
                //{

                //}

                if (isElementPresent(driver, "//img[@class='hu5pjgll']"))
                {
                    backgroundWorker1.ReportProgress(-100);
                    Thread.Sleep(2000);

                    backgroundWorker1.CancelAsync();


                    return;
                }

                ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top

                Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                long innerHeightt = (long)innerHeight;
                long scroll = (long)innerHeight;
                long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                scrollHeight = scrollHeight + scroll;
                int hauteur = 450;

                //IWebElement Element = driver.FindElementByXPath("//div[@class='_5h60 _30f']");
                //Element.FindElements(By.TagName("li"))[0].FindElements(By.TagName("a"))[0].GetAttribute("data-hovercard");


                //if (!Element.Text.ToLower().Contains("abonnés"))
                try
                {
                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " scrolling de la page abonnés");

                    Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                    int ii = 1;
                    while (scrollHeight >= innerHeightt)
                    {
                        //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                        //Thread.Sleep(1000);

                        Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                        imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                        //Save the screenshot
                        imageScreenshott.SaveAsFile(pathToSave + @"\FRIENDS\" + "_" + ii + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                        Thread.Sleep(100);



                        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                        if ((scrollHeight - innerHeightt) < 200)
                        {
                            Thread.Sleep(5000);
                        }
                        else
                            Thread.Sleep(2500);


                        scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
                        Thread.Sleep(2000);


                        if (scrollHeight <= innerHeightt)
                        {
                            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                            Thread.Sleep(2000);
                            scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                        }

                        scrollHeight = scrollHeight + scroll;
                        innerHeightt = innerHeightt + hauteur;
                        ii++;
                    }
                }
                catch
                {
                    //e.printStackTrace();
                }

                //IList<IWebElement> els = driver.FindElementsByXPath("//div[@class='bp9cbjyn ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi n1f8r23x rq0escxv j83agx80 bi6gxh9e discj3wi hv4rvrfc ihqw7lf3 dati1w0a gfomwglr']");//i1fnvgqd lhclo0ds btwxx1t3 j83agx80
                IList<IWebElement> els = driver.FindElementsByXPath("//div[@class='dati1w0a ihqw7lf3 hv4rvrfc discj3wi']")[0].FindElements(By.XPath(".//div[@class='bp9cbjyn ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi n1f8r23x rq0escxv j83agx80 bi6gxh9e discj3wi hv4rvrfc ihqw7lf3 dati1w0a gfomwglr']"));

                //elll = driver.FindElementByXPath("//div[@class='j83agx80 l9j0dhe7 k4urcfbm']");
                //IList<IWebElement> els = elll.FindElements(By.XPath("div[@class='bp9cbjyn ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi n1f8r23x rq0escxv j83agx80 bi6gxh9e discj3wi hv4rvrfc ihqw7lf3 dati1w0a gfomwglr']"));
                //els = elll.FindElements(By.XPath("//div[@class='bp9cbjyn ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi n1f8r23x rq0escxv j83agx80 bi6gxh9e discj3wi hv4rvrfc ihqw7lf3 dati1w0a gfomwglr']"));  //elll.FindElements(By.TagName("div"));
                //if (!Element.Text.ToLower().Contains("abonnés"))
                try
                {
                    Dictionary<string, ForGrid> dicoProff = new Dictionary<string, ForGrid>();
                    Dictionary<string, string> dicoPicturess = new Dictionary<string, string>();
                    backgroundWorker1.ReportProgress(-7777, els.Count);
                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " scraping des abonnés : " + els.Count());

                    foreach (IWebElement ell in els)
                    {
                        if (ell.GetAttribute("class") != "bp9cbjyn ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi n1f8r23x rq0escxv j83agx80 bi6gxh9e discj3wi hv4rvrfc ihqw7lf3 dati1w0a gfomwglr")
                            continue;
                        try
                        {
                            IWebElement aa = ell.FindElement(By.TagName("a"));
                            string urll = aa.GetAttribute("href");

                            if (!urll.Contains("profile.php?id="))
                                urll = urll.Split('?')[0];
                            else
                                urll = urll = urll.Split('&')[0];

                            if (urll.Contains("#"))
                                continue;


                            //d'abord l'url et l'id


                            //string idd = aa.GetAttribute("data-hovercard");
                            //if (idd == null && ell.GetAttribute("innerHTML").Contains("data-profileid="))
                            //    idd = ell.GetAttribute("innerHTML").Substring(ell.GetAttribute("innerHTML").IndexOf("data-profileid=\"") + 16).Split('"')[0];
                            //else
                            //if (idd.Contains("data-profileid=\""))
                            //    idd = idd.Substring(idd.IndexOf("data-profileid=\"") + 16).Split('"')[0];
                            //else
                            //    idd = idd.Substring(idd.IndexOf("?id=") + 4).Split('&')[0];

                            string imageProff = "";
                            string labelProff = "";

                            if (ell.Text.Contains("membres"))
                                labelProff = "GP_";

                            //try
                            //{
                            //maintenant l'image
                            imageProff = aa.FindElement(By.TagName("img")).GetAttribute("src");
                            labelProff = labelProff + ell.Text.Split(new string[] { "\r" }, StringSplitOptions.RemoveEmptyEntries)[0];
                            //}
                            //catch
                            //{
                            ////maintenant l'image
                            //imageProff = ell.FindElement(By.TagName("img")).GetAttribute("src");
                            //labelProff = ell.FindElement(By.TagName("img")).GetAttribute("aria-label");
                            //}

                            ForGrid forGrid = new ForGrid();
                            forGrid.Url = urll;
                            forGrid.Id = imageProff.Substring(imageProff.IndexOf("_") + 1).Split('_')[0];
                            forGrid.Label = labelProff.Replace("<", "").Replace(">", "").Replace("?", "").Replace(":", "").Replace("'", "").Replace("|", "").Replace("\\", "").Replace("/", "").Replace("\"", "");

                            if (!dicoProff.ContainsKey(imageProff))
                                dicoProff.Add(imageProff, forGrid);

                            if (!dicoPicturess.ContainsKey(imageProff))
                                dicoPicturess.Add(imageProff, urll);

                            Analytics analy = new Analytics();
                            analy.Category = "FOLLOWERS";

                            //analy.PathToPicture = userNameTag + "_" + idTag + "_" + numTag + i + ".png";
                            try
                            {
                                analy.Username = forGrid.Label;
                                analy.Url = forGrid.Url;
                                analy.PathToPicture = forGrid.PathToPicture;
                                analy.PathToPicture = "\\PicturesProfiles\\" + forGrid.Label.ToString() + "_" + forGrid.Id + ".jpg";
                            }
                            catch
                            {

                            }


                            if (!Analytics.ContainsKey(analy.Category + ";" + analy.Username + ";" + analy.Url))
                                Analytics.Add(analy.Category + ";" + analy.Username + ";" + analy.Url, analy);
                        }
                        catch
                        {
                            continue;
                        }

                        backgroundWorker1.ReportProgress(-77777, 1);
                        Thread.Sleep(100);

                    }
                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " fin du scraping des abonnés");
                    if (!Directory.Exists(pathToSave + "\\PicturesProfilesFollowers"))
                        Directory.CreateDirectory(pathToSave + "\\PicturesProfilesFollowers");

                    int count = 0;
                    int j = 0;
                    backgroundWorker1.ReportProgress(-1, dicoProff.Count);

                    foreach (string file in Directory.GetFiles(pathToSave + "\\PicturesProfilesFollowers"))
                    {
                        File.Delete(file);
                    }
                    Thread.Sleep(500);

                    if (dicoProff.Count > 0)
                    {
                        backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " téléchargement des images profile : " + dicoProff.Count());
                        foreach (string profile in dicoProff.Keys)
                        {
                            using (var client = new WebClient())
                            {


                                try

                                {

                                    client.DownloadFile(profile, pathToSave + "\\PicturesProfilesFollowers\\" + ((ForGrid)dicoProff[profile]).Label.ToString() + "_" + ((ForGrid)dicoProff[profile]).Id + ".jpg");
                                    Thread.Sleep(500);

                                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " " + ((ForGrid)dicoProff[profile]).Label.ToString());

                                }
                                catch (Exception ex)
                                {
                                    //MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT DE LA PHOTO DE PROFIL");
                                    //return;
                                }



                            }


                            //backgroundWorker1.ReportProgress(j);
                            

                            ForGrid forGridd = dicoProff[profile];
                            backgroundWorker1.ReportProgress(-8, forGridd);
                            j++;
                        }
                    }
                       




                }
                catch (Exception exx)
                {

                }

                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " opération de scraping des abonnés terminée");
                backgroundWorker1.ReportProgress(-100);
                Thread.Sleep(2000);

                backgroundWorker1.CancelAsync();

            }
            //----------------------------------------------------fin Followers
        }

        private void backgroundWorker1_ProgressChanged(object sender, ProgressChangedEventArgs e)
        {
            // First call, the percentage is negative to signal that UserState
            // contains the number of pages we loop on....

            string fichier = "";
            

            if (e.ProgressPercentage == -1)
                progressBarfriends.Maximum = Convert.ToInt32(e.UserState);
            else
                if (e.ProgressPercentage > 0)
                try
                {
                    progressBarfriends.Value = e.ProgressPercentage;
                }
                catch
                {

                }


            //barre de progression abonnes
            if (e.ProgressPercentage == -7777)
            {
                progressBarfriends.Visible = true;
                pictureBoxfriends.Visible = false;
                pictureBoxlogofacebook.Visible = true;
                pictureBoxwaiting.Visible = true;
                progressBarfriends.Maximum = Convert.ToInt32(e.UserState);
                labelfriends.Text = "Abonnes";
            }
            //barre de progression abonnes
            if (e.ProgressPercentage == -77777)
            {
                progressBarfriends.Value += 1;
            }


            //barre de progression groupes
            if (e.ProgressPercentage == -8888)
            {
                progressBarfriends.Visible = true;
                panelFriendss.Visible = true;
                pictureBoxlogofacebook.Visible = true;
                pictureBoxwaiting.Visible = true;
                pictureBoxfriends.Visible = false;
                progressBarfriends.Maximum = Convert.ToInt32(e.UserState);
                labelfriends.Text = "Groupes";
            }
            //barre de progression groupes
            if (e.ProgressPercentage == -88888)
            {
                progressBarfriends.Value += 1;
            }





            //barre de progression comments
            if (e.ProgressPercentage == -1111)
            {
                progressBarcomments.Visible = true;
                progressBarcomments.Maximum = Convert.ToInt32(e.UserState);
                labelcomments.Text = "Publications";
            }

            if (e.ProgressPercentage == -11111)
            {
                
                progressBarcomments.Value += 1;
            }
            //-----------------------------------------------------------------------

            //barre de progression likes
            if (e.ProgressPercentage == -2222)
            {
                progressBarcomments.Visible = true;
                progressBarcomments.Maximum = Convert.ToInt32(e.UserState);
                labelcomments.Text = "Pages aimées";
            }

            if (e.ProgressPercentage == -22222)
            {

                progressBarcomments.Value += 1;
            }
            //-----------------------------------------------------------------------

            //barre de progression likes
            if (e.ProgressPercentage == -3333)
            {
                progressBarcomments.Visible = true;
                progressBarcomments.Maximum = Convert.ToInt32(e.UserState);
                labelcomments.Text = "Commentaires";
            }

            if (e.ProgressPercentage == -33333)
            {

                progressBarcomments.Value += 1;
            }
            //-----------------------------------------------------------------------

            if (e.ProgressPercentage == -2)
            {
                string id = ((string)e.UserState);
                if (id != "")
                {
                    labelID.Text = id;
                    int pos = (panel23.Width - labelID.Size.Width) / 2;
                    labelID.Visible = true;
                    labelID.Location = new Point(pos, labelID.Location.Y);
                    labelID.Refresh();
                }

            }



            if (e.ProgressPercentage == -5)
            {
                string path = ((string)e.UserState);
               

                // Sets up an image object to be displayed.
                if (MyImage != null)
                {
                    MyImage.Dispose();
                }

                MyImage = new Bitmap(path);
                //pictureBox1.ClientSize = new Size(xSize, ySize);
                oval.Image = (Image)MyImage;
                oval.BringToFront();
                oval.Refresh();

                labelpathPictureProfile.Text = path;
                Thread.Sleep(2000);
            }

            if (e.ProgressPercentage == -55)
            {
                string path = ((string)e.UserState);

                try
                {
                    // Sets up an image object to be displayed.
                    if (MyImage != null)
                    {
                        MyImage.Dispose();
                    }

                    MyImage = new Bitmap(path);
                    //pictureBox1.ClientSize = new Size(xSize, ySize);
                    pictureBox65.Image = (Image)MyImage;
                    pictureBox65.BringToFront();
                    pictureBox65.Refresh();

                    //labelpathPictureProfile.Text = path;
                    Thread.Sleep(2000);
                }
                catch
                {
                    pictureBox65.Image = global::FacebookAnalyzer.Properties.Resources.anonymous;
                    pictureBox65.BringToFront();
                    pictureBox65.Refresh();
                }
                
            }
            if (e.ProgressPercentage == -555)
            {
                nbrePublications = ((string)e.UserState);

               

                labelPublicationsInstagram.Text = "PUBLICATIONS : " + nbrePublications;
                labelPublicationsInstagram.Refresh();
                Thread.Sleep(500);
            }

            if (e.ProgressPercentage == -5555)
            {
                string no = ((int)e.UserState).ToString();



                labelPublicationsInstagram.Text = "PUBLICATIONS : " + no + "/" + nbrePublications;
                labelPublicationsInstagram.Refresh();
                Thread.Sleep(500);
            }
            if (e.ProgressPercentage == -556)
            {
                string nbreProfils = ((string)e.UserState);



                labelProfils.Text = "PROFILS : " + nbreProfils;
                labelProfils.Refresh();
                Thread.Sleep(500);
            }

            if (e.ProgressPercentage == -6)
            {
                ForGrid forG = ((ForGrid)e.UserState);
                Bitmap imgg = FacebookAnalyzer.Properties.Resources.anonymous;
                dataGridView2.Rows.Add(imgg, forG.Url, forG.Label, forG.Id, "");

                if (dataGridView2.Rows.Count != 0)
                {


                    string targetName = textBoxops.Text;
                    Image img;

                    if (File.Exists(pathToSave + "\\PicturesProfiles\\" + forG.Label + "_" + forG.Id + ".jpg"))
                    {
                        try
                        {
                            img = Image.FromFile(pathToSave + "\\PicturesProfiles\\" + forG.Label + "_" + forG.Id + ".jpg");

                        }
                        catch
                        {
                            img = FacebookAnalyzer.Properties.Resources.anonymous;
                        }

                        dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[0].Value = img;
                        dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[4].Value = pathToSave + "\\PicturesProfiles\\" + forG.Label + "_" + forG.Id + ".jpg";
                        fichier += dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[1].Value.ToString() + ";" + dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[2].Value.ToString() + ";" + ""/*dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[3].Value.ToString()*/ + "\r\n";

                        if (forG.Label.StartsWith("GP"))
                            dataGridView2.Rows[dataGridView2.Rows.Count - 1].DefaultCellStyle.BackColor = Color.Crimson;


                    }
                    else
                    {
                        img = FacebookAnalyzer.Properties.Resources.anonymous;
                        dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[0].Value = img;
                        dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[4].Value = "anonymous";
                        fichier += dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[1].Value.ToString() + ";" + dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[2].Value.ToString() + ";" + ""/*dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[3].Value.ToString()*/ + "\r\n";


                    }

                    //if (File.Exists(pathToSave + "\\PicturesProfiles\\" + forG.Id ))
                    //{
                    //    Image img = Image.FromFile(pathToSave + "\\PicturesProfiles\\"  + forG.Id );
                    //    dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[0].Value = img;
                    //    dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[4].Value = pathToSave + "\\PicturesProfiles\\" + forG.Id ;
                    //    fichier += dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[1].Value.ToString() + ";" + dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[2].Value.ToString() + ";" + dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[3].Value.ToString() + "\r\n";
                    //}
                    //else
                    //{
                    //    Image img = FacebookAnalyzer.Properties.Resources.anonymous;
                    //    dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[0].Value = img;
                    //    dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[4].Value = "anonymous";
                    //    fichier += dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[1].Value.ToString() + ";" + dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[2].Value.ToString() + ";" + dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[3].Value.ToString() + "\r\n";


                    //}

                    if (!Directory.Exists(pathToSave + "\\TXT"))
                        Directory.CreateDirectory(pathToSave + "\\TXT");

                    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\TXT\\friends.txt", true))
                    {
                        //if (File.Exists(saveFileDialog1.FileName))
                        //    File.Delete(saveFileDialog1.FileName);

                        file.Write(fichier);
                    }


                }

            }

            if(e.ProgressPercentage == -99999)
            {
                System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(Form1));
                string message = ((string)e.UserState);
                Image img = null;

                if (dataGridViewDiscreet.Rows.Count == 100)
                {
                    foreach (DataGridViewRow row in dataGridViewDiscreet.Rows)
                    {
                        Image imgg = (Image)row.Cells[0].Value;
                        imgg.Dispose();


                    }


                    dataGridViewDiscreet.Rows.Clear();
                }

                if (dataGridViewTrace.Rows.Count == 100)
                {
                    foreach (DataGridViewRow row in dataGridViewTrace.Rows)
                    {
                        Image imgg = (Image)row.Cells[0].Value;
                        imgg.Dispose();


                    }


                    dataGridViewTrace.Rows.Clear();
                }

                if (checkBoxDiscreetMode.Checked)
                {
                    if(message.Contains(".png") || message.Contains(".jpg"))
                    {

                        try
                        {
                            if (File.Exists(pathToSave + message.Substring(message.IndexOf("\\"))))
                            {
                                try
                                {
                                    img = ResizeImage(pathToSave + message.Substring(message.IndexOf("\\")), 150, 150, true);

                                }
                                catch
                                {
                                    img = ((System.Drawing.Image)(resources.GetObject("pictureBox76.Image")));
                                }
                            }

                        }
                        catch
                        {
                            img = ((System.Drawing.Image)(resources.GetObject("pictureBox76.Image")));
                        }
                        
                        
                    }


                    





                    if (img == null)
                    {
                        
                        img = ((System.Drawing.Image)(resources.GetObject("pictureBox76.Image")));
                    }
                    

                    dataGridViewDiscreet.Rows.Add(img, message,"");
                    dataGridViewDiscreet.ClearSelection();
                    dataGridViewDiscreet.FirstDisplayedScrollingRowIndex = dataGridViewDiscreet.Rows.Count - 1;

                    dataGridViewTrace.Rows.Add(img, message);
                    dataGridViewTrace.ClearSelection();
                    dataGridViewTrace.FirstDisplayedScrollingRowIndex = dataGridViewTrace.Rows.Count - 1;

                }
                else
                {
                    if (dataGridViewTrace.Rows.Count == 100)
                    {
                        foreach (DataGridViewRow row in dataGridViewTrace.Rows)
                        {
                            img = (Image)row.Cells[0].Value;
                            img.Dispose();


                        }


                        dataGridViewTrace.Rows.Clear();
                    }



                    img = global::FacebookAnalyzer.Properties.Resources.info;

                    dataGridViewTrace.Rows.Add(img, message);
                    dataGridViewTrace.ClearSelection();
                    dataGridViewTrace.FirstDisplayedScrollingRowIndex = dataGridViewTrace.Rows.Count - 1;


                }
                   

                

                
            }

            if (e.ProgressPercentage == -111111)
            {
                string texte = ((string)e.UserState);

                string[] para = texte.Split(';');

                dataGridViewIDS.Rows.Add(para[0].Replace("\r",""), para[1]);
                

                if (texte.Contains("PAS TROUVE"))
                {
                    dataGridViewIDS.Rows[dataGridViewIDS.Rows.Count - 1].DefaultCellStyle.BackColor = Color.Red;
                }

                dataGridViewIDS.ClearSelection();
                dataGridViewIDS.FirstDisplayedScrollingRowIndex = dataGridViewIDS.Rows.Count - 1;
                dataGridViewIDS.Focus();
                dataGridViewIDS.Refresh();

                if (!Directory.Exists(pathToSave + textBoxops.Text.ToUpper() +   "\\TXT"))
                    Directory.CreateDirectory(pathToSave + textBoxops.Text.ToUpper() + "\\TXT");

                using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + textBoxops.Text.ToUpper() + "\\TXT\\IDs.txt", true))
                {
                    //if (File.Exists(saveFileDialog1.FileName))
                    //    File.Delete(saveFileDialog1.FileName);

                    file.Write(para[0].Replace("\r", "") + ";" + para[1] + "\n");
                }


            }

            if (e.ProgressPercentage == -222222)
            {
                string texte = ((string)e.UserState);

                string[] para = texte.Split(';');

                dataGridViewIdentifiants.Rows[Int32.Parse(para[0])].Cells[2].Value = para[1];


                if (texte.Contains("PAS TROUVE"))
                {
                    dataGridViewIdentifiants.Rows[Int32.Parse(para[0])].DefaultCellStyle.BackColor = Color.Red;
                }

                dataGridViewIdentifiants.ClearSelection();
                dataGridViewIdentifiants.FirstDisplayedScrollingRowIndex = dataGridViewIdentifiants.Rows.Count - 1;
                dataGridViewIdentifiants.Focus();
                dataGridViewIdentifiants.Refresh();

                if (File.Exists(pathToSave + "\\TXT\\AllIdentifiants.txt"))
                {

                    List<string> lignes = new List<string>();
                    using (System.IO.StreamReader file = new System.IO.StreamReader(pathToSave + "\\TXT\\AllIdentifiants.txt"))
                    {
                        while (file.Peek() >= 0)
                        {
                            lignes.Add(file.ReadLine() + "\n");
                        }

                        file.Dispose();
                    }

                    string[] lis = lignes.ToArray();
                    lis[Int32.Parse(para[0])] = dataGridViewIdentifiants.Rows[Int32.Parse(para[0])].Cells[0].Value.ToString() + ";" + dataGridViewIdentifiants.Rows[Int32.Parse(para[0])].Cells[1].Value + ";" + dataGridViewIdentifiants.Rows[Int32.Parse(para[0])].Cells[2].Value.ToString() + "\n";

                    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\TXT\\AllIdentifiants.txt", false))
                    {
                        
                        string textee = "";
                        foreach (string ss in lis)
                        {
                            textee += ss;
                        }

                        file.Write(textee);
                        

                    }


                    //string[] textes =  File.ReadAllLines(pathToSave + "\\TXT\\AllIdentifiants.txt");
                    //textes[Int32.Parse(para[0])] = dataGridViewIdentifiants.Rows[Int32.Parse(para[0])].Cells[0].Value.ToString() + ";" + dataGridViewIdentifiants.Rows[Int32.Parse(para[0])].Cells[1].Value + ";" + dataGridViewIdentifiants.Rows[Int32.Parse(para[0])].Cells[2].Value.ToString() + "\n";

                    //using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\TXT\\AllIdentifiantsWithIDS.txt", true))
                    //{
                    //    file.Write(textes[Int32.Parse(para[0])]);
                       

                    //}

                 


                }

                

            }


            if (e.ProgressPercentage == -1111111)
            {
                progressBar2.Value = 0;
                progressBar2.Visible = false;
                GIMMEID = false;

                driverHidden.Close();
                driverHidden.Quit();

                driverHidden = null;

            }

            //barre de progression IDS
            if (e.ProgressPercentage == -1616)
            {
                progressBar2.Visible = true;
                progressBar2.Maximum = Convert.ToInt32(e.UserState);
               
            }

            if (e.ProgressPercentage == -161616)
            {

                progressBar2.Value += 1;
            }

            if (e.ProgressPercentage == -262626)
            {
                int ind = ((int)e.UserState);
                dataGridViewIdentifiants.Rows[ind].DefaultCellStyle.BackColor = Color.White;
            }

            if (e.ProgressPercentage == -363636)
            {
                //dataGridViewIdentifiants.ClearSelection();
                

                foreach (DataGridViewRow ro in dataGridViewIdentifiants.SelectedRows)
                {
                    ro.DefaultCellStyle.BackColor = Color.Crimson;
                    
                }

                //dataGridViewIdentifiants.Focus();
                dataGridViewIdentifiants.Refresh();
            }

            if (e.ProgressPercentage == -666)
            {
                ForGrid forG = ((ForGrid)e.UserState);
                Bitmap imgg = FacebookAnalyzer.Properties.Resources.anonymous;
                dataGridViewMap.Rows.Add(imgg, forG.Url, forG.Label, forG.Id, "");

                if (dataGridViewMap.Rows.Count != 0)
                {


                    string targetName = textBoxops.Text;

                    if (File.Exists(pathToSave + "\\MapProfiles\\" + forG.Label + "_" + forG.Id + ".jpg"))
                    {
                        try
                        {

                            Image img = Image.FromFile(pathToSave + "\\MapProfiles\\" + forG.Label + "_" + forG.Id + ".jpg");
                            dataGridViewMap.Rows[dataGridViewMap.Rows.Count - 1].Cells[0].Value = img;
                            dataGridViewMap.Rows[dataGridViewMap.Rows.Count - 1].Cells[4].Value = pathToSave + "\\MapProfiles\\" + forG.Label + "_" + forG.Id + ".jpg";
                            fichier += dataGridViewMap.Rows[dataGridViewMap.Rows.Count - 1].Cells[1].Value.ToString() + ";" + dataGridViewMap.Rows[dataGridViewMap.Rows.Count - 1].Cells[2].Value.ToString() + ";" + dataGridViewMap.Rows[dataGridViewMap.Rows.Count - 1].Cells[3].Value.ToString() + ";" + forG.Comments + "\r\n";

                        }
                        catch
                        {
                            Image img = FacebookAnalyzer.Properties.Resources.anonymous;
                            dataGridViewMap.Rows[dataGridViewMap.Rows.Count - 1].Cells[0].Value = img;
                            dataGridViewMap.Rows[dataGridViewMap.Rows.Count - 1].Cells[4].Value = "anonymous";
                            fichier += dataGridViewMap.Rows[dataGridViewMap.Rows.Count - 1].Cells[1].Value.ToString() + ";" + dataGridViewMap.Rows[dataGridViewMap.Rows.Count - 1].Cells[2].Value.ToString() + ";" + dataGridViewMap.Rows[dataGridViewMap.Rows.Count - 1].Cells[3].Value.ToString() + ";" + forG.Comments + "\r\n";

                        }
                                                                     

                    }
                    else
                    {
                        Image img = FacebookAnalyzer.Properties.Resources.anonymous;
                        dataGridViewMap.Rows[dataGridViewMap.Rows.Count - 1].Cells[0].Value = img;
                        dataGridViewMap.Rows[dataGridViewMap.Rows.Count - 1].Cells[4].Value = "anonymous";
                        fichier += dataGridViewMap.Rows[dataGridViewMap.Rows.Count - 1].Cells[1].Value.ToString() + ";" + dataGridViewMap.Rows[dataGridViewMap.Rows.Count - 1].Cells[2].Value.ToString() + ";" + dataGridViewMap.Rows[dataGridViewMap.Rows.Count - 1].Cells[3].Value.ToString() + ";" + forG.Comments + "\r\n";


                    }

                   

                    if (!Directory.Exists(pathToSave + "\\TXT"))
                        Directory.CreateDirectory(pathToSave + "\\TXT");

                    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\TXT\\maps.txt", true))
                    {
                        //if (File.Exists(saveFileDialog1.FileName))
                        //    File.Delete(saveFileDialog1.FileName);

                        file.Write(fichier);
                    }


                }

            }

            if (e.ProgressPercentage == -60)
            {
                ForGrid forG = ((ForGrid)e.UserState);
                Bitmap imgg = FacebookAnalyzer.Properties.Resources.anonymous;
                dataGridViewLikes.Rows.Add(imgg, forG.Url, forG.Label, forG.Id, "");
                dataGridViewLikes.ClearSelection();

                if (dataGridViewLikes.Rows.Count != 0)
                {


                    string targetName = textBoxops.Text;

                    try
                    {
                        if (File.Exists(pathToSave + "\\PicturesProfilesLikes\\" /*+ forG.Label + "_"*/ + forG.Id))
                        {
                            //Image img = Image.FromFile(pathToSave + "\\PicturesProfilesLikes\\" + forG.Label + "_" + forG.Id + ".jpg");
                            Image img = Image.FromFile(pathToSave + "\\PicturesProfilesLikes\\" + forG.Id);
                            dataGridViewLikes.Rows[dataGridViewLikes.Rows.Count - 1].Cells[0].Value = img;
                            //dataGridViewLikes.Rows[dataGridViewLikes.Rows.Count - 1].Cells[4].Value = pathToSave + "\\PicturesProfilesLikes\\" + forG.Label + "_" + forG.Id + ".jpg";
                            dataGridViewLikes.Rows[dataGridViewLikes.Rows.Count - 1].Cells[4].Value = pathToSave + "\\PicturesProfilesLikes\\" + forG.Id;
                            fichier += dataGridViewLikes.Rows[dataGridViewLikes.Rows.Count - 1].Cells[1].Value.ToString() + ";" + dataGridViewLikes.Rows[dataGridViewLikes.Rows.Count - 1].Cells[2].Value.ToString() + ";" + dataGridViewLikes.Rows[dataGridViewLikes.Rows.Count - 1].Cells[3].Value.ToString() + "\r\n";
                        }
                        else
                        {
                            Image img = FacebookAnalyzer.Properties.Resources.anonymous;
                            dataGridViewLikes.Rows[dataGridViewLikes.Rows.Count - 1].Cells[0].Value = img;
                            dataGridViewLikes.Rows[dataGridViewLikes.Rows.Count - 1].Cells[4].Value = "anonymous";
                            fichier += dataGridViewLikes.Rows[dataGridViewLikes.Rows.Count - 1].Cells[1].Value.ToString() + ";" + dataGridViewLikes.Rows[dataGridViewLikes.Rows.Count - 1].Cells[2].Value.ToString() + ";" + dataGridViewLikes.Rows[dataGridViewLikes.Rows.Count - 1].Cells[3].Value.ToString() + "\r\n";


                        }
                    }
                    catch
                    {
                        Image img = FacebookAnalyzer.Properties.Resources.anonymous;
                        dataGridViewLikes.Rows[dataGridViewLikes.Rows.Count - 1].Cells[0].Value = img;
                        dataGridViewLikes.Rows[dataGridViewLikes.Rows.Count - 1].Cells[4].Value = "anonymous";
                        fichier += dataGridViewLikes.Rows[dataGridViewLikes.Rows.Count - 1].Cells[1].Value.ToString() + ";" + dataGridViewLikes.Rows[dataGridViewLikes.Rows.Count - 1].Cells[2].Value.ToString() + ";" + dataGridViewLikes.Rows[dataGridViewLikes.Rows.Count - 1].Cells[3].Value.ToString() + "\r\n";


                    }


                    if (!Directory.Exists(pathToSave + "\\TXT"))
                        Directory.CreateDirectory(pathToSave + "\\TXT");

                    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\TXT\\likes.txt", true))
                    {
                        //if (File.Exists(saveFileDialog1.FileName))
                        //    File.Delete(saveFileDialog1.FileName);

                        file.Write(fichier);
                    }


                }

            }

            if (e.ProgressPercentage == -8)
            {
                ForGrid forG = ((ForGrid)e.UserState);
                Bitmap imgg = FacebookAnalyzer.Properties.Resources.anonymous;
                dataGridView1.Rows.Add(imgg, forG.Url, forG.Label, forG.Id, "");
                

                if (dataGridView1.Rows.Count != 0)
                {


                    string targetName = textBoxops.Text;

                    if (File.Exists(pathToSave + "\\PicturesProfilesFollowers\\" + forG.Label + "_" + forG.Id + ".jpg"))
                    {
                        Image img = Image.FromFile(pathToSave + "\\PicturesProfilesFollowers\\" + forG.Label + "_" + forG.Id + ".jpg");
                        dataGridView1.Rows[dataGridView1.Rows.Count - 1].Cells[0].Value = img;
                        dataGridView1.Rows[dataGridView1.Rows.Count - 1].Cells[4].Value = pathToSave + "\\PicturesProfilesFollowers\\" + forG.Label + "_" + forG.Id + ".jpg";
                        fichier += dataGridView1.Rows[dataGridView1.Rows.Count - 1].Cells[1].Value.ToString() + ";" + dataGridView1.Rows[dataGridView1.Rows.Count - 1].Cells[2].Value.ToString() + ";" + dataGridView1.Rows[dataGridView1.Rows.Count - 1].Cells[3].Value.ToString() + "\r\n";
                    }
                    else
                    {
                        Image img = FacebookAnalyzer.Properties.Resources.anonymous;
                        dataGridView1.Rows[dataGridView1.Rows.Count - 1].Cells[0].Value = img;
                        dataGridView1.Rows[dataGridView1.Rows.Count - 1].Cells[4].Value = "anonymous";
                        fichier += dataGridView1.Rows[dataGridView1.Rows.Count - 1].Cells[1].Value.ToString() + ";" + dataGridView1.Rows[dataGridView1.Rows.Count - 1].Cells[2].Value.ToString() + ";" + dataGridView1.Rows[dataGridView1.Rows.Count - 1].Cells[3].Value.ToString() + "\r\n";


                    }

                    if (!Directory.Exists(pathToSave + "\\TXT"))
                        Directory.CreateDirectory(pathToSave + "\\TXT");


                    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\TXT\\followers.txt", true))
                    {
                        //if (File.Exists(saveFileDialog1.FileName))
                        //    File.Delete(saveFileDialog1.FileName);

                        file.Write(fichier);
                    }


                }

            }

            if (e.ProgressPercentage == -9)
            {
                ForGrid forG = ((ForGrid)e.UserState);
                Bitmap imgg = FacebookAnalyzer.Properties.Resources.anonymous;
                dataGridViewGroups.Rows.Add(imgg, forG.Url, forG.Label, forG.Id, "");


                if (dataGridViewGroups.Rows.Count != 0)
                {


                    string targetName = textBoxops.Text;

                    if (File.Exists(pathToSave + "\\PicturesProfilesGroups\\" + forG.Label + "_" + forG.Id + ".jpg"))
                    {
                        Image img = Image.FromFile(pathToSave + "\\PicturesProfilesGroups\\" + forG.Label + "_" + forG.Id + ".jpg");
                        dataGridViewGroups.Rows[dataGridViewGroups.Rows.Count - 1].Cells[0].Value = img;
                        dataGridViewGroups.Rows[dataGridViewGroups.Rows.Count - 1].Cells[4].Value = pathToSave + "\\PicturesProfilesGroups\\" + forG.Label + "_" + forG.Id + ".jpg";
                        fichier += dataGridViewGroups.Rows[dataGridViewGroups.Rows.Count - 1].Cells[1].Value.ToString() + ";" + dataGridViewGroups.Rows[dataGridViewGroups.Rows.Count - 1].Cells[2].Value.ToString() + ";" + dataGridViewGroups.Rows[dataGridViewGroups.Rows.Count - 1].Cells[3].Value.ToString() + "\r\n";
                    }
                    else
                    {
                        Image img = FacebookAnalyzer.Properties.Resources.anonymous;
                        dataGridViewGroups.Rows[dataGridViewGroups.Rows.Count - 1].Cells[0].Value = img;
                        dataGridViewGroups.Rows[dataGridViewGroups.Rows.Count - 1].Cells[4].Value = "anonymous";
                        fichier += dataGridViewGroups.Rows[dataGridViewGroups.Rows.Count - 1].Cells[1].Value.ToString() + ";" + dataGridViewGroups.Rows[dataGridViewGroups.Rows.Count - 1].Cells[2].Value.ToString() + ";" + dataGridViewGroups.Rows[dataGridViewGroups.Rows.Count - 1].Cells[3].Value.ToString() + "\r\n";


                    }

                    if (!Directory.Exists(pathToSave + "\\TXT"))
                        Directory.CreateDirectory(pathToSave + "\\TXT");


                    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\TXT\\groups.txt", true))
                    {
                        //if (File.Exists(saveFileDialog1.FileName))
                        //    File.Delete(saveFileDialog1.FileName);

                        file.Write(fichier);
                    }


                }

            }

            if (e.ProgressPercentage == -3)
            {
                progressBarcomments.Visible = false;
                pictureBoxcomments.Visible = true;


            }

            if (e.ProgressPercentage == -7)
            {

                try
                {


                    Bitmap imgg = FacebookAnalyzer.Properties.Resources.anonymous;
                    ForGrid forG = ((ForGrid)e.UserState);

                    dataGridView2.Rows.Add(imgg, forG.Url, forG.Label, forG.Id);

                    if (dataGridView2.Rows.Count != 0)
                    {


                        string targetName = textBoxops.Text;

                        if (File.Exists(pathToSave + "\\PicturesProfiles\\" + forG.Label + "_" + forG.Id + ".jpg"))
                        {
                            Image img = Image.FromFile(pathToSave + "\\PicturesProfiles\\" + forG.Label + "_" + forG.Id + ".jpg");
                            dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[0].Value = img;
                            dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[4].Value = pathToSave + "\\PicturesProfiles\\" + forG.Label + "_" + forG.Id + ".jpg";
                            fichier += dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[1].Value.ToString() + ";" + dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[2].Value.ToString() + ";" + dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[3].Value.ToString() + "\r\n";
                        }
                        else
                        {
                            Image img = FacebookAnalyzer.Properties.Resources.anonymous;
                            dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[0].Value = img;
                            dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[4].Value = "anonymous";
                            fichier += dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[1].Value.ToString() + ";" + dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[2].Value.ToString() + ";" + dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[3].Value.ToString() + "\r\n";

                        }
                    }
                }

                catch (Exception ex)//si trop d'image de profile, pas d'image
                {
                    string targetName = textBoxops.Text;

                    dataGridView2.Rows.Clear();
                    ForGrid forG = ((ForGrid)e.UserState);

                    dataGridView2.Rows.Add(null, forG.Url, forG.Label, forG.Id);

                    dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[0].Value = null;
                    dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[4].Value = pathToSave + "\\PicturesProfiles\\" + forG.Label + "_" + forG.Id + ".jpg";
                    fichier += dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[1].Value.ToString() + ";" + dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[2].Value.ToString() + ";" + dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[3].Value.ToString() + "\r\n";

                }
                finally
                {
                    if (!Directory.Exists(pathToSave + "\\TXT"))
                        Directory.CreateDirectory(pathToSave + "\\TXT");

                    string targetName = textBoxops.Text;
                    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\TXT\\friends.txt", true))
                    {
                        file.Write(fichier);
                    }
                }


            }



            //Friends
            if (e.ProgressPercentage == -90)
            {

                pictureBoxlogofacebook.Visible = true;
                pictureBoxwaiting.Visible = true;
                labelfriends.Text = "Amis";

            }

           


            //// fermeture des Process par rapport au progresschange
            ///

            //Friends
            if (e.ProgressPercentage == -100)
            {
                
                pictureBoxlogofacebook.Visible = false;
                pictureBoxwaiting.Visible = false;
                progressBarfriends.Value = 0;
                progressBarfriends.Maximum = 0;
                progressBarfriends.Visible = false;
                pictureBoxfriends.Visible = true;
                labelAMIS.Visible = true;
                labelAMIS.Text = "AMIS / ABONNES : " + (dataGridView2.Rows.Count + dataGridView1.Rows.Count).ToString();
                labelfriends.Text = "Amis/Abonnes/Groupes";
                labelfriends.Refresh();
                Thread.Sleep(2500);
                panelFriendss.Visible = false;
            }

            if (e.ProgressPercentage == -10000)
            {

                pictureBoxlogofacebook.Visible = false;
                pictureBoxwaiting.Visible = false;
                progressBarfriends.Value = 0;
                progressBarfriends.Maximum = 0;
                progressBarfriends.Visible = false;
                pictureBoxfriends.Visible = true;
                labelAMIS.Visible = true;
                labelGroupe.Text = "GROUPES : " + (dataGridViewGroups.Rows.Count).ToString();
                labelfriends.Text = "Amis/Abonnes/Groupes";
                labelfriends.Refresh();
                Thread.Sleep(2500);
                panelFriendss.Visible = false;
            }

            //Likes
            if (e.ProgressPercentage == -1000)
            {

                pictureBoxlogofacebook.Visible = false;
                pictureBoxwaiting.Visible = false;
                //progressBarfriends.Value = 0;
                //progressBarfriends.Maximum = 0;
                //progressBarfriends.Visible = false;
                pictureBox5OKLikes.Visible = true;
                //labelAMIS.Visible = true;
                labelLikes.Text = "LIKES : " + (dataGridViewLikes.Rows.Count).ToString();
                //Thread.Sleep(2500);
                panelWaitinLikes.Visible = false;
            }


            //Map
            if (e.ProgressPercentage == -6666)
            {

                pictureBoxlogofacebook.Visible = false;
                pictureBoxwaiting.Visible = false;
                //progressBarfriends.Value = 0;
                //progressBarfriends.Maximum = 0;
                //progressBarfriends.Visible = false;
                pictureBoxMapOK.Visible = true;
                //labelAMIS.Visible = true;
                labelMap.Text = "LIEUX : " + (dataGridViewMap.Rows.Count).ToString();
                //Thread.Sleep(2500);
                panelWaitingMap.Visible = false;
            }

            //Journal
            if (e.ProgressPercentage == -101)
            {
                
                pictureBoxwaiting.Visible = false;
                pictureBoxlogofacebook.Visible = false;
                pictureBoxJournal.Visible = true;
                labelJournal.Visible = true;
                labelJournal.Text = "JOURNAL : " + Directory.GetFiles(pathToSave + @"\HOMEPAGE\", "*.png").Count();
                Thread.Sleep(2500);

                FillJournalView();
                panelJournalVisible.Visible = false;
            }

            //Images
            if (e.ProgressPercentage == -102)
            {
                             
                progressBarpictures.Value = 0;
                progressBarpictures.Maximum = 0;
                progressBarpictures.Visible = false;
                pictureBoxpictures.Visible = true;
                labelIMAGES.Visible = true;
                labelTags.Visible = true;
                //labelIMAGES.Text = "IMAGES : " + Directory.GetFiles(pathToSave  + @"\PICTURES\", "*.jpg").Count();

                if (!ONLYSCREENSHOT)
                {
                    if(Directory.Exists(pathToSave + @"\PICTURES\"))
                    labelIMAGES.Text = "IMAGES : " + Directory.GetFiles(pathToSave + @"\PICTURES\", "*.jpg").Count();

                    if(Directory.Exists(pathToSave + @"\PICTURES_TAGGED\"))
                    labelTags.Text = "TAGS : " + Directory.GetFiles(pathToSave + @"\PICTURES_TAGGED\", "*.png").Count();

                    FillPicturesView();
                    FillTags();

                }
                else
                    labelIMAGES.Text = "IMAGES : " + Directory.GetFiles(pathToSave + @"\PICTURES_SCREENSHOTS\", "*.jpg").Count();

                paneImagesWaiting.Visible = false;

            }

            //Parametres
            if (e.ProgressPercentage == -103)
            {
                
                pictureBoxParam.Visible = true;
                labelParam.Visible = true;
                labelParam.Text = "PARAMETRES : " + Directory.GetFiles(pathToSave  + @"\PARAMETERS\", "*.txt").Count();
                FillParameters();
                panelParmVisible.Visible = false;
            }

            //Commentaires
            if (e.ProgressPercentage == -104)
            {
                
                panelCommentsVisible.Visible = false;
                labelCommentss.Visible = true;
                pictureBoxcomments.Visible = true;
                progressBarcomments.Visible = false;
                int nbre = 0;

                if (File.Exists(pathToSave + @"\TXT\comments.txt"))
                    nbre = File.ReadAllLines(pathToSave + @"\TXT\comments.txt").Count();

                if (File.Exists(pathToSave + @"\TXT\pagesLiked.txt"))
                    nbre += File.ReadAllLines(pathToSave + @"\TXT\pagesLiked.txt").Count();


                labelCommentss.Text = "COMMENTAIRES : " + nbre;
                FillComments();

            }

            //Images for Business
            if (e.ProgressPercentage == -120)
            {

                panel46.Visible = true;

            }

            //Images for Business
            if (e.ProgressPercentage == -121)
            {

                panel46.Visible = false;
                pictureBox57.Visible = true;
                label25.Text = "IMAGES : " + Directory.GetFiles(pathToSave + @"\PICTURES\", "*.png").Count();
                FillPicturesViewForBusiness();

            }

            //Journal
            if (e.ProgressPercentage == -122)
            {

                pictureBoxwaiting.Visible = false;
                pictureBoxlogofacebook.Visible = false;
                
                
                label24.Text = "JOURNAL : " + Directory.GetFiles(pathToSave + @"\HOMEPAGE\", "*.png").Count();
                Thread.Sleep(2500);

                FillJournalViewForBusiness();
                panel43.Visible = false;
                pictureBox52.Visible = true;
            }

            //Images for Business
            if (e.ProgressPercentage == -123)
            {

                //panel46.Visible = false;
                //pictureBox57.Visible = true;
                //label25.Text = "IMAGES : " + Directory.GetFiles(pathToSave + @"\PICTURES\", "*.png").Count();
                FillInstagramResults();

            }




        }
        private void dataGridView1_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            Process.Start(dataGridView1.Rows[e.RowIndex].Cells[1].Value.ToString());
        }
        private void FillComments()
        {
            if (Directory.Exists(pathToSave + "\\TXT") && File.Exists(pathToSave + "\\TXT\\comments.txt"))
            {
                dataGridViewComments.Rows.Clear();
                foreach (string li in File.ReadAllLines(pathToSave + "\\TXT\\comments.txt"))
                {
                    string[] champ = li.Split(new string[] { ";" }, StringSplitOptions.RemoveEmptyEntries);

                    //foreach (string lii in champ)
                    //{
                    //string[] champp = lii.Split(new string[] { ";" }, StringSplitOptions.RemoveEmptyEntries);
                    try
                    {
                        if (File.Exists(pathToSave + champ[0]))
                        {
                            FileInfo fichierr = new FileInfo(pathToSave + champ[0]);
                            Image img = ResizeImage(fichierr.FullName, 60, 60, false);
                            dataGridViewComments.Rows.Add(img, champ[1], champ[2]);
                        }
                        else
                        {
                            //Image img = global::FacebookAnalyzer.Properties.Resources.anonymous;
                            //dataGridViewTags.Rows.Add(img, champ[0], champ[1], champ[2]);
                            continue;
                        }
                    }
                    catch
                    {
                        //Image img = global::FacebookAnalyzer.Properties.Resources.anonymous;
                        //dataGridViewTags.Rows.Add(img, champ[0], champ[1], champ[2]);
                        continue;
                    }

                    //}

                }
            }

            if (Directory.Exists(pathToSave + "\\TXT") && File.Exists(pathToSave + "\\TXT\\pagesLiked.txt"))
            {
                if(dataGridViewComments.Rows.Count == 0)
                    dataGridViewComments.Rows.Clear();

                foreach (string li in File.ReadAllLines(pathToSave + "\\TXT\\pagesLiked.txt"))
                {
                    string[] champ = li.Split(new string[] { ";" }, StringSplitOptions.RemoveEmptyEntries);

                    //foreach (string lii in champ)
                    //{
                    //string[] champp = lii.Split(new string[] { ";" }, StringSplitOptions.RemoveEmptyEntries);
                    try
                    {
                        if (File.Exists(pathToSave + champ[0]))
                        {
                            FileInfo fichierr = new FileInfo(pathToSave + champ[0]);
                            Image img = ResizeImage(fichierr.FullName, 60, 60, false);
                            dataGridViewComments.Rows.Add(img, champ[1], champ[2]);
                        }
                        else
                        {
                            //Image img = global::FacebookAnalyzer.Properties.Resources.anonymous;
                            //dataGridViewTags.Rows.Add(img, champ[0], champ[1], champ[2]);
                            continue;
                        }
                    }
                    catch
                    {
                        //Image img = global::FacebookAnalyzer.Properties.Resources.anonymous;
                        //dataGridViewTags.Rows.Add(img, champ[0], champ[1], champ[2]);
                        continue;
                    }

                    //}

                }
            }

        }

        public static Image ResizeImage(string file,
                             int width,
                             int height,
                             bool onlyResizeIfWider)
        {
            using (Image image = Image.FromFile(file))
            {
                // Prevent using images internal thumbnail
                image.RotateFlip(RotateFlipType.Rotate180FlipNone);
                image.RotateFlip(RotateFlipType.Rotate180FlipNone);

                if (onlyResizeIfWider == true)
                {
                    if (image.Width <= width)
                    {
                        width = image.Width;
                    }
                }

                int newHeight = image.Height * width / image.Width;
                if (newHeight > height)
                {
                    // Resize with height instead
                    width = image.Width * height / image.Height;
                    newHeight = height;
                }

                Image NewImage = image.GetThumbnailImage(width,
                                                         newHeight,
                                                         null,
                                                         IntPtr.Zero);

                return NewImage;
            }
        }

        private void FillTags()
        {
            if (Directory.Exists(pathToSave+ "\\PICTURES_TAGGED") && File.Exists(pathToSave + "\\TXT\\tags.txt"))
            {
                dataGridViewTags.Rows.Clear();
                foreach (string li in File.ReadAllLines(pathToSave + "\\TXT\\tags.txt"))
                {
                    string[] champ = li.Split(new string[] { ";" }, StringSplitOptions.RemoveEmptyEntries);

                    //foreach (string lii in champ)
                    //{
                    //string[] champp = lii.Split(new string[] { ";" }, StringSplitOptions.RemoveEmptyEntries);
                    try
                    {
                        if (File.Exists(Directory.GetFiles(pathToSave + "\\PICTURES_TAGGED\\", champ[2])[0]))
                        {
                            FileInfo fichierr = new FileInfo(Directory.GetFiles(pathToSave + "\\PICTURES_TAGGED\\", champ[2])[0]);
                            Image img = ResizeImage(fichierr.FullName, 157, 150, false);
                            dataGridViewTags.Rows.Add(img, champ[0], champ[1], champ[2]);
                        }
                        else
                        {
                            //Image img = global::FacebookAnalyzer.Properties.Resources.anonymous;
                            //dataGridViewTags.Rows.Add(img, champ[0], champ[1], champ[2]);
                            continue;
                        }
                    }
                    catch
                    {
                        //Image img = global::FacebookAnalyzer.Properties.Resources.anonymous;
                        //dataGridViewTags.Rows.Add(img, champ[0], champ[1], champ[2]);
                        continue;
                    }

                    //}

                }
            }
        }

        private void FillInstagramResults()
        {
            //if (Directory.Exists(pathToSave + "\\INSTAGRAM"))
            //{
            dataGridViewInstagram.Rows.Clear();
            string[] files = Directory.GetFiles(pathToSave + "\\TXT", "instagram*");

            foreach(string fichier in files)
            {
                foreach (string li in File.ReadAllLines(fichier))
                {
                    string[] champ = li.Split(new string[] { ";" }, StringSplitOptions.RemoveEmptyEntries);
                    string user = champ[0];
                    string urlUser = champ[1];
                    string screenshot = champ[2];
                    string commentaire = champ[3].Replace("Masquer les réponses","");
                    string photoProfil = champ[4];
                    Image imgProfil;
                    Image Screenshot;

                    //foreach (string lii in champ)
                    //{
                    //string[] champp = lii.Split(new string[] { ";" }, StringSplitOptions.RemoveEmptyEntries);
                    try
                    {
                        if (File.Exists(pathToSave + "\\INSTAGRAM\\Profile\\" + photoProfil))
                        {
                            FileInfo fichierr = new FileInfo(pathToSave + "\\INSTAGRAM\\Profile\\" + photoProfil.Replace(".//",""));
                            imgProfil = ResizeImage(fichierr.FullName, 150, 150, false);



                        }
                        else
                        {
                            imgProfil = global::FacebookAnalyzer.Properties.Resources.anonymous;
                            //dataGridViewTags.Rows.Add(img, champ[0], champ[1], champ[2]);
                            //continue;
                        }

                        if (File.Exists(pathToSave + "\\INSTAGRAM\\" + screenshot))
                        {
                            FileInfo fichierr = new FileInfo(pathToSave + "\\INSTAGRAM\\" + screenshot);
                            Screenshot = ResizeImage(fichierr.FullName, 157, 150, false);



                        }
                        else
                        {
                            Screenshot = global::FacebookAnalyzer.Properties.Resources.anonymous;
                            //dataGridViewTags.Rows.Add(img, champ[0], champ[1], champ[2]);
                            //continue;
                        }


                        Button bouton = new Button();
                        //bouton.Size = new Size(10, 10);
                        //bouton.Text = "A";
                        //bouton.Click += new EventHandler(bouton_Click);


                        dataGridViewInstagram.Rows.Add(bouton,imgProfil, user, Screenshot, commentaire, urlUser, screenshot);

                        if (!Directory.Exists(pathToSave + "\\INSTAGRAM\\ALBUM\\" + screenshot.Substring(0, screenshot.IndexOf("\\"))))
                        {

                            DataGridViewTextBoxCell txtcell = new DataGridViewTextBoxCell();
                            dataGridViewInstagram.Rows[dataGridViewInstagram.Rows.Count - 1].Cells[0] = txtcell;

                        }
                
                            
                    }
                    catch
                    {
                        //Image img = global::FacebookAnalyzer.Properties.Resources.anonymous;
                        //dataGridViewTags.Rows.Add(img, champ[0], champ[1], champ[2]);
                        //continue;
                    }
                }
                
            }


            dataGridViewIdentity.Rows.Clear();
            files = Directory.GetFiles(pathToSave + "\\TXT", "identity_instagram*");

            foreach (string fichier in files)
            {
                foreach (string li in File.ReadAllLines(fichier))
                {
                    string[] champ = li.Split(new string[] { ";" }, StringSplitOptions.RemoveEmptyEntries);
                    string user = champ[0];
                    string urlUser = champ[1];
                    string screenshot = champ[2];
                    //string commentaire = champ[3].Replace("Masquer les réponses", "");
                    string photoProfil = "none";
                    Image imgProfil;
                    Image Screenshot;

                    //foreach (string lii in champ)
                    //{
                    //string[] champp = lii.Split(new string[] { ";" }, StringSplitOptions.RemoveEmptyEntries);
                    try
                    {
                        if (File.Exists(pathToSave + "\\INSTAGRAM\\Profile\\" + photoProfil))
                        {
                            FileInfo fichierr = new FileInfo(pathToSave + "\\INSTAGRAM\\Profile\\" + photoProfil.Replace(".//", ""));
                            imgProfil = ResizeImage(fichierr.FullName, 150, 150, false);



                        }
                        else
                        {
                            imgProfil = global::FacebookAnalyzer.Properties.Resources.anonymous;
                            //dataGridViewTags.Rows.Add(img, champ[0], champ[1], champ[2]);
                            //continue;
                        }

                        if (File.Exists(pathToSave + "\\INSTAGRAM\\" + screenshot))
                        {
                            FileInfo fichierr = new FileInfo(pathToSave + "\\INSTAGRAM\\" + screenshot);
                            Screenshot = ResizeImage(fichierr.FullName, 157, 150, false);



                        }
                        else
                        {
                            Screenshot = global::FacebookAnalyzer.Properties.Resources.anonymous;
                            //dataGridViewTags.Rows.Add(img, champ[0], champ[1], champ[2]);
                            //continue;
                        }




                        dataGridViewIdentity.Rows.Add(imgProfil, user, Screenshot, "", urlUser, screenshot);
                    }
                    catch
                    {
                        //Image img = global::FacebookAnalyzer.Properties.Resources.anonymous;
                        //dataGridViewTags.Rows.Add(img, champ[0], champ[1], champ[2]);
                        //continue;
                    }
                }

            }

            //ABONNES

            dataGridViewFollowersInstagram.Rows.Clear();
            files = Directory.GetFiles(pathToSave + "\\TXT", "FollowersInstagram.txt");

            foreach (string fichier in files)
            {
                foreach (string li in File.ReadAllLines(fichier))
                {


                    try
                    {
                        string[] champ = li.Split(new string[] { ";" }, StringSplitOptions.RemoveEmptyEntries);
                        string user = champ[0];
                        string urlUser = champ[1];
                        string photoProfil = champ[2];
                        Image imgProfil;


                        //foreach (string lii in champ)
                        //{
                        //string[] champp = lii.Split(new string[] { ";" }, StringSplitOptions.RemoveEmptyEntries);
                        try
                        {
                            if (File.Exists(pathToSave + "\\INSTAGRAM\\FollowersProfiles\\" + photoProfil))
                            {
                                FileInfo fichierr = new FileInfo(pathToSave + "\\INSTAGRAM\\FollowersProfiles\\" + photoProfil);
                                imgProfil = ResizeImage(fichierr.FullName, 150, 150, false);



                            }
                            else
                            {
                                imgProfil = global::FacebookAnalyzer.Properties.Resources.anonymous;
                                //dataGridViewTags.Rows.Add(img, champ[0], champ[1], champ[2]);
                                //continue;
                            }



                            dataGridViewFollowersInstagram.Rows.Add(imgProfil, user, urlUser);

                        }
                        catch
                        {
                            //Image img = global::FacebookAnalyzer.Properties.Resources.anonymous;
                            //dataGridViewTags.Rows.Add(img, champ[0], champ[1], champ[2]);
                            //continue;
                        }
                    }
                    catch
                    {

                    }
                    
                    
                   
                }

            }

            //ABONNEMENTS

            //ABONNES

            dataGridViewFollowingInstagram.Rows.Clear();
            files = Directory.GetFiles(pathToSave + "\\TXT", "FollowingsInstagram.txt");

            foreach (string fichier in files)
            {
                foreach (string li in File.ReadAllLines(fichier))
                {
                    try
                    {
                        string[] champ = li.Split(new string[] { ";" }, StringSplitOptions.RemoveEmptyEntries);
                        string user = champ[0];
                        string urlUser = champ[1];
                        string photoProfil = champ[2];
                        Image imgProfil;


                        //foreach (string lii in champ)
                        //{
                        //string[] champp = lii.Split(new string[] { ";" }, StringSplitOptions.RemoveEmptyEntries);
                        try
                        {
                            if (File.Exists(pathToSave + "\\INSTAGRAM\\FollowingProfiles\\" + photoProfil))
                            {
                                FileInfo fichierr = new FileInfo(pathToSave + "\\INSTAGRAM\\FollowingProfiles\\" + photoProfil);
                                imgProfil = ResizeImage(fichierr.FullName, 150, 150, false);



                            }
                            else
                            {
                                imgProfil = global::FacebookAnalyzer.Properties.Resources.anonymous;
                                //dataGridViewTags.Rows.Add(img, champ[0], champ[1], champ[2]);
                                //continue;
                            }



                            dataGridViewFollowingInstagram.Rows.Add(imgProfil, user, urlUser);

                        }
                        catch
                        {
                            //Image img = global::FacebookAnalyzer.Properties.Resources.anonymous;
                            //dataGridViewTags.Rows.Add(img, champ[0], champ[1], champ[2]);
                            //continue;
                        }
                    }
                    catch
                    {

                    }
                    
                    
                    
                }

            }

            //TOUTES

       
            //dataGridViewAllPublicatons.Rows.Clear();
            //string[] dirs = Directory.GetDirectories(pathToSave + "\\INSTAGRAM");

            //foreach (string dir in dirs)
            //{

            //    if (dir.ToLower().Contains("profile"))
            //        continue;


            //    string [] fichiers = Directory.GetFiles(dir);

            //    foreach (string li in fichiers)
            //    {
            //        FileInfo file = new FileInfo(li);
                    
            //        try
            //        {
                        
            //            try
            //            {
            //                Image imgProfil = ResizeImage(file.FullName, 300, 300, false);

            //                dataGridViewAllPublicatons.Rows.Add(imgProfil, file.FullName);

            //            }
            //            catch
            //            {
                            
            //            }
            //        }
            //        catch
            //        {

            //        }



            //    }

            //}


        }

        private void bouton_Click(object sender, EventArgs e)
        {
            throw new NotImplementedException();
        }

        private void InitializeDriver()
        {
            var driverService = ChromeDriverService.CreateDefaultService();
            driverService.HideCommandPromptWindow = true;
            
            // progressBarfriends.Visible = true;

            //var driver = new ChromeDriver(driverService, new ChromeOptions());

            //System.Diagnostics.Process.Start(filepath);
            ChromeOptions chromeOptions = new ChromeOptions();
            chromeOptions.AddArguments("--disable-notifications");

            if (checkBoxDiscreetMode.Checked)
            {
                //invisible
                chromeOptions.AddArguments("--headless");
                chromeOptions.AddArguments("--no-sandbox");
                chromeOptions.AddArguments("--disable-gpu");
                //chromeOptions.AddArguments("--start-normal");
                chromeOptions.AddArguments("--window-size=1020,945");//chromeOptions.AddArguments("--window-size=929,888");
                //fin invisible
            }


            driver = new ChromeDriver(driverService, chromeOptions);
           
            
            //driver.Manage().Timeouts().ImplicitWait.Add(System.TimeSpan.FromSeconds(300));
        }
        private void InitializeDriverInvisible()
        {
            var driverService = ChromeDriverService.CreateDefaultService();
            driverService.HideCommandPromptWindow = true;
            // progressBarfriends.Visible = true;

            //var driver = new ChromeDriver(driverService, new ChromeOptions());

            //System.Diagnostics.Process.Start(filepath);
            ChromeOptions chromeOptions = new ChromeOptions();
            chromeOptions.AddArguments("--disable-notifications");
            chromeOptions.AddArguments("--headless");

            driverHidden = new ChromeDriver(driverService, chromeOptions);
            //driver.Manage().Timeouts().ImplicitWait.Add(System.TimeSpan.FromSeconds(300));
        }

        private void InitializeDriverForBusiness()
        {
            var driverService = ChromeDriverService.CreateDefaultService();
            driverService.HideCommandPromptWindow = true;
            // progressBarfriends.Visible = true;

            //var driver = new ChromeDriver(driverService, new ChromeOptions());

            //System.Diagnostics.Process.Start(filepath);
            ChromeOptions chromeOptions = new ChromeOptions();
            chromeOptions.AddArguments("--disable-notifications");


            driver = new ChromeDriver(driverService, chromeOptions);
            driver.Manage().Window.Maximize();
        }


        //private void GetProfileInformations()
        //{

        //    string targetName = textBoxops.Text;
        //    string titrePage = "";
        //    string urlFriend = textBoxUSERNAMEFRIENDS.Text;
        //    string ID = "";
        //    //pour cacher fenetre DOS

        //    if (driver == null)
        //    {
        //        InitializeDriver();
        //        // 2. Go to the "Google" homepage
        //        driver.Navigate().GoToUrl("https://facebook.com/login");

        //        // 3. Find the username textbox (by ID) on the homepage
        //        var userNameBox = driver.FindElementById("email");

        //        // 4. Enter the text (to search for) in the textbox
        //        userNameBox.SendKeys(textBoxUSERNAME.Text);

        //        // 3. Find the username textbox (by ID) on the homepage
        //        var userpasswordBox = driver.FindElementById("pass");

        //        // 4. Enter the text (to search for) in the textbox
        //        userpasswordBox.SendKeys(textBoxPASSWORD.Text);
        //        Thread.Sleep(5000);

        //        // 5. Find the search button (by Name) on the homepage
        //        driver.FindElementById("loginbutton").Click();
        //        Thread.Sleep(2500);
        //        //searchButton.Click();

        //        //u_0_8
        //        //"menuBar']//*[@class='menuItem']"
        //        // 2. Go to the "Google" homepage
        //        driver.Navigate().GoToUrl(urlFriend);
        //        titrePage = driver.Title;
        //        Thread.Sleep(5000);
        //    }
        //    //var driverService = ChromeDriverService.CreateDefaultService();
        //    //driverService.HideCommandPromptWindow = true;
        //    // progressBarfriends.Visible = true;

        //    //var driver = new ChromeDriver(driverService, new ChromeOptions());

        //    //System.Diagnostics.Process.Start(filepath);
        //    //ChromeOptions chromeOptions = new ChromeOptions();
        //    //chromeOptions.AddArguments("--disable-notifications");
        //    System.Random rnd = new System.Random();

        //    driver.Navigate().GoToUrl(urlFriend);
        //    titrePage = driver.Title;
        //    Thread.Sleep(5000);

        //    if(profilIsSet == false)
        //    try
        //    {


        //        var image = driver.FindElementByXPath("//a[@class='_1nv3 _11kg _1nv5 profilePicThumb']");
        //        IWebElement el = driver.FindElementByXPath("//a[@class='_1nv3 _11kg _1nv5 profilePicThumb']");
        //        if (el != null)
        //        {
        //            try
        //            {
        //                ID = el.GetAttribute("href");
        //                if (ID.Contains("profile_id="))
        //                {
        //                    ID = ID.Substring(ID.IndexOf("profile_id=") + 11).Split('"')[0];
        //                    //backgroundWorkerFriends.ReportProgress(-2, ID);
        //                }
        //                IList<IWebElement> els = el.FindElements(By.TagName("img"));

        //                foreach (IWebElement ell in els)
        //                {
        //                    var linkToImage = ell.GetAttribute("src");

        //                    if (linkToImage != "")
        //                    {
        //                        try
        //                        {
        //                            using (var client = new WebClient())
        //                            {
        //                                if (!Directory.Exists(pathToSave + "\\"))
        //                                    Directory.CreateDirectory(pathToSave + "\\");

        //                                if (!File.Exists(pathToSave + "\\" + titrePage + ".jpg"))
        //                                {
        //                                    client.DownloadFile(linkToImage, pathToSave + "\\" + titrePage + ".jpg");
        //                                    Thread.Sleep(5000);


        //                                    backgroundWorkerFriends.ReportProgress(-5, pathToSave + "\\" + titrePage + ".jpg");
        //                                    backgroundWorkerFriends.ReportProgress(-2, ID);

        //                                    Thread.Sleep(2000);
        //                                    profilIsSet = true;

        //                                }
        //                                else
        //                                {


        //                                    backgroundWorkerFriends.ReportProgress(-5, pathToSave + "\\" + titrePage + ".jpg");
        //                                    backgroundWorkerFriends.ReportProgress(-2, ID);

        //                                    profilIsSet = true;
        //                                }


        //                            }
        //                        }
        //                        catch (Exception ex)
        //                        {
        //                            MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT POUR LA PHOTO DE PROFIL" + Environment.NewLine + ex.Message);
        //                            return;
        //                        }


        //                    }
        //                }
        //            }
        //            catch
        //            {

        //            }
        //        }
        //        //clic sur image dans href
        //        //((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].click();", image);
        //        //backgroundWorker1.ReportProgress(1);

        //        Thread.Sleep(5000);
        //    }
        //    catch (OpenQA.Selenium.NoSuchElementException ex)
        //    {

        //        try
        //        {
        //            var image = driver.FindElementByXPath("//a[@class='_1nv3 _1nv5 profilePicThumb']");
        //            IWebElement el = driver.FindElementByXPath("//a[@class='_1nv3 _11kg _1nv5 profilePicThumb']");
        //            if (el != null)
        //            {
        //                try
        //                {
        //                    ID = el.GetAttribute("href");
        //                    if (ID.Contains("profile_id="))
        //                    {
        //                        ID = ID.Substring(ID.IndexOf("profile_id=") + 11).Split('"')[0];
        //                        //backgroundWorkerFriends.ReportProgress(-2, ID);
        //                    }
        //                }
        //                catch
        //                {

        //                }

        //                IList<IWebElement> els = el.FindElements(By.TagName("img"));
        //                foreach (IWebElement ell in els)
        //                {
        //                    var linkToImage = ell.GetAttribute("src");

        //                    if (linkToImage != "")
        //                    {
        //                        try
        //                        {
        //                            using (var client = new WebClient())
        //                            {

        //                                if (!Directory.Exists(pathToSave + "\\"))
        //                                    Directory.CreateDirectory(pathToSave + "\\");

        //                                if (!File.Exists(pathToSave + "\\" + titrePage + ".jpg"))
        //                                {
        //                                    client.DownloadFile(linkToImage, pathToSave + "\\" + titrePage + ".jpg");
        //                                    Thread.Sleep(5000);


        //                                    backgroundWorkerFriends.ReportProgress(-5, pathToSave + "\\" + titrePage + ".jpg");
        //                                    backgroundWorkerFriends.ReportProgress(-2, ID);

        //                                    Thread.Sleep(2000);

        //                                }
        //                                else
        //                                {


        //                                    backgroundWorkerFriends.ReportProgress(-5, pathToSave + "\\" + titrePage + ".jpg");
        //                                    backgroundWorkerFriends.ReportProgress(-2, ID);


        //                                }

        //                                profilIsSet = true;
        //                            }
        //                        }
        //                        catch (Exception exx)
        //                        {
        //                            MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT POUR LA PHOTO DE PROFIL" + Environment.NewLine + ex.Message);
        //                            return;
        //                        }


        //                    }
        //                }

        //            }
        //            //clic sur image dans href
        //            //((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].click();", image);
        //            //backgroundWorker1.ReportProgress(1);

        //            //Thread.Sleep(5000);

        //        }
        //        catch (OpenQA.Selenium.NoSuchElementException exx)
        //        {
        //            MessageBox.Show("PROBLEME AVEC L'IDENTIFIEUR DE CLASSE POUR LA PHOTO DE PROFIL" + Environment.NewLine + ex.Message);
        //            return;
        //        }


        //    }
        //}
        private void GetProfileInformations(BackgroundWorker t)
        {

            string targetName = textBoxops.Text;
            string titrePage = "";
            string urlFriend = textBoxUSERNAMEFRIENDS.Text;
            string ID = "";
            //pour cacher fenetre DOS

            if (driver == null)
            {
                InitializeDriver();
                // 2. Go to the "Google" homepage
                driver.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }

                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driver.FindElementById("email");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driver.FindElementById("pass");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driver.FindElementById("loginbutton").Click();
                Thread.Sleep(2500);
                //searchButton.Click();

                //u_0_8
                //"menuBar']//*[@class='menuItem']"
                // 2. Go to the "Google" homepage
                driver.Navigate().GoToUrl(urlFriend);
                titrePage = driver.Title;
                Thread.Sleep(5000);
            }
            //var driverService = ChromeDriverService.CreateDefaultService();
            //driverService.HideCommandPromptWindow = true;
            // progressBarfriends.Visible = true;

            //var driver = new ChromeDriver(driverService, new ChromeOptions());

            //System.Diagnostics.Process.Start(filepath);
            //ChromeOptions chromeOptions = new ChromeOptions();
            //chromeOptions.AddArguments("--disable-notifications");
            System.Random rnd = new System.Random();

            backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " infos sur le profil");
            driver.Navigate().GoToUrl(urlFriend);
            titrePage = driver.Title;
            Thread.Sleep(5000);

            if (profilIsSet == false)
                try
                {


                    //var image = driver.FindElementByXPath("//a[@class='_2dgj']");
                    IList<IWebElement> el = driver.FindElementsByTagName("img");
                    IList<IWebElement> svg = driver.FindElementsByTagName("svg");
                    IList<IWebElement> ids = driver.FindElementsByTagName("a");

                    IList<IWebElement> photoprof = driver.FindElementsByXPath("//div[@class='oajrlxb2 gs1a9yip g5ia77u1 mtkw9kbi tlpljxtp qensuy8j ppp5ayq2 goun2846 ccm00jje s44p3ltw mk2mc5f4 rt8b4zig n8ej3o3l agehan2d sk4xxmp2 rq0escxv nhd2j8a9 q9uorilb mg4g778l btwxx1t3 pfnyh3mw p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x tgvbjcpo hpfvmrgz jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso l9j0dhe7 i1ao9s8h esuyzwwr f1sip0of du4w35lb lzcic4wl abiwlrkh p8dawk7l oo9gr5id']");
                    //IList<IWebElement> photoprof = driver.FindElementsByXPath("//div[@class='rq0escxv l9j0dhe7 du4w35lb j83agx80 cbu4d94t pfnyh3mw d2edcug0 hpfvmrgz p8fzw8mz pcp91wgn iuny7tx3 ipjc6fyt']");

                    if (photoprof.Count == 0)
                    {
                        photoprof = driver.FindElementsByXPath("//div[@class='b3onmgus e5nlhep0 ph5uu5jm ecm0bbzt spb7xbtv bkmhp75w emlxlaya s45kfl79 cwj9ozl2']");

                    }
                    //foreach(IWebElement elId in ids)
                    //{
                    //    var tmp = elId.GetAttribute("aria-label");
                    //    if(tmp != null)
                    //        if (tmp.ToLower().Contains("profil"))
                    //        {
                    //            ID = elId.GetAttribute("href");
                    //            if (ID.Contains("facebook.com/"))
                    //            {
                    //                ID = ID.Substring(ID.IndexOf("facebook.com/") + 13).Split('/')[0];
                    //                //backgroundWorkerFriends.ReportProgress(-2, ID);
                    //            }

                    //            break;
                    //        }

                    //}

                    if (svg != null)//new look
                    {
                        try
                        {


                            var linkToImage = "";

                            try
                            {
                                linkToImage = photoprof[0].FindElement(By.TagName("img")).GetAttribute("xlink:href");

                            }
                            catch
                            {
                                linkToImage = photoprof[0].FindElement(By.TagName("image")).GetAttribute("xlink:href");
                            }

                            try
                            {
                                //ID = driver.PageSource.Substring(driver.PageSource.IndexOf("userID") + 9).Split('"')[0];//reg=/profile_owner":{"id":"
                                ID = driver.PageSource.Substring(driver.PageSource.IndexOf("profile_owner\":{\"id\":\"") + 22).Split('"')[0];//reg=/profile_owner":{"id":"

                                if (ID.StartsWith("0"))
                                    ID = "1" + ID;
                            }
                            catch
                            {

                            }
                            //ID = linkToImage.Substring(linkToImage.IndexOf("_") + 1).Split('_')[0];

                            if (linkToImage != "")
                            {
                                try
                                {
                                    using (var client = new WebClient())
                                    {
                                        if (!Directory.Exists(pathToSave + "\\"))
                                            Directory.CreateDirectory(pathToSave + "\\");

                                        if (!File.Exists(pathToSave + "\\" + titrePage.Replace("\"", "") + ".jpg"))
                                        {
                                            //backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " infos profil - téléchargement image");
                                            client.DownloadFile(linkToImage, pathToSave + "\\" + titrePage.Replace("\"", "").Replace("|", "") + ".jpg");
                                            Thread.Sleep(5000);
                                            backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " infos profil - téléchargement image : " + "\\" + titrePage.Replace("\"", "").Replace("|", "") + ".jpg");



                                            t.ReportProgress(-5, pathToSave + "\\" + titrePage.Replace("\"", "").Replace("|","") + ".jpg");
                                            t.ReportProgress(-2, ID);

                                            Thread.Sleep(2000);
                                            profilIsSet = true;

                                        }
                                        else
                                        {


                                            t.ReportProgress(-5, pathToSave + "\\" + titrePage.Replace("\"", "") + ".jpg");
                                            t.ReportProgress(-2, ID);

                                            profilIsSet = true;
                                            return;
                                        }


                                    }
                                }
                                catch (Exception ex)
                                {
                                    MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT POUR LA PHOTO DE PROFIL" + Environment.NewLine + ex.Message);
                                    return;
                                }




                                //foreach (IWebElement ell in svg)
                                //{
                                //    if (ell.Size.Width == ell.Size.Height && ell.Size.Width == 168 && !isElementPresent(driver, "rq0escxv lpgh02oy tkr6xdv7 rek2kq2y"))
                                //    {
                                //        IList<IWebElement> imgs = ell.FindElements(By.TagName("g"));
                                //        IWebElement link = imgs[0];

                                //        if (link.Size.Width == link.Size.Height && link.Size.Width == 168)// && link.Size.Width < 200)
                                //        {
                                //            var linkToImage = link.FindElement(By.TagName("image")).GetAttribute("xlink:href");
                                //            ID = linkToImage.Substring(linkToImage.IndexOf("_") + 1).Split('_')[0];

                                //            if (linkToImage != "")
                                //            {
                                //                try
                                //                {
                                //                    using (var client = new WebClient())
                                //                    {
                                //                        if (!Directory.Exists(pathToSave + "\\"))
                                //                            Directory.CreateDirectory(pathToSave + "\\");

                                //                        if (!File.Exists(pathToSave + "\\" + titrePage.Replace("\"", "") + ".jpg"))
                                //                        {
                                //                            client.DownloadFile(linkToImage, pathToSave + "\\" + titrePage.Replace("\"", "") + ".jpg");
                                //                            Thread.Sleep(5000);


                                //                            t.ReportProgress(-5, pathToSave + "\\" + titrePage.Replace("\"", "") + ".jpg");
                                //                            t.ReportProgress(-2, ID);

                                //                            Thread.Sleep(2000);
                                //                            profilIsSet = true;

                                //                        }
                                //                        else
                                //                        {


                                //                            t.ReportProgress(-5, pathToSave + "\\" + titrePage.Replace("\"", "") + ".jpg");
                                //                            t.ReportProgress(-2, ID);

                                //                            profilIsSet = true;
                                //                        }


                                //                    }
                                //                }
                                //                catch (Exception ex)
                                //                {
                                //                    MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT POUR LA PHOTO DE PROFIL" + Environment.NewLine + ex.Message);
                                //                    return;
                                //                }


                                //            }
                                //            break;
                                //        }
                                //    }

                                //    if (!profilIsSet)//si groupe
                                //    {
                                //        if (ell.Size.Width == ell.Size.Height && ell.Size.Width == 40 && ell.GetAttribute("class") == "pzggbiyp")
                                //        {
                                //            IList<IWebElement> imgs = ell.FindElements(By.TagName("g"));
                                //            IWebElement link = imgs[0];

                                //            if (link.Size.Width == link.Size.Height && link.Size.Width == 40)// && link.Size.Width < 200)
                                //            {
                                //                var linkToImage = link.FindElement(By.TagName("image")).GetAttribute("xlink:href");

                                //                if (linkToImage != "")
                                //                {
                                //                    try
                                //                    {
                                //                        using (var client = new WebClient())
                                //                        {
                                //                            if (!Directory.Exists(pathToSave + "\\"))
                                //                                Directory.CreateDirectory(pathToSave + "\\");

                                //                            if (!File.Exists(pathToSave + "\\" + titrePage.Replace("\"", "") + ".jpg"))
                                //                            {
                                //                                client.DownloadFile(linkToImage, pathToSave + "\\" + titrePage.Replace("\"", "") + ".jpg");
                                //                                Thread.Sleep(5000);


                                //                                t.ReportProgress(-5, pathToSave + "\\" + titrePage.Replace("\"", "") + ".jpg");
                                //                                //t.ReportProgress(-2, ID);

                                //                                Thread.Sleep(2000);
                                //                                profilIsSet = true;

                                //                            }
                                //                            else
                                //                            {


                                //                                t.ReportProgress(-5, pathToSave + "\\" + titrePage.Replace("\"", "") + ".jpg");
                                //                                //t.ReportProgress(-2, ID);

                                //                                profilIsSet = true;
                                //                            }


                                //                        }
                                //                    }
                                //                    catch (Exception ex)
                                //                    {
                                //                        MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT POUR LA PHOTO DE PROFIL" + Environment.NewLine + ex.Message);
                                //                        return;
                                //                    }


                                //                }
                                //                break;
                                //            }
                                //        }
                                //    }
                            }
                        }

                        catch
                        {
                            try 
                            {


                                var linkToImage = driver.FindElements(By.XPath("//div[@class='i09qtzwb rq0escxv n7fi1qx3 pmk7jnqg j9ispegn kr520xx4 bp9cbjyn j83agx80 taijpn5t']"))[0].FindElement(By.TagName("img")).GetAttribute("src");
                                ID = linkToImage.Substring(linkToImage.IndexOf("_") + 1).Split('_')[0];

                                if (linkToImage != "")
                                {
                                    try
                                    {
                                        using (var client = new WebClient())
                                        {
                                            if (!Directory.Exists(pathToSave + "\\"))
                                                Directory.CreateDirectory(pathToSave + "\\");

                                            if (!File.Exists(pathToSave + "\\" + titrePage.Replace("\"", "") + ".jpg"))
                                            {
                                                client.DownloadFile(linkToImage, pathToSave + "\\" + titrePage.Replace("\"", "").Replace("|", "") + ".jpg");
                                                Thread.Sleep(5000);


                                                t.ReportProgress(-5, pathToSave + "\\" + titrePage.Replace("\"", "").Replace("|", "") + ".jpg");
                                                t.ReportProgress(-2, ID);

                                                Thread.Sleep(2000);
                                                profilIsSet = true;

                                            }
                                            else
                                            {


                                                t.ReportProgress(-5, pathToSave + "\\" + titrePage.Replace("\"", "") + ".jpg");
                                                t.ReportProgress(-2, ID);

                                                profilIsSet = true;
                                                return;
                                            }


                                        }
                                    }
                                    catch (Exception ex)
                                    {
                                        MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT POUR LA PHOTO DE PROFIL" + Environment.NewLine + ex.Message);
                                        return;
                                    }
                                }



                                }
                            catch
                            {

                            }

                               
                        }


                        if (el != null && !profilIsSet)
                        {
                            try
                            {
                                foreach (IWebElement elId in ids)
                                {
                                    var tmp = elId.GetAttribute("href");
                                    if (tmp != null)

                                        ID = elId.GetAttribute("href");
                                    if (ID.Contains("profile_id="))
                                    {
                                        ID = ID.Substring(ID.IndexOf("profile_id=") + 11).Split('"')[0];
                                        t.ReportProgress(-2, ID);
                                        break;
                                    }



                                }




                                //ID = el[0].GetAttribute("href");
                                //if (ID.Contains("facebook.com/"))
                                //{
                                //    ID = ID.Substring(ID.IndexOf("facebook.com/") + 13).Split('/')[0];
                                //    //backgroundWorkerFriends.ReportProgress(-2, ID);
                                //}
                                IList<IWebElement> els = el[0].FindElements(By.TagName("img"));// html / body / div[1] / div / div / div[2] / div / div / div[1] / div / div[1] / div[2] / div / div / div / div / div[1] / div / div / a / div / svg / g / image

                                foreach (IWebElement ell in el)
                                {

                                    if (ell.Size.Width == ell.Size.Height && ell.Size.Width >= 132 && ell.Size.Width < 180)
                                    {


                                        var linkToImage = ell.GetAttribute("src");

                                        if (linkToImage != "")
                                        {
                                            try
                                            {
                                                using (var client = new WebClient())
                                                {
                                                    if (!Directory.Exists(pathToSave + "\\"))
                                                        Directory.CreateDirectory(pathToSave + "\\");

                                                    if (!File.Exists(pathToSave + "\\" + titrePage.Replace("\"", "") + ".jpg"))
                                                    {
                                                        client.DownloadFile(linkToImage, pathToSave + "\\" + titrePage.Replace("\"", "") + ".jpg");
                                                        Thread.Sleep(5000);


                                                        t.ReportProgress(-5, pathToSave + "\\" + titrePage.Replace("\"", "") + ".jpg");
                                                        //t.ReportProgress(-2, ID);

                                                        Thread.Sleep(2000);
                                                        profilIsSet = true;

                                                    }
                                                    else
                                                    {


                                                        t.ReportProgress(-5, pathToSave + "\\" + titrePage.Replace("\"", "") + ".jpg");
                                                        //t.ReportProgress(-2, ID);

                                                        profilIsSet = true;
                                                    }


                                                }
                                            }
                                            catch (Exception ex)
                                            {
                                                MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT POUR LA PHOTO DE PROFIL" + Environment.NewLine + ex.Message);
                                                return;
                                            }


                                        }

                                        break;
                                    }
                                    else
                                        continue;
                                }
                            }
                            catch (Exception exx)
                            {

                            }
                        }
                        //clic sur image dans href
                        //((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].click();", image);
                        //backgroundWorker1.ReportProgress(1);

                        Thread.Sleep(5000);
                    }
                }
                catch (OpenQA.Selenium.NoSuchElementException ex)
                {

                    try
                    {
                        var image = driver.FindElementByXPath("//a[@class='_1nv3 _1nv5 profilePicThumb']");
                        IWebElement el = driver.FindElementByXPath("//a[@class='_1nv3 _11kg _1nv5 profilePicThumb']");
                        if (el != null)
                        {
                            try
                            {
                                ID = el.GetAttribute("href");
                                if (ID.Contains("profile_id="))
                                {
                                    ID = ID.Substring(ID.IndexOf("profile_id=") + 11).Split('"')[0];
                                    //backgroundWorkerFriends.ReportProgress(-2, ID);
                                }
                            }
                            catch
                            {

                            }

                            IList<IWebElement> els = el.FindElements(By.TagName("img"));
                            foreach (IWebElement ell in els)
                            {
                                var linkToImage = ell.GetAttribute("src");

                                if (linkToImage != "")
                                {
                                    try
                                    {
                                        using (var client = new WebClient())
                                        {

                                            if (!Directory.Exists(pathToSave + "\\"))
                                                Directory.CreateDirectory(pathToSave + "\\");

                                            if (!File.Exists(pathToSave + "\\" + titrePage + ".jpg"))
                                            {
                                                client.DownloadFile(linkToImage, pathToSave + "\\" + titrePage + ".jpg");
                                                Thread.Sleep(5000);


                                                t.ReportProgress(-5, pathToSave + "\\" + titrePage + ".jpg");
                                                t.ReportProgress(-2, ID);

                                                Thread.Sleep(2000);

                                            }
                                            else
                                            {


                                                t.ReportProgress(-5, pathToSave + "\\" + titrePage + ".jpg");
                                                t.ReportProgress(-2, ID);


                                            }

                                            profilIsSet = true;
                                        }
                                    }
                                    catch (Exception exx)
                                    {
                                        MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT POUR LA PHOTO DE PROFIL" + Environment.NewLine + ex.Message);
                                        return;
                                    }


                                }
                            }

                        }
                        //clic sur image dans href
                        //((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].click();", image);
                        //backgroundWorker1.ReportProgress(1);

                        //Thread.Sleep(5000);

                    }
                    catch (OpenQA.Selenium.NoSuchElementException exx)
                    {
                        MessageBox.Show("PROBLEME AVEC L'IDENTIFIEUR DE CLASSE POUR LA PHOTO DE PROFIL" + Environment.NewLine + ex.Message);
                        return;
                    }


                }


            try
            {
                //page about -------------------------------------------------------------------------------------------------------------------------------------------------------------------------


                if (!Directory.Exists(pathToSave + @"\ABOUT\"))
                    Directory.CreateDirectory(pathToSave + @"\ABOUT\");


                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture page about du profil");
                if (urlFriend.Contains("id="))
                {
                    driver.Navigate().GoToUrl(urlFriend + "&sk=about&section=contact-info");
                    Thread.Sleep(5000);
                }
                else
                {
                    driver.Navigate().GoToUrl(urlFriend + "/about?section=contact-info");
                    Thread.Sleep(5000);
                }


            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top

                Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                long innerHeightt = (long)innerHeight;
                long scroll = (long)innerHeight;
                long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                scrollHeight = scrollHeight + scroll;
                int hauteur = 450;



                try
                {
                    Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                    int ii = 1;
                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " scrolling de la page about du profil");
                    while (scrollHeight >= innerHeightt)
                    {
                        //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                        //Thread.Sleep(1000);

                        Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                        imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                        //Save the screenshot
                        imageScreenshott.SaveAsFile(pathToSave + @"\ABOUT\" + "_" + ii + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                        Thread.Sleep(100);
                        backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " capture d'écran : " + @"\ABOUT\" + "_" + ii + ".png");



                        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                        if ((scrollHeight - innerHeightt) < 200)
                        {
                            Thread.Sleep(5000);
                        }
                        else
                            Thread.Sleep(2500);


                        scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
                        Thread.Sleep(2000);


                        if (scrollHeight <= innerHeightt)
                        {
                            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                            Thread.Sleep(2000);
                            scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                        }

                        scrollHeight = scrollHeight + scroll;
                        innerHeightt = innerHeightt + hauteur;
                        ii++;
                    }
                }
                catch
                {
                    //e.printStackTrace();
                }


                string codePage = driver.PageSource;

                using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\ABOUT\\About.html", false))
                {
                    //if (File.Exists(saveFileDialog1.FileName))
                    //    File.Delete(saveFileDialog1.FileName);
                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " création du fichier " + "\\ABOUT\\About.html");
                    file.Write(codePage);
                }
            }
            catch
            {

            }
        }


        private void ScrollFacebookPage(string url, string titre)
        {

            string targetName = textBoxops.Text;
            string titrePage = "";
            string urlFriend = textBoxUSERNAMEFRIENDS.Text;
            string ID = "";
            //pour cacher fenetre DOS

            if (driver == null)
            {
                InitializeDriver();
                // 2. Go to the "Google" homepage
                driver.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }


                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driver.FindElementById("email");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUsernameURL.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driver.FindElementById("pass");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxpasswordURL.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driver.FindElementById("loginbutton").Click();
                Thread.Sleep(2500);
                //searchButton.Click();

                //u_0_8
                //"menuBar']//*[@class='menuItem']"
                // 2. Go to the "Google" homepage
                driver.Navigate().GoToUrl(urlFriend);
                titrePage = driver.Title;
                Thread.Sleep(5000);
            }


            try
            {
                //page about -------------------------------------------------------------------------------------------------------------------------------------------------------------------------


                if (!Directory.Exists(pathToSave + @"\PAGES\" + titre))
                    Directory.CreateDirectory(pathToSave + @"\PAGES\" + titre);

                if (urlFriend.Contains("id="))
                {
                    driver.Navigate().GoToUrl(url);
                    Thread.Sleep(5000);
                }
                else
                {
                    driver.Navigate().GoToUrl(url);
                    Thread.Sleep(5000);
                }


                ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top

                Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                long innerHeightt = (long)innerHeight;
                long scroll = (long)innerHeight;
                long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                scrollHeight = scrollHeight + scroll;
                int hauteur = 450;



                try
                {
                    Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                    int ii = 1;
                    while (scrollHeight >= innerHeightt)
                    {
                        //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                        //Thread.Sleep(1000);

                        Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                        imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                        //Save the screenshot
                        imageScreenshott.SaveAsFile(pathToSave + @"\PAGES\" + titre + "\\Screenshot_" + ii + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                        Thread.Sleep(100);



                        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                        if ((scrollHeight - innerHeightt) < 200)
                        {
                            Thread.Sleep(5000);
                        }
                        else
                            Thread.Sleep(500);


                        scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
                        Thread.Sleep(2000);


                        if (scrollHeight <= innerHeightt)
                        {
                            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                            Thread.Sleep(2000);
                            scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                        }

                        scrollHeight = scrollHeight + scroll;
                        innerHeightt = innerHeightt + hauteur;
                        ii++;
                    }
                }
                catch
                {
                    //e.printStackTrace();
                }


                
            }
            catch
            {

            }

            backgroundWorker1.CancelAsync();
        }
        private void ScrollInstagramPage(string url, string titre)
        {
            if (!profilIsSet)
                GetProfilInstagramInformation(url, backgroundWorker1);

            string targetName = textBoxops.Text;
            string titrePage = "";
            string urlFriend = textBoxURLInstagram.Text;
            string ID = "";
            string nomDossier = "";
            string urlProfilee = textBoxProfilURL.Text;

            if (url.Contains("/p/"))
            {
                if(urlProfilee != "")
                ScrollInstagramPageFromPicture(url, titre, urlProfilee);
                return;
            }
            
            
            
            //pour cacher fenetre DOS

            if (driver == null)
            {
                InitializeDriver();
                // 2. Go to the "Google" homepage
                driver.Navigate().GoToUrl("https://instagram.com");
                Thread.Sleep(5000);

                if (isElementPresent(driver, "//button[@class='sqdOP yWX7d    y3zKF     ']"))
                {
                    driver.FindElementByXPath("//button[@class='sqdOP yWX7d    y3zKF     ']").Click();
                    Thread.Sleep(2000);
                }

                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driver.FindElementByName("username");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAMEInstagram.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driver.FindElementByName("password");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORDInstagram.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driver.FindElement(By.XPath("//button[@class='sqdOP  L3NKy   y3zKF     ']")).Click();
                Thread.Sleep(2500);
                //searchButton.Click();

                //u_0_8
                //"menuBar']//*[@class='menuItem']"
                // 2. Go to the "Google" homepage
                driver.Navigate().GoToUrl(url);
                titrePage = driver.Title;
                Thread.Sleep(5000);

                
            }
            else
            {

                driver.Navigate().GoToUrl(url);
                titrePage = driver.Title;
                Thread.Sleep(5000);



                //test pour récupérer abonnés 
               if(checkBoxFollowersInsta.Checked)
               if(isElementPresent(driver, "//a[@class='-nal3 ']"))
                {
                    try
                    {
                        IList<IWebElement> ll = driver.FindElementsByXPath("//a[@class='-nal3 ']");
                        foreach(IWebElement ee in ll)
                        {
                            try
                            {
                                if (ee.GetAttribute("href").Contains("followers"))
                                {
                                    ee.Click();
                                }
                            }
                            catch(Exception ex)
                            {

                            }
                            
                        }
                        Thread.Sleep(2500);


                        if (isElementPresent(driver, "//div[@class='_1XyCr']"))
                        {
                            Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                            long innerHeightt = (long)innerHeight;
                            long scroll = (long)innerHeight;
                            long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                            scrollHeight = scrollHeight + scroll;
                            int hauteur = 450;

                            Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('isgrP')[0].scrollHeight");

                            while (true)
                            {
                                //driver.execute_script('document.getElementById("viewport").scrollTop += 100')

                                ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('isgrP')[0].scrollTo(0, document.getElementsByClassName('isgrP')[0].scrollHeight)");
                                //((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('ltEKP')[0].scrollIntoView(true)");

                                Thread.Sleep(2000);

                                Object newHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('isgrP')[0].scrollHeight");//ll8tlv6m j83agx80 taijpn5t hzruof5a
                                if (newHeight.Equals(lastHeight))
                                {
                                    break;
                                }
                                lastHeight = newHeight;
                            }

                            try
                            {
                                if (!Directory.Exists(pathToSave + @"\INSTAGRAM\FollowersProfiles"))
                                    Directory.CreateDirectory(pathToSave + @"\INSTAGRAM\FollowersProfiles");

                                if (!Directory.Exists(pathToSave + "\\TXT"))
                                    Directory.CreateDirectory(pathToSave + "\\TXT");


                                IList<IWebElement> abonnes = driver.FindElementsByXPath("//li[@class='wo9IH']");
                                string ligne = "";
                                foreach (IWebElement ell in abonnes)
                                {


                                    string urlProfileFollowerPicture = "";
                                    string nomProfile = "";
                                    string urlProfileFollower = "";
                                   

                                    try
                                    {
                                        var photo = ell.FindElement(By.TagName("img"));
                                        urlProfileFollowerPicture = photo.GetAttribute("src");
                                        nomProfile = photo.GetAttribute("alt");

                                        using (var client = new WebClient())
                                        {
                                            


                                            client.DownloadFile(urlProfileFollowerPicture, pathToSave + "\\INSTAGRAM\\FollowersProfiles\\" + nomProfile + ".jpg");
                                            Thread.Sleep(500);



                                        }


                                    }
                                    catch
                                    {

                                    }

                                    try
                                    {
                                        var follower = ell.FindElement(By.TagName("a"));
                                        urlProfileFollower = follower.GetAttribute("href");

                                    }
                                    catch
                                    {

                                    }

                                    ligne += nomProfile.Replace("Photo de profil de ", "") + ";" + urlProfileFollower + ";" + nomProfile + ".jpg\n";

                                }

                                if (File.Exists(pathToSave + "\\TXT" + "\\FollowersInstagram.txt"))
                                    File.Delete(pathToSave + "\\TXT" + "\\FollowersInstagram.txt");

                                //File.WriteAllText(dossierLocal + @"\friendsFromComments.txt", ligne);
                                File.WriteAllText(pathToSave + "\\TXT" + "\\FollowersInstagram.txt", ligne);

                                ligne = "";

                                try
                                {
                                    if (isElementPresent(driver, "//div[@class='pbNvD  fPMEg     HYpXt']"))
                                        driver.FindElementsByXPath("//div[@class='pbNvD  fPMEg     HYpXt']")[0].FindElement(By.TagName("button")).Click();

                                }
                                catch (Exception ex)
                                {

                                }

                            }
                            catch
                            {

                            }
                           
                        }
                    }
                    catch
                    {

                    }
                }
                //-------------------------------------------------------FIN ABONNES------------------------------------------------------------------------------------------

                //--------------------------------------------------------------ABONNEMENTS-------------------------------------------------------------------------------------------

                if (checkBoxFollowingsInsta.Checked)
                if (isElementPresent(driver, "//a[@class='-nal3 ']"))
                {
                    try
                    {
                        IList<IWebElement> ll = driver.FindElementsByXPath("//a[@class='-nal3 ']");
                        foreach (IWebElement ee in ll)
                        {
                            try
                            {
                                if (ee.GetAttribute("href").Contains("following"))
                                {
                                    ee.Click();
                                }
                            }
                            catch (Exception ex)
                            {

                            }

                        }
                        Thread.Sleep(2500);


                        if (isElementPresent(driver, "//div[@class='_1XyCr']"))
                        {
                            Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                            long innerHeightt = (long)innerHeight;
                            long scroll = (long)innerHeight;
                            long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                            scrollHeight = scrollHeight + scroll;
                            int hauteur = 450;

                            Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('isgrP')[0].scrollHeight");

                            while (true)
                            {
                                //driver.execute_script('document.getElementById("viewport").scrollTop += 100')

                                ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('isgrP')[0].scrollTo(0, document.getElementsByClassName('isgrP')[0].scrollHeight)");
                                //((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('ltEKP')[0].scrollIntoView(true)");

                                Thread.Sleep(2000);

                                Object newHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('isgrP')[0].scrollHeight");//ll8tlv6m j83agx80 taijpn5t hzruof5a
                                if (newHeight.Equals(lastHeight))
                                {
                                    break;
                                }
                                lastHeight = newHeight;
                            }

                            try
                            {
                                if (!Directory.Exists(pathToSave + @"\INSTAGRAM\FollowingProfiles"))
                                    Directory.CreateDirectory(pathToSave + @"\INSTAGRAM\FollowingProfiles");

                                if (!Directory.Exists(pathToSave + "\\TXT"))
                                    Directory.CreateDirectory(pathToSave + "\\TXT");


                                IList<IWebElement> abonnes = driver.FindElementsByXPath("//li[@class='wo9IH']");
                                string ligne = "";
                                foreach (IWebElement ell in abonnes)
                                {


                                    string urlProfileFollowerPicture = "";
                                    string nomProfile = "";
                                    string urlProfileFollower = "";


                                    try
                                    {
                                        var photo = ell.FindElement(By.TagName("img"));
                                        urlProfileFollowerPicture = photo.GetAttribute("src");
                                        nomProfile = photo.GetAttribute("alt");


                                            
                                        using (var client = new WebClient())
                                        {



                                            client.DownloadFile(urlProfileFollowerPicture, pathToSave + "\\INSTAGRAM\\FollowingProfiles\\" + nomProfile + ".jpg");
                                            Thread.Sleep(500);



                                        }


                                    }
                                    catch
                                    {

                                    }

                                    try
                                    {
                                        var follower = ell.FindElement(By.TagName("a"));
                                        urlProfileFollower = follower.GetAttribute("href");
                                            if (urlProfileFollower == "https://www.instagram.com/lcs_frn_/")
                                                ;

                                        }
                                    catch
                                    {

                                    }

                                    ligne += nomProfile.Replace("Photo de profil de ", "") + ";" + urlProfileFollower + ";" + nomProfile + ".jpg\n";

                                }

                                if (File.Exists(pathToSave + "\\TXT" + "\\FollowingsInstagram.txt"))
                                    File.Delete(pathToSave + "\\TXT" + "\\FollowingsInstagram.txt");

                                //File.WriteAllText(dossierLocal + @"\friendsFromComments.txt", ligne);
                                File.WriteAllText(pathToSave + "\\TXT" + "\\FollowingsInstagram.txt", ligne);

                                ligne = "";

                                try
                                {
                                    if (isElementPresent(driver, "//div[@class='pbNvD  fPMEg     HYpXt']"))
                                        driver.FindElementsByXPath("//div[@class='pbNvD  fPMEg     HYpXt']")[0].FindElement(By.TagName("button")).Click();

                                }
                                catch (Exception ex)
                                {

                                }

                            }
                            catch
                            {

                            }

                        }
                    }
                    catch
                    {

                    }
                }

                

            }

            if (!checkBoxPublications.Checked)
            {
                INSTAGRAM = true;
                backgroundWorker1.ReportProgress(-556, Directory.GetFiles(pathToSave + "\\INSTAGRAM\\Profile").Count().ToString());
                backgroundWorker1.ReportProgress(-123);
                backgroundWorker1.CancelAsync();
                return;

            }

            try
            {
                

                if (!Directory.Exists(pathToSave + @"\INSTAGRAM\"))
                    Directory.CreateDirectory(pathToSave + @"\INSTAGRAM\");

                if (!Directory.Exists(pathToSave + "\\TXT"))
                    Directory.CreateDirectory(pathToSave + "\\TXT");



                ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top

                Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                long innerHeightt = (long)innerHeight;
                long scroll = (long)innerHeight;
                long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                scrollHeight = scrollHeight + scroll;
                int hauteur = 450;

                Dictionary<string, string> dico = new Dictionary<string, string>();
                Dictionary<string, string> identifiants = new Dictionary<string, string>();
                Dictionary<string, string> identifies = new Dictionary<string, string>();

                try
                {
                    Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                    int ii = 1;
                    while (scrollHeight >= innerHeightt)
                    {
                        //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                        //Thread.Sleep(1000);

                        Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                        imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                        //Save the screenshot
                        imageScreenshott.SaveAsFile(pathToSave + @"\INSTAGRAM\"  + "\\Screenshot_" + ii + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                        Thread.Sleep(100);



                        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                        if ((scrollHeight - innerHeightt) < 200)
                        {
                            Thread.Sleep(5000);
                        }
                        else
                            Thread.Sleep(500);

                        //on récupère tous les urls présentes

                        IList<IWebElement> urls = driver.FindElements(By.XPath("//div[@class='v1Nh3 kIKUG  _bz0w']"));

                        
                        foreach (IWebElement el in urls)
                        {
                            var urll = el.FindElement(By.TagName("a"));
                            string urlll = urll.GetAttribute("href");

                            //if (urlll.StartsWith("/"))
                            //    urlll = urlll.Substring(urlll.IndexOf("/") + 1);

                            //if (urlll.StartsWith("https://www.instagram.com/"))
                            //    urlll = urlll.Replace("https://www.instagram.com/", "");

                            if (!dico.ContainsKey(urlll))
                                dico.Add(urlll, urlll);
                        }

                        scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
                        Thread.Sleep(2000);


                        if (scrollHeight <= innerHeightt)
                        {
                            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                            Thread.Sleep(2000);
                            scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                        }

                        scrollHeight = scrollHeight + scroll;
                        innerHeightt = innerHeightt + hauteur;
                        ii++;
                    }

                    backgroundWorker1.ReportProgress(-555, dico.Count().ToString());

                    string id = "";
                    string idURL = "";
                    string commentaires = "";

                    if (!urlFriend.EndsWith("/"))
                        urlFriend += "/";

                    string tmpp = "";
                    int nbrepub = 1;
                    foreach(string urlFromDico in dico.Keys)
                    {
                        driver.Navigate().GoToUrl(urlFromDico);
                        Thread.Sleep(5000);

                        if (urlFromDico.StartsWith("/"))
                            tmpp = urlFromDico.Substring(urlFromDico.IndexOf("/") + 1);

                        if (urlFromDico.StartsWith("https://www.instagram.com/"))
                            tmpp = urlFromDico.Replace("https://www.instagram.com/", "");


                        nomDossier = tmpp.Replace("/", "_");

                        lastHeight = null;
                        lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('ltEKP')[0].scrollHeight");

                        if (!Directory.Exists(pathToSave + "\\INSTAGRAM\\" + nomDossier))
                            Directory.CreateDirectory(pathToSave + "\\INSTAGRAM\\" + nomDossier);

                        Screenshot imageScreenshot = ((ITakesScreenshot)driver).GetScreenshot();
                        ////Save the screenshot
                        //imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                        imageScreenshot.SaveAsFile(pathToSave + "\\INSTAGRAM\\" + nomDossier + "\\Screenshot_1" + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);

                       
                        if(isElementPresent(driver,("//button[@class='G_hoz LcKDX _6JfJs']")))
                        {
                            driver.FindElementByXPath("//button[@class='G_hoz LcKDX _6JfJs']").Click();
                            Thread.Sleep(500);

                            imageScreenshot = ((ITakesScreenshot)driver).GetScreenshot();
                            ////Save the screenshot
                            //imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                            imageScreenshot.SaveAsFile(pathToSave + "\\INSTAGRAM\\" + nomDossier + "\\Screenshot_Identity" + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);

                            try
                            {
                                if (isElementPresent(driver, "//div[@class='pbNvD  fPMEg    ']"))
                                    driver.FindElementsByXPath("//div[@class='pbNvD  fPMEg    ']")[0].FindElement(By.TagName("button")).Click();

                            }
                            catch (Exception ex)
                            {

                            }

                            IList<IWebElement> identif = driver.FindElementsByXPath("//div[@class='xUdfV']");
                            if (identif.Count > 0)
                            {
                                foreach (IWebElement iden in identif)
                                {
                                    string urliden = "";
                                    try
                                    {
                                        //urliden = iden.GetAttribute("href");
                                        urliden = iden.Text;

                                        if (urliden == "")
                                            continue;

                                        if (!identifies.ContainsKey(urliden))
                                        {
                                            identifies.Add(urliden, urliden + ";" + urlFromDico + ";" + nomDossier + "\\Screenshot_Identity" + ".png" + ";" + "" + ";.//identity.jpg" + "\n");

                                        }
                                    }
                                    catch
                                    {

                                    }


                                }

                                try
                                {
                                    driver.FindElementByXPath("//button[@class='G_hoz LcKDX _6JfJs']").Click();
                                    Thread.Sleep(500);
                                }
                                catch
                                {

                                }
                            }
                        }



                        //si album photo on clique et prend screenshot de chaque image avant de récupérer les commentaires

                        if (isElementPresent(driver, "//button[@class='  _6CZji   ']"))
                        {
                            int album = 1;
                            if (!Directory.Exists(pathToSave + "\\INSTAGRAM\\ALBUM\\" + nomDossier.Replace("/", "_")))
                                Directory.CreateDirectory(pathToSave + "\\INSTAGRAM\\ALBUM\\" + nomDossier.Replace("/", "_"));

                            imageScreenshot = ((ITakesScreenshot)driver).GetScreenshot();
                            ////Save the screenshot
                            //imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                            imageScreenshot.SaveAsFile(pathToSave + "\\INSTAGRAM\\ALBUM\\" + nomDossier.Replace("/", "_") + "\\Screenshot_" + album++ + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);


                            while (isElementPresent(driver, "//button[@class='  _6CZji   ']"))
                            {

                                driver.FindElementByXPath("//button[@class='  _6CZji   ']").Click();
                                Thread.Sleep(2500);

                                imageScreenshot = ((ITakesScreenshot)driver).GetScreenshot();
                                ////Save the screenshot
                                //imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                imageScreenshot.SaveAsFile(pathToSave + "\\INSTAGRAM\\ALBUM\\" + nomDossier.Replace("/", "_") + "\\Screenshot_" + album++ + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);


                            }
                        }

                        if (isElementPresent(driver, "//button[@class=' POSa_    ']"))
                        {
                            while (isElementPresent(driver, "//button[@class=' POSa_    ']"))
                            {

                                driver.FindElementByXPath("//button[@class=' POSa_    ']").Click();
                                Thread.Sleep(2500);
                            }
                        }



                        //Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[1].scrollHeight");

                        while (true)
                        {
                            //driver.execute_script('document.getElementById("viewport").scrollTop += 100')

                            ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('EtaWk')[0].scrollTo(0, document.getElementsByClassName('EtaWk')[0].scrollHeight)");
                            //((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('ltEKP')[0].scrollIntoView(true)");

                            Thread.Sleep(2000);
                            
                            Object newHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('ltEKP')[0].scrollHeight");//ll8tlv6m j83agx80 taijpn5t hzruof5a
                            if (newHeight.Equals(lastHeight))
                            {
                                break;
                            }
                            lastHeight = newHeight;
                        }

                        
                        //premier commentaire
                        if(isElementPresent(driver, ".//div[@class='P9YgZ']"))
                        //if(driver.FindElement(By.XPath(".//div[@class='P9YgZ']")).Displayed)
                        try
                        {
                            var first = driver.FindElement(By.XPath(".//div[@class='P9YgZ']"));
                            string tentation = first.ToString();
                            string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                try
                                {

                                    var urlImage = first.FindElement(By.XPath(".//img[@class='_6q-tv']"));
                                    var idurl = first.FindElement(By.XPath(".//a[@class='sqdOP yWX7d     _8A5w5   ZIAjV ']"));
                                    idURL = idurl.GetAttribute("href");
                                    id = idurl.Text;
                                    //commentaires = comment.Text;
                                    commentaires = "";
                                    IList<IWebElement> tmp = first.FindElements(By.TagName("span"));
                                    //commentaires += tmp[0].Text + " " + tmp[1].Text;

                                    foreach (IWebElement e in tmp)
                                    {
                                        commentaires += e.Text + " ";
                                    }
                                    //commentaires = comment.FindElement(By.TagName("span")).Text;

                                    var idurlProfile = first.FindElement(By.XPath(".//img[@class='_6q-tv']"));
                                    string urlProfile = idurlProfile.GetAttribute("src");
                                    string nomProfile = idurlProfile.GetAttribute("alt");

                                    using (var client = new WebClient())
                                    {
                                        if (!Directory.Exists(pathToSave + "\\INSTAGRAM\\Profile"))
                                            Directory.CreateDirectory(pathToSave + "\\INSTAGRAM\\Profile");


                                        client.DownloadFile(urlProfile, pathToSave + "\\INSTAGRAM\\Profile\\" + nomProfile + ".jpg");
                                        Thread.Sleep(500);



                                    }



                                    if (!identifiants.ContainsKey(id + idURL + commentaires.Replace("\r\n", " ").Replace("\n", " ").Replace(";", "")))
                                        identifiants.Add(id + idURL + commentaires.Replace("\r\n", " ").Replace("\n", " ").Replace(";",""), id + ";" + idURL + ";" + nomDossier + "\\Screenshot_1" + ".png" + ";" + commentaires.Replace("\r\n", " ").Replace("\n", " ") + ";.//" + nomProfile + ".jpg" + "\n");


                                }
                                catch
                                {

                                }
                            }
                        catch
                        {

                        }


                        //try
                        //{
                         
                        //    var urlImage = first.FindElement(By.XPath(".//img[@class='_6q-tv']"));
                        //    var idurl = first.FindElement(By.XPath(".//a[@class='sqdOP yWX7d     _8A5w5   ZIAjV ']"));
                        //    idURL = idurl.GetAttribute("href");
                        //    id = idurl.Text;
                        //    //commentaires = comment.Text;
                        //    commentaires = "";
                        //    IList<IWebElement> tmp = first.FindElements(By.TagName("span"));
                        //    foreach (IWebElement e in tmp)
                        //    {
                        //        commentaires += e.Text + " ";
                        //    }
                        //    //commentaires = comment.FindElement(By.TagName("span")).Text;

                        //    var idurlProfile = first.FindElement(By.XPath(".//img[@class='_6q-tv']"));
                        //    string urlProfile = idurlProfile.GetAttribute("src");
                        //    string nomProfile = idurlProfile.GetAttribute("alt");



                        //    if (!identifiants.ContainsKey(tentation))
                        //        identifiants.Add(tentation, id + ";" + idURL + ";" + urlFromDico.Replace("/", "_") + "\\Screenshot_1" + ".png" + ";" + commentaires.Replace("\r\n", " ").Replace("\n", " ") + ";.//" + nomProfile + ".jpg" + "\n");


                        //}
                        //catch
                        //{

                        //}




                        IList<IWebElement> listeul = driver.FindElementsByXPath("//ul[@class='Mr508']");
                        int i = 0;
                        int j = 2;
                        foreach (IWebElement comment in listeul)
                        {
                            
                            Thread.Sleep(500);
                            string tentation = comment.ToString();
                            string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];


                            try
                            {
                                var c = comment.FindElement(By.XPath(".//button[@class='sqdOP yWX7d    y3zKF     ']"));
                                if (c.Text.ToLower().Contains("afficher"))
                                {
                                    c.Click();
                                    Thread.Sleep(500);
                                }
                                    
                            }
                            catch
                            {

                            }

                            try
                            {
                                //var commentaire = comment.FindElement(By.TagName("span"));
                                try
                                {
                                    var urlImage = comment.FindElement(By.XPath(".//img[@class='_6q-tv']"));
                                    var idurl = comment.FindElement(By.XPath(".//a[@class='sqdOP yWX7d     _8A5w5   ZIAjV ']"));
                                    idURL = idurl.GetAttribute("href");
                                    id = idurl.Text;

                                    commentaires = "";
                                    IList<IWebElement> tmp = comment.FindElements(By.TagName("span"));
                                    //commentaires += tmp[0].Text + " " + tmp[1].Text;
                                    foreach (IWebElement e in tmp)
                                    {
                                        commentaires += e.Text + " ";
                                    }
                                    //commentaires = comment.Text;

                                    var idurlProfile = comment.FindElement(By.XPath(".//img[@class='_6q-tv']"));
                                    string urlProfile = idurlProfile.GetAttribute("src");
                                    string nomProfile = idurlProfile.GetAttribute("alt");

                                    using (var client = new WebClient())
                                    {
                                        if (!Directory.Exists(pathToSave + "\\INSTAGRAM\\Profile"))
                                            Directory.CreateDirectory(pathToSave + "\\INSTAGRAM\\Profile");


                                        client.DownloadFile(urlProfile, pathToSave + "\\INSTAGRAM\\Profile\\" + nomProfile + ".jpg");
                                        Thread.Sleep(500);



                                    }


                                    if (!identifiants.ContainsKey(id + idURL + commentaires.Replace("\r\n", " ").Replace("\n", " ").Replace(";", "")))
                                        identifiants.Add(id + idURL + commentaires.Replace("\r\n", " ").Replace("\n", " ").Replace(";", ""), id + ";" + idURL + ";" + nomDossier.Replace("/", "_") + "\\Screenshot_" + j + ".png" + ";" + commentaires.Replace("\r\n", " ").Replace("\n", " ") + ";.//" + nomProfile + ".jpg" + "\n");


                                }
                                catch
                                {

                                }

                                 ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('Mr508')[" + i + "].scrollIntoView(true)");
                                //Thread.Sleep(500);
                                ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top
                                //Thread.Sleep(500);

                                try
                                {
                                    Actions action = new Actions(driver);
                                    action.MoveToElement(comment);
                                    action.Perform();
                                    action.Click();
                                    Thread.Sleep(500);

                                }
                                catch
                                {

                                }


                                imageScreenshot = ((ITakesScreenshot)driver).GetScreenshot();
                                ////Save the screenshot
                                //imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                imageScreenshot.SaveAsFile(pathToSave + "\\INSTAGRAM\\" + nomDossier.Replace("/", "_") + "\\Screenshot_" + j++ + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                //Thread.Sleep(500);

                                IList<IWebElement> soustitre = comment.FindElements(By.XPath(".//div[@class='P9YgZ']"));
                                foreach (IWebElement elll in soustitre)
                                {
                                    tentation = elll.ToString();
                                    idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];


                                    var urlImage = elll.FindElement(By.XPath(".//img[@class='_6q-tv']"));
                                    var idurl = elll.FindElement(By.XPath(".//a[@class='sqdOP yWX7d     _8A5w5   ZIAjV ']"));
                                    idURL = idurl.GetAttribute("href");
                                    id = idurl.Text;
                                    //commentaires = elll.FindElement(By.TagName("span")).Text;

                                    commentaires = "";
                                    IList<IWebElement> tmp = elll.FindElements(By.TagName("span"));
                                    //commentaires += tmp[0].Text + " " + tmp[1].Text;
                                    foreach (IWebElement e in tmp)
                                    {
                                        commentaires += e.Text + " ";
                                    }

                                    var idurlProfile = elll.FindElement(By.XPath(".//img[@class='_6q-tv']"));
                                    string urlProfile = idurlProfile.GetAttribute("src");
                                    string nomProfile = idurlProfile.GetAttribute("alt");

                                    using (var client = new WebClient())
                                    {
                                        if (!Directory.Exists(pathToSave + "\\INSTAGRAM\\Profile"))
                                            Directory.CreateDirectory(pathToSave + "\\INSTAGRAM\\Profile");


                                        client.DownloadFile(urlProfile, pathToSave + "\\INSTAGRAM\\Profile\\" + nomProfile + ".jpg");
                                        Thread.Sleep(500);



                                    }

                                    if (!identifiants.ContainsKey(id + idURL + commentaires.Replace("\r\n", " ").Replace("\n", " ").Replace(";", "")))
                                        identifiants.Add(id + idURL + commentaires.Replace("\r\n", " ").Replace("\n", " ").Replace(";", ""), id + ";" + idURL + ";" + nomDossier.Replace("/", "_") + "\\Screenshot_" + j + ".png" + ";" + commentaires.Replace("\r\n", " ").Replace("\n", " ") + ";.//" + nomProfile + ".jpg" + "\n");





                                    ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", elll);
                                    //((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('C4VMK')[" + i + "].scrollIntoView(true)");
                                    ////Thread.Sleep(500);
                                    ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top
                                    Thread.Sleep(500);

                                    try
                                    {
                                        Actions action = new Actions(driver);
                                        action.MoveToElement(elll);
                                        action.Perform();
                                        action.Click();
                                        Thread.Sleep(500);

                                    }
                                    catch
                                    {

                                    }


                                    imageScreenshot = ((ITakesScreenshot)driver).GetScreenshot();
                                    ////Save the screenshot
                                    //imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                    imageScreenshot.SaveAsFile(pathToSave + "\\INSTAGRAM\\" + nomDossier.Replace("/", "_") + "\\Screenshot_" + j++ + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                    //Thread.Sleep(500);
                                }

                                Thread.Sleep(500);
                                i++;





                                //((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('Mr508')[" + i + "].scrollIntoView(true)");
                                //Thread.Sleep(500);
                                //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top
                                //Thread.Sleep(500);

                                //imageScreenshot = ((ITakesScreenshot)driver).GetScreenshot();
                                //////Save the screenshot
                                ////imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                //imageScreenshot.SaveAsFile(pathToSave + "\\INSTAGRAM\\" + urlFromDico.Replace("/", "_") + "\\Screenshot_" + j + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);

                                //Thread.Sleep(500);
                                //i++;
                            }
                            catch
                            {

                            }

                            
                            j++;

                        }

                        string text = "";
                        foreach(string key in identifiants.Keys)
                        {
                            text += identifiants[key];
                        }

                        if(identifiants.Keys.Count > 0)
                        {
                            if (File.Exists(pathToSave + "\\TXT" + "\\instagram_" + nomDossier.Replace("/", "_") + ".txt"))
                                File.Delete(pathToSave + "\\TXT" + "\\instagram_" + nomDossier.Replace("/", "_") + ".txt");

                            //File.WriteAllText(dossierLocal + @"\friendsFromComments.txt", ligne);
                            File.WriteAllText(pathToSave + "\\TXT" + "\\instagram_" + nomDossier.Replace("/", "_") + ".txt", text);
                            //if (File.Exists(pathToSave + "\\TXT" + "\\instagram.txt"))
                            //    File.Delete(pathToSave + "\\TXT" + "\\instagram.txt");

                            //File.WriteAllText(dossierLocal + @"\friendsFromComments.txt", ligne);
                            //File.WriteAllText(pathToSave + "\\TXT" + "\\instagram.txt", text);

                            identifiants = new Dictionary<string, string>();
                        }

                        text = "";
                        foreach (string key in identifies.Keys)
                        {
                            text += identifies[key];
                        }

                        if (identifies.Keys.Count > 0)
                            {
                                if (File.Exists(pathToSave + "\\TXT" + "\\identity_instagram_" + nomDossier.Replace("/", "_") + ".txt"))
                                    File.Delete(pathToSave + "\\TXT" + "\\identity_instagram_" + nomDossier.Replace("/", "_") + ".txt");

                                //File.WriteAllText(dossierLocal + @"\friendsFromComments.txt", ligne);
                                File.WriteAllText(pathToSave + "\\TXT" + "\\identity_instagram_" + nomDossier.Replace("/", "_") + ".txt", text);
                                //if (File.Exists(pathToSave + "\\TXT" + "\\instagram.txt"))
                                //    File.Delete(pathToSave + "\\TXT" + "\\instagram.txt");

                                //File.WriteAllText(dossierLocal + @"\friendsFromComments.txt", ligne);
                                //File.WriteAllText(pathToSave + "\\TXT" + "\\instagram.txt", text);

                                identifies = new Dictionary<string, string>();
                            }


                        backgroundWorker1.ReportProgress(-5555, nbrepub++);

                    }

                }
                catch
                {
                    //e.printStackTrace();
                }



            }
            catch
            {

            }
            INSTAGRAM = true;
            backgroundWorker1.ReportProgress(-556, Directory.GetFiles(pathToSave + "\\INSTAGRAM\\Profile").Count().ToString());
            backgroundWorker1.ReportProgress(-123);
            backgroundWorker1.CancelAsync();
        }
        private void ScrollInstagramPageFromPicture(string url, string titre, string urlProfilee)
        {

            string targetName = textBoxops.Text;
            string titrePage = "";
            string urlFriend = textBoxURLInstagram.Text;
            string ID = "";
     

            if (!profilIsSet)
                GetProfilInstagramInformation(urlProfilee,backgroundWorker1);

            if (driver == null)
            {
                InitializeDriver();
                // 2. Go to the "Google" homepage
                driver.Navigate().GoToUrl("https://instagram.com");
                Thread.Sleep(5000);

                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driver.FindElementByName("username");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAMEInstagram.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driver.FindElementByName("password");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORDInstagram.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driver.FindElement(By.XPath("//button[@class='sqdOP  L3NKy   y3zKF     ']")).Click();
                Thread.Sleep(2500);
                //searchButton.Click();

                //u_0_8
                //"menuBar']//*[@class='menuItem']"
                // 2. Go to the "Google" homepage
                driver.Navigate().GoToUrl(url);
                titrePage = driver.Title;
                Thread.Sleep(5000);

                if (isElementPresent(driver, "//button[@class='sqdOP yWX7d    y3zKF     ']"))
                {
                    driver.FindElementByXPath("//button[@class='sqdOP yWX7d    y3zKF     ']").Click();
                    Thread.Sleep(2000);

                    if(isElementPresent(driver, "//button[@class='wpO6b ']"))
                        driver.FindElementByXPath("//button[@class='wpO6b ']").Click();

                }
            }
            else
            {
                
                driver.Navigate().GoToUrl(url);
                titrePage = driver.Title;
                Thread.Sleep(5000);

                //if (isElementPresent(driver, "//button[@class='sqdOP yWX7d    y3zKF     ']"))
                //{
                //    driver.FindElementByXPath("//button[@class='sqdOP yWX7d    y3zKF     ']").Click();
                //    Thread.Sleep(2000);
                //}


            }


            Dictionary<string, string> dico = new Dictionary<string, string>();
            Dictionary<string, string> identifiants = new Dictionary<string, string>();
            Dictionary<string, string> identifies = new Dictionary<string, string>();
            string nomDossier = urlFriend.Substring(urlFriend.IndexOf("/p"));

            try
            {
                int ii = 1;

                if (!Directory.Exists(pathToSave + @"\INSTAGRAM\"))
                    Directory.CreateDirectory(pathToSave + @"\INSTAGRAM\");

                if (!Directory.Exists(pathToSave + "\\TXT"))
                    Directory.CreateDirectory(pathToSave + "\\TXT");

                if (!Directory.Exists(pathToSave + "\\INSTAGRAM\\" + nomDossier.Replace("/", "_")))
                    Directory.CreateDirectory(pathToSave + "\\INSTAGRAM\\" + nomDossier.Replace("/", "_"));

                Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                //Save the screenshot
                imageScreenshott.SaveAsFile(pathToSave + @"\INSTAGRAM\" + nomDossier.Replace("/", "_") + "\\Screenshot_" + ii + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                Thread.Sleep(100);

               
                if (isElementPresent(driver, ("//button[@class='G_hoz LcKDX _6JfJs']")))
                {
                    driver.FindElementByXPath("//button[@class='G_hoz LcKDX _6JfJs']").Click();
                    Thread.Sleep(500);

                    


                    imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                    ////Save the screenshot
                    //imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                    imageScreenshott.SaveAsFile(pathToSave + "\\INSTAGRAM\\" + nomDossier.Replace("/", "_") + "\\Screenshot_Identity" + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);

                    try
                    {
                        if (isElementPresent(driver, "//div[@class='pbNvD  fPMEg    ']"))
                            driver.FindElementsByXPath("//div[@class='pbNvD  fPMEg    ']")[0].FindElement(By.TagName("button")).Click();

                    }
                    catch (Exception ex)
                    {

                    }

                    IList<IWebElement> identif = driver.FindElementsByXPath("//div[@class='xUdfV']");
                    if (identif.Count > 0)
                    {
                        foreach (IWebElement iden in identif)
                        {
                            string urliden = "";
                            try
                            {
                                //urliden = iden.GetAttribute("href");
                                urliden = iden.Text;

                                if (!identifies.ContainsKey(urliden))
                                {
                                    //identifies.Add(urliden, urliden + ";" + urlFriend + nomDossier.Replace("/", "_") + "\\Screenshot_Identity" + ".png" + ";" + "" + ";.//identity.jpg" + "\n");
                                    identifies.Add(urliden, urliden + ";" + "https://instagram.com/" + urliden + ";" + nomDossier.Replace("/", "_") + "\\Screenshot_Identity" + ".png" + ";" + "" + ";.//identity.jpg" + "\n");

                                }
                            }
                            catch
                            {

                            }


                        }

                        try
                        {
                            driver.FindElementByXPath("//button[@class='G_hoz LcKDX _6JfJs']").Click();
                            Thread.Sleep(500);
                        }
                        catch
                        {

                        }
                    }
                }

                //si album photo on clique et prend screenshot de chaque image avant de récupérer les commentaires

                if (isElementPresent(driver, "//button[@class='  _6CZji   ']"))
                {
                    int album = 1;
                    if (!Directory.Exists(pathToSave + "\\INSTAGRAM\\ALBUM\\" + nomDossier.Replace("/", "_")))
                        Directory.CreateDirectory(pathToSave + "\\INSTAGRAM\\ALBUM\\" + nomDossier.Replace("/", "_"));

                    imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                    ////Save the screenshot
                    //imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                    imageScreenshott.SaveAsFile(pathToSave + "\\INSTAGRAM\\ALBUM\\" + nomDossier.Replace("/", "_") + "\\Screenshot_" + album++ + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);


                    while (isElementPresent(driver, "//button[@class='  _6CZji   ']"))
                    {

                        driver.FindElementByXPath("//button[@class='  _6CZji   ']").Click();
                        Thread.Sleep(2500);

                        imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                        ////Save the screenshot
                        //imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                        imageScreenshott.SaveAsFile(pathToSave + "\\INSTAGRAM\\ALBUM\\" + nomDossier.Replace("/", "_") + "\\Screenshot_" + album++ + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);


                    }
                }

                if (isElementPresent(driver, "//button[@class=' POSa_    ']"))
                {
                    while (isElementPresent(driver, "//button[@class=' POSa_    ']"))
                    {

                        driver.FindElementByXPath("//button[@class=' POSa_    ']").Click();
                        Thread.Sleep(2500);
                    }
                }


                try
                {
                    
                    


                    string id = "";
                    string idURL = "";
                    string commentaires = "";
                    

                    //foreach (string urlFromDico in dico.Keys)
                    //{
                    //    driver.Navigate().GoToUrl(urlFriend + urlFromDico);
                    //    Thread.Sleep(5000);

                        Object lastHeight = null;
                        lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('ltEKP')[0].scrollHeight");

                   

                    

                        Screenshot imageScreenshot = ((ITakesScreenshot)driver).GetScreenshot();
                        ////Save the screenshot
                        //imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                        imageScreenshot.SaveAsFile(pathToSave + "\\INSTAGRAM\\" + nomDossier.Replace("/", "_") + "\\Screenshot_1" + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);

                    backgroundWorker1.ReportProgress(-555, "1");

                    //Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[1].scrollHeight");

                    while (true)
                        {
                            //driver.execute_script('document.getElementById("viewport").scrollTop += 100')

                            ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('EtaWk')[0].scrollTo(0, document.getElementsByClassName('EtaWk')[0].scrollHeight)");
                            //((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('ltEKP')[0].scrollIntoView(true)");

                            Thread.Sleep(2000);

                            Object newHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('ltEKP')[0].scrollHeight");//ll8tlv6m j83agx80 taijpn5t hzruof5a
                            if (newHeight.Equals(lastHeight))
                            {
                                break;
                            }
                            lastHeight = newHeight;
                        }

                        IList<IWebElement> listeul = driver.FindElementsByXPath("//ul[@class='Mr508']");
                        int i = 0;
                        int j = 2;
                    //premier commentaire

                    var first = driver.FindElement(By.XPath(".//div[@class='P9YgZ']"));
                    string tentation = first.ToString();
                    string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                    try
                    {
                        var urlImage = first.FindElement(By.XPath(".//img[@class='_6q-tv']"));
                        var idurl = first.FindElement(By.XPath(".//a[@class='sqdOP yWX7d     _8A5w5   ZIAjV ']"));
                        idURL = idurl.GetAttribute("href");
                        id = idurl.Text;
                        //commentaires = comment.Text;
                        commentaires = "";
                        IList<IWebElement> tmp = first.FindElements(By.TagName("span"));
                        //commentaires += tmp[0].Text + " " + tmp[1].Text;
                        foreach (IWebElement e in tmp)
                        {
                            commentaires += e.Text + " ";
                        }
                        //commentaires = comment.FindElement(By.TagName("span")).Text;

                        var idurlProfile = first.FindElement(By.XPath(".//img[@class='_6q-tv']"));
                        string urlProfile = idurlProfile.GetAttribute("src");
                        string nomProfile = idurlProfile.GetAttribute("alt");

                        using (var client = new WebClient())
                        {
                            if (!Directory.Exists(pathToSave + "\\INSTAGRAM\\Profile"))
                                Directory.CreateDirectory(pathToSave + "\\INSTAGRAM\\Profile");


                            client.DownloadFile(urlProfile, pathToSave + "\\INSTAGRAM\\Profile\\" + nomProfile + ".jpg");
                            Thread.Sleep(500);



                        }


                        if (!identifiants.ContainsKey(id + idURL + commentaires.Replace("\r\n", " ").Replace("\n", " ").Replace(";", "")))
                            identifiants.Add(id + idURL + commentaires.Replace("\r\n", " ").Replace("\n", " ").Replace(";", ""), id + ";" + idURL + ";" + nomDossier.Replace("/", "_") + "\\Screenshot_1" + ".png" + ";" + commentaires.Replace("\r\n", " ").Replace("\n", " ") + ";.//" + nomProfile + ".jpg" + "\n");


                    }
                    catch
                    {

                    }





                    foreach (IWebElement comment in listeul)
                        {

                            //Thread.Sleep(500);
                        tentation = comment.ToString();
                        idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                        try
                            {
                                var c = comment.FindElement(By.XPath(".//button[@class='sqdOP yWX7d    y3zKF     ']"));
                                if (c.Text.ToLower().Contains("afficher"))
                                {
                                    c.Click();
                                    Thread.Sleep(500);
                                }

                            }
                            catch
                            {

                            }

                            try
                            {
                                //var commentaire = comment.FindElement(By.TagName("span"));
                                try
                                {
                                    var urlImage = comment.FindElement(By.XPath(".//img[@class='_6q-tv']"));
                                    var idurl = comment.FindElement(By.XPath(".//a[@class='sqdOP yWX7d     _8A5w5   ZIAjV ']"));
                                    idURL = idurl.GetAttribute("href");
                                    id = idurl.Text;
                                //commentaires = comment.Text;
                                commentaires = "";
                                IList<IWebElement> tmp = comment.FindElements(By.TagName("span"));
                                //commentaires += tmp[0].Text + " " + tmp[1].Text;

                                foreach (IWebElement e in tmp)
                                {
                                    commentaires += e.Text + " ";
                                }
                                //commentaires = comment.FindElement(By.TagName("span")).Text;

                                var idurlProfile = comment.FindElement(By.XPath(".//img[@class='_6q-tv']"));
                                string urlProfile = idurlProfile.GetAttribute("src");
                                string nomProfile = idurlProfile.GetAttribute("alt");

                                using (var client = new WebClient())
                                {
                                    if (!Directory.Exists(pathToSave + "\\INSTAGRAM\\Profile"))
                                        Directory.CreateDirectory(pathToSave + "\\INSTAGRAM\\Profile");


                                    client.DownloadFile(urlProfile, pathToSave + "\\INSTAGRAM\\Profile\\" + nomProfile + ".jpg");
                                    Thread.Sleep(500);

                                                                                                         

                                }


                                if (!identifiants.ContainsKey(id + idURL + commentaires.Replace("\r\n", " ").Replace("\n", " ").Replace(";", "")))
                                    identifiants.Add(id + idURL + commentaires.Replace("\r\n", " ").Replace("\n", " ").Replace(";", ""), id + ";" + idURL + ";" + nomDossier.Replace("/", "_") + "\\Screenshot_" + j + ".png" + ";" + commentaires.Replace("\r\n", " ").Replace("\n"," ") + ";.//" + nomProfile + ".jpg" + "\n");


                                }
                                catch
                                {

                                }


                                ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('Mr508')[" + i + "].scrollIntoView(true)");
                                Thread.Sleep(500);
                                ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top
                                Thread.Sleep(500);

                            try
                            {
                                Actions action = new Actions(driver);
                                action.MoveToElement(comment);
                                action.Perform();
                                action.Click();
                                Thread.Sleep(1000);

                            }
                            catch
                            {

                            }

                            imageScreenshot = ((ITakesScreenshot)driver).GetScreenshot();
                                ////Save the screenshot
                                //imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                imageScreenshot.SaveAsFile(pathToSave + "\\INSTAGRAM\\" + nomDossier.Replace("/", "_") + "\\Screenshot_" + j++ + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);

                            IList<IWebElement> soustitre = comment.FindElements(By.XPath(".//div[@class='P9YgZ']"));//C4VMK
                            foreach(IWebElement elll in soustitre)
                            {
                                tentation = elll.ToString();
                                idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];



                                var urlImage = elll.FindElement(By.XPath(".//img[@class='_6q-tv']"));
                                var idurl = elll.FindElement(By.XPath(".//a[@class='sqdOP yWX7d     _8A5w5   ZIAjV ']"));
                                idURL = idurl.GetAttribute("href");
                                id = idurl.Text;
                                //commentaires = elll.FindElement(By.TagName("span")).Text;

                                commentaires = "";
                                IList<IWebElement> tmp = elll.FindElements(By.TagName("span"));
                                //commentaires += tmp[0].Text + " " + tmp[1].Text;
                                foreach (IWebElement e in tmp)
                                {
                                    commentaires += e.Text + " ";
                                }

                                var idurlProfile = elll.FindElement(By.XPath(".//img[@class='_6q-tv']"));
                                string urlProfile = idurlProfile.GetAttribute("src");
                                string nomProfile = idurlProfile.GetAttribute("alt");

                                using (var client = new WebClient())
                                {
                                    if (!Directory.Exists(pathToSave + "\\INSTAGRAM\\Profile"))
                                        Directory.CreateDirectory(pathToSave + "\\INSTAGRAM\\Profile");


                                    client.DownloadFile(urlProfile, pathToSave + "\\INSTAGRAM\\Profile\\" + nomProfile + ".jpg");
                                    Thread.Sleep(500);



                                }

                                if (!identifiants.ContainsKey(id + idURL + commentaires.Replace("\r\n", " ").Replace("\n", " ").Replace(";", "")))
                                    identifiants.Add(id + idURL + commentaires.Replace("\r\n", " ").Replace("\n", " ").Replace(";", ""), id + ";" + idURL + ";" + nomDossier.Replace("/", "_") + "\\Screenshot_" + j + ".png" + ";" + commentaires.Replace("\r\n", " ").Replace("\n", " ") + ";.//" + nomProfile + ".jpg" + "\n");

                                ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", elll);
                                //((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('C4VMK')[" + i + "].scrollIntoView(true)");
                                Thread.Sleep(500);
                                ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top
                                Thread.Sleep(500);

                                try
                                {
                                    Actions action = new Actions(driver);
                                    action.MoveToElement(elll);
                                    action.Perform();
                                    action.Click();
                                    Thread.Sleep(1000);

                                }
                                catch
                                {

                                }

                                imageScreenshot = ((ITakesScreenshot)driver).GetScreenshot();
                                ////Save the screenshot
                                //imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                imageScreenshot.SaveAsFile(pathToSave + "\\INSTAGRAM\\" + nomDossier.Replace("/", "_") + "\\Screenshot_" + j++ + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                            }

                                Thread.Sleep(500);
                                i++;
                            }
                            catch
                            {

                            }
                            
                            j++;

                        }

                        string text = "";
                        foreach (string key in identifiants.Keys)
                        {
                            text += identifiants[key];
                        }

                        if (File.Exists(pathToSave + "\\TXT" + "\\instagram_" + nomDossier.Replace("/", "_") + ".txt"))
                            File.Delete(pathToSave + "\\TXT" + "\\instagram_" + nomDossier.Replace("/", "_") + ".txt");

                        //File.WriteAllText(dossierLocal + @"\friendsFromComments.txt", ligne);
                        File.WriteAllText(pathToSave + "\\TXT" + "\\instagram_" + nomDossier.Replace("/", "_") + ".txt", text);

                        identifiants = new Dictionary<string, string>();

                    text = "";
                    foreach (string key in identifies.Keys)
                    {
                        text += identifies[key];
                    }

                    if (identifies.Keys.Count > 0)
                    {
                        if (File.Exists(pathToSave + "\\TXT" + "\\identity_instagram_" + nomDossier.Replace("/", "_") + ".txt"))
                            File.Delete(pathToSave + "\\TXT" + "\\identity_instagram_" + nomDossier.Replace("/", "_") + ".txt");

                        //File.WriteAllText(dossierLocal + @"\friendsFromComments.txt", ligne);
                        File.WriteAllText(pathToSave + "\\TXT" + "\\identity_instagram_" + nomDossier.Replace("/", "_") + ".txt", text);
                        //if (File.Exists(pathToSave + "\\TXT" + "\\instagram.txt"))
                        //    File.Delete(pathToSave + "\\TXT" + "\\instagram.txt");

                        //File.WriteAllText(dossierLocal + @"\friendsFromComments.txt", ligne);
                        //File.WriteAllText(pathToSave + "\\TXT" + "\\instagram.txt", text);

                        identifies = new Dictionary<string, string>();
                    }


                    //}

                }
                catch
                {
                    //e.printStackTrace();
                }



            }
            catch
            {

            }
            INSTAGRAM = true;
            backgroundWorker1.ReportProgress(-556, Directory.GetFiles(pathToSave + "\\INSTAGRAM\\Profile").Count().ToString());
            backgroundWorker1.ReportProgress(-123);
            backgroundWorker1.CancelAsync();
        }

        private void GetProfilInstagramInformation(string url, BackgroundWorker t)
        {

            if (url.Contains("/p/"))
            {
                t.ReportProgress(-55, pathToSave + "none.jpg");
                return;
            }
                

            if (driver == null)
            {
                InitializeDriver();
                // 2. Go to the "Google" homepage
                driver.Navigate().GoToUrl("https://instagram.com");
                Thread.Sleep(5000);

                if(isElementPresent(driver, "//div[@class='piCib']"))
                {
                    try
                    {
                        driver.FindElementByXPath("//button[@class='aOOlW  bIiDR  ']").Click();
                    }
                    catch
                    {

                    }
                }

                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driver.FindElementByName("username");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAMEInstagram.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driver.FindElementByName("password");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORDInstagram.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driver.FindElement(By.XPath("//button[@class='sqdOP  L3NKy   y3zKF     ']")).Click();
                Thread.Sleep(2500);
                //searchButton.Click();

                //u_0_8
                //"menuBar']//*[@class='menuItem']"
                // 2. Go to the "Google" homepage

                if (url.Contains("/p/"))
                    url = url.Split(new string[] { "/p/" }, StringSplitOptions.RemoveEmptyEntries)[0];

                driver.Navigate().GoToUrl(url);
                Thread.Sleep(5000);
                try
                {
                    var profileUrl = driver.FindElementByXPath("//img[@class='_6q-tv']");
                    string urlProfile = profileUrl.GetAttribute("src");

                    using (var client = new WebClient())
                    {
                        if (!Directory.Exists(pathToSave + "\\INSTAGRAM\\Profile"))
                            Directory.CreateDirectory(pathToSave + "\\INSTAGRAM\\Profile");

                        
                            client.DownloadFile(urlProfile, pathToSave + "\\INSTAGRAM\\Profile\\Profile.jpg");
                            Thread.Sleep(5000);


                            t.ReportProgress(-55, pathToSave + "\\INSTAGRAM\\Profile\\Profile.jpg");
                            //t.ReportProgress(-2, ID);

                            Thread.Sleep(2000);

                        profilIsSet = true;



                    }


                }
                catch
                {

                }
            }
        }

        private void ScrollFacebookPageForEvents(string url, string titre)
        {

            string targetName = textBoxops.Text;
            string titrePage = "";
            string urlFriend = textBoxUSERNAMEFRIENDS.Text;
            string ID = "";
            //pour cacher fenetre DOS

            if (driver == null)
            {
                InitializeDriver();
                // 2. Go to the "Google" homepage
                driver.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }



                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driver.FindElementById("email");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUsernameURL.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driver.FindElementById("pass");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxpasswordURL.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driver.FindElementById("loginbutton").Click();
                Thread.Sleep(2500);
                //searchButton.Click();

                //u_0_8
                //"menuBar']//*[@class='menuItem']"
                // 2. Go to the "Google" homepage
                driver.Navigate().GoToUrl(urlFriend);
                titrePage = driver.Title;
                Thread.Sleep(5000);
            }


            try
            {
                

                if (!Directory.Exists(pathToSave + @"\PAGES\" + titre ))
                    Directory.CreateDirectory(pathToSave + @"\PAGES\" + titre);

                if (urlFriend.Contains("id="))
                {
                    driver.Navigate().GoToUrl(url);
                    Thread.Sleep(5000);
                }
                else
                {
                    driver.Navigate().GoToUrl(url);
                    Thread.Sleep(5000);
                }


                ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top

                Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                long innerHeightt = (long)innerHeight;
                long scroll = (long)innerHeight;
                long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                scrollHeight = scrollHeight + scroll;
                int hauteur = 450;
                int ii = 1;

                //d'abord on scroll pour avoir tous les albums à l'écran

                try
                {
                    Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                    
                    while (scrollHeight >= innerHeightt)
                    {
                        


                        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                        if ((scrollHeight - innerHeightt) < 200)
                        {
                            Thread.Sleep(5000);
                        }
                        else
                            Thread.Sleep(500);

                        Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                        //imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                        
                        //Save the screenshot
                        imageScreenshott.SaveAsFile(pathToSave + @"\PAGES\" + titre + "\\Screenshot_" + ii + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                        Thread.Sleep(100);

                        scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
                        Thread.Sleep(2000);


                        if (scrollHeight <= innerHeightt)
                        {
                            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                            Thread.Sleep(2000);
                            scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                        }

                        scrollHeight = scrollHeight + scroll;
                        innerHeightt = innerHeightt + hauteur;

                        ii++;
                        
                    }
                }
                catch
                {
                    //e.printStackTrace();
                }

                Dictionary<string, string> dicourls = new Dictionary<string, string>();
                try
                {
                    var imageDown = driver.FindElementsByXPath("//div[@class='bp9cbjyn j83agx80 cbu4d94t']");
                    Object[] divs = imageDown.ToArray();

                    string ligne = "";
                   
                    foreach(OpenQA.Selenium.Remote.RemoteWebElement o in imageDown)
                    {
                        var urll = o.FindElementByXPath(".//a[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 a8c37x1j p7hjln8o kvgmc6g5 cxmmr5t8 sjgh65i0 hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl gmql0nx0 gpro0wi8 lyjsgrqv']");
                        ligne += o.Text + "\n";

                        var titreAlbum = o.Text.Split(new string[] { "\r" },StringSplitOptions.RemoveEmptyEntries)[0];

                        if (urll.GetAttribute("href") == null || urll.GetAttribute("href") == "")
                            continue;

                        if (!dicourls.Keys.Contains(urll.GetAttribute("href")))
                        {
                            dicourls.Add(urll.GetAttribute("href"), titreAlbum);
                        }

                    }
                }
                catch
                {

                }

                //a partir d'un fichier

                //string[] lignes = File.ReadAllLines(pathToSave + "\\Parametres.txt");

                //foreach(string l in lignes)
                //{

                //}




                foreach(string u in dicourls.Keys)
                {
                    driver.Navigate().GoToUrl(u);
                    Thread.Sleep(5000);
                   
                    hauteur = 450;                   

                    ii = 1;

                    Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                    //imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                    titre = dicourls[u].Replace("<", "").Replace(">", "").Replace("?", "").Replace(":", "").Replace("'", "").Replace("|", "").Replace("\\", "").Replace("/", "").Replace("\"", "").Replace("*", "");

                    string extension = DateTime.Now.Ticks.ToString();

                    if (!Directory.Exists(pathToSave + @"\PAGES\" + titre + "-" + extension))
                        Directory.CreateDirectory(pathToSave + @"\PAGES\" + titre + "-" + extension);


                    //Save the screenshot
                    //imageScreenshott.SaveAsFile(pathToSave + @"\PAGES\"  + titre + "-" + DateTime.Now.Ticks + "\\Screenshot_" + ii++ + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                    //Thread.Sleep(100);


                    try
                    {
                        var imageDown = driver.FindElementByXPath("//div[@class='eg9m0zos ni8dbmo4 d2edcug0 cbu4d94t']");
                        //Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('j83agx80 cbu4d94t buofh1pr')[1].scrollHeight");

                        ReadOnlyCollection<IWebElement> resultats = (ReadOnlyCollection<IWebElement>)((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('eg9m0zos ni8dbmo4 d2edcug0 cbu4d94t')");

                        Object lastHeight = null;
                        int y = 0;
                        foreach (IWebElement el in resultats)
                        {
                            lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('eg9m0zos ni8dbmo4 d2edcug0 cbu4d94t')[" + y + "].scrollHeight");
                            if (lastHeight != null)
                                break;
                            y++;
                        }

                        //Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[1].scrollHeight");

                        innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                        innerHeightt = (long)innerHeight;
                        scroll = (long)innerHeight;
                        scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('eg9m0zos ni8dbmo4 d2edcug0 cbu4d94t')[" + y + "].scrollHeight");

                        scrollHeight = scrollHeight + scroll;


                        ////pour les captures d'écrans

                        //while (scrollHeight >= innerHeightt)
                        //{
                        //    imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                        //    //imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                        //    //Save the screenshot
                        //    imageScreenshott.SaveAsFile(pathToSave + @"\PAGES\" + titre + "-" + extension + "\\Screenshot_" + ii + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                        //    Thread.Sleep(100);

                        //    ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('eg9m0zos ni8dbmo4 d2edcug0 cbu4d94t')[" + y + "].scrollBy(0, " + hauteur + ");");
                        //    if ((scrollHeight - innerHeightt) < 200)
                        //    {
                        //        Thread.Sleep(5000);
                        //    }
                        //    else
                        //        Thread.Sleep(500);


                        //    scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('eg9m0zos ni8dbmo4 d2edcug0 cbu4d94t')[" + y + "].scrollHeight");
                        //    Thread.Sleep(2000);


                        //    if (scrollHeight <= innerHeightt)
                        //    {
                        //        ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('eg9m0zos ni8dbmo4 d2edcug0 cbu4d94t')[" + y + "].scrollBy(0, " + hauteur + ");");
                        //        Thread.Sleep(2000);
                        //        scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('eg9m0zos ni8dbmo4 d2edcug0 cbu4d94t')[" + y + "].scrollHeight");

                        //    }

                        //    scrollHeight = scrollHeight + scroll;
                        //    innerHeightt = innerHeightt + hauteur;
                        //    ii++;




                        //}


                        //pour le téléchargement de chaque image

                       
                        while (true)
                        {
                            //driver.execute_script('document.getElementById("viewport").scrollTop += 100')

                            ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('eg9m0zos ni8dbmo4 d2edcug0 cbu4d94t')[" + y + "].scrollTo(0, document.getElementsByClassName('eg9m0zos ni8dbmo4 d2edcug0 cbu4d94t')[" + y + "].scrollHeight)");
                            Thread.Sleep(2000);

                            Object newHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('eg9m0zos ni8dbmo4 d2edcug0 cbu4d94t')[" + y + "].scrollHeight");
                            if (newHeight.Equals(lastHeight))
                            {
                                break;
                            }
                            lastHeight = newHeight;
                        }

                        try
                        {
                            imageDown = driver.FindElementByXPath("//div[@class='eg9m0zos ni8dbmo4 d2edcug0 cbu4d94t']");

                            var liens = imageDown.FindElements(By.XPath(".//div[@class='jadejhlu l9j0dhe7 k4urcfbm']"));//imageDown.FindElements(By.XPath(".//div[@class='jadejhlu l9j0dhe7 k4urcfbm']"))[0].FindElement(By.TagName("a")).GetAttribute("href")
                            Object[] divs = liens.ToArray();

                            List<string> listeURLS = new List<string>();
                            foreach (OpenQA.Selenium.Remote.RemoteWebElement o in divs)
                            {
                                listeURLS.Add(o.FindElement(By.TagName("a")).GetAttribute("href"));
                            }

                            ii = 1;
                            foreach (string o in listeURLS)
                            {
                                string profile = o;


                                driver.Navigate().GoToUrl(profile);
                                Thread.Sleep(2000);

                                profile = driver.FindElementByXPath("//img[@class='gitj76qy r9f5tntg d2edcug0']").GetAttribute("src");

                                imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                                //imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                                //Save the screenshot
                                imageScreenshott.SaveAsFile(pathToSave + @"\PAGES\" + titre + "-" + extension + "\\Screenshot_" + ii + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                Thread.Sleep(100);

                                //using (var client = new WebClient())
                                //{


                                //    try

                                //    {

                                //        //client.DownloadFile(profile, pathToSave + "\\PicturesProfilesLikes\\" + ((ForGrid)dicoProff[profile]).Label.ToString() + "_" + dicoPicturess[profile] + ".jpg");
                                //        client.DownloadFile(profile, pathToSave + @"\PAGES\" + titre + "-" + extension + "\\Image_" + ii + ".jpg");
                                //        Thread.Sleep(500);

                                //    }
                                //    catch (Exception ex)
                                //    {
                                //        //MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT DE LA PHOTO DE PROFIL" + ex.Message + "\n" + pathToSave + "\\PicturesProfilesLikes\\" + ((ForGrid)dicoProff[profile]).Label.ToString() + "_" + dicoPicturess[profile]);
                                //        //return;
                                //    }



                                //}

                                //driver.Navigate().GoToUrl(u);
                                //Thread.Sleep(5000);

                                ii++;

                            }
                        }

                        catch
                        {

                        }


                        }
                    catch (Exception ex)
                    {

                    }
                }
                //try
                //{
                //    Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                //    int ii = 1;
                //    while (scrollHeight >= innerHeightt)
                //    {
                //        //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                //        //Thread.Sleep(1000);

                //        Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                //        imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                //        //Save the screenshot
                //        imageScreenshott.SaveAsFile(pathToSave + @"\PAGES\" + titre + "\\Screenshot_" + ii + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                //        Thread.Sleep(100);



                //        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                //        if ((scrollHeight - innerHeightt) < 200)
                //        {
                //            Thread.Sleep(5000);
                //        }
                //        else
                //            Thread.Sleep(500);


                //        scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
                //        Thread.Sleep(2000);


                //        if (scrollHeight <= innerHeightt)
                //        {
                //            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                //            Thread.Sleep(2000);
                //            scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                //        }

                //        scrollHeight = scrollHeight + scroll;
                //        innerHeightt = innerHeightt + hauteur;
                //        ii++;
                //    }
                //}
                //catch
                //{
                //    //e.printStackTrace();
                //}



            }
            catch
            {

            }

            backgroundWorker1.CancelAsync();
        }
        private void ScrollAliPage(string url, string titre)
        {

            string targetName = textBoxops.Text;
            string titrePage = "";
            string urlFriend = textBoxUSERNAMEFRIENDS.Text;
            string ID = "";
            //pour cacher fenetre DOS

            if (driver == null)
            {
                InitializeDriver();
                // 2. Go to the "Google" homepage
                driver.Navigate().GoToUrl("https://login.aliexpress.com/?return_url=https://fr.aliexpress.com/myaliexpress-link");

                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driver.FindElementById("fm-login-id");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUsernameURL.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driver.FindElementById("fm-login-password");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxpasswordURL.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driver.FindElementByXPath("//button[@class='fm-button']").Click();
                Thread.Sleep(2500);
                //searchButton.Click();

                //u_0_8
                //"menuBar']//*[@class='menuItem']"
                // 2. Go to the "Google" homepage
                driver.Navigate().GoToUrl("https://trade.aliexpress.com/orderList.htm?tracelog=ws_topbar");
                titrePage = driver.Title;
                Thread.Sleep(5000);
            }


            try
            {
                //page about -------------------------------------------------------------------------------------------------------------------------------------------------------------------------


                if (!Directory.Exists(pathToSave + @"\PAGES\" + titre))
                    Directory.CreateDirectory(pathToSave + @"\PAGES\" + titre);

                //if (urlFriend.Contains("id="))
                //{
                //    driver.Navigate().GoToUrl(url);
                //    Thread.Sleep(5000);
                //}
                //else
                //{
                //    driver.Navigate().GoToUrl(url);
                //    Thread.Sleep(5000);
                //}


                //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top

                //Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                //long innerHeightt = (long)innerHeight;
                //long scroll = (long)innerHeight;
                //long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                //scrollHeight = scrollHeight + scroll;
                //int hauteur = 450;

                int ii = 1;
                for (int i =60; i < 109; i++)
                {
                    var next = driver.FindElementById("gotoPageNum");
                    Thread.Sleep(500);
                    next.SendKeys(i.ToString());
                    Thread.Sleep(1000);

                    driver.FindElementById("btnGotoPageNum").Click();
                    Thread.Sleep(5000);

                    ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top

                    Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                    long innerHeightt = (long)innerHeight;
                    long scroll = (long)innerHeight;
                    long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                    scrollHeight = scrollHeight + scroll;
                    int hauteur = 450;

                try
                {
                    Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                    
                    while (scrollHeight >= innerHeightt)
                    {
                        //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                        //Thread.Sleep(1000);

                        Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                        imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                        //Save the screenshot
                        imageScreenshott.SaveAsFile(pathToSave + @"\PAGES\" + titre + "\\Screenshot_" + ii + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                        Thread.Sleep(100);



                        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                        if ((scrollHeight - innerHeightt) < 200)
                        {
                            Thread.Sleep(5000);
                        }
                        else
                            Thread.Sleep(500);


                        scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
                        Thread.Sleep(2000);
                        var test = driver.FindElementByXPath("//div[@class='ui-pagination-navi util-left']");


                        if (scrollHeight <= innerHeightt)
                        {
                            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                            Thread.Sleep(2000);
                            scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                        }

                        scrollHeight = scrollHeight + scroll;
                        innerHeightt = innerHeightt + hauteur;
                        ii++;
                    }

                        //var next = driver.FindElementById("gotoPageNum");
                        //Thread.Sleep(500);
                        //next.SendKeys(i.ToString());
                        //Thread.Sleep(1000);

                        //driver.FindElementById("btnGotoPageNum").Click();
                        //Thread.Sleep(5000);



                    }
                catch
                {
                    //e.printStackTrace();
                }

            }

            }
            catch
            {

            }

            backgroundWorker1.CancelAsync();
        }


        private void FindAllFriendsFromFacebook()
        {
            //IsANewThread();
             backgroundWorker1.ReportProgress(-90);

            
            string targetName = textBoxops.Text;
            string titrePage = "";
            string urlFriend = textBoxUSERNAMEFRIENDS.Text;
            string urlFollowers = textBoxUSERNAMEFRIENDS.Text;
            string ID = "";
            //pour cacher fenetre DOS

            if (driver == null)
            {
                InitializeDriver();
                // 2. Go to the "Google" homepage
                driver.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }

                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driver.FindElementById("email");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driver.FindElementById("pass");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driver.FindElementById("loginbutton").Click();
                Thread.Sleep(2500);
                //searchButton.Click();

                //u_0_8
                //"menuBar']//*[@class='menuItem']"
                // 2. Go to the "Google" homepage
                driver.Navigate().GoToUrl(urlFriend);
                titrePage = driver.Title;
                Thread.Sleep(5000);
            }
            
            System.Random rnd = new System.Random();

            driver.Navigate().GoToUrl(urlFriend);
            titrePage = driver.Title;
            Thread.Sleep(5000);

            if (!profilIsSet)
                GetProfileInformations(backgroundWorker1);

            try
            {
                if (!Directory.Exists(pathToSave + @"\FRIENDS\"))
                    Directory.CreateDirectory(pathToSave + @"\FRIENDS\");

                

                Thread.Sleep(5000);
            }
            catch (OpenQA.Selenium.NoSuchElementException ex)
            {

                try
                {
                    

                }
                catch (OpenQA.Selenium.NoSuchElementException exx)
                {
                    MessageBox.Show("PROBLEME AVEC L'IDENTIFIEUR DE CLASSE POUR LA PHOTO DE PROFIL" + Environment.NewLine + ex.Message);
                    return;
                }


            }



            try
            {
                

                using (var client = new WebClient())
                {

                  


                }
                if (urlFriend.Contains("id="))
                {
                    urlFriend = urlFriend + "&sk=friends&source_ref=pb_friends_tl";
                }
                else
                {
                    urlFriend = urlFriend + "/friends";
                }


                driver.Navigate().GoToUrl(urlFriend);
                //driver.Manage().Window.Maximize();
                Thread.Sleep(1500);
                //_5h60 _30f


                ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top

                Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                long innerHeightt = (long)innerHeight;
                long scroll = (long)innerHeight;
                long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                scrollHeight = scrollHeight + scroll;
                int hauteur = 450;

                IWebElement Element = driver.FindElementByXPath("//div[@class='_5h60 _30f']");
                //Element.FindElements(By.TagName("li"))[0].FindElements(By.TagName("a"))[0].GetAttribute("data-hovercard");


                //if (!Element.Text.ToLower().Contains("abonnés"))
                try
                {
                    Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                    int ii = 1;
                    while (scrollHeight >= innerHeightt)
                    {
                        //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                        //Thread.Sleep(1000);

                        Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                        imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                        //Save the screenshot
                        imageScreenshott.SaveAsFile(pathToSave + @"\FRIENDS\" + "_" + ii + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                        Thread.Sleep(100);



                        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                        if ((scrollHeight - innerHeightt) < 200)
                        {
                            Thread.Sleep(5000);
                        }
                        else
                            Thread.Sleep(2500);


                        scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
                        Thread.Sleep(2000);


                        if (scrollHeight <= innerHeightt)
                        {
                            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                            Thread.Sleep(2000);
                            scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                        }

                        scrollHeight = scrollHeight + scroll;
                        innerHeightt = innerHeightt + hauteur;
                        ii++;
                    }
                }
                catch
                {
                    //e.printStackTrace();
                }


                string codePage = driver.PageSource;

                using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\FRIENDS\\Friends.html", false))
                {
                    //if (File.Exists(saveFileDialog1.FileName))
                    //    File.Delete(saveFileDialog1.FileName);

                    file.Write(codePage);
                }

              
                //string codeFriends = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)imageDown).WrappedDriver).PageSource;
                string codeFriends = driver.PageSource;
               
                //IWebElement Elementt = driver.FindElementByXPath("_5h60 _30f']");
                
                
                IList<IWebElement> els = driver.FindElementsByXPath("//li[@class='_698']");
                //if (!Element.Text.ToLower().Contains("abonnés"))
                try
                {
                    Dictionary<string, ForGrid> dicoProff = new Dictionary<string, ForGrid>();
                    Dictionary<string, string> dicoPicturess = new Dictionary<string, string>();
                    foreach (IWebElement ell in els)
                    {
                        if (ell.GetAttribute("class") != "_698")
                            continue;
                            
                            IWebElement aa = ell.FindElement(By.TagName("a"));
                        
                            //d'abord l'url et l'id
                            string urll = aa.GetAttribute("href");

                            if (!urll.Contains("profile.php?id="))
                                urll = urll.Split('?')[0];
                            else
                                urll = urll = urll.Split('&')[0];

                            if (urll.Contains("#"))
                                continue;

                            string idd = aa.GetAttribute("data-hovercard");
                            if(idd == null && ell.GetAttribute("innerHTML").Contains("data-profileid="))
                                idd = ell.GetAttribute("innerHTML").Substring(ell.GetAttribute("innerHTML").IndexOf("data-profileid=\"") + 16).Split('"')[0];
                            else
                            if (idd.Contains("data-profileid=\""))
                                idd = idd.Substring(idd.IndexOf("data-profileid=\"") + 16).Split('"')[0];
                            else
                                idd = idd.Substring(idd.IndexOf("?id=") + 4).Split('&')[0];

                            string imageProff = "";
                            string labelProff = "";

                            try
                            {
                                //maintenant l'image
                                imageProff = aa.FindElement(By.TagName("img")).GetAttribute("src");
                                labelProff = aa.FindElement(By.TagName("img")).GetAttribute("aria-label");
                            }
                            catch
                            {
                                //maintenant l'image
                                imageProff = ell.FindElement(By.TagName("img")).GetAttribute("src");
                                labelProff = ell.FindElement(By.TagName("img")).GetAttribute("aria-label");
                            }

                            ForGrid forGrid = new ForGrid();
                            forGrid.Url = urll;
                            forGrid.Id = idd;
                            forGrid.Label = labelProff.Replace("<", "").Replace(">", "").Replace("?", "").Replace(":", "").Replace("'", "").Replace("|", "").Replace("\\", "").Replace("/", "").Replace("\"", ""); 

                        if (!dicoProff.ContainsKey(imageProff))
                                dicoProff.Add(imageProff, forGrid);

                            if (!dicoPicturess.ContainsKey(imageProff))
                                dicoPicturess.Add(imageProff, idd);
                        
                        
                    }

                        if (!Directory.Exists(pathToSave + "\\PicturesProfiles"))
                            Directory.CreateDirectory(pathToSave + "\\PicturesProfiles");

                        int count = 0;
                        int j = 0;
                        backgroundWorker1.ReportProgress(-1, dicoProff.Count);

                        foreach (string file in Directory.GetFiles(pathToSave + "\\PicturesProfiles"))
                        {
                        Process pro = new Process();
                        pro.StartInfo.UseShellExecute = false;
                        pro.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;
                        pro.StartInfo.CreateNoWindow = true;
                        pro.StartInfo.RedirectStandardOutput = true;
                        pro.StartInfo.FileName = "cmd.exe";
                        pro.StartInfo.Arguments = "/C del \"" + file;
                        pro.Start();
                        //Console.WriteLine(Process.StandardOutput.ReadToEnd());
                        pro.WaitForExit();
                        pro.Close();


                        //File.Delete(file);
                        }
                        Thread.Sleep(500);

                        if(dicoProff.Count > 0)
                        foreach (string profile in dicoProff.Keys)
                        {
                            using (var client = new WebClient())
                            {


                                try

                                {

                                    client.DownloadFile(profile, pathToSave + "\\PicturesProfiles\\" + ((ForGrid)dicoProff[profile]).Label.ToString() + "_" + dicoPicturess[profile] + ".jpg");
                                    Thread.Sleep(500);

                                }
                                catch (Exception ex)
                                {
                                    MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT DE LA PHOTO DE PROFIL");
                                    //return;
                                }



                            }


                            backgroundWorker1.ReportProgress(j);
                            Thread.Sleep(100);

                            ForGrid forGridd = dicoProff[profile];
                            backgroundWorker1.ReportProgress(-6, forGridd);
                            j++;
                        }




                }
                catch(Exception exx)
                {

                }

                /////////////////////////////////////////------------------------------------------------------ les followers
                ///
                if (urlFollowers.Contains("id="))
                {
                    urlFollowers = urlFollowers + "&sk=friends&source_ref=pb_friends_tl";
                }
                else
                {
                    urlFollowers = urlFollowers+ "/followers";
                }

                driver.Navigate().GoToUrl(urlFollowers);
                //driver.Manage().Window.Maximize();
                Thread.Sleep(1500);



                try
                {
                    Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                    int ii = 1;
                    while (scrollHeight >= innerHeightt)
                    {
                        //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                        //Thread.Sleep(1000);

                        Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                        imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                        //Save the screenshot
                        imageScreenshott.SaveAsFile(pathToSave + @"\FRIENDS\" + "_" + ii + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                        Thread.Sleep(100);



                        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                        if ((scrollHeight - innerHeightt) < 200)
                        {
                            Thread.Sleep(5000);
                        }
                        else
                            Thread.Sleep(2500);


                        scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
                        Thread.Sleep(2000);


                        if (scrollHeight <= innerHeightt)
                        {
                            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                            Thread.Sleep(2000);
                            scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                        }

                        scrollHeight = scrollHeight + scroll;
                        innerHeightt = innerHeightt + hauteur;
                        ii++;
                    }
                }
                catch
                {
                    //e.printStackTrace();
                }







                Element = driver.FindElementByXPath("//div[@class='followList']");
                //Element.FindElements(By.TagName("li"))[0].FindElements(By.TagName("a"))[0].GetAttribute("data-hovercard");
                els = Element.FindElements(By.TagName("li"));//[0].FindElements(By.TagName("a"));

                try
                {
                    Dictionary<string, ForGrid> dicoFollowers = new Dictionary<string, ForGrid>();
                    Dictionary<string, string> dicoPicturesFollowers = new Dictionary<string, string>();
                    foreach (IWebElement ell in els)
                    {
                        if (ell.GetAttribute("class") != "fbProfileBrowserListItem")
                            continue;

                        IWebElement aa = ell.FindElement(By.TagName("a"));

                        //d'abord l'url et l'id
                        string urll = aa.GetAttribute("href");

                        if (!urll.Contains("profile.php?id="))
                            urll = urll.Split('?')[0];
                        else
                            urll = urll = urll.Split('&')[0];

                        string idd = aa.GetAttribute("data-hovercard");

                        if (idd.Contains("data-profileid=\""))
                            idd = idd.Substring(idd.IndexOf("data-profileid=\"") + 16).Split('"')[0];
                        else
                            idd = idd.Substring(idd.IndexOf("?id=") + 4).Split('&')[0];

                        //maintenant l'image
                        string imageProff = aa.FindElement(By.TagName("img")).GetAttribute("src");
                        string labelProff = aa.FindElement(By.TagName("img")).GetAttribute("aria-label");

                        ForGrid forGrid = new ForGrid();
                        forGrid.Url = urll;
                        forGrid.Id = idd;
                        forGrid.Label = labelProff.Replace("<", "").Replace(">", "").Replace("?", "").Replace(":", "").Replace("'", "").Replace("|", "").Replace("\\", "").Replace("/", "").Replace("\"", "");

                        if (!dicoFollowers.ContainsKey(imageProff))
                            dicoFollowers.Add(imageProff, forGrid);

                        if (!dicoPicturesFollowers.ContainsKey(imageProff))
                            dicoPicturesFollowers.Add(imageProff, idd);


                    }

                    if (!Directory.Exists(pathToSave + "\\PicturesProfilesFollowers"))
                        Directory.CreateDirectory(pathToSave + "\\PicturesProfilesFollowers");

                    int count = 0;
                    int j = 0;
                    backgroundWorker1.ReportProgress(-1, 0);
                    backgroundWorker1.ReportProgress(-1, dicoFollowers.Count);

                    foreach (string file in Directory.GetFiles(pathToSave + "\\PicturesProfilesFollowers"))
                    {
                        File.Delete(file);
                    }
                    Thread.Sleep(500);

                    if(dicoFollowers.Count > 0)
                    foreach (string profile in dicoFollowers.Keys)
                    {
                        using (var client = new WebClient())
                        {


                            try

                            {

                                client.DownloadFile(profile, pathToSave + "\\PicturesProfilesFollowers\\" + ((ForGrid)dicoFollowers[profile]).Label.ToString() + "_" + dicoPicturesFollowers[profile] + ".jpg");
                                    Thread.Sleep(500);

                            }
                            catch (Exception ex)
                            {
                                MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT DE LA PHOTO DE PROFIL");
                                //return;
                            }



                        }


                        backgroundWorker1.ReportProgress(j);
                        Thread.Sleep(100);

                        ForGrid forGridd = dicoFollowers[profile];
                        backgroundWorker1.ReportProgress(-8, forGridd);
                        j++;
                    }




                }
                catch (Exception exx)
                {

                }



                //try
                //{
                //    string[] lignesFriends = codeFriends.Split(new string[] { "<li class=\"_698\">" }, StringSplitOptions.RemoveEmptyEntries);

                //    Dictionary<string, string> dicoProf = new Dictionary<string, string>();
                //    Dictionary<string, string> dicoPictures = new Dictionary<string, string>();
                //    foreach (string li in lignesFriends)
                //    {
                //        if (li.Contains("<!DOCTYPE html>") || li.StartsWith("<html"))
                //            continue;

                //        if (!li.Contains("<img class=\"_s0 _4ooo _1x2_ _1ve7 _rv img\""))
                //            continue;

                //        string tmp = li.Substring(li.IndexOf("<img class=\"_s0 _4ooo _1x2_ _1ve7 _rv img\"")).Split('>')[0];

                //        string labelProf = tmp.Substring(tmp.IndexOf("label=\"") + 7).Split('"')[0];
                //        string imageProf = tmp.Substring(tmp.IndexOf("src=\"") + 5).Split('"')[0].Replace("amp;", "");

                //        string idd = "";
                //        if (li.Contains("data-profileid=\""))
                //            idd = li.Substring(li.IndexOf("data-profileid=\"") + 16).Split('"')[0];
                //        else if (li.Contains("?id="))
                //            idd = li.Substring(li.IndexOf("?id=") + 4).Split('&')[0];

                //        if (!dicoProf.ContainsKey(imageProf))
                //            dicoProf.Add(imageProf, labelProf);

                //        if (!dicoPictures.ContainsKey(imageProf))
                //            dicoPictures.Add(imageProf, idd);
                //        //string[] lignesImage = codeFriends.Split(new string[] { "<li class=\"_698\">" }, StringSplitOptions.RemoveEmptyEntries);//<img class="_s0 _4ooo _1x2_ _1ve7 _rv img"
                //    }

                //    //maintenant on télécharge les images de profile des amis

                //    //label18.Visible = true;
                //    //backgroundWorker1.ReportProgress(-2);
                //    //Thread.Sleep(50);


                //    if (!Directory.Exists(pathToSave + @"\Facebook_Friends\" + targetName.ToUpper() + "\\PicturesProfiles"))
                //        Directory.CreateDirectory(pathToSave + @"\Facebook_Friends\" + targetName.ToUpper() + "\\PicturesProfiles");

                //    int count = 0;
                //    int j = 0;
                //    backgroundWorker1.ReportProgress(-1, dicoProf.Count);

                //    foreach (string file in Directory.GetFiles(pathToSave + @"\Facebook_Friends\" + targetName.ToUpper() + "\\PicturesProfiles"))
                //    {
                //        File.Delete(file);
                //    }
                //    Thread.Sleep(500);

                //    foreach (string profile in dicoProf.Keys)
                //    {
                //        using (var client = new WebClient())
                //        {


                //            try

                //            {

                //                client.DownloadFile(profile, pathToSave + "\\PicturesProfiles\\" + dicoProf[profile].ToString() + "_" + dicoPictures[profile] + ".jpg");


                //            }
                //            catch (Exception ex)
                //            {
                //                MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT DE LA PHOTO DE PROFIL");
                //                //return;
                //            }



                //        }


                //        backgroundWorker1.ReportProgress(j);
                //        Thread.Sleep(100);
                //        j++;
                //    }




                //}
                //catch
                //{

                //}



                //driver.Close();

                //string[] lignes = codeFriends.Split(new string[] { "<div class=\"fsl fwb fcb\">" }, StringSplitOptions.RemoveEmptyEntries);

                //string url = "";
                //string label = "";
                //string id = "";
                //string pathToPicture = "";

                ////progressBar1.Maximum = lignes.Count() - 1;
                //int i = 0;
                //foreach (string li in lignes)
                //{
                //    if (!li.StartsWith("<a href="))
                //        continue;

                //    url = li.Substring(li.IndexOf("<a href=\"") + 9).Split('"')[0].Replace("amp;", "");

                //    if (url == "#")
                //    {
                //        url = "désactivé";
                //        label = li.Substring(li.IndexOf("role=\"button\">") + 14).Split('<')[0];
                //    }
                //    else
                //        label = li.Substring(li.IndexOf("data-hovercard-prefer-more-content-show=\"1\">") + 44).Split('<')[0];

                //    if (label == "")
                //    {
                //        label = li.Substring(li.IndexOf("aria-owns=\"\">") + 13).Split('<')[0];//aria-owns="">
                //    }

                //    if (li.Contains("eng_tid&quot;:&quot;"))
                //    {
                //        id = li.Substring(li.IndexOf("eng_tid&quot;:&quot;") + 20).Split(new string[] { "&quot;" }, StringSplitOptions.None)[0];
                //    }


                //    if (!url.Contains("profile.php?id="))
                //        url = url.Split('?')[0];
                //    else
                //        url = url = url.Split('&')[0];

                //    //Bitmap imgg = FacebookAnalyzer.Properties.Resources.anonymous;
                //    ForGrid forGrid = new ForGrid();
                //    forGrid.Url = url;
                //    forGrid.Id = id;
                //    forGrid.Label = label;
                //    backgroundWorker1.ReportProgress(-6, forGrid);
                //    //dataGridView2.Rows.Add(imgg,url, label, id, "");



                //}


            }
            catch (OpenQA.Selenium.NoSuchElementException ex)
            {
                if (isElementPresent(driver, "_n3']"))
                {
                    var imageDown = driver.FindElementByXPath("//div[@class='_n3']");

                    string codePage = (String)((IJavaScriptExecutor)driver).ExecuteScript("return arguments[0].innerHTML;", imageDown);
                    //string codePage = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)imageDown).WrappedDriver).PageSource;
                    string codeImage = codePage.Substring(codePage.IndexOf("<img src=\"") + 10).Split(new string[] { " " }, StringSplitOptions.RemoveEmptyEntries)[0];

                    if (!codeImage.Contains("html><html"))
                    {
                        //string link = codeImage.Substring(codeImage.IndexOf("src=") + 4).Split(new string[] { "\"" }, StringSplitOptions.RemoveEmptyEntries)[0];
                        string link = codeImage.Split(new string[] { "\"" }, StringSplitOptions.RemoveEmptyEntries)[0];
                        link = link.Replace("\"", "").Replace("amp;", "");
                        codeImage = codeImage.Replace("\"", "").Replace("amp;", "");

                        using (var client = new WebClient())
                        {

                            if (!Directory.Exists(pathToSave + "\\PicturesProfiles"))
                                Directory.CreateDirectory(pathToSave + "\\PicturesProfiles");


                            if (File.Exists(pathToSave + "\\" + titrePage + ".jpg"))
                                File.Delete(pathToSave + "\\" + titrePage + ".jpg");

                            client.DownloadFile(link, pathToSave + "\\" + titrePage + ".jpg");
                            Thread.Sleep(5000);

                            // Sets up an image object to be displayed.
                            if (MyImage != null)
                            {
                                MyImage.Dispose();
                            }

                            backgroundWorker1.ReportProgress(-5, pathToSave + "\\" + titrePage + ".jpg");

                            
                        }
                    }

                    if (urlFriend.Contains("id="))
                    {
                        urlFriend = urlFriend + "&sk=friends&source_ref=pb_friends_tl";
                    }
                    else
                    {
                        urlFriend = urlFriend + "/friends";
                    }

                    driver.Navigate().GoToUrl(urlFriend);
                    //Thread.Sleep(5000);
                    //_5h60 _30f

                    while (!isElementPresent(driver))
                    {
                        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight)");
                        Thread.Sleep(1500);
                    }

                    string codeFriends = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)imageDown).WrappedDriver).PageSource;
                    //IWebElement Element = driver.FindElementByXPath("mbm_5vf sectionHeader _4khu']").Displayed;
                    //IWebElement Element = driver.FindElementByXPath("_5h60 _30f']");

                    try
                    {
                        string[] lignesFriends = codeFriends.Split(new string[] { "<li class=\"_698\">" }, StringSplitOptions.RemoveEmptyEntries);

                        Dictionary<string, string> dicoProf = new Dictionary<string, string>();
                        Dictionary<string, string> dicoPictures = new Dictionary<string, string>();
                        foreach (string li in lignesFriends)
                        {
                            if (li.Contains("<!DOCTYPE html>") || li.StartsWith("<html"))
                                continue;
                            string tmp = li.Substring(li.IndexOf("<img class=\"_s0 _4ooo _1x2_ _1ve7 _rv img\"")).Split('>')[0];
                            string labelProf = tmp.Substring(tmp.IndexOf("label=\"") + 7).Split('"')[0];
                            string imageProf = tmp.Substring(tmp.IndexOf("src=\"") + 5).Split('"')[0].Replace("amp;", "");
                            string idd = li.Substring(li.IndexOf("data-profileid=\"") + 16).Split('"')[0];

                            if (!dicoProf.ContainsKey(imageProf))
                                dicoProf.Add(imageProf, labelProf);

                            if (!dicoPictures.ContainsKey(imageProf))
                                dicoPictures.Add(imageProf, idd);
                            //string[] lignesImage = codeFriends.Split(new string[] { "<li class=\"_698\">" }, StringSplitOptions.RemoveEmptyEntries);//<img class="_s0 _4ooo _1x2_ _1ve7 _rv img"
                        }

                        //maintenant on télécharge les images de profile des amis
                        //backgroundWorker1.ReportProgress(-2);


                        if (!Directory.Exists(pathToSave + "\\PicturesProfiles"))
                            Directory.CreateDirectory(pathToSave + "\\PicturesProfiles");

                        int count = 0;
                        int j = 0;
                        backgroundWorker1.ReportProgress(-1, dicoProf.Count);

                        foreach (string file in Directory.GetFiles(pathToSave + "\\PicturesProfiles"))
                        {
                            File.Delete(file);
                        }
                        Thread.Sleep(500);

                        foreach (string profile in dicoProf.Keys)
                        {
                            using (var client = new WebClient())
                            {

                               
                                try
                                {
                                  
                                    client.DownloadFile(profile, pathToSave + "\\PicturesProfiles\\" + dicoProf[profile].ToString() + "_" + dicoPictures[profile] + ".jpg");
                                    
                                }
                                catch
                                {
                                    MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT DE LA PHOTO DE PROFIL");
                                    //return;
                                }



                            }

                            backgroundWorker1.ReportProgress(j);
                            Thread.Sleep(100);
                            j++;

                        }




                    }
                    catch
                    {

                    }

                    //This will scroll the page till the element is found		


                    //driver.Close();

                    string[] lignes = codeFriends.Split(new string[] { "<div class=\"fsl fwb fcb\">" }, StringSplitOptions.RemoveEmptyEntries);

                    string url = "";
                    string label = "";
                    string id = "";
                    int i = 0;

                    //progressBar1.Maximum = lignes.Count() - 1;
                    foreach (string li in lignes)
                    {
                        if (!li.StartsWith("<a href="))
                            continue;

                        url = li.Substring(li.IndexOf("<a href=\"") + 9).Split('"')[0].Replace("amp;", "");

                        if (url == "#")
                        {
                            url = "désactivé";
                            label = li.Substring(li.IndexOf("role=\"button\">") + 14).Split('<')[0];
                        }
                        else
                            label = li.Substring(li.IndexOf("data-hovercard-prefer-more-content-show=\"1\">") + 44).Split('<')[0];

                        if (label == "")
                        {
                            label = li.Substring(li.IndexOf("aria-owns=\"\">") + 13).Split('<')[0];//aria-owns="">
                        }

                        if (li.Contains("eng_tid&quot;:&quot;"))
                        {
                            id = li.Substring(li.IndexOf("eng_tid&quot;:&quot;") + 20).Split(new string[] { "&quot;" }, StringSplitOptions.None)[0];
                        }

                        if (url.Contains("?fref="))
                        {
                            url = url.Split('?')[0];
                        }
                        else
                        {
                            url = url.Split('&')[0];
                        }


                        ForGrid forGrid = new ForGrid();
                        forGrid.Url = url;
                        forGrid.Id = id;
                        forGrid.Label = label;
                        backgroundWorker1.ReportProgress(-7, forGrid);

                       

                    }



                }

               

                //backgroundWorkerFriends.ReportProgress(-3);

            }
            //}
            
            backgroundWorker1.ReportProgress(-100);
            Thread.Sleep(2000);

            backgroundWorker1.CancelAsync();
            
                        

        }
        private void FindAllFriendsFromNewFacebook()
        {
            //IsANewThread();
            backgroundWorker1.ReportProgress(-90);
            backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " recherche amis en cours");


            string targetName = textBoxops.Text;
            string titrePage = "";
            string urlFriend = textBoxUSERNAMEFRIENDS.Text;
            string urlFollowers = textBoxUSERNAMEFRIENDS.Text;
            string urlGroups = textBoxUSERNAMEFRIENDS.Text;
            string ID = "";
            //pour cacher fenetre DOS

            if (driver == null)
            {
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " initialisation driver");
                InitializeDriver();
                // 2. Go to the "Google" homepage

                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " connexion page facebook login");
                driver.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(2500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }

                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driver.FindElementById("email");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driver.FindElementById("pass");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driver.FindElementById("loginbutton").Click();
                Thread.Sleep(2500);
                //searchButton.Click();

                //u_0_8
                //"menuBar']//*[@class='menuItem']"
                // 2. Go to the "Google" homepage
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture de la page facebook du target");

                driver.Navigate().GoToUrl(urlFriend);
                titrePage = driver.Title;
                Thread.Sleep(5000);
            }

            System.Random rnd = new System.Random();

            backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture de la page facebook du target");
            driver.Navigate().GoToUrl(urlFriend);
            titrePage = driver.Title;
            Thread.Sleep(5000);

            if (!profilIsSet)
            {
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " scraping de l'ID et téléchargement de l'image profile du target");
                GetProfileInformations(backgroundWorker1);
            }


            try
            {
                if (!Directory.Exists(pathToSave + @"\FRIENDS\"))
                {
                    Directory.CreateDirectory(pathToSave + @"\FRIENDS\");
                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " création " + @"\FRIENDS\");
                }
                    

                


                Thread.Sleep(5000);
            }
            catch (OpenQA.Selenium.NoSuchElementException ex)
            {

                try
                {


                }
                catch (OpenQA.Selenium.NoSuchElementException exx)
                {
                    MessageBox.Show("PROBLEME AVEC L'IDENTIFIEUR DE CLASSE POUR LA PHOTO DE PROFIL" + Environment.NewLine + ex.Message);
                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " crash: " + ex.Message);

                    return;
                }


            }

            
                try
                {

                if (FRIENDS)
                {


                    if (urlFriend.Contains("id="))
                    {
                        urlFriend = urlFriend + "&sk=friends&source_ref=pb_friends_tl";
                    }
                    else
                    {
                        urlFriend = urlFriend + "/friends";
                    }

                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture de la page amis ");
                    driver.Navigate().GoToUrl(urlFriend);
                    //driver.Manage().Window.Maximize();
                    Thread.Sleep(1500);
                    //_5h60 _30f


                    ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top

                    Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                    long innerHeightt = (long)innerHeight;
                    long scroll = (long)innerHeight;
                    long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                    scrollHeight = scrollHeight + scroll;
                    int hauteur = 450;

                    //IWebElement Element = driver.FindElementByXPath("//div[@class='_5h60 _30f']");
                    //Element.FindElements(By.TagName("li"))[0].FindElements(By.TagName("a"))[0].GetAttribute("data-hovercard");


                    //if (!Element.Text.ToLower().Contains("abonnés"))
                    try
                    {
                        backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " scrolling de la page amis");
                        Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                        int ii = 1;
                        while (scrollHeight >= innerHeightt)
                        {
                            //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                            //Thread.Sleep(1000);

                            Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                            imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                            //Save the screenshot
                            imageScreenshott.SaveAsFile(pathToSave + @"\FRIENDS\" + "_" + ii + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                            Thread.Sleep(100);

                            backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " capture d'écran : " + @"\FRIENDS\" + "_" + ii + ".png");


                            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                            if ((scrollHeight - innerHeightt) < 200)
                            {
                                Thread.Sleep(2500);//5000
                            }
                            else
                                Thread.Sleep(2500);//2500


                            scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
                            Thread.Sleep(2000);//2000


                            if (scrollHeight <= innerHeightt)
                            {
                                ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                                Thread.Sleep(2000);//2000
                                scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                            }

                            scrollHeight = scrollHeight + scroll;
                            innerHeightt = innerHeightt + hauteur;
                            ii++;
                        }
                    }
                    catch
                    {
                        //e.printStackTrace();
                    }


                    string codePage = driver.PageSource;

                    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\FRIENDS\\Friends.html", false))
                    {
                        //if (File.Exists(saveFileDialog1.FileName))
                        //    File.Delete(saveFileDialog1.FileName);
                        backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " écriture fichier " + "\\FRIENDS\\Friends.html");
                        file.Write(codePage);
                    }


                    //string codeFriends = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)imageDown).WrappedDriver).PageSource;
                    string codeFriends = driver.PageSource;

                    //IWebElement Elementt = driver.FindElementByXPath("_5h60 _30f']");


                    //IList<IWebElement> els = driver.FindElementsByXPath("//div[@class='bp9cbjyn ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi n1f8r23x rq0escxv j83agx80 bi6gxh9e discj3wi hv4rvrfc ihqw7lf3 dati1w0a gfomwglr']");//i1fnvgqd lhclo0ds btwxx1t3 j83agx80
                    IWebElement elll = driver.FindElementByXPath("//div[@class='j83agx80 l9j0dhe7 k4urcfbm']");//j83agx80 btwxx1t3 lhclo0ds i1fnvgqd

                    //CETTE LIGNE PERMET DE RECUPERER LES NOMS QUE DANS LA SECTION AMIS
                    //IList<IWebElement> els = driver.FindElementsByXPath("//div[@class='dati1w0a ihqw7lf3 hv4rvrfc discj3wi']")[0].FindElements(By.XPath(".//div[@class='bp9cbjyn ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi n1f8r23x rq0escxv j83agx80 bi6gxh9e discj3wi hv4rvrfc ihqw7lf3 dati1w0a gfomwglr']"));

                    IList<IWebElement> els = elll.FindElements(By.XPath(".//div[@class='bp9cbjyn ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi n1f8r23x rq0escxv j83agx80 bi6gxh9e discj3wi hv4rvrfc ihqw7lf3 dati1w0a gfomwglr']"));


                    //IList<IWebElement> els = elll.FindElements(By.XPath("div[@class='bp9cbjyn ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi n1f8r23x rq0escxv j83agx80 bi6gxh9e discj3wi hv4rvrfc ihqw7lf3 dati1w0a gfomwglr']"));
                    //IList<IWebElement> els = elll.FindElements(By.XPath("//div[@class='bp9cbjyn ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi n1f8r23x rq0escxv j83agx80 bi6gxh9e discj3wi hv4rvrfc ihqw7lf3 dati1w0a gfomwglr']"));  //elll.FindElements(By.TagName("div"));

                    try
                    {
                        Dictionary<string, ForGrid> dicoProff = new Dictionary<string, ForGrid>();
                        Dictionary<string, string> dicoPicturess = new Dictionary<string, string>();
                        string tidd = "";

                        backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " scraping des amis : " + els.Count());
                        //int kk = 0;
                        foreach (IWebElement ell in els)
                        {
                            if (ell.GetAttribute("class") != "bp9cbjyn ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi n1f8r23x rq0escxv j83agx80 bi6gxh9e discj3wi hv4rvrfc ihqw7lf3 dati1w0a gfomwglr")
                                continue;
                            try
                            {
                                IWebElement aa = ell.FindElement(By.TagName("a"));
                                string urll = aa.GetAttribute("href");

                                if (!urll.Contains("profile.php?id="))
                                {
                                    urll = urll.Split('?')[0];

                                }

                                else
                                {
                                    urll = urll = urll.Split('&')[0];
                                    //tidd = urll.Substring(urll.IndexOf("profile.php?id=") + 15);
                                }


                                if (urll.Contains("#"))
                                    continue;


                                //d'abord l'url et l'id


                                //string idd = aa.GetAttribute("data-hovercard");
                                //if (idd == null && ell.GetAttribute("innerHTML").Contains("data-profileid="))
                                //    idd = ell.GetAttribute("innerHTML").Substring(ell.GetAttribute("innerHTML").IndexOf("data-profileid=\"") + 16).Split('"')[0];
                                //else
                                //if (idd.Contains("data-profileid=\""))
                                //    idd = idd.Substring(idd.IndexOf("data-profileid=\"") + 16).Split('"')[0];
                                //else
                                //    idd = idd.Substring(idd.IndexOf("?id=") + 4).Split('&')[0];

                                string imageProff = "";
                                string labelProff = "";


                                if (ell.Text.Contains("membres"))
                                    labelProff = "GP_";

                                //try
                                //{
                                //maintenant l'image
                                imageProff = aa.FindElement(By.TagName("img")).GetAttribute("src");
                                labelProff = labelProff + ell.Text.Split(new string[] { "\r" }, StringSplitOptions.RemoveEmptyEntries)[0];
                                //}
                                //catch
                                //{
                                ////maintenant l'image
                                //imageProff = ell.FindElement(By.TagName("img")).GetAttribute("src");
                                //labelProff = ell.FindElement(By.TagName("img")).GetAttribute("aria-label");
                                //}
                                //if (!urll.Contains("profile.php?id="))                            
                                //    tidd = GetFacebookID(urll, textBoxUSERNAME.Text, textBoxPASSWORD.Text);

                                ForGrid forGrid = new ForGrid();
                                forGrid.PathToPicture = imageProff;
                                forGrid.Url = urll;
                                forGrid.Id = imageProff.Substring(imageProff.IndexOf("_") + 1).Split('_')[0];
                                forGrid.Label = labelProff.Replace("<", "").Replace(">", "").Replace("?", "").Replace(":", "").Replace("'", "").Replace("|", "").Replace("\\", "").Replace("/", "").Replace("\"", "");


                                if (!dicoProff.ContainsKey(urll))
                                    dicoProff.Add(urll, forGrid);

                                if (!dicoPicturess.ContainsKey(urll))
                                    dicoPicturess.Add(urll, urll);


                                Analytics analy = new Analytics();
                                analy.Category = "FRIENDS";

                                //analy.PathToPicture = userNameTag + "_" + idTag + "_" + numTag + i + ".png";
                                try
                                {
                                    analy.Username = forGrid.Label;
                                    analy.Url = forGrid.Url;
                                    analy.PathToPicture = forGrid.PathToPicture;
                                    analy.PathToPicture = "\\PicturesProfiles\\" + forGrid.Label.ToString() + "_" + forGrid.Id + ".jpg";
                                }
                                catch
                                {

                                }


                                if (!Analytics.ContainsKey(analy.Category + ";" + analy.Username + ";" + analy.Url))
                                    Analytics.Add(analy.Category + ";" + analy.Username + ";" + analy.Url, analy);

                                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ajout ami :  " + forGrid.Label);


                            }
                            catch (Exception ex)
                            {
                                continue;
                            }
                            //kk++;
                        }

                        if (!Directory.Exists(pathToSave + "\\PicturesProfiles"))
                            Directory.CreateDirectory(pathToSave + "\\PicturesProfiles");

                        backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " création de " +  "\\PicturesProfiles");

                        int count = 0;
                        int j = 0;
                        backgroundWorker1.ReportProgress(-1, dicoProff.Count);

                        foreach (string file in Directory.GetFiles(pathToSave + "\\PicturesProfiles"))
                        {
                            File.Delete(file);
                        }
                        Thread.Sleep(500);

                        backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " téléchargement des images profile des amis : " + dicoProff.Count());
                        if (dicoProff.Count > 0)
                            foreach (ForGrid profile in dicoProff.Values)
                            {
                                using (var client = new WebClient())
                                {


                                    try

                                    {

                                        client.DownloadFile(profile.PathToPicture, pathToSave + "\\PicturesProfiles\\" + profile.Label.ToString() + "_" + profile.Id + ".jpg");
                                        Thread.Sleep(500);
                                        backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " téléchargement de : " + "\\PicturesProfiles\\" + profile.Label.ToString() + "_" + profile.Id + ".jpg");


                                    }
                                    catch (Exception ex)
                                    {
                                        //MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT DE LA PHOTO DE PROFIL");
                                        //return;
                                    }



                                }

                                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " téléchargement terminé pour : " + profile.Label.ToString());
                                backgroundWorker1.ReportProgress(j);
                                Thread.Sleep(100);

                                ForGrid forGridd = profile;
                                backgroundWorker1.ReportProgress(-6, forGridd);
                                j++;
                            }




                    }
                    catch (Exception exx)
                    {

                    }
                }
                

            //    if(FOLLOWERS)
            //    { 
            //    ///////////////////////////////////////------------------------------------------------------ les followers

            //    if (urlFollowers.Contains("id="))
            //    {
            //        urlFollowers = urlFollowers + "&sk=followers";
            //    }
            //    else
            //    {
            //        urlFollowers = urlFollowers + "/followers";
            //    }

            //    driver.Navigate().GoToUrl(urlFollowers);
            //    //driver.Manage().Window.Maximize();
            //    Thread.Sleep(1500);

            //    //try
            //    //{
            //    //    if (driver.FindElementsByXPath("//img[@class='hu5pjgll']")[0].GetAttribute("src").Contains("404"))
            //    //    {
            //    //        backgroundWorker1.ReportProgress(-100);
            //    //        Thread.Sleep(2000);

            //    //        backgroundWorker1.CancelAsync();

            //    //        return;
            //    //    }

            //    //}
            //    //catch
            //    //{

            //    //}

            //        if (isElementPresent(driver, "//img[@class='hu5pjgll']"))
            //        {
            //            backgroundWorker1.ReportProgress(-100);
            //            Thread.Sleep(2000);

            //            backgroundWorker1.CancelAsync();


            //            return;
            //        }

            //    ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top

            //    Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
            //    long innerHeightt = (long)innerHeight;
            //    long scroll = (long)innerHeight;
            //    long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

            //    scrollHeight = scrollHeight + scroll;
            //    int hauteur = 450;

            //    //IWebElement Element = driver.FindElementByXPath("//div[@class='_5h60 _30f']");
            //    //Element.FindElements(By.TagName("li"))[0].FindElements(By.TagName("a"))[0].GetAttribute("data-hovercard");


            //    //if (!Element.Text.ToLower().Contains("abonnés"))
            //    try
            //    {
            //        Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
            //        int ii = 1;
            //        while (scrollHeight >= innerHeightt)
            //        {
            //            //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
            //            //Thread.Sleep(1000);

            //            Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
            //            imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

            //            //Save the screenshot
            //            imageScreenshott.SaveAsFile(pathToSave + @"\FRIENDS\" + "_" + ii + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
            //            Thread.Sleep(100);



            //            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
            //            if ((scrollHeight - innerHeightt) < 200)
            //            {
            //                Thread.Sleep(5000);
            //            }
            //            else
            //                Thread.Sleep(2500);


            //            scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
            //            Thread.Sleep(2000);


            //            if (scrollHeight <= innerHeightt)
            //            {
            //                ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
            //                Thread.Sleep(2000);
            //                scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

            //            }

            //            scrollHeight = scrollHeight + scroll;
            //            innerHeightt = innerHeightt + hauteur;
            //            ii++;
            //        }
            //    }
            //    catch
            //    {
            //        //e.printStackTrace();
            //    }

            //        //IList<IWebElement> els = driver.FindElementsByXPath("//div[@class='bp9cbjyn ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi n1f8r23x rq0escxv j83agx80 bi6gxh9e discj3wi hv4rvrfc ihqw7lf3 dati1w0a gfomwglr']");//i1fnvgqd lhclo0ds btwxx1t3 j83agx80
            //        IList<IWebElement> els = driver.FindElementsByXPath("//div[@class='dati1w0a ihqw7lf3 hv4rvrfc discj3wi']")[0].FindElements(By.XPath(".//div[@class='bp9cbjyn ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi n1f8r23x rq0escxv j83agx80 bi6gxh9e discj3wi hv4rvrfc ihqw7lf3 dati1w0a gfomwglr']"));

            //    //elll = driver.FindElementByXPath("//div[@class='j83agx80 l9j0dhe7 k4urcfbm']");
            //    //IList<IWebElement> els = elll.FindElements(By.XPath("div[@class='bp9cbjyn ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi n1f8r23x rq0escxv j83agx80 bi6gxh9e discj3wi hv4rvrfc ihqw7lf3 dati1w0a gfomwglr']"));
            //    //els = elll.FindElements(By.XPath("//div[@class='bp9cbjyn ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi n1f8r23x rq0escxv j83agx80 bi6gxh9e discj3wi hv4rvrfc ihqw7lf3 dati1w0a gfomwglr']"));  //elll.FindElements(By.TagName("div"));
            //    //if (!Element.Text.ToLower().Contains("abonnés"))
            //    try
            //    {
            //        Dictionary<string, ForGrid> dicoProff = new Dictionary<string, ForGrid>();
            //        Dictionary<string, string> dicoPicturess = new Dictionary<string, string>();
            //        foreach (IWebElement ell in els)
            //        {
            //            if (ell.GetAttribute("class") != "bp9cbjyn ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi n1f8r23x rq0escxv j83agx80 bi6gxh9e discj3wi hv4rvrfc ihqw7lf3 dati1w0a gfomwglr")
            //                continue;
            //            try
            //            {
            //                IWebElement aa = ell.FindElement(By.TagName("a"));
            //                string urll = aa.GetAttribute("href");

            //                if (!urll.Contains("profile.php?id="))
            //                    urll = urll.Split('?')[0];
            //                else
            //                    urll = urll = urll.Split('&')[0];

            //                if (urll.Contains("#"))
            //                    continue;


            //                //d'abord l'url et l'id


            //                //string idd = aa.GetAttribute("data-hovercard");
            //                //if (idd == null && ell.GetAttribute("innerHTML").Contains("data-profileid="))
            //                //    idd = ell.GetAttribute("innerHTML").Substring(ell.GetAttribute("innerHTML").IndexOf("data-profileid=\"") + 16).Split('"')[0];
            //                //else
            //                //if (idd.Contains("data-profileid=\""))
            //                //    idd = idd.Substring(idd.IndexOf("data-profileid=\"") + 16).Split('"')[0];
            //                //else
            //                //    idd = idd.Substring(idd.IndexOf("?id=") + 4).Split('&')[0];

            //                string imageProff = "";
            //                string labelProff = "";

            //                if (ell.Text.Contains("membres"))
            //                    labelProff = "GP_";

            //                //try
            //                //{
            //                //maintenant l'image
            //                imageProff = aa.FindElement(By.TagName("img")).GetAttribute("src");
            //                labelProff = labelProff + ell.Text.Split(new string[] { "\r" }, StringSplitOptions.RemoveEmptyEntries)[0];
            //                //}
            //                //catch
            //                //{
            //                ////maintenant l'image
            //                //imageProff = ell.FindElement(By.TagName("img")).GetAttribute("src");
            //                //labelProff = ell.FindElement(By.TagName("img")).GetAttribute("aria-label");
            //                //}

            //                ForGrid forGrid = new ForGrid();
            //                forGrid.Url = urll;
            //                forGrid.Id = imageProff.Substring(imageProff.IndexOf("_") + 1).Split('_')[0];
            //                forGrid.Label = labelProff.Replace("<", "").Replace(">", "").Replace("?", "").Replace(":", "").Replace("'", "").Replace("|", "").Replace("\\", "").Replace("/", "").Replace("\"", "");

            //                if (!dicoProff.ContainsKey(imageProff))
            //                    dicoProff.Add(imageProff, forGrid);

            //                if (!dicoPicturess.ContainsKey(imageProff))
            //                    dicoPicturess.Add(imageProff, urll);

            //                    Analytics analy = new Analytics();
            //                    analy.Category = "FOLLOWERS";

            //                    //analy.PathToPicture = userNameTag + "_" + idTag + "_" + numTag + i + ".png";
            //                    try
            //                    {
            //                        analy.Username = forGrid.Label;
            //                        analy.Url = forGrid.Url;
            //                        analy.PathToPicture = forGrid.PathToPicture;
            //                        analy.PathToPicture = "\\PicturesProfiles\\" + forGrid.Label.ToString() + "_" + forGrid.Id + ".jpg";
            //                    }
            //                    catch
            //                    {

            //                    }


            //                    if (!Analytics.ContainsKey(analy.Category + ";" + analy.Username + ";" + analy.Url))
            //                        Analytics.Add(analy.Category + ";" + analy.Username + ";" + analy.Url, analy);
            //                }
            //            catch
            //            {
            //                continue;
            //            }

            //        }

            //        if (!Directory.Exists(pathToSave + "\\PicturesProfilesFollowers"))
            //            Directory.CreateDirectory(pathToSave + "\\PicturesProfilesFollowers");

            //        int count = 0;
            //        int j = 0;
            //        backgroundWorker1.ReportProgress(-1, dicoProff.Count);

            //        foreach (string file in Directory.GetFiles(pathToSave + "\\PicturesProfilesFollowers"))
            //        {
            //            File.Delete(file);
            //        }
            //        Thread.Sleep(500);

            //        if (dicoProff.Count > 0)
            //            foreach (string profile in dicoProff.Keys)
            //            {
            //                using (var client = new WebClient())
            //                {


            //                    try

            //                    {

            //                        client.DownloadFile(profile, pathToSave + "\\PicturesProfilesFollowers\\" + ((ForGrid)dicoProff[profile]).Label.ToString() + "_" + ((ForGrid)dicoProff[profile]).Id + ".jpg");
            //                        Thread.Sleep(500);

            //                    }
            //                    catch (Exception ex)
            //                    {
            //                        //MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT DE LA PHOTO DE PROFIL");
            //                        //return;
            //                    }



            //                }


            //                backgroundWorker1.ReportProgress(j);
            //                Thread.Sleep(100);

            //                ForGrid forGridd = dicoProff[profile];
            //                backgroundWorker1.ReportProgress(-8, forGridd);
            //                j++;
            //            }




            //    }
            //    catch (Exception exx)
            //    {

            //    }
            //}
            //    //----------------------------------------------------fin Followers


                //if (GROUPS)
                //{
                //    ///////////////////////////////////////------------------------------------------------------ les groupes

                //    if (urlGroups.Contains("id="))
                //    {
                //        urlGroups = urlGroups + "&sk=rgroups";
                //    }
                //    else
                //    {
                //        urlGroups = urlGroups + "/groups";
                //    }

                //    driver.Navigate().GoToUrl(urlGroups);
                //    //driver.Manage().Window.Maximize();
                //    Thread.Sleep(1500);

                //    //try
                //    //{
                //    //    if (driver.FindElementsByXPath("//img[@class='hu5pjgll']")[0].GetAttribute("src").Contains("404"))
                //    //    {
                //    //        backgroundWorker1.ReportProgress(-100);
                //    //        Thread.Sleep(2000);

                //    //        backgroundWorker1.CancelAsync();

                //    //        return;
                //    //    }

                //    //}
                //    //catch
                //    //{

                //    //}

                //    if (isElementPresent(driver, "//img[@class='hu5pjgll']"))
                //    {
                //        backgroundWorker1.ReportProgress(-100);
                //        Thread.Sleep(2000);

                //        backgroundWorker1.CancelAsync();


                //        return;
                //    }

                //    if (!Directory.Exists(pathToSave + "\\GROUPS"))
                //        Directory.CreateDirectory(pathToSave + "\\GROUPS");

                //    ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top

                //    Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                //    long innerHeightt = (long)innerHeight;
                //    long scroll = (long)innerHeight;
                //    long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                //    scrollHeight = scrollHeight + scroll;
                //    int hauteur = 450;

                //    //IWebElement Element = driver.FindElementByXPath("//div[@class='_5h60 _30f']");
                //    //Element.FindElements(By.TagName("li"))[0].FindElements(By.TagName("a"))[0].GetAttribute("data-hovercard");


                //    //if (!Element.Text.ToLower().Contains("abonnés"))
                //    try
                //    {
                //        Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                //        int ii = 1;
                //        while (scrollHeight >= innerHeightt)
                //        {
                //            //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                //            //Thread.Sleep(1000);

                //            Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                //            imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                //            //Save the screenshot
                //            imageScreenshott.SaveAsFile(pathToSave + @"\GROUPS\" + "_" + ii + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                //            Thread.Sleep(100);



                //            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                //            if ((scrollHeight - innerHeightt) < 200)
                //            {
                //                Thread.Sleep(5000);
                //            }
                //            else
                //                Thread.Sleep(2500);


                //            scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
                //            Thread.Sleep(2000);


                //            if (scrollHeight <= innerHeightt)
                //            {
                //                ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                //                Thread.Sleep(2000);
                //                scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                //            }

                //            scrollHeight = scrollHeight + scroll;
                //            innerHeightt = innerHeightt + hauteur;
                //            ii++;
                //        }
                //    }
                //    catch
                //    {
                //        //e.printStackTrace();
                //    }

                //    //IList<IWebElement> els = driver.FindElementsByXPath("//div[@class='bp9cbjyn ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi n1f8r23x rq0escxv j83agx80 bi6gxh9e discj3wi hv4rvrfc ihqw7lf3 dati1w0a gfomwglr']");//i1fnvgqd lhclo0ds btwxx1t3 j83agx80
                //    IList<IWebElement> els = driver.FindElementsByXPath("//div[@class='dati1w0a ihqw7lf3 hv4rvrfc discj3wi']")[0].FindElements(By.XPath(".//div[@class='bp9cbjyn ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi n1f8r23x rq0escxv j83agx80 bi6gxh9e discj3wi hv4rvrfc ihqw7lf3 dati1w0a gfomwglr']"));

                //    //elll = driver.FindElementByXPath("//div[@class='j83agx80 l9j0dhe7 k4urcfbm']");
                //    //IList<IWebElement> els = elll.FindElements(By.XPath("div[@class='bp9cbjyn ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi n1f8r23x rq0escxv j83agx80 bi6gxh9e discj3wi hv4rvrfc ihqw7lf3 dati1w0a gfomwglr']"));
                //    //els = elll.FindElements(By.XPath("//div[@class='bp9cbjyn ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi n1f8r23x rq0escxv j83agx80 bi6gxh9e discj3wi hv4rvrfc ihqw7lf3 dati1w0a gfomwglr']"));  //elll.FindElements(By.TagName("div"));
                //    //if (!Element.Text.ToLower().Contains("abonnés"))
                //    try
                //    {
                //        Dictionary<string, ForGrid> dicoProff = new Dictionary<string, ForGrid>();
                //        Dictionary<string, string> dicoPicturess = new Dictionary<string, string>();
                //        foreach (IWebElement ell in els)
                //        {
                //            if (ell.GetAttribute("class") != "bp9cbjyn ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi n1f8r23x rq0escxv j83agx80 bi6gxh9e discj3wi hv4rvrfc ihqw7lf3 dati1w0a gfomwglr")
                //                continue;
                //            try
                //            {
                //                IWebElement aa = ell.FindElement(By.TagName("a"));
                //                string urll = aa.GetAttribute("href");

                //                if (!urll.Contains("profile.php?id="))
                //                    urll = urll.Split('?')[0];
                //                else
                //                    urll = urll = urll.Split('&')[0];

                //                if (urll.Contains("#"))
                //                    continue;


                //                //d'abord l'url et l'id


                //                //string idd = aa.GetAttribute("data-hovercard");
                //                //if (idd == null && ell.GetAttribute("innerHTML").Contains("data-profileid="))
                //                //    idd = ell.GetAttribute("innerHTML").Substring(ell.GetAttribute("innerHTML").IndexOf("data-profileid=\"") + 16).Split('"')[0];
                //                //else
                //                //if (idd.Contains("data-profileid=\""))
                //                //    idd = idd.Substring(idd.IndexOf("data-profileid=\"") + 16).Split('"')[0];
                //                //else
                //                //    idd = idd.Substring(idd.IndexOf("?id=") + 4).Split('&')[0];

                //                string imageProff = "";
                //                string labelProff = "";

                //                //if (ell.Text.Contains("membres"))
                //                //    labelProff = "GP_";

                //                //try
                //                //{
                //                //maintenant l'image
                //                imageProff = aa.FindElement(By.TagName("img")).GetAttribute("src");
                //                labelProff = labelProff + ell.Text.Split(new string[] { "\r" }, StringSplitOptions.RemoveEmptyEntries)[0];
                //                //}
                //                //catch
                //                //{
                //                ////maintenant l'image
                //                //imageProff = ell.FindElement(By.TagName("img")).GetAttribute("src");
                //                //labelProff = ell.FindElement(By.TagName("img")).GetAttribute("aria-label");
                //                //}

                //                ForGrid forGrid = new ForGrid();
                //                forGrid.Url = urll;
                //                forGrid.Id = imageProff.Substring(imageProff.IndexOf("_") + 1).Split('_')[0];
                //                forGrid.Label = labelProff.Replace("<", "").Replace(">", "").Replace("?", "").Replace(":", "").Replace("'", "").Replace("|", "").Replace("\\", "").Replace("/", "").Replace("\"", "");

                //                if (!dicoProff.ContainsKey(imageProff))
                //                    dicoProff.Add(imageProff, forGrid);

                //                if (!dicoPicturess.ContainsKey(imageProff))
                //                    dicoPicturess.Add(imageProff, urll);

                //                Analytics analy = new Analytics();
                //                analy.Category = "GROUPS";

                //                //analy.PathToPicture = userNameTag + "_" + idTag + "_" + numTag + i + ".png";
                //                try
                //                {
                //                    analy.Username = forGrid.Label;
                //                    analy.Url = forGrid.Url;
                //                    analy.PathToPicture = forGrid.PathToPicture;
                //                    analy.PathToPicture = "\\PicturesProfiles\\" + forGrid.Label.ToString() + "_" + forGrid.Id + ".jpg";
                //                }
                //                catch
                //                {

                //                }


                //                if (!Analytics.ContainsKey(analy.Category + ";" + analy.Username + ";" + analy.Url))
                //                    Analytics.Add(analy.Category + ";" + analy.Username + ";" + analy.Url, analy);
                //            }
                //            catch
                //            {
                //                continue;
                //            }

                //        }

                //        if (!Directory.Exists(pathToSave + "\\PicturesProfilesGroups"))
                //            Directory.CreateDirectory(pathToSave + "\\PicturesProfilesGroups");



                //        int count = 0;
                //        int j = 0;
                //        backgroundWorker1.ReportProgress(-1, dicoProff.Count);

                //        foreach (string file in Directory.GetFiles(pathToSave + "\\PicturesProfilesGroups"))
                //        {
                //            File.Delete(file);
                //        }
                //        Thread.Sleep(500);

                //        if (dicoProff.Count > 0)
                //            foreach (string profile in dicoProff.Keys)
                //            {
                //                using (var client = new WebClient())
                //                {


                //                    try

                //                    {

                //                        client.DownloadFile(profile, pathToSave + "\\PicturesProfilesGroups\\" + ((ForGrid)dicoProff[profile]).Label.ToString() + "_" + ((ForGrid)dicoProff[profile]).Id + ".jpg");
                //                        Thread.Sleep(500);

                //                    }
                //                    catch (Exception ex)
                //                    {
                //                        //MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT DE LA PHOTO DE PROFIL");
                //                        //return;
                //                    }



                //                }


                //                backgroundWorker1.ReportProgress(j);
                //                Thread.Sleep(100);

                //                ForGrid forGridd = dicoProff[profile];
                //                backgroundWorker1.ReportProgress(-9, forGridd);
                //                j++;
                //            }




                //    }
                //    catch (Exception exx)
                //    {

                //    }

                //}


















                try
                {
                    //Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                    //int ii = 1;
                    //while (scrollHeight >= innerHeightt)
                    //{
                    //    //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                    //    //Thread.Sleep(1000);

                    //    Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                    //    imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                    //    //Save the screenshot
                    //    imageScreenshott.SaveAsFile(pathToSave + @"\FRIENDS\" + "_" + ii + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                    //    Thread.Sleep(100);



                    //    ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                    //    if ((scrollHeight - innerHeightt) < 200)
                    //    {
                    //        Thread.Sleep(5000);
                    //    }
                    //    else
                    //        Thread.Sleep(2500);


                    //    scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
                    //    Thread.Sleep(2000);


                    //    if (scrollHeight <= innerHeightt)
                    //    {
                    //        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                    //        Thread.Sleep(2000);
                    //        scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                    //    }

                    //    scrollHeight = scrollHeight + scroll;
                    //    innerHeightt = innerHeightt + hauteur;
                    //    ii++;
                    //}
                }
                catch
                {
                    //e.printStackTrace();
                }







                //Element = driver.FindElementByXPath("//div[@class='followList']");
                ////Element.FindElements(By.TagName("li"))[0].FindElements(By.TagName("a"))[0].GetAttribute("data-hovercard");
                //els = Element.FindElements(By.TagName("li"));//[0].FindElements(By.TagName("a"));

                //try
                //{
                //    Dictionary<string, ForGrid> dicoFollowers = new Dictionary<string, ForGrid>();
                //    Dictionary<string, string> dicoPicturesFollowers = new Dictionary<string, string>();
                //    foreach (IWebElement ell in els)
                //    {
                //        if (ell.GetAttribute("class") != "fbProfileBrowserListItem")
                //            continue;

                //        IWebElement aa = ell.FindElement(By.TagName("a"));

                //        //d'abord l'url et l'id
                //        string urll = aa.GetAttribute("href");

                //        if (!urll.Contains("profile.php?id="))
                //            urll = urll.Split('?')[0];
                //        else
                //            urll = urll = urll.Split('&')[0];

                //        string idd = aa.GetAttribute("data-hovercard");

                //        if (idd.Contains("data-profileid=\""))
                //            idd = idd.Substring(idd.IndexOf("data-profileid=\"") + 16).Split('"')[0];
                //        else
                //            idd = idd.Substring(idd.IndexOf("?id=") + 4).Split('&')[0];

                //        //maintenant l'image
                //        string imageProff = aa.FindElement(By.TagName("img")).GetAttribute("src");
                //        string labelProff = aa.FindElement(By.TagName("img")).GetAttribute("aria-label");

                //        ForGrid forGrid = new ForGrid();
                //        forGrid.Url = urll;
                //        forGrid.Id = idd;
                //        forGrid.Label = labelProff.Replace("<", "").Replace(">", "").Replace("?", "").Replace(":", "").Replace("'", "").Replace("|", "").Replace("\\", "").Replace("/", "").Replace("\"", "");

                //        if (!dicoFollowers.ContainsKey(imageProff))
                //            dicoFollowers.Add(imageProff, forGrid);

                //        if (!dicoPicturesFollowers.ContainsKey(imageProff))
                //            dicoPicturesFollowers.Add(imageProff, idd);


                //    }

                //    if (!Directory.Exists(pathToSave + "\\PicturesProfilesFollowers"))
                //        Directory.CreateDirectory(pathToSave + "\\PicturesProfilesFollowers");

                //    int count = 0;
                //    int j = 0;
                //    backgroundWorker1.ReportProgress(-1, 0);
                //    backgroundWorker1.ReportProgress(-1, dicoFollowers.Count);

                //    foreach (string file in Directory.GetFiles(pathToSave + "\\PicturesProfilesFollowers"))
                //    {
                //        File.Delete(file);
                //    }
                //    Thread.Sleep(500);

                //    if (dicoFollowers.Count > 0)
                //        foreach (string profile in dicoFollowers.Keys)
                //        {
                //            using (var client = new WebClient())
                //            {


                //                try

                //                {

                //                    client.DownloadFile(profile, pathToSave + "\\PicturesProfilesFollowers\\" + ((ForGrid)dicoFollowers[profile]).Label.ToString() + "_" + dicoPicturesFollowers[profile] + ".jpg");
                //                    Thread.Sleep(500);

                //                }
                //                catch (Exception ex)
                //                {
                //                    MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT DE LA PHOTO DE PROFIL");
                //                    //return;
                //                }



                //            }


                //            backgroundWorker1.ReportProgress(j);
                //            Thread.Sleep(100);

                //            ForGrid forGridd = dicoFollowers[profile];
                //            backgroundWorker1.ReportProgress(-8, forGridd);
                //            j++;
                //        }




                //}
                //catch (Exception exx)
                //{

                //}



                //try
                //{
                //    string[] lignesFriends = codeFriends.Split(new string[] { "<li class=\"_698\">" }, StringSplitOptions.RemoveEmptyEntries);

                //    Dictionary<string, string> dicoProf = new Dictionary<string, string>();
                //    Dictionary<string, string> dicoPictures = new Dictionary<string, string>();
                //    foreach (string li in lignesFriends)
                //    {
                //        if (li.Contains("<!DOCTYPE html>") || li.StartsWith("<html"))
                //            continue;

                //        if (!li.Contains("<img class=\"_s0 _4ooo _1x2_ _1ve7 _rv img\""))
                //            continue;

                //        string tmp = li.Substring(li.IndexOf("<img class=\"_s0 _4ooo _1x2_ _1ve7 _rv img\"")).Split('>')[0];

                //        string labelProf = tmp.Substring(tmp.IndexOf("label=\"") + 7).Split('"')[0];
                //        string imageProf = tmp.Substring(tmp.IndexOf("src=\"") + 5).Split('"')[0].Replace("amp;", "");

                //        string idd = "";
                //        if (li.Contains("data-profileid=\""))
                //            idd = li.Substring(li.IndexOf("data-profileid=\"") + 16).Split('"')[0];
                //        else if (li.Contains("?id="))
                //            idd = li.Substring(li.IndexOf("?id=") + 4).Split('&')[0];

                //        if (!dicoProf.ContainsKey(imageProf))
                //            dicoProf.Add(imageProf, labelProf);

                //        if (!dicoPictures.ContainsKey(imageProf))
                //            dicoPictures.Add(imageProf, idd);
                //        //string[] lignesImage = codeFriends.Split(new string[] { "<li class=\"_698\">" }, StringSplitOptions.RemoveEmptyEntries);//<img class="_s0 _4ooo _1x2_ _1ve7 _rv img"
                //    }

                //    //maintenant on télécharge les images de profile des amis

                //    //label18.Visible = true;
                //    //backgroundWorker1.ReportProgress(-2);
                //    //Thread.Sleep(50);


                //    if (!Directory.Exists(pathToSave + @"\Facebook_Friends\" + targetName.ToUpper() + "\\PicturesProfiles"))
                //        Directory.CreateDirectory(pathToSave + @"\Facebook_Friends\" + targetName.ToUpper() + "\\PicturesProfiles");

                //    int count = 0;
                //    int j = 0;
                //    backgroundWorker1.ReportProgress(-1, dicoProf.Count);

                //    foreach (string file in Directory.GetFiles(pathToSave + @"\Facebook_Friends\" + targetName.ToUpper() + "\\PicturesProfiles"))
                //    {
                //        File.Delete(file);
                //    }
                //    Thread.Sleep(500);

                //    foreach (string profile in dicoProf.Keys)
                //    {
                //        using (var client = new WebClient())
                //        {


                //            try

                //            {

                //                client.DownloadFile(profile, pathToSave + "\\PicturesProfiles\\" + dicoProf[profile].ToString() + "_" + dicoPictures[profile] + ".jpg");


                //            }
                //            catch (Exception ex)
                //            {
                //                MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT DE LA PHOTO DE PROFIL");
                //                //return;
                //            }



                //        }


                //        backgroundWorker1.ReportProgress(j);
                //        Thread.Sleep(100);
                //        j++;
                //    }




                //}
                //catch
                //{

                //}



                //driver.Close();

                //string[] lignes = codeFriends.Split(new string[] { "<div class=\"fsl fwb fcb\">" }, StringSplitOptions.RemoveEmptyEntries);

                //string url = "";
                //string label = "";
                //string id = "";
                //string pathToPicture = "";

                ////progressBar1.Maximum = lignes.Count() - 1;
                //int i = 0;
                //foreach (string li in lignes)
                //{
                //    if (!li.StartsWith("<a href="))
                //        continue;

                //    url = li.Substring(li.IndexOf("<a href=\"") + 9).Split('"')[0].Replace("amp;", "");

                //    if (url == "#")
                //    {
                //        url = "désactivé";
                //        label = li.Substring(li.IndexOf("role=\"button\">") + 14).Split('<')[0];
                //    }
                //    else
                //        label = li.Substring(li.IndexOf("data-hovercard-prefer-more-content-show=\"1\">") + 44).Split('<')[0];

                //    if (label == "")
                //    {
                //        label = li.Substring(li.IndexOf("aria-owns=\"\">") + 13).Split('<')[0];//aria-owns="">
                //    }

                //    if (li.Contains("eng_tid&quot;:&quot;"))
                //    {
                //        id = li.Substring(li.IndexOf("eng_tid&quot;:&quot;") + 20).Split(new string[] { "&quot;" }, StringSplitOptions.None)[0];
                //    }


                //    if (!url.Contains("profile.php?id="))
                //        url = url.Split('?')[0];
                //    else
                //        url = url = url.Split('&')[0];

                //    //Bitmap imgg = FacebookAnalyzer.Properties.Resources.anonymous;
                //    ForGrid forGrid = new ForGrid();
                //    forGrid.Url = url;
                //    forGrid.Id = id;
                //    forGrid.Label = label;
                //    backgroundWorker1.ReportProgress(-6, forGrid);
                //    //dataGridView2.Rows.Add(imgg,url, label, id, "");



                //}


            }
            catch (OpenQA.Selenium.NoSuchElementException ex)
            {
                if (isElementPresent(driver, "_n3']"))
                {
                    var imageDown = driver.FindElementByXPath("//div[@class='_n3']");

                    string codePage = (String)((IJavaScriptExecutor)driver).ExecuteScript("return arguments[0].innerHTML;", imageDown);
                    //string codePage = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)imageDown).WrappedDriver).PageSource;
                    string codeImage = codePage.Substring(codePage.IndexOf("<img src=\"") + 10).Split(new string[] { " " }, StringSplitOptions.RemoveEmptyEntries)[0];

                    if (!codeImage.Contains("html><html"))
                    {
                        //string link = codeImage.Substring(codeImage.IndexOf("src=") + 4).Split(new string[] { "\"" }, StringSplitOptions.RemoveEmptyEntries)[0];
                        string link = codeImage.Split(new string[] { "\"" }, StringSplitOptions.RemoveEmptyEntries)[0];
                        link = link.Replace("\"", "").Replace("amp;", "");
                        codeImage = codeImage.Replace("\"", "").Replace("amp;", "");

                        using (var client = new WebClient())
                        {

                            if (!Directory.Exists(pathToSave + "\\PicturesProfiles"))
                                Directory.CreateDirectory(pathToSave + "\\PicturesProfiles");


                            if (File.Exists(pathToSave + "\\" + titrePage + ".jpg"))
                                File.Delete(pathToSave + "\\" + titrePage + ".jpg");

                            client.DownloadFile(link, pathToSave + "\\" + titrePage + ".jpg");
                            Thread.Sleep(5000);

                            // Sets up an image object to be displayed.
                            if (MyImage != null)
                            {
                                MyImage.Dispose();
                            }

                            backgroundWorker1.ReportProgress(-5, pathToSave + "\\" + titrePage + ".jpg");


                        }
                    }

                    if (urlFriend.Contains("id="))
                    {
                        urlFriend = urlFriend + "&sk=friends&source_ref=pb_friends_tl";
                    }
                    else
                    {
                        urlFriend = urlFriend + "/friends";
                    }

                    driver.Navigate().GoToUrl(urlFriend);
                    //Thread.Sleep(5000);
                    //_5h60 _30f

                    while (!isElementPresent(driver))
                    {
                        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight)");
                        Thread.Sleep(1500);
                    }

                    string codeFriends = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)imageDown).WrappedDriver).PageSource;
                    //IWebElement Element = driver.FindElementByXPath("mbm_5vf sectionHeader _4khu']").Displayed;
                    //IWebElement Element = driver.FindElementByXPath("_5h60 _30f']");

                    try
                    {
                        string[] lignesFriends = codeFriends.Split(new string[] { "<li class=\"_698\">" }, StringSplitOptions.RemoveEmptyEntries);

                        Dictionary<string, string> dicoProf = new Dictionary<string, string>();
                        Dictionary<string, string> dicoPictures = new Dictionary<string, string>();
                        foreach (string li in lignesFriends)
                        {
                            if (li.Contains("<!DOCTYPE html>") || li.StartsWith("<html"))
                                continue;
                            string tmp = li.Substring(li.IndexOf("<img class=\"_s0 _4ooo _1x2_ _1ve7 _rv img\"")).Split('>')[0];
                            string labelProf = tmp.Substring(tmp.IndexOf("label=\"") + 7).Split('"')[0];
                            string imageProf = tmp.Substring(tmp.IndexOf("src=\"") + 5).Split('"')[0].Replace("amp;", "");
                            string idd = li.Substring(li.IndexOf("data-profileid=\"") + 16).Split('"')[0];

                            if (!dicoProf.ContainsKey(imageProf))
                                dicoProf.Add(imageProf, labelProf);

                            if (!dicoPictures.ContainsKey(imageProf))
                                dicoPictures.Add(imageProf, idd);
                            //string[] lignesImage = codeFriends.Split(new string[] { "<li class=\"_698\">" }, StringSplitOptions.RemoveEmptyEntries);//<img class="_s0 _4ooo _1x2_ _1ve7 _rv img"
                        }

                        //maintenant on télécharge les images de profile des amis
                        //backgroundWorker1.ReportProgress(-2);


                        if (!Directory.Exists(pathToSave + "\\PicturesProfiles"))
                            Directory.CreateDirectory(pathToSave + "\\PicturesProfiles");

                        int count = 0;
                        int j = 0;
                        backgroundWorker1.ReportProgress(-1, dicoProf.Count);

                        foreach (string file in Directory.GetFiles(pathToSave + "\\PicturesProfiles"))
                        {
                            File.Delete(file);
                        }
                        Thread.Sleep(500);

                        foreach (string profile in dicoProf.Keys)
                        {
                            using (var client = new WebClient())
                            {


                                try
                                {

                                    client.DownloadFile(profile, pathToSave + "\\PicturesProfiles\\" + dicoProf[profile].ToString() + "_" + dicoPictures[profile] + ".jpg");

                                }
                                catch
                                {
                                    MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT DE LA PHOTO DE PROFIL");
                                    //return;
                                }



                            }

                            backgroundWorker1.ReportProgress(j);
                            Thread.Sleep(100);
                            j++;

                        }




                    }
                    catch
                    {

                    }

                    //This will scroll the page till the element is found		


                    //driver.Close();

                    string[] lignes = codeFriends.Split(new string[] { "<div class=\"fsl fwb fcb\">" }, StringSplitOptions.RemoveEmptyEntries);

                    string url = "";
                    string label = "";
                    string id = "";
                    int i = 0;

                    //progressBar1.Maximum = lignes.Count() - 1;
                    foreach (string li in lignes)
                    {
                        if (!li.StartsWith("<a href="))
                            continue;

                        url = li.Substring(li.IndexOf("<a href=\"") + 9).Split('"')[0].Replace("amp;", "");

                        if (url == "#")
                        {
                            url = "désactivé";
                            label = li.Substring(li.IndexOf("role=\"button\">") + 14).Split('<')[0];
                        }
                        else
                            label = li.Substring(li.IndexOf("data-hovercard-prefer-more-content-show=\"1\">") + 44).Split('<')[0];

                        if (label == "")
                        {
                            label = li.Substring(li.IndexOf("aria-owns=\"\">") + 13).Split('<')[0];//aria-owns="">
                        }

                        if (li.Contains("eng_tid&quot;:&quot;"))
                        {
                            id = li.Substring(li.IndexOf("eng_tid&quot;:&quot;") + 20).Split(new string[] { "&quot;" }, StringSplitOptions.None)[0];
                        }

                        if (url.Contains("?fref="))
                        {
                            url = url.Split('?')[0];
                        }
                        else
                        {
                            url = url.Split('&')[0];
                        }


                        ForGrid forGrid = new ForGrid();
                        forGrid.Url = url;
                        forGrid.Id = id;
                        forGrid.Label = label;
                        backgroundWorker1.ReportProgress(-7, forGrid);



                    }



                }



                //backgroundWorkerFriends.ReportProgress(-3);

            }
            //}


            backgroundWorker1.ReportProgress(-100);
            backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " fin scraping des amis");
            Thread.Sleep(2000);

            backgroundWorker1.CancelAsync();



        }

        private void FindAllMapFromNewFacebook()
        {
            //IsANewThread();
            backgroundWorker1.ReportProgress(-90);
            backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " début du scraping des lieux");



            string targetName = textBoxops.Text;
            string titrePage = "";
            string urlFriend = textBoxUSERNAMEFRIENDS.Text;
            string urlFollowers = textBoxUSERNAMEFRIENDS.Text;
            string ID = "";
            //pour cacher fenetre DOS

            if (driver == null)
            {
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " initialisation du driver");
                InitializeDriver();
                // 2. Go to the "Google" homepage
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture de la page facebook login ");
                driver.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }

                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driver.FindElementById("email");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driver.FindElementById("pass");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driver.FindElementById("loginbutton").Click();
                Thread.Sleep(2500);
                //searchButton.Click();

                //u_0_8
                //"menuBar']//*[@class='menuItem']"
                // 2. Go to the "Google" homepage
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture de la page du profil ");
                driver.Navigate().GoToUrl(urlFriend);
                titrePage = driver.Title;
                Thread.Sleep(5000);
            }

            System.Random rnd = new System.Random();

            driver.Navigate().GoToUrl(urlFriend);
            titrePage = driver.Title;
            Thread.Sleep(5000);

            if (!profilIsSet)
            {
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " informations du profil ");

                GetProfileInformations(backgroundWorker1);
            }
                

            try
            {
                if (!Directory.Exists(pathToSave + @"\MAP\"))
                {
                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " création de " + @"\MAP\");
                    Directory.CreateDirectory(pathToSave + @"\MAP\");
                }
                    



                Thread.Sleep(5000);
            }
            catch (OpenQA.Selenium.NoSuchElementException ex)
            {

                try
                {


                }
                catch (OpenQA.Selenium.NoSuchElementException exx)
                {
                    MessageBox.Show("PROBLEME AVEC L'IDENTIFIEUR DE CLASSE POUR LA PHOTO DE PROFIL" + Environment.NewLine + ex.Message);
                    return;
                }


            }



            try
            {


                if (urlFriend.Contains("id="))
                {
                    urlFriend = urlFriend + "&sk=map";
                }
                else
                {
                    urlFriend = urlFriend + "/map";
                }

                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture de la page des lieux ");
                driver.Navigate().GoToUrl(urlFriend);
                //driver.Manage().Window.Maximize();
                Thread.Sleep(1500);
                //_5h60 _30f


                if (isElementPresent(driver, "//img[@class='hu5pjgll']"))
                {
                    backgroundWorker1.ReportProgress(-6666);
                    Thread.Sleep(2000);

                    backgroundWorker1.CancelAsync();
                    return;
                }

                ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top

                Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                long innerHeightt = (long)innerHeight;
                long scroll = (long)innerHeight;
                long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                scrollHeight = scrollHeight + scroll;
                int hauteur = 450;

                //IWebElement Element = driver.FindElementByXPath("//div[@class='_5h60 _30f']");
                //Element.FindElements(By.TagName("li"))[0].FindElements(By.TagName("a"))[0].GetAttribute("data-hovercard");


                //if (!Element.Text.ToLower().Contains("abonnés"))
                try
                {
                    Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                    int ii = 1;
                    while (scrollHeight >= innerHeightt)
                    {
                        //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                        //Thread.Sleep(1000);

                        Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                        imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                        //Save the screenshot
                        imageScreenshott.SaveAsFile(pathToSave + @"\MAP\" + "_" + ii + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                        Thread.Sleep(100);
                        backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " capture d'écran " + @"\MAP\" + "_" + ii + ".png");



                        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                        if ((scrollHeight - innerHeightt) < 200)
                        {
                            Thread.Sleep(5000);
                        }
                        else
                            Thread.Sleep(2500);


                        scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
                        Thread.Sleep(2000);


                        if (scrollHeight <= innerHeightt)
                        {
                            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                            Thread.Sleep(2000);
                            scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                        }

                        scrollHeight = scrollHeight + scroll;
                        innerHeightt = innerHeightt + hauteur;
                        ii++;
                    }
                }
                catch
                {
                    //e.printStackTrace();
                }


                string codePage = driver.PageSource;

                using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\MAP\\Map.html", false))
                {
                    //if (File.Exists(saveFileDialog1.FileName))
                    //    File.Delete(saveFileDialog1.FileName);
                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " création de " + "\\MAP\\Map.html");

                    file.Write(codePage);
                }


                //string codeFriends = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)imageDown).WrappedDriver).PageSource;
                string codeFriends = driver.PageSource;

                //IWebElement Elementt = driver.FindElementByXPath("_5h60 _30f']");


                //IList<IWebElement> els = driver.FindElementsByXPath("//div[@class='bp9cbjyn ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi n1f8r23x rq0escxv j83agx80 bi6gxh9e discj3wi hv4rvrfc ihqw7lf3 dati1w0a gfomwglr']");//i1fnvgqd lhclo0ds btwxx1t3 j83agx80
                IWebElement elll = driver.FindElementByXPath("//div[@class='j83agx80 l9j0dhe7 k4urcfbm']");

                if (elll.Text.ToLower().Contains("rien"))
                {
                    backgroundWorker1.ReportProgress(-6666);
                    Thread.Sleep(2000);

                    backgroundWorker1.CancelAsync();
                    return;
                }
                    

                //CETTE LIGNE PERMET DE RECUPERER LES NOMS QUE DANS LA SECTION AMIS
                IList<IWebElement> els = driver.FindElementsByXPath("//div[@class='dati1w0a ihqw7lf3 hv4rvrfc discj3wi']")[0].FindElements(By.XPath(".//div[@class='bp9cbjyn ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi n1f8r23x rq0escxv j83agx80 bi6gxh9e discj3wi hv4rvrfc ihqw7lf3 dati1w0a gfomwglr']"));
                //IList<IWebElement> els = elll.FindElements(By.XPath("div[@class='bp9cbjyn ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi n1f8r23x rq0escxv j83agx80 bi6gxh9e discj3wi hv4rvrfc ihqw7lf3 dati1w0a gfomwglr']"));
                //IList<IWebElement> els = elll.FindElements(By.XPath("//div[@class='bp9cbjyn ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi n1f8r23x rq0escxv j83agx80 bi6gxh9e discj3wi hv4rvrfc ihqw7lf3 dati1w0a gfomwglr']"));  //elll.FindElements(By.TagName("div"));

                try
                {
                    Dictionary<string, ForGrid> dicoProff = new Dictionary<string, ForGrid>();
                    Dictionary<string, string> dicoPicturess = new Dictionary<string, string>();
                    foreach (IWebElement ell in els)
                    {
                        if (ell.GetAttribute("class") != "bp9cbjyn ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi n1f8r23x rq0escxv j83agx80 bi6gxh9e discj3wi hv4rvrfc ihqw7lf3 dati1w0a gfomwglr")
                            continue;
                        try
                        {
                            IWebElement aa = ell.FindElement(By.TagName("a"));
                            string urll = aa.GetAttribute("href");

                            if (!urll.Contains("profile.php?id="))
                                urll = urll.Split('?')[0];
                            else
                                urll = urll = urll.Split('&')[0];

                            if (urll.Contains("#"))
                                continue;
                            
                           

                            string imageProff = "";
                            string labelProff = "";

                            if (ell.Text.Contains("membres"))
                                labelProff = "GP_";

                            //try
                            //{
                            //maintenant l'image
                            imageProff = aa.FindElement(By.TagName("img")).GetAttribute("src");
                            labelProff = labelProff + ell.Text.Split(new string[] { "\r" }, StringSplitOptions.RemoveEmptyEntries)[0];
                            //}
                            //catch
                            //{
                            ////maintenant l'image
                            //imageProff = ell.FindElement(By.TagName("img")).GetAttribute("src");
                            //labelProff = ell.FindElement(By.TagName("img")).GetAttribute("aria-label");
                            //}

                            ForGrid forGrid = new ForGrid();
                            forGrid.Url = urll;

                            string idTmp = "";
                            if (imageProff.Contains("external"))
                            {
                                idTmp = urll.Substring(urll.LastIndexOf("/") + 1);
                            }
                            else
                            {
                                idTmp = imageProff.Substring(imageProff.IndexOf("_") + 1).Split('_')[0];
                            }


                            if(idTmp == "") 
                                idTmp = "999999";

                            forGrid.Id = idTmp;
                            //forGrid.Id = imageProff.Substring(imageProff.IndexOf("_") + 1).Split('_')[0];
                            forGrid.Label = labelProff.Replace("<", "").Replace(">", "").Replace("?", "").Replace(":", "").Replace("'", "").Replace("|", "").Replace("\\", "").Replace("/", "").Replace("\"", "");
                            forGrid.Comments = ell.Text.Replace("\r\n"," ").Replace("\n"," ");
                            

                            if (!dicoProff.ContainsKey(imageProff))
                                dicoProff.Add(imageProff, forGrid);

                            if (!dicoPicturess.ContainsKey(imageProff))
                                dicoPicturess.Add(imageProff, imageProff);
                        }
                        catch
                        {
                            continue;
                        }

                    }

                    if (!Directory.Exists(pathToSave + "\\MapProfiles"))
                    {
                        backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " création de " + "\\MapProfiles");
                        Directory.CreateDirectory(pathToSave + "\\MapProfiles");
                    }
                    

                    int count = 0;
                    int j = 0;
                    backgroundWorker1.ReportProgress(-1, dicoProff.Count);

                    foreach (string file in Directory.GetFiles(pathToSave + "\\MapProfiles"))
                    {
                        File.Delete(file);
                    }
                    Thread.Sleep(500);

                    if (dicoProff.Count > 0)
                        foreach (string profile in dicoProff.Keys)
                        {
                            using (var client = new WebClient())
                            {


                                try

                                {

                                    client.DownloadFile(profile, pathToSave + "\\MapProfiles\\" + ((ForGrid)dicoProff[profile]).Label.ToString() + "_" + ((ForGrid)dicoProff[profile]).Id + ".jpg");
                                    Thread.Sleep(500);
                                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " téléchargement de " + "\\MapProfiles\\" + ((ForGrid)dicoProff[profile]).Label.ToString() + "_" + ((ForGrid)dicoProff[profile]).Id + ".jpg");


                                }
                                catch (Exception ex)
                                {
                                    //MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT DE LA PHOTO DE PROFIL");
                                    //return;
                                }



                            }


                            backgroundWorker1.ReportProgress(j);
                            Thread.Sleep(100);

                            ForGrid forGridd = dicoProff[profile];
                            backgroundWorker1.ReportProgress(-666, forGridd);
                            j++;
                        }




                }
                catch (Exception exx)
                {

                }

               


            }
            catch (OpenQA.Selenium.NoSuchElementException ex)
            {


            }
            //}

            backgroundWorker1.ReportProgress(-6666);
            Thread.Sleep(2000);

            backgroundWorker1.CancelAsync();



        }
        private void FindFriendsForTesting()
        {

            //pour cacher fenetre DOS
            var driverService = ChromeDriverService.CreateDefaultService();
            driverService.HideCommandPromptWindow = true;
            // progressBarfriends.Visible = true;

            //var driver = new ChromeDriver(driverService, new ChromeOptions());

            //System.Diagnostics.Process.Start(filepath);
            ChromeOptions chromeOptions = new ChromeOptions();
            chromeOptions.AddArguments("--disable-notifications");
            System.Random rnd = new System.Random();

            backgroundWorker1.ReportProgress(-90);


            string targetName = textBoxops.Text;
            string titrePage = "";
            string urlFriend = textBoxUSERNAMEFRIENDS.Text;
            string urlFollowers = textBoxUSERNAMEFRIENDS.Text;
            string ID = "";
            //pour cacher fenetre DOS

            if (driver == null)
            {
                InitializeDriver();
                // 2. Go to the "Google" homepage
                driver.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }

                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driver.FindElementById("email");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driver.FindElementById("pass");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driver.FindElementById("loginbutton").Click();
                Thread.Sleep(2500);
                //searchButton.Click();

                //u_0_8
                //"menuBar']//*[@class='menuItem']"
                // 2. Go to the "Google" homepage

                if (urlFriend.Contains("id="))
                {
                    urlFriend = urlFriend + "&sk=friends&source_ref=pb_friends_tl";
                }
                else
                {
                    urlFriend = urlFriend + "/friends";
                }


                driver.Navigate().GoToUrl(urlFriend);
                titrePage = driver.Title;
                Thread.Sleep(5000);
            }

            try
                {

                    IWebElement element = driver.FindElement(By.XPath("//*[@id=\"mount_0_0\"]"));////*[@id="page_content_inner"]/div/div/div[3]/div
                    IList<IWebElement> elements = element.FindElements(By.TagName("div"));////*[@id="dataTables-bittorrent_paginate"]

                    int i = 0;
                    int hauteur = 400;

                    IWebElement pp = driver.FindElement(By.XPath("//*[@id=\"mount_0_0\"]"));
                    Object lastHeight = ((OpenQA.Selenium.Remote.RemoteWebElement)pp).Size.Height;
                    //Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                    Dictionary<string, string> elemnts = new Dictionary<string, string>();

                    foreach (IWebElement ell in elements)
                    {
                        pp = ell.FindElement(By.XPath("//div[@class='i1fnvgqd lhclo0ds btwxx1t3 j83agx80']"));
                        break;


                    }
                    while (true)
                    {

                        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0," + hauteur + ");");
                        Thread.Sleep(2000);

                        IList<IWebElement> el = pp.FindElements(By.TagName("a"));
                        foreach (IWebElement ll in el)
                        {
                            string tentation = ll.ToString();
                            string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                            if (elemnts.ContainsKey(idd))
                                continue;
                            else
                                elemnts.Add(idd, idd);

                            string texte = ll.GetAttribute("innerHTML");
                            string href = ll.GetAttribute("href");


                        }

                        Object newHeight = ((OpenQA.Selenium.Remote.RemoteWebElement)pp).Size.Height;
                        if (newHeight.Equals(lastHeight))
                        {
                            MessageBox.Show("nbre amis : " + elemnts.Count());
                            break;

                        }
                        lastHeight = newHeight;

                        hauteur += 800;



                    }



                }
                catch (OpenQA.Selenium.NoSuchElementException ex)
                {

                   // driver.Quit();

                }




                //driver.Close();



            //}

        }


        private void FindAllLikesFromFacebook()
        {
            //IsANewThread();
            backgroundWorker1.ReportProgress(-90);


            string targetName = textBoxops.Text;
            string titrePage = "";
            string urlFriend = textBoxUSERNAMEFRIENDS.Text;
            string urlFollowers = textBoxUSERNAMEFRIENDS.Text;
            string ID = "";
            //pour cacher fenetre DOS

            if (driver == null)
            {
                InitializeDriver();
                // 2. Go to the "Google" homepage
                driver.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }

                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driver.FindElementById("email");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driver.FindElementById("pass");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driver.FindElementById("loginbutton").Click();
                Thread.Sleep(2500);
                //searchButton.Click();

                //u_0_8
                //"menuBar']//*[@class='menuItem']"
                // 2. Go to the "Google" homepage
                driver.Navigate().GoToUrl(urlFriend);
                titrePage = driver.Title;
                Thread.Sleep(5000);
            }

            System.Random rnd = new System.Random();

            driver.Navigate().GoToUrl(urlFriend);
            titrePage = driver.Title;
            Thread.Sleep(5000);

            if (!profilIsSet)
                GetProfileInformations(backgroundWorker1);

            try
            {
                if (!Directory.Exists(pathToSave + @"\LIKES\"))
                    Directory.CreateDirectory(pathToSave + @"\LIKES\");



                Thread.Sleep(5000);
            }
            catch (OpenQA.Selenium.NoSuchElementException ex)
            {

                try
                {


                }
                catch (OpenQA.Selenium.NoSuchElementException exx)
                {
                    MessageBox.Show("PROBLEME AVEC L'IDENTIFIEUR DE CLASSE POUR LA PHOTO DE PROFIL" + Environment.NewLine + ex.Message);
                    return;
                }


            }



            try
            {


                using (var client = new WebClient())
                {




                }
                if (urlFriend.Contains("id="))
                {
                    urlFriend = urlFriend + "&sk=likes";
                }
                else
                {
                    urlFriend = urlFriend + "/likes";
                }


                driver.Navigate().GoToUrl(urlFriend);
                //driver.Manage().Window.Maximize();
                Thread.Sleep(1500);
                //_5h60 _30f


                ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top

                Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                long innerHeightt = (long)innerHeight;
                long scroll = (long)innerHeight;
                long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                scrollHeight = scrollHeight + scroll;
                int hauteur = 450;

                IWebElement Element = driver.FindElementById("timeline-medley");
                //Element.FindElements(By.TagName("li"))[0].FindElements(By.TagName("a"))[0].GetAttribute("data-hovercard");


                //if (!Element.Text.ToLower().Contains("abonnés"))
                try
                {
                    Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                    int ii = 1;
                    while (scrollHeight >= innerHeightt)
                    {
                        //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                        //Thread.Sleep(1000);

                        Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                        imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                        //Save the screenshot
                        imageScreenshott.SaveAsFile(pathToSave + @"\LIKES\" + "_" + ii + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                        Thread.Sleep(100);



                        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                        if ((scrollHeight - innerHeightt) < 200)
                        {
                            Thread.Sleep(5000);
                        }
                        else
                            Thread.Sleep(2500);


                        scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
                        Thread.Sleep(2000);


                        if (scrollHeight <= innerHeightt)
                        {
                            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                            Thread.Sleep(2000);
                            scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                        }

                        scrollHeight = scrollHeight + scroll;
                        innerHeightt = innerHeightt + hauteur;
                        ii++;
                    }
                }
                catch
                {
                    //e.printStackTrace();
                }


                string codePage = driver.PageSource;

                using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\LIKES\\Likes.html", false))
                {
                    //if (File.Exists(saveFileDialog1.FileName))
                    //    File.Delete(saveFileDialog1.FileName);

                    file.Write(codePage);
                }


                //string codeFriends = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)imageDown).WrappedDriver).PageSource;
                string codeFriends = driver.PageSource;

                //IWebElement Elementt = driver.FindElementByXPath("_5h60 _30f']");


                IList<IWebElement> els = driver.FindElementsByXPath("//li[@class='_5rz _5k3a _5rz3 _153f']");
                //if (!Element.Text.ToLower().Contains("abonnés"))
                try
                {
                    Dictionary<string, ForGrid> dicoProff = new Dictionary<string, ForGrid>();
                    Dictionary<string, string> dicoPicturess = new Dictionary<string, string>();
                    foreach (IWebElement ell in els)
                    {
                        //if (ell.GetAttribute("class") != "_698")
                        //    continue;

                        IWebElement aa = ell.FindElement(By.TagName("a"));

                        //d'abord l'url et l'id
                        string urll = aa.GetAttribute("href");

                        if (!urll.Contains("profile.php?id="))
                            urll = urll.Split('?')[0];
                        else
                            urll = urll = urll.Split('&')[0];

                        if (urll.Contains("#"))
                            continue;

                        string idd = aa.GetAttribute("data-hovercard");
                        if (idd == null && ell.GetAttribute("innerHTML").Contains("data-profileid="))
                            idd = ell.GetAttribute("innerHTML").Substring(ell.GetAttribute("innerHTML").IndexOf("data-profileid=\"") + 16).Split('"')[0];
                        else
                        if (idd.Contains("data-profileid=\""))
                            idd = idd.Substring(idd.IndexOf("data-profileid=\"") + 16).Split('"')[0];
                        else
                            idd = idd.Substring(idd.IndexOf("?id=") + 4).Split('&')[0];

                        string imageProff = "";
                        string labelProff = "";

                        try
                        {
                            //maintenant l'image
                            imageProff = aa.FindElement(By.TagName("img")).GetAttribute("src");
                            labelProff = aa.FindElement(By.TagName("img")).GetAttribute("aria-label");
                        }
                        catch
                        {
                            //maintenant l'image
                            imageProff = ell.FindElement(By.TagName("img")).GetAttribute("src");
                            labelProff = ell.FindElement(By.TagName("img")).GetAttribute("aria-label");
                        }

                        ForGrid forGrid = new ForGrid();
                        forGrid.Url = urll;
                        forGrid.Id = idd;
                        forGrid.Label = labelProff.Replace("<","").Replace(">","").Replace("?","").Replace(":","").Replace("'","").Replace("|","").Replace("\\","").Replace("/","").Replace("\"","").Replace("*","");

                        if (!dicoProff.ContainsKey(imageProff))
                            dicoProff.Add(imageProff, forGrid);

                        if (!dicoPicturess.ContainsKey(imageProff))
                            dicoPicturess.Add(imageProff, idd);


                    }

                    if (!Directory.Exists(pathToSave + "\\PicturesProfilesLikes"))
                        Directory.CreateDirectory(pathToSave + "\\PicturesProfilesLikes");

                    int count = 0;
                    int j = 0;
                    backgroundWorker1.ReportProgress(-1, dicoProff.Count);

                    foreach (string file in Directory.GetFiles(pathToSave + "\\PicturesProfilesLikes"))
                    {
                        File.Delete(file);
                    }
                    Thread.Sleep(500);

                    if (dicoProff.Count > 0)
                        foreach (string profile in dicoProff.Keys)
                        {
                            using (var client = new WebClient())
                            {


                                try

                                {

                                    //client.DownloadFile(profile, pathToSave + "\\PicturesProfilesLikes\\" + ((ForGrid)dicoProff[profile]).Label.ToString() + "_" + dicoPicturess[profile] + ".jpg");
                                    client.DownloadFile(profile, pathToSave + "\\PicturesProfilesLikes\\" + dicoPicturess[profile] + ".jpg");
                                    Thread.Sleep(500);

                                }
                                catch (Exception ex)
                                {
                                    MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT DE LA PHOTO DE PROFIL" +ex.Message + "\n" + pathToSave + "\\PicturesProfilesLikes\\" + ((ForGrid)dicoProff[profile]).Label.ToString() + "_" + dicoPicturess[profile]);
                                    //return;
                                }



                            }


                            backgroundWorker1.ReportProgress(j);
                            Thread.Sleep(100);

                            ForGrid forGridd = dicoProff[profile];
                            backgroundWorker1.ReportProgress(-60, forGridd);
                            j++;
                        }




                }
                catch (Exception exx)
                {

                }

                



            }
            catch (OpenQA.Selenium.NoSuchElementException ex)
            {


            }
            //}

            

            backgroundWorker1.ReportProgress(-1000);
            Thread.Sleep(2000);

            backgroundWorker1.CancelAsync();



        }

        private void FindAllLikesFromFacebookForNewLook()
        {
            //IsANewThread();
            backgroundWorker1.ReportProgress(-90);
            backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " début du scraping des likes");



            string targetName = textBoxops.Text;
            string titrePage = "";
            string urlFriend = textBoxUSERNAMEFRIENDS.Text;
            string urlFollowers = textBoxUSERNAMEFRIENDS.Text;
            string ID = "";
            //pour cacher fenetre DOS

            if (driver == null)
            {
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " initialisation du driver");
                InitializeDriver();
                // 2. Go to the "Google" homepage
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture de la page facebook login ");
                driver.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }


               
                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driver.FindElementById("email");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driver.FindElementById("pass");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driver.FindElementById("loginbutton").Click();
                Thread.Sleep(2500);
                //searchButton.Click();

                //u_0_8
                //"menuBar']//*[@class='menuItem']"
                // 2. Go to the "Google" homepage
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture de la page du profil ");
                driver.Navigate().GoToUrl(urlFriend);
                titrePage = driver.Title;
                Thread.Sleep(5000);
            }

            System.Random rnd = new System.Random();

            //backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture de la page des likes");
            backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture de la page du profil ");
            driver.Navigate().GoToUrl(urlFriend);
            titrePage = driver.Title;
            Thread.Sleep(5000);

            if (!profilIsSet)
            {
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " informations sur le profil");
                GetProfileInformations(backgroundWorker1);
            }
                

            try
            {
                if (!Directory.Exists(pathToSave + @"\LIKES\"))
                {
                    Directory.CreateDirectory(pathToSave + @"\LIKES\");
                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " création de " + @"\LIKES\");

                }




                Thread.Sleep(5000);
            }
            catch (OpenQA.Selenium.NoSuchElementException ex)
            {

                try
                {


                }
                catch (OpenQA.Selenium.NoSuchElementException exx)
                {
                    MessageBox.Show("PROBLEME AVEC L'IDENTIFIEUR DE CLASSE POUR LA PHOTO DE PROFIL" + Environment.NewLine + ex.Message);
                    return;
                }


            }



            try
            {


                using (var client = new WebClient())
                {




                }
                if (urlFriend.Contains("id="))
                {
                    urlFriend = urlFriend + "&sk=likes";
                }
                else
                {
                    urlFriend = urlFriend + "/likes";
                }

                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture de la page des likes");
                driver.Navigate().GoToUrl(urlFriend);
                //driver.Manage().Window.Maximize();
                Thread.Sleep(1500);
                //_5h60 _30f


                if (isElementPresent(driver, "//img[@class='hu5pjgll']"))
                {
                    backgroundWorker1.ReportProgress(-1000);
                    Thread.Sleep(2000);

                    backgroundWorker1.CancelAsync();
                    return;
                }

                ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top

                Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                long innerHeightt = (long)innerHeight;
                long scroll = (long)innerHeight;
                long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                scrollHeight = scrollHeight + scroll;
                int hauteur = 450;

                //IWebElement Element = driver.FindElementByXPath("//div[@class='j83agx80 btwxx1t3 lhclo0ds']");
                //Element.FindElements(By.TagName("li"))[0].FindElements(By.TagName("a"))[0].GetAttribute("data-hovercard");


                //if (!Element.Text.ToLower().Contains("abonnés"))
                try
                {
                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " scrolling de la page des likes");
                    Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                    int ii = 1;
                    while (scrollHeight >= innerHeightt)
                    {
                        //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                        //Thread.Sleep(1000);

                        Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                        imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                        //Save the screenshot
                        imageScreenshott.SaveAsFile(pathToSave + @"\LIKES\" + "_" + ii + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                        Thread.Sleep(100);
                        backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " capture d'écran : " + @"\LIKES\" + "_" + ii + ".png");




                        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                        if ((scrollHeight - innerHeightt) < 200)
                        {
                            Thread.Sleep(5000);
                        }
                        else
                            Thread.Sleep(2500);


                        scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
                        Thread.Sleep(2000);


                        if (scrollHeight <= innerHeightt)
                        {
                            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                            Thread.Sleep(2000);
                            scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                        }

                        scrollHeight = scrollHeight + scroll;
                        innerHeightt = innerHeightt + hauteur;
                        ii++;
                    }
                }
                catch
                {
                    //e.printStackTrace();
                }


                string codePage = driver.PageSource;

                using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\LIKES\\Likes.html", false))
                {
                    //if (File.Exists(saveFileDialog1.FileName))
                    //    File.Delete(saveFileDialog1.FileName);
                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " création de " +  "\\LIKES\\Likes.html");
                    file.Write(codePage);
                }


                //string codeFriends = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)imageDown).WrappedDriver).PageSource;
                string codeFriends = driver.PageSource;

                //IWebElement Elementt = driver.FindElementByXPath("_5h60 _30f']");


                IList<IWebElement> els = driver.FindElementsByXPath("//div[@class='j83agx80 l9j0dhe7 k4urcfbm']")[0].FindElements(By.XPath(".//div[@class='l9j0dhe7']"));
                //if (!Element.Text.ToLower().Contains("abonnés"))
                try
                {
                    Dictionary<string, ForGrid> dicoProff = new Dictionary<string, ForGrid>();
                    Dictionary<string, string> dicoPicturess = new Dictionary<string, string>();
                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " scraping des likes : " + els.Count());
                    foreach (IWebElement ell in els)
                    {
                        //if (ell.GetAttribute("class") != "_698")
                        //    continue;

                        IWebElement aa = ell.FindElement(By.TagName("a"));

                        //d'abord l'url et l'id
                        string urll = aa.GetAttribute("href");

                        if (!urll.Contains("profile.php?id="))
                            urll = urll.Split('?')[0];
                        else
                            urll = urll = urll.Split('&')[0];

                        if (urll.Contains("#"))
                            continue;

                        string idd = "999999";
                        //if (idd == null && ell.GetAttribute("innerHTML").Contains("data-profileid="))
                        //    idd = ell.GetAttribute("innerHTML").Substring(ell.GetAttribute("innerHTML").IndexOf("data-profileid=\"") + 16).Split('"')[0];
                        //else
                        //if (idd.Contains("data-profileid=\""))
                        //    idd = idd.Substring(idd.IndexOf("data-profileid=\"") + 16).Split('"')[0];
                        //else
                        //    idd = idd.Substring(idd.IndexOf("?id=") + 4).Split('&')[0];

                        string imageProff = "";
                        string labelProff = "";

                        try
                        {
                            //maintenant l'image
                            imageProff = aa.FindElement(By.TagName("img")).GetAttribute("src");
                            if (ell.Text.Contains("\r\n"))
                                labelProff = ell.Text.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries)[0];
                            else
                                labelProff = ell.Text;
                        }

                        catch
                        {
                            //maintenant l'image
                            imageProff = ell.FindElement(By.TagName("img")).GetAttribute("src");
                            if (ell.Text.Contains("\r\n"))
                                labelProff = ell.Text.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries)[0];
                            else
                                labelProff = ell.Text;
                        }
                        idd = imageProff.Substring(imageProff.LastIndexOf("/") + 1).Split('?')[0];
                        ForGrid forGrid = new ForGrid();
                        forGrid.Url = urll;
                        forGrid.Id = idd;
                        forGrid.Label = labelProff.Replace("<", "").Replace(">", "").Replace("?", "").Replace(":", "").Replace("'", "").Replace("|", "").Replace("\\", "").Replace("/", "").Replace("\"", "").Replace("*", "");

                        

                        if (!dicoProff.ContainsKey(imageProff))
                            dicoProff.Add(imageProff, forGrid);

                        if (!dicoPicturess.ContainsKey(imageProff))
                            dicoPicturess.Add(imageProff, idd);


                    }

                    if (!Directory.Exists(pathToSave + "\\PicturesProfilesLikes"))
                        Directory.CreateDirectory(pathToSave + "\\PicturesProfilesLikes");

                    int count = 0;
                    int j = 0;
                    backgroundWorker1.ReportProgress(-1, dicoProff.Count);

                    foreach (string file in Directory.GetFiles(pathToSave + "\\PicturesProfilesLikes"))
                    {

                        //try
                        //{
                        //    if (File.Exists(Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments) + "\\" + titrePage + ".jpg"))
                        //        File.Delete(Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments) + "\\" + titrePage + ".jpg");
                        //}
                        //catch
                        //{
                        Process pro = new Process();
                        pro.StartInfo.UseShellExecute = false;
                        pro.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;
                        pro.StartInfo.CreateNoWindow = true;
                        pro.StartInfo.RedirectStandardOutput = true;
                        pro.StartInfo.FileName = "cmd.exe";
                        pro.StartInfo.Arguments = "/C del \"" + file;
                        pro.Start();
                        //Console.WriteLine(Process.StandardOutput.ReadToEnd());
                        pro.WaitForExit();
                        pro.Close();
                        //}

                        //File.Delete(file);
                    }
                    Thread.Sleep(500);

                    
                    if (dicoProff.Count > 0)
                    {
                        backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " téléchargement des images profil : " + els.Count());

                        foreach (string profile in dicoProff.Keys)
                        {
                            using (var client = new WebClient())
                            {


                                try

                                {

                                    //client.DownloadFile(profile, pathToSave + "\\PicturesProfilesLikes\\" + ((ForGrid)dicoProff[profile]).Label.ToString() + "_" + dicoPicturess[profile] + ".jpg");
                                    client.DownloadFile(profile, pathToSave + "\\PicturesProfilesLikes\\" + dicoPicturess[profile]);
                                    Thread.Sleep(500);
                                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " téléchargement :  " + "\\PicturesProfilesLikes\\" + dicoPicturess[profile]);


                                }
                                catch (Exception ex)
                                {
                                    //MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT DE LA PHOTO DE PROFIL" + ex.Message + "\n" + pathToSave + "\\PicturesProfilesLikes\\" + ((ForGrid)dicoProff[profile]).Label.ToString() + "_" + dicoPicturess[profile]);
                                    //return;
                                }



                            }


                            backgroundWorker1.ReportProgress(j);
                            Thread.Sleep(100);

                            ForGrid forGridd = dicoProff[profile];
                            backgroundWorker1.ReportProgress(-60, forGridd);
                            j++;
                        }
                    }
                        




                }
                catch (Exception exx)
                {

                }





            }
            catch (OpenQA.Selenium.NoSuchElementException ex)
            {


            }
            //}



            backgroundWorker1.ReportProgress(-1000);
            Thread.Sleep(2000);

            backgroundWorker1.CancelAsync();



        }


        public Boolean isElementPresent(ChromeDriver driver, string path)
        {
            try
            {
                driver.FindElementByXPath(path);
                return true;
            }
            catch (OpenQA.Selenium.NoSuchElementException e)
            {
                return false;
            }
        }

        public Boolean isElementPresentByClassName(ChromeDriver driver, string path)
        {
            try
            {
                driver.FindElementByClassName(path);
                return true;
            }
            catch (OpenQA.Selenium.NoSuchElementException e)
            {
                return false;
            }
        }
        private void StopProcess()
        {

            //backgroundWorkerGetMessenger.CancelAsync();
            //backgroundWorkerGetMessenger.Dispose();
            //backgroundWorkerGetMessenger = null;

            try
            {
                if (driver != null)
                {
                    driver.Close();
                    driver.Quit();

                }
            }
            catch
            {

            }


            GC.Collect();

            Process[] chromeDriverProcesses = Process.GetProcessesByName("chromedriver");

            try
            {
                foreach (var chromeDriverProcess in chromeDriverProcesses)
                {
                    chromeDriverProcess.Kill();
                }
            }
            catch
            {

            }


            //try
            //{
            //    chromeDriverProcesses = Process.GetProcessesByName("FacebookAnalyzer");

            //    foreach (var chromeDriverProcess in chromeDriverProcesses)
            //    {
            //        chromeDriverProcess.Kill();
            //    }
            //}
            //catch
            //{

            //}

            //try
            //{
            //    chromeDriverProcesses = Process.GetProcessesByName("chrome");

            //    foreach (var chromeDriverProcess in chromeDriverProcesses)
            //    {
            //        chromeDriverProcess.Kill();
            //    }
            //}
            //catch
            //{

            //}


        }
        private void Reset()
        {

            progressBarfriends.Value = 0;
            progressBarcomments.Value = 0;
            progressBarpictures.Value = 0;
            progressBarfriends.Maximum = 0;
            progressBarcomments.Maximum = 0;
            progressBarpictures.Maximum = 0;
            progressBarfriends.Visible = false;
            progressBarcomments.Visible = false;
            progressBarpictures.Visible = false;
            pictureBoxpictures.Image = global::FacebookAnalyzer.Properties.Resources.ok;

            friends = false;
            comments = false;
            allimages = false;
            pictureBoxlogofacebook.Visible = false;
            pictureBoxwaiting.Visible = false;

            //pictureBoxcomments.Visible = false;
            //pictureBoxfriends.Visible = false;
            //pictureBoxpictures.Visible = false;
            //pictureBoxwaiting.Visible = false;
            //labelanalyseencours.Visible = false;


        }

        public Boolean isElementPresent(ChromeDriver driver)
        {
            try
            {
                return driver.FindElementByXPath("//div[@class='mbm _5vf sectionHeader _4khu']").Displayed;
                //return true;
            }
            catch (OpenQA.Selenium.NoSuchElementException e)
            {
                return false;
            }
        }
        public Boolean isElementPresentByID(ChromeDriver driver, string id)
        {
            try
            {
                return driver.FindElementById(id).Displayed;
                //return true;
            }
            catch (OpenQA.Selenium.NoSuchElementException e)
            {
                return false;
            }
        }

        public Boolean isElementMessengerEndingPresent(ChromeDriver driver)
        {
            try
            {
                return driver.FindElementByXPath("//div[@class='_llj _2eu- clearfix']").Displayed;//_673w _6ynl _1_fz
                //return true;
            }
            catch (OpenQA.Selenium.NoSuchElementException e)
            {

                try
                {
                    return driver.FindElementByXPath("//div[@class='_673w _6ynl _1_fz']").Displayed;//_673w _6ynl _1_fz
                                                                                                      //return true;
                }
                catch (OpenQA.Selenium.NoSuchElementException ee)
                {
                    return false;
                }

                //return false;
            }
        }

        public Boolean isMessagePresent(ChromeDriver driver, string classe)
        {
            try
            {
                return driver.FindElementByXPath(classe).Displayed;//_673w _6ynl _1_fz
                //return true;
            }
            catch (OpenQA.Selenium.NoSuchElementException e)
            {

                return false;
            }
        }

        private void FindAllPicturesFromFacebook(string url)
        {

            //IsANewThread();
            backgroundWorker1.ReportProgress(-90);

            allimages = true;
            string targetName = textBoxops.Text.ToUpper();
            System.Random rnd = new System.Random();
            int nbreImages = 0;
            string titrePage = "";
            string urlFriend = textBoxUSERNAMEFRIENDS.Text;
            string dossierLocal = "";
            string ID = "";
            
            if(driver == null)
            {
                InitializeDriver();
                // 2. Go to the "Google" homepage
                driver.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }

                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driver.FindElementById("email");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driver.FindElementById("pass");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driver.FindElementById("loginbutton").Click();
                Thread.Sleep(2500);


            }
            


                
                driver.Navigate().GoToUrl(urlFriend);
                titrePage = driver.Title;
                Thread.Sleep(5000);
                //backgroundWorker1.ReportProgress(-1, STEP);

                if (!profilIsSet)
                {
                    GetProfileInformations(backgroundWorker1);
                    //try
                    //{
                        
                    //    var imagee = driver.FindElementByXPath("//a[@class='_1nv3 _11kg _1nv5 profilePicThumb']");
                    //    IWebElement el = driver.FindElementByXPath("//a[@class='_1nv3 _11kg _1nv5 profilePicThumb']");
                    //    if (el != null)
                    //    {
                    //        try
                    //        {
                    //            ID = el.GetAttribute("href");
                    //            if (ID.Contains("profile_id="))
                    //            {
                    //                ID = ID.Substring(ID.IndexOf("profile_id=") + 11).Split('"')[0];
                    //                //backgroundWorkerFriends.ReportProgress(-2, ID);
                    //            }
                    //        }
                    //        catch
                    //        {

                    //        }
                    //    }
                    ////clic sur image dans href
                    ////((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].click();", imagee);
                    //    //backgroundWorker1.ReportProgress(1);


                    //    Thread.Sleep(5000);
                    //    backgroundWorkerPictures.ReportProgress(-6, ID);
                    //}
                    //catch (OpenQA.Selenium.NoSuchElementException ex)
                    //{

                    //    try
                    //    {
                    //        var imagee = driver.FindElementByXPath("//a[@class='_1nv3 _1nv5 profilePicThumb']");
                    //        IWebElement el = driver.FindElementByXPath("//a[@class='_1nv3 _11kg _1nv5 profilePicThumb']");
                    //        if (el != null)
                    //        {
                    //            try
                    //            {
                    //                ID = el.GetAttribute("href");
                    //                if (ID.Contains("profile_id="))
                    //                {
                    //                    ID = ID.Substring(ID.IndexOf("profile_id=") + 11).Split('"')[0];
                    //                    //backgroundWorkerFriends.ReportProgress(-2, ID);
                    //                }
                    //            }
                    //            catch
                    //            {

                    //            }
                    //        }
                    //        //clic sur image dans href
                    //        ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].click();", imagee);
                    //        backgroundWorkerPictures.ReportProgress(1);
                    //        backgroundWorkerPictures.ReportProgress(-6, ID);

                    //        Thread.Sleep(5000);

                    //    }
                    //    catch (OpenQA.Selenium.NoSuchElementException exx)
                    //    {
                    //    try
                    //    {


                    //        var imagee = driver.FindElementByXPath("//a[@class='_1nv3 _11kg _1nv5 profilePicThumb']");
                    //        IWebElement el = driver.FindElementByXPath("//a[@class='_1nv3 _11kg _1nv5 profilePicThumb']");
                    //        if (el != null)
                    //        {
                    //            try
                    //            {
                    //                ID = el.GetAttribute("href");
                    //                if (ID.Contains("profile_id="))
                    //                {
                    //                    ID = ID.Substring(ID.IndexOf("profile_id=") + 11).Split('"')[0];
                    //                    //backgroundWorkerFriends.ReportProgress(-2, ID);
                    //                }
                    //                IList<IWebElement> els = el.FindElements(By.TagName("img"));

                    //                foreach (IWebElement ell in els)
                    //                {
                    //                    var linkToImage = ell.GetAttribute("src");

                    //                    if (linkToImage != "")
                    //                    {
                    //                        try
                    //                        {
                    //                            using (var client = new WebClient())
                    //                            {
                    //                                if (!Directory.Exists(pathToSave + "\\"))
                    //                                    Directory.CreateDirectory(pathToSave + "\\");

                    //                                if (!File.Exists(pathToSave + "\\" + titrePage + ".jpg"))
                    //                                {
                    //                                    client.DownloadFile(linkToImage, pathToSave + "\\" + titrePage + ".jpg");
                    //                                    Thread.Sleep(5000);


                    //                                    backgroundWorkerFriends.ReportProgress(-5, pathToSave + "\\" + titrePage + ".jpg");
                    //                                    backgroundWorkerFriends.ReportProgress(-2, ID);

                    //                                    Thread.Sleep(2000);

                    //                                }
                    //                                else
                    //                                {


                    //                                    backgroundWorkerFriends.ReportProgress(-5, pathToSave + "\\" + titrePage + ".jpg");
                    //                                    backgroundWorkerFriends.ReportProgress(-2, ID);

                    //                                    profilIsSet = true;
                    //                                }


                    //                            }
                    //                        }
                    //                        catch (Exception exxx)
                    //                        {
                    //                            MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT POUR LA PHOTO DE PROFIL" + Environment.NewLine + ex.Message);
                    //                            return;
                    //                        }


                    //                    }
                    //                }
                    //            }
                    //            catch
                    //            {

                    //            }
                    //        }
                    //        //clic sur image dans href
                    //        //((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].click();", image);
                    //        //backgroundWorker1.ReportProgress(1);

                    //        Thread.Sleep(5000);
                    //    }
                    //    catch (OpenQA.Selenium.NoSuchElementException exxx)
                    //    {

                    //        try
                    //        {
                    //            var imagee = driver.FindElementByXPath("//a[@class='_1nv3 _1nv5 profilePicThumb']");
                    //            IWebElement el = driver.FindElementByXPath("//a[@class='_1nv3 _11kg _1nv5 profilePicThumb']");
                    //            if (el != null)
                    //            {
                    //                try
                    //                {
                    //                    ID = el.GetAttribute("href");
                    //                    if (ID.Contains("profile_id="))
                    //                    {
                    //                        ID = ID.Substring(ID.IndexOf("profile_id=") + 11).Split('"')[0];
                    //                        //backgroundWorkerFriends.ReportProgress(-2, ID);
                    //                    }
                    //                }
                    //                catch
                    //                {

                    //                }

                    //                IList<IWebElement> els = el.FindElements(By.TagName("img"));
                    //                foreach (IWebElement ell in els)
                    //                {
                    //                    var linkToImage = ell.GetAttribute("src");

                    //                    if (linkToImage != "")
                    //                    {
                    //                        try
                    //                        {
                    //                            using (var client = new WebClient())
                    //                            {

                    //                                if (!Directory.Exists(pathToSave + "\\"))
                    //                                    Directory.CreateDirectory(pathToSave + "\\");

                    //                                if (!File.Exists(pathToSave + "\\" + titrePage + ".jpg"))
                    //                                {
                    //                                    client.DownloadFile(linkToImage, pathToSave + "\\" + titrePage + ".jpg");
                    //                                    Thread.Sleep(5000);


                    //                                    backgroundWorkerFriends.ReportProgress(-5, pathToSave + "\\" + titrePage + ".jpg");
                    //                                    backgroundWorkerFriends.ReportProgress(-2, ID);

                    //                                    Thread.Sleep(2000);

                    //                                }
                    //                                else
                    //                                {


                    //                                    backgroundWorkerFriends.ReportProgress(-5, pathToSave + "\\" + titrePage + ".jpg");
                    //                                    backgroundWorkerFriends.ReportProgress(-2, ID);


                    //                                }


                    //                            }
                    //                        }
                    //                        catch (Exception exxxx)
                    //                        {
                    //                            MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT POUR LA PHOTO DE PROFIL" + Environment.NewLine + ex.Message);
                    //                            return;
                    //                        }


                    //                    }
                    //                }

                    //            }
                    //            //clic sur image dans href
                    //            //((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].click();", image);
                    //            //backgroundWorker1.ReportProgress(1);

                    //            //Thread.Sleep(5000);

                    //        }
                    //        catch (OpenQA.Selenium.NoSuchElementException exxxx)
                    //        {
                    //            MessageBox.Show("PROBLEME AVEC L'IDENTIFIEUR DE CLASSE POUR LA PHOTO DE PROFIL" + Environment.NewLine + ex.Message);
                    //            return;
                    //        }


                    //    }
                    //}


                    //}
                }
                //else
                //{
                    //try
                    //{


                    //    var imagee = driver.FindElementByXPath("//a[@class='_1nv3 _11kg _1nv5 profilePicThumb']");
                    //    IWebElement el = driver.FindElementByXPath("//a[@class='_1nv3 _11kg _1nv5 profilePicThumb']");
                    //    if (el != null)
                    //    {
                    //        try
                    //        {
                    //            ID = el.GetAttribute("href");
                    //            if (ID.Contains("profile_id="))
                    //            {
                    //                ID = ID.Substring(ID.IndexOf("profile_id=") + 11).Split('"')[0];
                    //                //backgroundWorkerFriends.ReportProgress(-2, ID);
                    //            }
                    //            IList<IWebElement> els = el.FindElements(By.TagName("img"));

                    //            foreach (IWebElement ell in els)
                    //            {
                    //                var linkToImage = ell.GetAttribute("src");

                    //                if (linkToImage != "")
                    //                {
                    //                    try
                    //                    {
                    //                        using (var client = new WebClient())
                    //                        {
                    //                            if (!Directory.Exists(pathToSave + "\\"))
                    //                                Directory.CreateDirectory(pathToSave + "\\");

                    //                            if (!File.Exists(pathToSave + "\\" + titrePage + ".jpg"))
                    //                            {
                    //                                client.DownloadFile(linkToImage, pathToSave + "\\" + titrePage + ".jpg");
                    //                                Thread.Sleep(5000);


                    //                                backgroundWorkerFriends.ReportProgress(-5, pathToSave + "\\" + titrePage + ".jpg");
                    //                                backgroundWorkerFriends.ReportProgress(-2, ID);

                    //                                Thread.Sleep(2000);

                    //                            }
                    //                            else
                    //                            {


                    //                                backgroundWorkerFriends.ReportProgress(-5, pathToSave + "\\" + titrePage + ".jpg");
                    //                                backgroundWorkerFriends.ReportProgress(-2, ID);

                    //                                profilIsSet = true;
                    //                            }


                    //                        }
                    //                    }
                    //                    catch (Exception ex)
                    //                    {
                    //                        MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT POUR LA PHOTO DE PROFIL" + Environment.NewLine + ex.Message);
                    //                        return;
                    //                    }


                    //                }
                    //            }
                    //        }
                    //        catch
                    //        {

                    //        }
                    //    }
                    //    //clic sur image dans href
                    //    //((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].click();", image);
                    //    //backgroundWorker1.ReportProgress(1);

                    //    Thread.Sleep(5000);
                    //}
                    //catch (OpenQA.Selenium.NoSuchElementException ex)
                    //{

                    //    try
                    //    {
                    //        var imagee = driver.FindElementByXPath("//a[@class='_1nv3 _1nv5 profilePicThumb']");
                    //        IWebElement el = driver.FindElementByXPath("//a[@class='_1nv3 _11kg _1nv5 profilePicThumb']");
                    //        if (el != null)
                    //        {
                    //            try
                    //            {
                    //                ID = el.GetAttribute("href");
                    //                if (ID.Contains("profile_id="))
                    //                {
                    //                    ID = ID.Substring(ID.IndexOf("profile_id=") + 11).Split('"')[0];
                    //                    //backgroundWorkerFriends.ReportProgress(-2, ID);
                    //                }
                    //            }
                    //            catch
                    //            {

                    //            }

                    //            IList<IWebElement> els = el.FindElements(By.TagName("img"));
                    //            foreach (IWebElement ell in els)
                    //            {
                    //                var linkToImage = ell.GetAttribute("src");

                    //                if (linkToImage != "")
                    //                {
                    //                    try
                    //                    {
                    //                        using (var client = new WebClient())
                    //                        {

                    //                            if (!Directory.Exists(pathToSave + "\\"))
                    //                                Directory.CreateDirectory(pathToSave + "\\");

                    //                            if (!File.Exists(pathToSave + "\\" + titrePage + ".jpg"))
                    //                            {
                    //                                client.DownloadFile(linkToImage, pathToSave + "\\" + titrePage + ".jpg");
                    //                                Thread.Sleep(5000);


                    //                                backgroundWorkerFriends.ReportProgress(-5, pathToSave + "\\" + titrePage + ".jpg");
                    //                                backgroundWorkerFriends.ReportProgress(-2, ID);

                    //                                Thread.Sleep(2000);

                    //                            }
                    //                            else
                    //                            {


                    //                                backgroundWorkerFriends.ReportProgress(-5, pathToSave + "\\" + titrePage + ".jpg");
                    //                                backgroundWorkerFriends.ReportProgress(-2, ID);


                    //                            }


                    //                        }
                    //                    }
                    //                    catch (Exception exx)
                    //                    {
                    //                        MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT POUR LA PHOTO DE PROFIL" + Environment.NewLine + ex.Message);
                    //                        return;
                    //                    }


                    //                }
                    //            }

                    //        }
                    //        //clic sur image dans href
                    //        //((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].click();", image);
                    //        //backgroundWorker1.ReportProgress(1);

                    //        //Thread.Sleep(5000);

                    //    }
                    //    catch (OpenQA.Selenium.NoSuchElementException exx)
                    //    {
                    //        MessageBox.Show("PROBLEME AVEC L'IDENTIFIEUR DE CLASSE POUR LA PHOTO DE PROFIL" + Environment.NewLine + ex.Message);
                    //        return;
                    //    }


                    //}

                //}
                

                try
                {
                    //var imageDown = driver.FindElementByXPath("clearfix fbPhotoSnowliftPopup']");
                    //string codePage = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)imageDown).WrappedDriver).PageSource;
                    //string codeImage = codePage.Substring(codePage.IndexOf("<img class=\"spotlight")).Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    //string link = codeImage.Substring(codeImage.IndexOf("src=") + 4).Split(new string[] { "\"" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    //link = link.Replace("\"", "").Replace("amp;", "");


                    using (var client = new WebClient())
                    {
                        //try
                        //{
                        //    if (File.Exists(Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments) + "\\" + titrePage + ".jpg"))
                        //        File.Delete(Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments) + "\\" + titrePage + ".jpg");
                        //}
                        //catch
                        //{
                        //    Process pro = new Process();
                        //    pro.StartInfo.UseShellExecute = false;
                        //    pro.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;
                        //    pro.StartInfo.CreateNoWindow = true;
                        //    pro.StartInfo.RedirectStandardOutput = true;
                        //    pro.StartInfo.FileName = "cmd.exe";
                        //    pro.StartInfo.Arguments = "/C del \"" + Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments) + "\\" + titrePage + ".jpg";
                        //    pro.Start();
                        //    //Console.WriteLine(Process.StandardOutput.ReadToEnd());
                        //    pro.WaitForExit();
                        //    pro.Close();
                        //}
                        

                        //try
                        //{
                        //    client.DownloadFile(link, Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments) + "\\" + titrePage + ".jpg");

                        //    // Sets up an image object to be displayed.
                        //    //if (MyImage != null)
                        //    //{
                        //    //    MyImage.Dispose();
                        //    //}

                        //    backgroundWorkerPictures.ReportProgress(-1, "\\" + titrePage + ".jpg");
                        //    //pictureBoxtango.SizeMode = PictureBoxSizeMode.StretchImage;
                        //    //MyImage = new Bitmap(Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments) + "\\" + titrePage + ".jpg");
                        //    ////pictureBox1.ClientSize = new Size(xSize, ySize);
                        //    //pictureBoxtango.Image = (Image)MyImage;
                        //    //pictureBoxtango.Refresh();
                        //    //Thread.Sleep(2000);
                        //    backgroundWorkerPictures.ReportProgress(2);
                            
                        //}
                        //catch (Exception ex)
                        //{
                        //    MessageBox.Show("PROBLEME AVEC L'IDENTIFIEUR DE CLASSE POUR LA PHOTO DE PROFIL" + Environment.NewLine + ex.Message);
                        //    backgroundWorkerPictures.ReportProgress(-2);
                        //    //pictureBoxpictures.Image = global::FacebookAnalyzer.Properties.Resources.ko;
                        //    //backgroundWorker1.CancelAsync();
                        //    return;
                        //}



                    }


                    //backgroundWorker1.ReportProgress(3);


                }
                catch (OpenQA.Selenium.NoSuchElementException ex)
                {
                    //if (isElementPresent(driver, "_n3']"))
                    //{
                    //    var imageDown = driver.FindElementByXPath("_n3']");
                    //    string codePage = (String)((IJavaScriptExecutor)driver).ExecuteScript("return arguments[0].innerHTML;", imageDown);
                    //    //string codePage = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)imageDown).WrappedDriver).PageSource;
                    //    string codeImage = codePage.Substring(codePage.IndexOf("<img src=\"") + 10).Split(new string[] { " " }, StringSplitOptions.RemoveEmptyEntries)[0];

                    //    if (!codeImage.Contains("html><html"))
                    //    {
                    //        //string link = codeImage.Substring(codeImage.IndexOf("src=") + 4).Split(new string[] { "\"" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    //        string link = codeImage.Split(new string[] { "\"" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    //        link = link.Replace("\"", "").Replace("amp;", "");
                    //        codeImage = codeImage.Replace("\"", "").Replace("amp;", "");

                    //        using (var client = new WebClient())
                    //        {
                    //            try
                    //            {
                    //                if (File.Exists(Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments) + "\\" + titrePage + ".jpg"))
                    //                    File.Delete(Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments) + "\\" + titrePage + ".jpg");
                    //            }
                    //            catch
                    //            {
                    //                Process pro = new Process();
                    //                pro.StartInfo.UseShellExecute = false;
                    //                pro.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;
                    //                pro.StartInfo.CreateNoWindow = true;
                    //                pro.StartInfo.RedirectStandardOutput = true;
                    //                pro.StartInfo.FileName = "cmd.exe";
                    //                pro.StartInfo.Arguments = "/C del \"" + Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments) + "\\" + titrePage + ".jpg";
                    //                pro.Start();
                    //                //Console.WriteLine(Process.StandardOutput.ReadToEnd());
                    //                pro.WaitForExit();
                    //                pro.Close();
                    //            }

                    //            client.DownloadFile(link, Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments) + "\\" + titrePage + ".jpg");
                    //            Thread.Sleep(500);

                    //            // Sets up an image object to be displayed.
                    //            //if (MyImage != null)
                    //            //{
                    //            //    MyImage.Dispose();
                    //            //}

                    //            backgroundWorkerPictures.ReportProgress(-1, "\\" + titrePage + ".jpg");

                    //            //pictureBoxtango.SizeMode = PictureBoxSizeMode.StretchImage;
                    //            //MyImage = new Bitmap(Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments) + "\\" + titrePage + ".jpg");
                    //            ////pictureBox1.ClientSize = new Size(xSize, ySize);
                    //            //pictureBoxtango.Image = (Image)MyImage;
                    //            backgroundWorkerPictures.ReportProgress(2);
                    //        }
                    //    }



                        //pictureBox9.Visible = true;




                 }

            //driver.Close();

            if (!Directory.Exists(pathToSave + @"\PICTURES_SCREENSHOTS"))
                Directory.CreateDirectory(pathToSave + @"\PICTURES_SCREENSHOTS");

            //maintenant les photos 
            int nbreRow = 0;
                int i = 0;
               

                //deux url sont possibles /photos_of et /photos_all
                string photos = "";
                string photosBis = "";
                string chemin = "";


                bool tout = false;
                int imgprec = 0;
                string pathToProfile = "";
                Dictionary<string, string> dicocomments = new Dictionary<string, string>();

                for (int j = 0; j < 2; j++)
                {


                    if (j == 0)
                    {
                        if (url.Contains("id="))
                        {
                            photos = "&sk=photos_of";
                        }
                        else
                            photos = "/photos_of";

                        driver.Navigate().GoToUrl(url + photos);
                        pathToProfile = url + photos;
                        titrePage = driver.Title;

                    ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top

                    Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                    long innerHeightt = (long)innerHeight;
                    long scroll = (long)innerHeight;
                    long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                    scrollHeight = scrollHeight + scroll;
                    int hauteur = 450;



                    try
                    {
                        Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                        int ii = 1;
                        while (scrollHeight >= innerHeightt)
                        {
                            //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                            //Thread.Sleep(1000);

                            Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                            imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                            //Save the screenshot
                            imageScreenshott.SaveAsFile(pathToSave + @"\PICTURES_SCREENSHOTS\Screenshot" + "_" + ii + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                            Thread.Sleep(100);


                            //Object newHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                            //if (newHeight.Equals(lastHeight))
                            //{
                            //    break;
                            //}
                            //lastHeight = newHeight;

                            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                            if ((scrollHeight - innerHeightt) < 200)
                            {
                                Thread.Sleep(5000);
                            }
                            else
                                Thread.Sleep(2500);


                            scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
                            Thread.Sleep(2000);
                        

                            if (scrollHeight <= innerHeightt)
                            {
                                ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                                Thread.Sleep(2000);
                                scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                            }

                            scrollHeight = scrollHeight + scroll;
                            innerHeightt = innerHeightt + hauteur;
                            ii++;
                        }
                    }
                    catch
                    {
                        //e.printStackTrace();
                    }


                    //while (!isElementPresent(driver))
                    //    {
                    //        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight)");
                    //        Thread.Sleep(1500);
                    //    }


                    if (ONLYSCREENSHOT)
                    {
                        backgroundWorker1.ReportProgress(-102);
                        Thread.Sleep(2000);

                        //backgroundWorker1.ReportProgress(-3);
                        //Thread.Sleep(2000);
                        backgroundWorker1.CancelAsync();
                        allimages = false;
                        return;
                    }
                        


                        if (titrePage.Contains(") "))
                            titrePage = titrePage.Substring(titrePage.IndexOf(") ") + 2);

                        Thread.Sleep(rnd.Next(5500, 7500));
                    }
                    else
                        if (j == 1 && tout)
                    {
                        if (url.Contains("id="))
                        {
                            photosBis = "&sk=photos_all";
                        }
                        else
                            photosBis = "/photos_all";

                        driver.Navigate().GoToUrl(url + photosBis);
                        pathToProfile = url + photosBis;
                        //titrePage = driver.Title;

                        Thread.Sleep(rnd.Next(5500, 7500));
                    }
                    else
                    {
                        continue;
                    }



                    try
                    {
                        //var imageDown = driver.FindElementByXPath("tagWrapper']");//uiMediaThumb _6i9 uiMediaThumbMedium

                        if (isElementPresent(driver, "//div[@class='clearfix _1_ca']"))
                        {
                            var tmp = driver.FindElementByXPath("//div[@class='clearfix _1_ca']");
                            string tmpCode = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)tmp).WrappedDriver).PageSource;

                            string prenom = "";
                            if (tmpCode.Contains("<span class=\"_3sz\">Photos prises par "))
                                prenom = tmpCode.Substring(tmpCode.IndexOf("<span class=\"_3sz\">Photos prises par ") + 37).Split('<')[0];

                            if (tmpCode.Contains("name=\"Photos prises par " + prenom) && tmpCode.Contains("<span class=\"_3sz\">Photos de " + prenom))
                                tout = true;
                            else
                                tout = false;

                        }
                        var imageDown = driver.FindElementByXPath("//div[@class='_3i9']");
                        string codePage = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)imageDown).WrappedDriver).PageSource;



                        //string [] codeImages = codePage.Split(new string[] { "<div class=\"tagWrapper" }, StringSplitOptions.RemoveEmptyEntries);
                        string[] codeImages = codePage.Split(new string[] { "<a class=\"uiMediaThumb _6i9 uiMediaThumbMedium" }, StringSplitOptions.RemoveEmptyEntries);



                        if (!Directory.Exists(pathToSave  + "\\PICTURES\\"))
                            Directory.CreateDirectory(pathToSave  + "\\PICTURES");

                        dossierLocal = pathToSave  + @"\PICTURES";

                        //backgroundWorker1.ReportProgress(-1, (codeImages.Length - 1) + imgprec);

                        int counter = 0;
                        foreach (string urll in codeImages)
                        {
                            if (!urll.Replace(" ", "").StartsWith("\"aria-label="))
                            {
                                //backgroundWorker1.ReportProgress(i);
                                i++;
                                continue;
                            }
                                

                            //if (allimagesFast && nbreImages == 5)
                            //{
                            //    nbreImages = 0;
                            //    break;
                            //}

                            string urlForD = urll.Substring(urll.IndexOf("href=\"") + 6).Split('"')[0].Replace("\"", "").Replace("amp;", "").Replace("&type=3&theater", "&type=3&theater");


                            ////////////////////////////////////////////////////////////////////////////////////////////////////////


                            try
                            {
                                //Thread.Sleep(rnd.Next(7500, 9500));
                                driver.Navigate().GoToUrl(urlForD);
                                Thread.Sleep(rnd.Next(2500, 4500));

                                var imageFinale = driver.FindElementByXPath("//div[@class='_2-sx']");
                                string codePagee = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)imageFinale).WrappedDriver).PageSource;
                                string codeImage = codePagee.Substring(codePagee.IndexOf("<img class=\"spotlight")).Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];
                                string link = codeImage.Substring(codeImage.IndexOf("src=") + 4).Split(new string[] { "\"" }, StringSplitOptions.RemoveEmptyEntries)[0];
                                link = link.Replace("\"", "").Replace("amp;", "");





                                using (var client = new WebClient())
                                {
                                    //chemin = targetName + "\\" + titrePage + "\\" + titrePage + i + ".jpg";
                                    //string sc = targetName + "\\" + titrePage + "\\screenshot_" + titrePage + i + ".jpg";

                                    chemin = "image_" + i + ".jpg";
                                    string sc = "screenshot_" + i + ".jpg";

                                    client.DownloadFile(link, pathToSave + "\\PICTURES\\" + chemin);
                                    Thread.Sleep(500);

                                //on essaie de récupérer des photos tagguées
                                try
                                {
                                    var tagImages = driver.FindElementsByXPath("//span[@class='fbPhotoTagListTag tagItem']");
                                    int numTag = 1;
                                    string tags = "";
                                    Dictionary<string, string> dicotags = new Dictionary<string, string>();

                                    if (!Directory.Exists(pathToSave + "\\PICTURES_TAGGED\\"))
                                        Directory.CreateDirectory(pathToSave + "\\PICTURES_TAGGED\\");

                                    if (!Directory.Exists(pathToSave + "\\TXT\\"))
                                        Directory.CreateDirectory(pathToSave + "\\TXT\\");

                                    foreach (IWebElement elli in tagImages)
                                    {
                                        var inputTags = elli.FindElements(By.TagName("a"));

                                        foreach(IWebElement ii in inputTags)
                                        {
                                            string idTag = ii.GetAttribute("data-tag");
                                            string userNameTag = ii.Text;

                                           

                                            if (idTag == "")
                                                idTag = "999999";

                                            Screenshot imageScreenshot = ((ITakesScreenshot)driver).GetScreenshot();
                                            //Save the screenshot
                                            imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                            Thread.Sleep(500);

                                            tags += userNameTag + ";" + idTag + ";" + userNameTag + "_" + idTag + "_" + numTag + i + ".png\n";

                                            userNameTag = "";
                                            idTag = "";
                                            numTag++;


                                            if (!dicotags.ContainsKey(tags))
                                            {
                                                using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\PICTURES_TAGGED\\tags.txt", true))
                                                {
                                                    //if (File.Exists(saveFileDialog1.FileName))
                                                    //    File.Delete(saveFileDialog1.FileName);

                                                    file.Write(tags);
                                                    
                                                }

                                                using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\TXT\\tags.txt", true))
                                                {
                                                    //if (File.Exists(saveFileDialog1.FileName))
                                                    //    File.Delete(saveFileDialog1.FileName);

                                                    file.Write(tags);

                                                }
                                                dicotags.Add(tags, tags);
                                                tags = "";
                                            }
                                            
                                        }

                                        
                                    }

                                    

                                    tags = "";
                                    dicotags = new Dictionary<string, string>();
                                }
                                catch
                                {

                                }
                                    //backgroundWorker1.ReportProgress(i);

                                    //Screenshot imageScreenshot = ((ITakesScreenshot)driver).GetScreenshot();
                                    ////Save the screenshot
                                    //imageScreenshot.SaveAsFile(pathToSave + @"\Facebook_Friends\" + targetName + "\\PICTURES\\" + sc, OpenQA.Selenium.ScreenshotImageFormat.Jpeg);

                                    i++;

                                }

                            //on essaie de récupérer les identifiants des amis qui postent des commentaires

                            try
                            {
                                try
                                {
                                    var lienComments = driver.FindElementsByXPath("//a[@class='_4sxc _42ft']");

                                    foreach(IWebElement ll in lienComments)
                                    {
                                        if (ll.Text.Contains("Afficher"))
                                        {
                                            ll.Click();
                                            break;
                                        }
                                    }
                                    
                                    Thread.Sleep(500);
                                    string photosCommen = "";
                                    string nomCommen = "";
                                    var ligneCommens = driver.FindElementsByXPath("//a[@class='_6qw4']");

                                    foreach(IWebElement lig in ligneCommens)
                                    {
                                        string IDComment = lig.GetAttribute("data-hovercard").Substring(lig.GetAttribute("data-hovercard").IndexOf("php?id=") + 7).Split('&')[0];
                                        string urlCommen = lig.GetAttribute("href");
                                        nomCommen = lig.Text;

                                        if (urlCommen.Contains("/profile.php?id="))
                                        {
                                            photosCommen = "&sk=photos";
                                            urlCommen = urlCommen.Split('&')[0];

                                            //if (urlCommen.Contains(">"))
                                            //{
                                                //urlCommen = urlCommen.Substring(urlCommen.IndexOf(">") + 1);
                                            urlCommen =urlCommen + photosCommen;

                                            //}
                                        }

                                        else
                                        {
                                            photosCommen = "/photos";
                                            urlCommen = urlCommen.Split('?')[0];
                                            urlCommen = urlCommen + photosCommen;
                                        }

                                        if (!dicocomments.ContainsKey(IDComment))
                                        {
                                            dicocomments.Add(IDComment, nomCommen + ";" + urlCommen + ";" + IDComment + "\n");
                                        }
                                    }

                                }
                                catch
                                {
                                    string photosCommen = "";
                                    string nomCommen = "";
                                    var ligneCommens = driver.FindElementsByXPath("//a[@class='_6qw4']");

                                    foreach (IWebElement lig in ligneCommens)
                                    {
                                        string IDComment = lig.GetAttribute("data-hovercard").Substring(lig.GetAttribute("data-hovercard").IndexOf("php?id=") + 7).Split('&')[0];
                                        string urlCommen = lig.GetAttribute("href");
                                        nomCommen = lig.Text;

                                        if (urlCommen.Contains("/profile.php?id="))
                                        {
                                            photosCommen = "&sk=photos";
                                            urlCommen = urlCommen.Split('&')[0];
                                            urlCommen = urlCommen + photosCommen;

                                          
                                        }

                                        else
                                        {
                                            photosCommen = "/photos";
                                            urlCommen = urlCommen.Split('?')[0];
                                            urlCommen = urlCommen + photosCommen;
                                        }

                                        if (!dicocomments.ContainsKey(IDComment))
                                        {
                                            dicocomments.Add(IDComment, nomCommen + ";" + urlCommen + ";" + IDComment + "\n");
                                        }
                                    }
                                }

                            }
                            catch
                            {

                            }

                                //try
                                //{
                                //    var comments = driver.FindElementByXPath("//div[@class='_6iiv _6r_e']");
                                //    string codeComments = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)comments).WrappedDriver).PageSource;
                                //    string commentaire = codeComments.Substring(codeComments.IndexOf("_6iiv _6r_e"));
                                //    string[] ligneCommentaire = commentaire.Split(new string[] { "_72vr" }, StringSplitOptions.RemoveEmptyEntries);

                                //    string IDCommentaire = "";
                                //    string userCommentaire = "";
                                //    string commentairePost = "";
                                //    string nomUrl = "";
                                //    string aria = "";
                                //    string urlComment = "";
                                //    string photosComment = "";

                                //    foreach (string l in ligneCommentaire)
                                //    {
                                //        if (l.StartsWith("_6iiv _6r_e"))
                                //            continue;
                                //        IDCommentaire = l.Substring(l.IndexOf("php?id=") + 7).Split('"')[0];
                                //        string trouve = l.Substring(0, 200);


                                //        if (trouve.Contains("href=\"/profile.php?id="))
                                //        {
                                //            photosComment = "&sk=photos";
                                //            nomUrl = l.Substring(l.IndexOf("href=\"/profile.php?id=") + 22).Split('<')[0];

                                //            if (nomUrl.Contains(">"))
                                //            {
                                //                nomUrl = nomUrl.Substring(nomUrl.IndexOf(">") + 1);
                                //                urlComment = @"https://www.facebook.com/profile.php?id=" + IDCommentaire + photosComment;

                                //            }
                                //        }

                                //        else
                                //        {
                                //            photosComment = "/photos";
                                //            nomUrl = l.Substring(l.IndexOf("href=\"/") + 7).Split('"')[0];
                                //            urlComment = @"https://www.facebook.com/" + nomUrl + photosComment;
                                //        }






                                //    }
                                //}
                                //catch
                                //{
                                //    //pictureBoxpictures.Image = global::FacebookAnalyzer.Properties.Resources.ko;
                                //}


                                //on essaie de récupérer les identifiants des amis qui postent des likes

                                try
                                {

                                    IWebElement el = driver.FindElementByXPath("//div[@class='_6iid']");////*[@id="u_o_2"]/div[2]/div/div[1]/div/div[1]
                                    IList<IWebElement> els = el.FindElements(By.TagName("a"));

                                    string urllll = "";
                                string photosComment = "";
                                    foreach (IWebElement aelement in els)
                                    {
                                        urllll = aelement.GetAttribute("href");
                                        break;
                                    }
                                    driver.Navigate().GoToUrl(urllll);
                                    Thread.Sleep(2500);

                                    try
                                    {
                                        el = driver.FindElementByXPath("//*[@id=\"reaction_profile_browser1\"]");
                                        IList<IWebElement> elements = el.FindElements(By.TagName("li"));
                                        foreach (IWebElement ell in elements)
                                        {
                                            IList<IWebElement> aelements = ell.FindElements(By.TagName("a"));

                                            foreach (IWebElement ael in aelements)
                                            {
                                                string nom = aelements[1].GetAttribute("title");
                                                string idd = aelements[1].GetAttribute("data-hovercard");
                                                string urlll = aelements[1].GetAttribute("href").Replace("&amp;", "&");
                                                idd = idd.Substring(idd.IndexOf("id=") + 3).Split('&')[0];


                                            if (urlll.Contains("/profile.php?id="))
                                            {
                                                photosComment = "&sk=photos";
                                                urlll = urlll.Split('&')[0];
                                                urlll = urlll + photosComment;


                                            }

                                            else
                                            {
                                                photosComment = "/photos";
                                                urlll = urlll.Split('?')[0];
                                                urlll = urlll + photosComment;
                                            }


                                            if (!dicocomments.ContainsKey(idd))
                                                {
                                                    dicocomments.Add(idd, nom + ";" + urlll + ";" + idd + "\n");
                                                }
                                                break;
                                            }
                                        }

                                        Thread.Sleep(rnd.Next(2500, 3500));
                                        //driver.FindElementByClassName("_xlt _418x").Click();

                                    }
                                    catch { }

                                    //IList<IWebElement> elss = driver.FindElementsByXPath("//*[@id=\"u_fetchstream_2_5\"]/div/div[3]/ul");

                                    //foreach(IWebElement ell in els)
                                    //{
                                    //    IList<IWebElement> divs = ell.FindElements(By.ClassName("_72vr"));
                                        
                                    //    foreach(IWebElement aelement in divs)
                                    //    {
                                    //        IWebElement ae = aelement.FindElement(By.TagName("a"));
                                            
                                    //        string nom = ae.Text;
                                    //        string idee = ae.GetAttribute("data-hovercard");
                                    //        string urlel = ae.GetAttribute("href");
                                    //        idee = idee.Substring(idee.IndexOf("id=") + 3).Split('&')[0].Replace("&amp;", "");

                                    //        if (!dicocomments.ContainsKey(idee))
                                    //        {
                                    //            dicocomments.Add(idee, nom + ";" + urlel + ";" + idee + "\n");

                                    //            break;
                                    //        }
                                    //    }

                                        
                                    //}
                                    Thread.Sleep(2500);
                                    driver.Navigate().GoToUrl(urlForD);
                                    Thread.Sleep(2500);




                                    IWebElement commel = driver.FindElementByXPath("//div[@class='_6iiv _6r_e']");
                                    IList<IWebElement> divs = commel.FindElements(By.ClassName("_72vr"));

                                    foreach (IWebElement aelement in divs)
                                    {
                                        IWebElement ae = aelement.FindElement(By.TagName("a"));

                                        string nom = ae.Text;
                                        string idee = ae.GetAttribute("data-hovercard");
                                        string urlel = ae.GetAttribute("href");
                                        idee = idee.Substring(idee.IndexOf("id=") + 3).Split('&')[0].Replace("&amp;", "");

                                        if (!dicocomments.ContainsKey(idee))
                                        {
                                            dicocomments.Add(idee, nom + ";" + urlel + ";" + idee + "\n");

                                            break;
                                        }
                                    }

                                    //IList<IWebElement> els = driver.FindElementsByXPath("//*[@id=\"u_fetchstream_2_5\"]/div/div[3]/ul");

                                    //foreach (IWebElement ell in els)
                                    //{
                                    //    IList<IWebElement> divs = ell.FindElements(By.ClassName("_72vr"));

                                    //    foreach (IWebElement aelement in divs)
                                    //    {
                                    //        IWebElement ae = aelement.FindElement(By.TagName("a"));

                                    //        string nom = ae.Text;
                                    //        string idee = ae.GetAttribute("data-hovercard");
                                    //        string urlel = ae.GetAttribute("href");
                                    //        idee = idee.Substring(idee.IndexOf("id=") + 3).Split('&')[0].Replace("&amp;", "");

                                    //        if (!dicocomments.ContainsKey(idee))
                                    //        {
                                    //            dicocomments.Add(idee, nom + ";" + urlel + ";" + idee + "\n");

                                    //            break;
                                    //        }
                                    //    }

                                    //}


                                    //string codeComments = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)comments).WrappedDriver).PageSource;
                                    //string commentaire = codeComments.Substring(codeComments.IndexOf("href=\"/ufi/reaction/profile/"));
                                    //string[] ligneCommentaire = commentaire.Split(new string[] { "\"" }, StringSplitOptions.RemoveEmptyEntries);
                                    //string linktolike = ligneCommentaire[1].Replace("amp;", "");

                                    //driver.Navigate().GoToUrl("https://www.facebook.com/" + linktolike);
                                    //Thread.Sleep(500);




                                    //Thread.Sleep(2500);
                                    ////on recupere les identifiants
                                    //comments = driver.FindElementByXPath("_8u _42ef']");
                                    //ligneCommentaire = commentaire.Split(new string[] { "<div class=\"_5j0e fsl fwb fcb\">" }, StringSplitOptions.RemoveEmptyEntries);//<div class="_5j0e fsl fwb fcb">




                                }
                                catch
                                {
                                    //pictureBoxpictures.Image = global::FacebookAnalyzer.Properties.Resources.ko;
                                }



                                try
                                {
                                    IWebElement el = driver.FindElementByXPath("//*[@id=\"reaction_profile_browser1\"]");
                                    IList<IWebElement> elements = el.FindElements(By.TagName("li"));
                                    foreach(IWebElement ell in elements)
                                    {
                                        IList <IWebElement> aelements = ell.FindElements(By.TagName("a"));

                                        foreach(IWebElement ael in aelements)
                                        {
                                            string nom = aelements[1].GetAttribute("title");
                                            string idd = aelements[1].GetAttribute("data-hovercard");
                                            string urlll = aelements[1].GetAttribute("href").Replace("&amp;", "&");
                                            idd = idd.Substring(idd.IndexOf("id=") + 3).Split('&')[0];

                                            if (!dicocomments.ContainsKey(idd))
                                            {
                                                dicocomments.Add(idd, nom + ";" + urlll + ";" + idd + "\n");
                                            }
                                            break;
                                        }
                                    }

                                    Thread.Sleep(rnd.Next(2500, 3500));
                                    //driver.FindElementByClassName("_xlt _418x").Click();

                                }
                                catch { }
                            }
                            catch (Exception ex)
                            {
                                //pictureBoxpictures.Image = global::FacebookAnalyzer.Properties.Resources.ko;
                            }
                            //i++;
                            nbreImages++;
                            //backgroundWorker1.ReportProgress(nbreImages);

                        }
                        imgprec = codeImages.Length;





                    }
                    catch (Exception ex)
                    {
                        

                        //pictureBoxpictures.Image = global::FacebookAnalyzer.Properties.Resources.ko;
                    }

                }

                //on écrit les resultats des ID commentaires dans un fichier
                try
                {
                    string ligne = "";
                    string urll = "";
                    string user = "";
                    string iddd = "";
                    foreach (string valeur in dicocomments.Keys)
                    {
                        user = dicocomments[valeur].Split(';')[0];
                        urll = dicocomments[valeur].Split(';')[1];
                        //iddd = dicocomments[valeur].Split(';')[2];

                        ligne += urll + ";" + user + ";" + valeur.Replace("&amp", "") + ";" + "\r\n";
                    }

                    if (File.Exists(pathToSave + chemin + "\\friendsFromComments.txt"))
                        File.Delete(pathToSave + chemin + "\\friendsFromComments.txt");

                    File.WriteAllText(dossierLocal + @"\friendsFromComments.txt", ligne);
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " création de : " + @"\friendsFromComments.txt");

                dicocomments = new Dictionary<string, string>();
                }
                catch (Exception ex)
                {

                }

                ////photos de profil
                driver.Navigate().GoToUrl(pathToProfile);
                //var image = driver.FindElementByXPath("//a[@class='_1nv3 _11kg _1nv5 profilePicThumb']");

                ////clic sur image dans href
                //((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].click();", image);

                Thread.Sleep(5000);

                bool error = false;

                try
                {
                    //var imageDown = driver.FindElementByXPath("clearfix fbPhotoSnowliftPopup']");
                    //string codePage = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)imageDown).WrappedDriver).PageSource;
                    //string codeImage = codePage.Substring(codePage.IndexOf("<img class=\"spotlight")).Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    //string link = codeImage.Substring(codeImage.IndexOf("src=") + 4).Split(new string[] { "\"" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    //link = link.Replace("\"", "").Replace("amp;", "");



                    //using (var client = new WebClient())
                    //{
                    //    string cheminProf = targetName + "\\" + titrePage + "\\" + titrePage + "_profile" + ".jpg";
                    //    client.DownloadFile(link, pathToSave + @"\Facebook_Friends\" + cheminProf);

                    //}

                    //Thread.Sleep(5000);


                }
                catch (Exception ex)
                {
                    
                    error = true;
                try
                {
                    string ligne = "";
                    string urll = "";
                    string user = "";
                    string iddd = "";
                    foreach (string valeur in dicocomments.Keys)
                    {
                        user = dicocomments[valeur].Split(';')[0];
                        urll = dicocomments[valeur].Split(';')[1];
                        //iddd = dicocomments[valeur].Split(';')[2];

                        ligne += urll + ";" + user + ";" + valeur.Replace("&amp", "") + ";" + "\r\n";
                    }

                    if (File.Exists(pathToSave + chemin + "\\friendsFromComments.txt"))
                        File.Delete(pathToSave  + chemin + "\\friendsFromComments.txt");

                    File.WriteAllText(dossierLocal + @"\friendsFromComments.txt", ligne);
                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " création de : " + @"\friendsFromComments.txt");

                    dicocomments = new Dictionary<string, string>();
                }
                catch (Exception exx)
                {

                }

            }
                if (error)
                {
                    try
                    {
                    //var imageDown = driver.FindElementByXPath("_n3']");
                    //string codePage = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)imageDown).WrappedDriver).PageSource;
                    //string codeImage = codePage.Substring(codePage.IndexOf("class=\"_n3\"") + 11).Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    //codeImage = codeImage.Substring(codeImage.IndexOf("<img src=\"") + 10).Split(new string[] { " " }, StringSplitOptions.RemoveEmptyEntries)[0];
                    ////string link = codeImage.Substring(codeImage.IndexOf("src=") + 4).Split(new string[] { "\"" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    ////link = link.Replace("\"", "").Replace("amp;", "");
                    //codeImage = codeImage.Replace("\"", "").Replace("amp;", "");


                    //using (var client = new WebClient())
                    //{
                    //    string cheminProf = targetName + "\\" + titrePage + "\\" + titrePage + "_profile" + ".jpg";
                    //    client.DownloadFile(codeImage, pathToSave + @"\Facebook_Friends\" + cheminProf);
                    //}

                    //Thread.Sleep(5000);

                    try
                    {
                        string ligne = "";
                        string urll = "";
                        string user = "";
                        string iddd = "";
                        foreach (string valeur in dicocomments.Keys)
                        {
                            user = dicocomments[valeur].Split(';')[0];
                            urll = dicocomments[valeur].Split(';')[1];
                            //iddd = dicocomments[valeur].Split(';')[2];

                            ligne += urll + ";" + user + ";" + valeur.Replace("&amp", "") + ";" + "\r\n";
                        }

                        if (File.Exists(pathToSave + chemin + "\\friendsFromComments.txt"))
                            File.Delete(pathToSave  + chemin + "\\friendsFromComments.txt");

                        File.WriteAllText(dossierLocal + @"\friendsFromComments.txt", ligne);
                        backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " création de : " +  @"\friendsFromComments.txt");

                        dicocomments = new Dictionary<string, string>();
                    }
                    catch (Exception ex)
                    {

                    }
                }
                    catch (Exception ex)
                    {
                        //pictureBoxpictures.Image = global::FacebookAnalyzer.Properties.Resources.ko;
                    }
                    finally
                    {
                        i = 0;
                        nbreImages = 0;
                        photos = "";
                        photosBis = "";
                        backgroundWorker1.ReportProgress(++nbreRow);
                    }
                }

                i = 0;
                nbreImages = 0;
                photos = "";
                photosBis = "";
                //backgroundWorker1.ReportProgress(++nbreRow);
                error = false;



            backgroundWorker1.ReportProgress(-102);
            Thread.Sleep(2000);
           
            //backgroundWorker1.ReportProgress(-3);
            //Thread.Sleep(2000);
            backgroundWorker1.CancelAsync();
            allimages = false;
            //labelanalyseencours.Visible = false;
            //pictureBoxwaiting.Visible = false;
            //pictureBoxlogofacebook.Visible = false;
        }
        private void FindAllPicturesFromFacebookForNewLook(string url)
        {

            //IsANewThread();
            backgroundWorker1.ReportProgress(-90);
            backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " début du scraping des images");

            allimages = true;
            string targetName = textBoxops.Text.ToUpper();
            System.Random rnd = new System.Random();
            int nbreImages = 0;
            string titrePage = "";
            string urlFriend = textBoxUSERNAMEFRIENDS.Text;
            string dossierLocal = "";
            string ID = "";
            Dictionary<string, string> commentsDir = new Dictionary<string, string>();

            if (driver == null)
            {
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " initialisation du driver");

                InitializeDriver();
                // 2. Go to the "Google" homepage
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture de la page facebook login");
                driver.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(2500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }

                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driver.FindElementById("email");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driver.FindElementById("pass");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driver.FindElementById("loginbutton").Click();
                Thread.Sleep(2500);


            }



            backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture de la page des images");

            driver.Navigate().GoToUrl(urlFriend);
            titrePage = driver.Title;
            Thread.Sleep(5000);
            //backgroundWorker1.ReportProgress(-1, STEP);

            //if (!profilIsSet)
            //{
            //    GetProfileInformations(backgroundWorker1);

            //}






            if (!Directory.Exists(pathToSave + @"\PICTURES_SCREENSHOTS"))
            {
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " création de " + @"\PICTURES_SCREENSHOTS");
                Directory.CreateDirectory(pathToSave + @"\PICTURES_SCREENSHOTS");
            }
                

            //maintenant les photos 
            int nbreRow = 0;
            int i = 1;


            //deux url sont possibles /photos_of et /photos_all
            string photos = "";
            string photosBis = "";
            string chemin = "";
            string nomDossierCommentScreenshot = "";
            string commentairesTexte = "";
            int height = driver.Manage().Window.Size.Height;



            bool tout = false;
            int imgprec = 0;
            string pathToProfile = "";
            Dictionary<string, string> dicocomments = new Dictionary<string, string>();

            for (int j = 0; j < 2; j++)
            {


                if (j == 0)
                {
                    if (url.Contains("id="))
                    {
                        photos = "&sk=photos";
                    }
                    else
                        photos = "/photos";

                    driver.Navigate().GoToUrl(url + photos);
                    pathToProfile = url + photos;
                    titrePage = driver.Title;

                    ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top

                    Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                    long innerHeightt = (long)innerHeight;
                    long scroll = (long)innerHeight;
                    long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                    scrollHeight = scrollHeight + scroll;
                    int hauteur = 450;



                    try
                    {
                        backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " scrolling de la page images");
                        Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                        int ii = 1;
                        while (scrollHeight >= innerHeightt)
                        {
                            //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                            //Thread.Sleep(1000);

                            Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                            imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                            //Save the screenshot
                            imageScreenshott.SaveAsFile(pathToSave + @"\PICTURES_SCREENSHOTS\Screenshot" + "_" + ii + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                            Thread.Sleep(100);
                            backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " capture d'écran : " + @"\PICTURES_SCREENSHOTS\Screenshot" + "_" + ii + ".png");


                            //Object newHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                            //if (newHeight.Equals(lastHeight))
                            //{
                            //    break;
                            //}
                            //lastHeight = newHeight;

                            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                            if ((scrollHeight - innerHeightt) < 200)
                            {
                                Thread.Sleep(5000);
                            }
                            else
                                Thread.Sleep(2500);


                            scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
                            Thread.Sleep(2000);


                            if (scrollHeight <= innerHeightt)
                            {
                                ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                                Thread.Sleep(2000);
                                scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                            }

                            scrollHeight = scrollHeight + scroll;
                            innerHeightt = innerHeightt + hauteur;
                            ii++;
                        }
                    }
                    catch
                    {
                        //e.printStackTrace();
                    }


                    //while (!isElementPresent(driver))
                    //    {
                    //        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight)");
                    //        Thread.Sleep(1500);
                    //    }


                    if (ONLYSCREENSHOT)
                    {
                        backgroundWorker1.ReportProgress(-102);
                        Thread.Sleep(2000);

                        //backgroundWorker1.ReportProgress(-3);
                        //Thread.Sleep(2000);
                        backgroundWorker1.CancelAsync();
                        allimages = false;
                        return;
                    }



                    if (titrePage.Contains(") "))
                        titrePage = titrePage.Substring(titrePage.IndexOf(") ") + 2);

                    Thread.Sleep(rnd.Next(5500, 7500));
                }
                else
                if (j == 1 && tout)
                {
                    if (url.Contains("id="))
                    {
                        photosBis = "&sk=photos_all";
                    }
                    else
                        photosBis = "/photos_all";

                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture de la seconde page images");
                    driver.Navigate().GoToUrl(url + photosBis);
                    pathToProfile = url + photosBis;
                    //titrePage = driver.Title;

                    Thread.Sleep(rnd.Next(5500, 7500));
                }
                else
                {
                    continue;
                }



                try
                {
                    //var imageDown = driver.FindElementByXPath("tagWrapper']");//uiMediaThumb _6i9 uiMediaThumbMedium

                    if (isElementPresent(driver, "//div[@class='i09qtzwb rq0escxv n7fi1qx3 pmk7jnqg j9ispegn kr520xx4']"))
                    {
                        var tmp = driver.FindElementByXPath("//div[@class='i09qtzwb rq0escxv n7fi1qx3 pmk7jnqg j9ispegn kr520xx4']");
                        string tmpCode = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)tmp).WrappedDriver).PageSource;

                        string prenom = "";
                        //if (tmpCode.Contains("Vos photos"))
                        //    prenom = tmpCode.Substring(tmpCode.IndexOf("Vos photos") + 10).Split('<')[0];

                        if (tmpCode.Contains("Photos de ") && (tmpCode.Contains("Vos photos") || tmpCode.Contains("Photos prises par")) || tmpCode.Contains("Foto's van ") && (tmpCode.Contains("Je foto's") || tmpCode.Contains("Photos prises par")) || tmpCode.Contains("Photos of ") && (tmpCode.Contains("Your Photos") || tmpCode.Contains("Photos prises par")))
                            tout = true;
                        else
                            tout = false;

                    }
                    var imageDown = driver.FindElementByXPath("//div[@class='j83agx80 btwxx1t3 lhclo0ds']");
                    string codePage = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)imageDown).WrappedDriver).PageSource;



                    //string [] codeImages = codePage.Split(new string[] { "<div class=\"tagWrapper" }, StringSplitOptions.RemoveEmptyEntries);
                    //string[] codeImages = codePage.Split(new string[] { "<a class=\"uiMediaThumb _6i9 uiMediaThumbMedium" }, StringSplitOptions.RemoveEmptyEntries);
                    IWebElement container = driver.FindElementByXPath("//div[@class='j83agx80 btwxx1t3 lhclo0ds']");
                    IList<IWebElement> imagees = container.FindElements(By.TagName("a"));

                    //IList <IWebElement> imagees = driver.FindElementsByXPath("//a[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 a8c37x1j p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl gmql0nx0 gpro0wi8 datstx6m l9j0dhe7 k4urcfbm']");

                    if (!Directory.Exists(pathToSave + "\\PICTURES\\"))
                        Directory.CreateDirectory(pathToSave + "\\PICTURES");

                    if (!Directory.Exists(pathToSave + "\\SCREENSHOTSPICTURESCOMMENTS\\"))
                        Directory.CreateDirectory(pathToSave + "\\SCREENSHOTSPICTURESCOMMENTS\\");

                    //SCREENSHOTSPICTURESCOMMENTS
                    //if (!Directory.Exists(pathToSave + "\\SCREENSHOTSPICTURESLIKES\\"))
                    //    Directory.CreateDirectory(pathToSave + "\\SCREENSHOTSPICTURESLIKES\\");

                    if (!Directory.Exists(pathToSave + "\\PICTURES_TAGGED\\"))
                        Directory.CreateDirectory(pathToSave + "\\PICTURES_TAGGED\\");

                    if (!Directory.Exists(pathToSave + "\\TXT\\"))
                        Directory.CreateDirectory(pathToSave + "\\TXT\\");

                    dossierLocal = pathToSave + @"\PICTURES";

                    //backgroundWorker1.ReportProgress(-1, (codeImages.Length - 1) + imgprec);

                    int counter = 0;
                    object[] codeImagess = imagees.ToArray();

                    object[] linktoImages = imagees.ToArray();

                    IList<string> liens = new List<string>();
                    foreach (IWebElement urll in codeImagess)
                    {
                        liens.Add(urll.GetAttribute("href"));

                    }


                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " début de scraping des images : " + liens.Count());
                    foreach (string urll in liens)
                    {
                        
                        string urlForD = urll;
                        int nbsc = 1;

                        ////////////////////////////////////////////////////////////////////////////////////////////////////////


                        try
                        {
                            //Thread.Sleep(rnd.Next(7500, 9500));
                            driver.Navigate().GoToUrl(urlForD);
                            Thread.Sleep(rnd.Next(2500, 4500));

                            commentsDir = new Dictionary<string, string>();

                            var imageFinale = driver.FindElementByXPath("//img[@class='gitj76qy r9f5tntg d2edcug0']");
                            string link = imageFinale.GetAttribute("src");



                            string nomImage = "";
                            string nomAlbum = "";
                            bool morePeople = false;
                            string tags = "";
                            string morepeople = "";

                            int numTag = 1;

                            using (var client = new WebClient())
                            {
                                //chemin = targetName + "\\" + titrePage + "\\" + titrePage + i + ".jpg";
                                //string sc = targetName + "\\" + titrePage + "\\screenshot_" + titrePage + i + ".jpg";

                                chemin = "Picture" + i + ".jpg";
                                nomDossierCommentScreenshot = "Picture" + i;
                                string sc = "screenshot_" + i + ".jpg";

                                client.DownloadFile(link, pathToSave + "\\PICTURES\\" + chemin);
                                Thread.Sleep(500);
                                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " téléchargement de " + "\\PICTURES\\" + chemin);

                                //nomImage = pathToSave + "\\PICTURES\\" + chemin;
                                nomImage = "\\PICTURES\\" + chemin;

                                IList<IWebElement> list = new List<IWebElement>();
                                var tagImages = new ReadOnlyCollection<IWebElement>(list);
                                ////on essaie de récupérer des photos tagguées
                                try
                                {
                                   

                                    IList<IWebElement> els = new List<IWebElement>();
                                    IList<IWebElement> idss = new List<IWebElement>();
                                    //si autres personnes on clic et on prend les noms
                                    try
                                    {
                                        IWebElement clickk = driver.FindElementByXPath("//div[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl oo9gr5id gpro0wi8 lrazzd5p']");
                                        clickk.Click();
                                        //((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", clickk);
                                        Thread.Sleep(500);

                                        //o8kakjsu rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb c3g1iek1 otl40fxz cxgpxx05 rz4wbd8a sj5x9vvc a8nywdso
                                        Object lastHeight = null;
                                        lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('j83agx80 cbu4d94t lzcic4wl ni8dbmo4 stjgntxs oqq733wu l9j0dhe7 du4w35lb cwj9ozl2 ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi nwpbqux9 gc7gaz0o k4urcfbm')[0].scrollHeight");


                                        //Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[1].scrollHeight");

                                        while (true)
                                        {
                                            //driver.execute_script('document.getElementById("viewport").scrollTop += 100')

                                            ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('j83agx80 cbu4d94t lzcic4wl ni8dbmo4 stjgntxs oqq733wu l9j0dhe7 du4w35lb cwj9ozl2 ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi nwpbqux9 gc7gaz0o k4urcfbm')[0].scrollTo(0, document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 l56l04vs r57mb794 kh7kg01d c3g1iek1 otl40fxz cxgpxx05 rz4wbd8a sj5x9vvc a8nywdso')[0].scrollHeight)");
                                            Thread.Sleep(2000);

                                            Object newHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('j83agx80 cbu4d94t lzcic4wl ni8dbmo4 stjgntxs oqq733wu l9j0dhe7 du4w35lb cwj9ozl2 ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi nwpbqux9 gc7gaz0o k4urcfbm')[0].scrollHeight");//ll8tlv6m j83agx80 taijpn5t hzruof5a
                                            if (newHeight.Equals(lastHeight))
                                            {
                                                break;
                                            }
                                            lastHeight = newHeight;
                                        }


                                        var el = driver.FindElementByXPath("//div[@class='ll8tlv6m j83agx80 taijpn5t hzruof5a']");
                                        //ll8tlv6m j83agx80 taijpn5t hzruof5a

                                        //IList<IWebElement> els = el.FindElements(By.TagName("a"));
                                        els = el.FindElements(By.XPath(".//a[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl oo9gr5id gpro0wi8 lrazzd5p']"));
                                        idss = el.FindElements(By.XPath(".//div[@class='q9uorilb l9j0dhe7 pzggbiyp du4w35lb']"));

                                        //q9uorilb l9j0dhe7 pzggbiyp du4w35lb

                                        morePeople = true;
                                        int idCounterr = 0;
                                        string iddd = "999999";
                                        if (els.Count > 0)
                                        {
                                            foreach (IWebElement autre in els)
                                            {
                                                try
                                                {
                                                    iddd = idss[idCounterr].FindElement(By.TagName("image")).GetAttribute("xlink:href");
                                                    iddd = iddd.Substring(iddd.IndexOf("_") + 1).Split('_')[0];
                                                }
                                                catch
                                                {

                                                }



                                                //morepeople += autre.Text + ";" + iddd + ";" + autre.Text + "_" + "999999" + "_" + numTag + i + ".png" + ";" + autre.GetAttribute("href") + "\n";
                                                morepeople += autre.Text + ";" + iddd + ";" + "@@@@@@" + ";" + autre.GetAttribute("href") + "\n";

                                                //tags += autre.Text + ";" + iddd + ";" + sc + ";" + autre.GetAttribute("href") + "\n";

                                                idCounterr++;
                                            }
                                        }




                                    }//oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl oo9gr5id gpro0wi8 lrazzd5p
                                    catch
                                    {
                                        morePeople = false;
                                        
                                    }

                                    if (morePeople)
                                    {
                                        try
                                        {
                                            //driver.FindElementByXPath("//div[@class='cypi58rs pmk7jnqg fcg2cn6m tkr6xdv7']").Click();
                                            //Thread.Sleep(500);
                                            driver.Navigate().GoToUrl(urlForD);
                                            Thread.Sleep(2500);
                                            morePeople = false;
                                        }
                                        catch
                                        {
                                            //driver.Navigate().GoToUrl(urlForD);
                                            //Thread.Sleep(2500);
                                            morePeople = false;
                                        }



                                    }

                                    //d2edcug0 hpfvmrgz qv66sw1b c1et5uql rrkovp55 a8c37x1j keod5gw0 nxhoafnm aigsh9s9 d3f4x2em fe6kdd0r mau55g9w c8b282yb mdeji52x a5q79mjw g1cxx5fr knj5qynh oo9gr5id
                                    try
                                    {
                                        //d2edcug0 hpfvmrgz qv66sw1b c1et5uql rrkovp55 a8c37x1j keod5gw0 nxhoafnm aigsh9s9 d3f4x2em fe6kdd0r mau55g9w c8b282yb mdeji52x a5q79mjw g1cxx5fr knj5qynh oo9gr5id
                                        tagImages = driver.FindElementsByXPath("//span[@class='oi732d6d ik7dh3pa d2edcug0 hpfvmrgz qv66sw1b c1et5uql a8c37x1j s89635nw ew0dbk1b a5q79mjw g1cxx5fr knj5qynh oo9gr5id']");
                                        backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " scraping des tags : " + tagImages.Count());

                                        if (tagImages.Count == 0)
                                        {
                                            try
                                            {
                                                tagImages = driver.FindElementsByXPath("//span[@class='d2edcug0 hpfvmrgz qv66sw1b c1et5uql rrkovp55 a8c37x1j keod5gw0 nxhoafnm aigsh9s9 d3f4x2em fe6kdd0r mau55g9w c8b282yb mdeji52x a5q79mjw g1cxx5fr knj5qynh oo9gr5id']");
                                            }
                                            catch
                                            {

                                            }
                                        }
                                    }
                                    catch
                                    {
                                        try
                                        {
                                            tagImages = driver.FindElementsByXPath("//span[@class='d2edcug0 hpfvmrgz qv66sw1b c1et5uql rrkovp55 a8c37x1j keod5gw0 nxhoafnm aigsh9s9 d3f4x2em fe6kdd0r mau55g9w c8b282yb mdeji52x a5q79mjw g1cxx5fr knj5qynh oo9gr5id']");
                                        }
                                        catch
                                        {

                                        }
                                    }

                                    object[] tmp = tagImages.ToArray();

                                    if (tmp.Length > 0)
                                    {
                                        //int numTag = 1;
                                        //string tags = "";
                                        Dictionary<string, string> dicotags = new Dictionary<string, string>();


                                        foreach (IWebElement elli in tagImages)
                                        {
                                            var inputTags = elli.FindElements(By.TagName("a"));


                                            foreach (IWebElement ii in inputTags)
                                            {
                                                //string idTag = ii.GetAttribute("data-tag");
                                                string userNameTag = ii.Text;
                                                string urllTag = ii.GetAttribute("href");

                                                if (!urllTag.Contains("profile.php?id="))
                                                    urllTag = urllTag.Split('?')[0];
                                                else
                                                    urllTag = urllTag.ToString().Split('&')[0];

                                                //if (idTag == "")
                                                string idTag = "999999";

                                                Screenshot imageScreenshot = ((ITakesScreenshot)driver).GetScreenshot();
                                                ////Save the screenshot
                                                //imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                                imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " capture d'écran du tag : " + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png");


                                                Thread.Sleep(500);

                                                morepeople = morepeople.Replace("@@@@@@", userNameTag + "_" + idTag + "_" + numTag + i + ".png");
                                                tags += morepeople;
                                                morepeople = "";

                                                tags += userNameTag + ";" + idTag + ";" + userNameTag + "_" + idTag + "_" + numTag + i + ".png" + ";" + urllTag + "\n";

                                                Analytics analy = new Analytics();
                                                analy.Category = "TAGS";
                                                analy.Url = urllTag;
                                                analy.PathToPicture = userNameTag + "_" + idTag + "_" + numTag + i + ".png";
                                                analy.Username = userNameTag;

                                                if (!Analytics.ContainsKey(userNameTag + ";" + urllTag + ";" + userNameTag + "_" + idTag + "_" + numTag + i + ".png"))
                                                    Analytics.Add(userNameTag + ";" + urllTag + ";" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", analy);



                                                userNameTag = "";
                                                idTag = "";
                                                numTag++;


                                                if (!dicotags.ContainsKey(tags))
                                                {
                                                    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\TXT\\tags.txt", true))
                                                    {
                                                        //if (File.Exists(saveFileDialog1.FileName))
                                                        //    File.Delete(saveFileDialog1.FileName);
                                                        backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " écriture du fichier " + "\\TXT\\tags.txt");

                                                        file.Write(tags);

                                                    }

                                                   
                                                    dicotags.Add(tags, tags);
                                                    tags = "";
                                                }

                                            }

                                            tags = "";

                                        }



                                        tags = "";
                                        dicotags = new Dictionary<string, string>();
                                    }


                                }
                                catch (Exception ex)
                                {

                                }
                                backgroundWorker1.ReportProgress(i);

                                //Screenshot imageScreenshot = ((ITakesScreenshot)driver).GetScreenshot();
                                ////Save the screenshot
                                //imageScreenshot.SaveAsFile(pathToSave + @"\Facebook_Friends\" + targetName + "\\PICTURES\\" + sc, OpenQA.Selenium.ScreenshotImageFormat.Jpeg);

                                i++;

                            }

                            //on essaie de récupérer les identifiants des amis qui postent des commentaires

                            //Thread.Sleep(2500);
                            backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " début du scraping des identifiants des commentaires ");


                            if (!Directory.Exists(pathToSave + "\\SCREENSHOTSPICTURESCOMMENTS\\" + nomDossierCommentScreenshot))
                                Directory.CreateDirectory(pathToSave + "\\SCREENSHOTSPICTURESCOMMENTS\\" + nomDossierCommentScreenshot);


                            Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                            ////Save the screenshot
                            //imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                            imageScreenshott.SaveAsFile(pathToSave + "\\SCREENSHOTSPICTURESCOMMENTS\\" + nomDossierCommentScreenshot + "\\image" + nbsc + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                            nomAlbum = nomDossierCommentScreenshot + "\\image1" + ".png";
                            backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " capture d'écran : " + "\\SCREENSHOTSPICTURESCOMMENTS\\" + nomDossierCommentScreenshot + "\\image" + nbsc++ + ".png");

                            Thread.Sleep(500);


                            try
                            {
                                try
                                {
                                    var lienComments = driver.FindElementsByXPath("//div[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl l9j0dhe7 abiwlrkh gpro0wi8 dwo3fsh8 ow4ym5g4 auili1gw du4w35lb gmql0nx0']");

                                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " scraping des identifiants des commentaires : " + lienComments.Count());

                                    foreach (IWebElement ll in lienComments)
                                    {

                                        //ll.Click();
                                        //Thread.Sleep(250);


                                        try
                                        {
                                            var secondLien = driver.FindElementByXPath("//div[@class='oajrlxb2 bp9cbjyn g5ia77u1 mtkw9kbi tlpljxtp qensuy8j ppp5ayq2 goun2846 ccm00jje s44p3ltw mk2mc5f4 rt8b4zig n8ej3o3l agehan2d sk4xxmp2 rq0escxv nhd2j8a9 pq6dq46d mg4g778l btwxx1t3 g5gj957u p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x tgvbjcpo hpfvmrgz jb3vyjys p8fzw8mz qt6c0cv9 a8nywdso l9j0dhe7 i1ao9s8h esuyzwwr f1sip0of du4w35lb lzcic4wl abiwlrkh gpro0wi8 m9osqain buofh1pr']");
                                            secondLien.Click();
                                            Thread.Sleep(250);

                                            ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", lienComments[0]);
                                            Thread.Sleep(500);

                                            //imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                                            //////Save the screenshot
                                            ////imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                            //imageScreenshott.SaveAsFile(pathToSave + "\\SCREENSHOTSPICTURESCOMMENTS\\" + nomDossierCommentScreenshot + "\\image" + nbsc + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                            //nomAlbum = nomDossierCommentScreenshot + "\\image" + nbsc++ + ".png";
                                            //Thread.Sleep(500);


                                        }
                                        catch
                                        {

                                        }

                                        break;

                                    }

                                    Thread.Sleep(500);

                                    try
                                    {
                                        IList<IWebElement> secondLiens = driver.FindElementsByXPath("//div[@class='rq0escxv l9j0dhe7 du4w35lb j83agx80 cbu4d94t pfnyh3mw d2edcug0 hpfvmrgz n8tt0mok hyh9befq r8blr3vg jwdofwj8 g0qnabr5']");

                                        foreach (IWebElement e in secondLiens)
                                        {
                                            e.Click();
                                            Thread.Sleep(250);
                                            ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", lienComments[0]);
                                            Thread.Sleep(500);
                                        }



                                    }
                                    catch
                                    {
                                        ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", lienComments[0]);
                                        Thread.Sleep(1500);
                                    }

                                    //oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl oo9gr5id gpro0wi8 lrazzd5p

                                    try
                                    {
                                        IList<IWebElement> secondLiens = driver.FindElementsByXPath("//div[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl oo9gr5id gpro0wi8 lrazzd5p']");

                                        foreach (IWebElement e in secondLiens)
                                        {
                                            OpenQA.Selenium.Remote.RemoteWebElement o = (OpenQA.Selenium.Remote.RemoteWebElement)e;

                                            if (o.LocationOnScreenOnceScrolledIntoView.Y > 15 && o.LocationOnScreenOnceScrolledIntoView.Y < (height - 215))
                                            {
                                                if (o.Text.ToLower().Contains("moins") || o.Text.ToLower().Contains("less") || o.Text.ToLower().Contains("person") || o.Text.ToLower().Contains("masquer"))
                                                    continue;

                                                if (o.Text.ToLower().Contains("afficher") || o.Text.ToLower().Contains("show"))
                                                    o.Click();
                                                Thread.Sleep(250);

                                                ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", lienComments[0]);
                                                Thread.Sleep(500);

                                                try
                                                {
                                                    Actions action = new Actions(driver);
                                                    action.MoveToElement(driver.FindElementByXPath("//div[@class='bp9cbjyn j83agx80 cbu4d94t taijpn5t l9j0dhe7']"));
                                                    action.Perform();
                                                    action.Click();
                                                    Thread.Sleep(500);

                                                }
                                                catch
                                                {

                                                }

                                                //imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                                                //////Save the screenshot
                                                ////imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                                //imageScreenshott.SaveAsFile(pathToSave + "\\SCREENSHOTSPICTURESCOMMENTS\\" + nomDossierCommentScreenshot + "\\image" + nbsc + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                                //nomAlbum = nomDossierCommentScreenshot + "\\image" + nbsc++ + ".png";

                                            }




                                        }


                                    }
                                    catch
                                    {

                                    }

                                    //autres reponses
                                    try
                                    {
                                        IList<IWebElement> secondLiens = driver.FindElementsByXPath("//div[@class='oajrlxb2 bp9cbjyn g5ia77u1 mtkw9kbi tlpljxtp qensuy8j ppp5ayq2 goun2846 ccm00jje s44p3ltw mk2mc5f4 rt8b4zig n8ej3o3l agehan2d sk4xxmp2 rq0escxv nhd2j8a9 pq6dq46d mg4g778l btwxx1t3 g5gj957u p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x tgvbjcpo hpfvmrgz jb3vyjys p8fzw8mz qt6c0cv9 a8nywdso l9j0dhe7 i1ao9s8h esuyzwwr f1sip0of du4w35lb lzcic4wl abiwlrkh gpro0wi8 m9osqain buofh1pr']");



                                        foreach (IWebElement e in secondLiens)
                                        {
                                            OpenQA.Selenium.Remote.RemoteWebElement o = (OpenQA.Selenium.Remote.RemoteWebElement)e;

                                            if (o.LocationOnScreenOnceScrolledIntoView.Y > 15 && o.LocationOnScreenOnceScrolledIntoView.Y < (height - 215))
                                            {
                                                if (o.Text.ToLower().Contains("moins") || o.Text.ToLower().Contains("less") || o.Text.ToLower().Contains("person") || o.Text.ToLower().Contains("masquer"))
                                                    continue;

                                                if (o.Text.ToLower().Contains("afficher") || o.Text.ToLower().Contains("show"))
                                                    o.Click();

                                                ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", lienComments[0]);
                                                Thread.Sleep(500);
                                                //((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", ligneCommens[counterIDCom - 1]);
                                                //Thread.Sleep(2500);

                                                try
                                                {
                                                    Actions action = new Actions(driver);
                                                    action.MoveToElement(driver.FindElementByXPath("//div[@class='bp9cbjyn j83agx80 cbu4d94t taijpn5t l9j0dhe7']"));
                                                    action.Perform();
                                                    action.Click();
                                                    Thread.Sleep(500);

                                                }
                                                catch
                                                {

                                                }

                                                //imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                                                //////Save the screenshot
                                                ////imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                                //imageScreenshott.SaveAsFile(pathToSave + "\\SCREENSHOTSPICTURESCOMMENTS\\" + nomDossierCommentScreenshot + "\\image" + nbsc + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                                //nomAlbum = nomDossierCommentScreenshot + "\\image" + nbsc++ + ".png";


                                                //((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", e);
                                                //Thread.Sleep(2500);


                                                //Thread.Sleep(250);

                                            }


                                            //e.Click();
                                            //Thread.Sleep(250);
                                        }


                                    }
                                    catch (Exception ex)
                                    {

                                    }





                                    string photosCommen = "";
                                    string nomCommen = "";
                                    var ligneCommens = driver.FindElementsByXPath("//a[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl gmql0nx0 gpro0wi8']");
                                    var containerr = driver.FindElementByXPath("//div[@class='cwj9ozl2']");
                                    IList<IWebElement> bulles = containerr.FindElements(By.XPath(".//a[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl gmql0nx0 gpro0wi8']"));

                                    IList<IWebElement> idcom = containerr.FindElements(By.XPath(".//div[@class='q9uorilb l9j0dhe7 pzggbiyp du4w35lb']"));

                                    ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", ligneCommens[0]);
                                    Thread.Sleep(2500);

                                    try
                                    {
                                        Actions action = new Actions(driver);
                                        action.MoveToElement(driver.FindElementByXPath("//div[@class='bp9cbjyn j83agx80 cbu4d94t taijpn5t l9j0dhe7']"));
                                        action.Perform();
                                        action.Click();
                                        Thread.Sleep(500);

                                    }
                                    catch
                                    {

                                    }

                                    int counterIDCom = 0;

                                    foreach (IWebElement lig in ligneCommens)
                                    {
                                        //on essaie de scroller afin de prendre des screenshots

                                        try
                                        {
                                            IList<IWebElement> secondLiens = driver.FindElementsByXPath("//div[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl oo9gr5id gpro0wi8 lrazzd5p']");

                                            foreach (IWebElement e in secondLiens)
                                            {
                                                OpenQA.Selenium.Remote.RemoteWebElement oooo = (OpenQA.Selenium.Remote.RemoteWebElement)e;

                                                if (oooo.LocationOnScreenOnceScrolledIntoView.Y > 15 && oooo.LocationOnScreenOnceScrolledIntoView.Y < (height - 215))
                                                {
                                                    if (oooo.Text.ToLower().Contains("moins") || oooo.Text.ToLower().Contains("less") || oooo.Text.ToLower().Contains("person") || oooo.Text.ToLower().Contains("masquer"))
                                                        continue;

                                                    if (oooo.Text.ToLower().Contains("afficher") || oooo.Text.ToLower().Contains("show"))
                                                        oooo.Click();
                                                    Thread.Sleep(250);

                                                    ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", lig);
                                                    Thread.Sleep(500);

                                                    try
                                                    {
                                                        Actions action = new Actions(driver);
                                                        action.MoveToElement(driver.FindElementByXPath("//div[@class='bp9cbjyn j83agx80 cbu4d94t taijpn5t l9j0dhe7']"));
                                                        action.Perform();
                                                        action.Click();
                                                        Thread.Sleep(500);

                                                    }
                                                    catch
                                                    {

                                                    }

                                                    //imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                                                    //////Save the screenshot
                                                    ////imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                                    //imageScreenshott.SaveAsFile(pathToSave + "\\SCREENSHOTSPICTURESCOMMENTS\\" + nomDossierCommentScreenshot + "\\image" + nbsc + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                                    //nomAlbum = nomDossierCommentScreenshot + "\\image" + nbsc++ + ".png";

                                                }




                                            }


                                        }
                                        catch
                                        {

                                        }

                                        


                                        //autres reponses
                                        try
                                        {
                                            IList<IWebElement> secondLiens = driver.FindElementsByXPath("//div[@class='oajrlxb2 bp9cbjyn g5ia77u1 mtkw9kbi tlpljxtp qensuy8j ppp5ayq2 goun2846 ccm00jje s44p3ltw mk2mc5f4 rt8b4zig n8ej3o3l agehan2d sk4xxmp2 rq0escxv nhd2j8a9 pq6dq46d mg4g778l btwxx1t3 g5gj957u p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x tgvbjcpo hpfvmrgz jb3vyjys p8fzw8mz qt6c0cv9 a8nywdso l9j0dhe7 i1ao9s8h esuyzwwr f1sip0of du4w35lb lzcic4wl abiwlrkh gpro0wi8 m9osqain buofh1pr']");



                                            foreach (IWebElement e in secondLiens)
                                            {
                                                OpenQA.Selenium.Remote.RemoteWebElement ooo = (OpenQA.Selenium.Remote.RemoteWebElement)e;

                                                if (ooo.LocationOnScreenOnceScrolledIntoView.Y > 15 && ooo.LocationOnScreenOnceScrolledIntoView.Y < (height - 215))
                                                {
                                                    if (ooo.Text.ToLower().Contains("moins") || ooo.Text.ToLower().Contains("less") || ooo.Text.ToLower().Contains("person") || ooo.Text.ToLower().Contains("masquer"))
                                                        continue;

                                                    if (ooo.Text.ToLower().Contains("afficher") || ooo.Text.ToLower().Contains("show") || ooo.Text.ToLower().Contains("ponse"))
                                                        ooo.Click();
                                                    Thread.Sleep(250);

                                                    try
                                                    {
                                                        Actions action = new Actions(driver);
                                                        action.MoveToElement(driver.FindElementByXPath("//div[@class='bp9cbjyn j83agx80 cbu4d94t taijpn5t l9j0dhe7']"));
                                                        action.Perform();
                                                        action.Click();
                                                        Thread.Sleep(500);

                                                    }
                                                    catch
                                                    {

                                                    }

                                                    //((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", e);
                                                    //Thread.Sleep(2500);


                                                    //imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                                                    //////Save the screenshot
                                                    ////imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                                    //imageScreenshott.SaveAsFile(pathToSave + "\\SCREENSHOTSPICTURESCOMMENTS\\" + nomDossierCommentScreenshot + "\\image" + nbsc + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                                    //nomAlbum = nomDossierCommentScreenshot + "\\image" + nbsc++ + ".png";
                                                    //Thread.Sleep(500);

                                                }


                                                //e.Click();
                                                //Thread.Sleep(250);
                                            }


                                        }
                                        catch (Exception ex)
                                        {

                                        }




                                        try
                                        {
                                            Actions action = new Actions(driver);
                                            action.MoveToElement(driver.FindElementByXPath("//div[@class='bp9cbjyn j83agx80 cbu4d94t taijpn5t l9j0dhe7']"));
                                            action.Perform();
                                            action.Click();
                                            Thread.Sleep(500);

                                        }
                                        catch
                                        {

                                        }



                                        OpenQA.Selenium.Remote.RemoteWebElement o = (OpenQA.Selenium.Remote.RemoteWebElement)lig;

                                        if (o.LocationOnScreenOnceScrolledIntoView.Y > (height - 215))
                                        {
                                            // o.Click();
                                            ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", ligneCommens[counterIDCom - 1]);
                                            Thread.Sleep(500);


                                            //imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                                            //////Save the screenshot
                                            ////imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                            //imageScreenshott.SaveAsFile(pathToSave + "\\SCREENSHOTSPICTURESCOMMENTS\\" + nomDossierCommentScreenshot + "\\image" + nbsc + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                            //nomAlbum = nomDossierCommentScreenshot + "\\image" + nbsc++ + ".png";
                                            //Thread.Sleep(500);

                                            try
                                            {
                                                IList<IWebElement> secondLiens = driver.FindElementsByXPath("//div[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl oo9gr5id gpro0wi8 lrazzd5p']");

                                                foreach (IWebElement e in secondLiens)
                                                {
                                                    OpenQA.Selenium.Remote.RemoteWebElement oooo = (OpenQA.Selenium.Remote.RemoteWebElement)e;

                                                    if (oooo.LocationOnScreenOnceScrolledIntoView.Y > 15 && oooo.LocationOnScreenOnceScrolledIntoView.Y < (height - 215))
                                                    {
                                                        if (oooo.Text.ToLower().Contains("moins") || oooo.Text.ToLower().Contains("less") || oooo.Text.ToLower().Contains("person") || oooo.Text.ToLower().Contains("masquer"))
                                                            continue;

                                                        if (oooo.Text.ToLower().Contains("afficher") || oooo.Text.ToLower().Contains("show"))
                                                            oooo.Click();
                                                        Thread.Sleep(250);
                                                        //((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", e);
                                                        //Thread.Sleep(2500);


                                                        try
                                                        {
                                                            Actions action = new Actions(driver);
                                                            action.MoveToElement(driver.FindElementByXPath("//div[@class='bp9cbjyn j83agx80 cbu4d94t taijpn5t l9j0dhe7']"));
                                                            action.Perform();
                                                            action.Click();
                                                            Thread.Sleep(500);

                                                        }
                                                        catch
                                                        {

                                                        }

                                                        //imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                                                        //////Save the screenshot
                                                        ////imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                                        //imageScreenshott.SaveAsFile(pathToSave + "\\SCREENSHOTSPICTURESCOMMENTS\\" + nomDossierCommentScreenshot + "\\image" + nbsc + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                                        //nomAlbum = nomDossierCommentScreenshot + "\\image" + nbsc++ + ".png";

                                                    }




                                                }


                                            }
                                            catch
                                            {

                                            }




                                            //autres reponses
                                            try
                                            {
                                                IList<IWebElement> secondLiens = driver.FindElementsByXPath("//div[@class='oajrlxb2 bp9cbjyn g5ia77u1 mtkw9kbi tlpljxtp qensuy8j ppp5ayq2 goun2846 ccm00jje s44p3ltw mk2mc5f4 rt8b4zig n8ej3o3l agehan2d sk4xxmp2 rq0escxv nhd2j8a9 pq6dq46d mg4g778l btwxx1t3 g5gj957u p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x tgvbjcpo hpfvmrgz jb3vyjys p8fzw8mz qt6c0cv9 a8nywdso l9j0dhe7 i1ao9s8h esuyzwwr f1sip0of du4w35lb lzcic4wl abiwlrkh gpro0wi8 m9osqain buofh1pr']");



                                                foreach (IWebElement e in secondLiens)
                                                {
                                                    OpenQA.Selenium.Remote.RemoteWebElement ooo = (OpenQA.Selenium.Remote.RemoteWebElement)e;

                                                    if (ooo.LocationOnScreenOnceScrolledIntoView.Y > 15 && ooo.LocationOnScreenOnceScrolledIntoView.Y < (height - 215))
                                                    {
                                                        if (ooo.Text.ToLower().Contains("moins") || ooo.Text.ToLower().Contains("less") || ooo.Text.ToLower().Contains("person") || ooo.Text.ToLower().Contains("masquer"))
                                                            continue;

                                                        if (ooo.Text.ToLower().Contains("afficher") || ooo.Text.ToLower().Contains("show") || ooo.Text.ToLower().Contains("ponse"))
                                                            ooo.Click();
                                                        Thread.Sleep(250);

                                                        //((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", e);
                                                        //Thread.Sleep(2500);

                                                        try
                                                        {
                                                            Actions action = new Actions(driver);
                                                            action.MoveToElement(driver.FindElementByXPath("//div[@class='bp9cbjyn j83agx80 cbu4d94t taijpn5t l9j0dhe7']"));
                                                            action.Perform();
                                                            action.Click();
                                                            Thread.Sleep(500);

                                                        }
                                                        catch
                                                        {

                                                        }


                                                        //imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                                                        //////Save the screenshot
                                                        ////imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                                        //imageScreenshott.SaveAsFile(pathToSave + "\\SCREENSHOTSPICTURESCOMMENTS\\" + nomDossierCommentScreenshot + "\\image" + nbsc + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                                        //nomAlbum = nomDossierCommentScreenshot + "\\image" + nbsc++ + ".png";
                                                        //Thread.Sleep(500);

                                                    }


                                                    
                                                }


                                            }
                                            catch (Exception ex)
                                            {

                                            }


                                        }



                                        //string IDComment = lig.GetAttribute("data-hovercard").Substring(lig.GetAttribute("data-hovercard").IndexOf("php?id=") + 7).Split('&')[0];
                                        //string urlCommen = lig.GetAttribute("href");
                                        //string IDComment = "999999";

                                        //nomCommen = lig.Text;

                                        //if (counterIDCom + 1 < idcom.Count)
                                        //    try
                                        //    {
                                        //        IDComment = idcom[counterIDCom].FindElement(By.TagName("image")).GetAttribute("xlink:href");
                                        //        IDComment = IDComment.Substring(IDComment.IndexOf("_") + 1).Split('_')[0];

                                        //    }
                                        //    catch
                                        //    {

                                        //    }

                                        //if (urlCommen.Contains("/profile.php?id="))
                                        //{
                                        //    photosCommen = "&sk=photos";
                                        //    urlCommen = urlCommen.Split('&')[0];

                                        //    //if (urlCommen.Contains(">"))
                                        //    //{
                                        //    //urlCommen = urlCommen.Substring(urlCommen.IndexOf(">") + 1);
                                        //    urlCommen = urlCommen + photosCommen;

                                        //    //}
                                        //}

                                        //else
                                        //{
                                        //    photosCommen = "/photos";
                                        //    urlCommen = urlCommen.Split('?')[0];
                                        //    urlCommen = urlCommen + photosCommen;
                                        //    urlCommen = urlCommen.Replace("/photos", "");
                                        //}

                                        //Analytics analy = new Analytics();
                                        //analy.Category = "PICTURESCOMMENTS";
                                        //analy.Url = urlCommen;
                                        //analy.PathToPicture = nomAlbum;
                                        //analy.Username = o.Text;

                                        //if (!Analytics.ContainsKey(nomCommen + ";" + urlCommen + ";" + nomAlbum))
                                        //    Analytics.Add(nomCommen + ";" + urlCommen + ";" + nomAlbum, analy);

                                        //if (!dicocomments.ContainsKey(urlCommen + ";" + nomAlbum))
                                        //{
                                        //    dicocomments.Add(urlCommen + ";" + nomAlbum, urlCommen + ";" + nomCommen + ";" + IDComment + ";" + nomAlbum);
                                        //}


                                        ////on récupère les commentaires en texte

                                        //try
                                        //{
                                        //    var ligncommentaires = driver.FindElementsByXPath("//div[@class='q9uorilb bvz0fpym c1et5uql sf5mxxl7']");

                                        //    foreach (IWebElement ligg in ligncommentaires)
                                        //    {
                                        //        OpenQA.Selenium.Remote.RemoteWebElement ooo = (OpenQA.Selenium.Remote.RemoteWebElement)ligg;
                                        //        string tentation = ligg.ToString();
                                        //        string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                        //        if (ooo.LocationOnScreenOnceScrolledIntoView.Y > 15 && ooo.LocationOnScreenOnceScrolledIntoView.Y < (height - 215))
                                        //        {
                                        //            //string IDComment = lig.GetAttribute("data-hovercard").Substring(lig.GetAttribute("data-hovercard").IndexOf("php?id=") + 7).Split('&')[0];
                                        //            string commment = "";
                                        //            string auteur = "";
                                        //            string urlProfile = "";

                                        //            if (!commentsDir.ContainsKey(idd + nomAlbum))
                                        //                commentsDir.Add(idd + nomAlbum, idd);
                                        //            else
                                        //                continue;


                                        //            try
                                        //            {
                                        //                commment = ligg.Text.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries)[1];

                                        //            }
                                        //            catch
                                        //            {

                                        //            }

                                        //            try
                                        //            {

                                        //                auteur = ligg.Text.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries)[0];
                                        //            }
                                        //            catch
                                        //            {

                                        //            }


                                        //            try
                                        //            {

                                        //                urlProfile = ligg.FindElement(By.TagName("a")).GetAttribute("href").Split(new string[] { "?comment" }, StringSplitOptions.RemoveEmptyEntries)[0];
                                        //            }
                                        //            catch
                                        //            {

                                        //            }


                                        //            commentairesTexte += auteur + ";" + commment + ";" + nomImage + ";" + urlForD + ";" + nomAlbum + ";" + urlProfile + "\n";
                                        //        }




                                        //    }

                                        //    if (commentairesTexte != "")
                                        //        try
                                        //        {
                                        //            string[] lignes = commentairesTexte.Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);
                                        //            string urlll = "";
                                        //            string user = "";
                                        //            string comm = "";
                                        //            string ligne = "";
                                        //            string urlImage = "";
                                        //            string album = "";

                                        //            foreach (string valeur in lignes)
                                        //            {
                                        //                user = valeur.Split(';')[0];
                                        //                comm = valeur.Split(';')[1];
                                        //                urlll = valeur.Split(';')[2];
                                        //                urlImage = valeur.Split(';')[3];
                                        //                album = valeur.Split(';')[4];

                                        //                ligne += user + ";" + comm + ";" + urlll + ";" + urlImage + ";" + album + "\r\n";
                                        //            }

                                        //            using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\TXT" + @"\commentsFromPictures.txt", true))
                                        //            {

                                        //                file.Write(ligne);
                                        //            }

                                        //            commentairesTexte = "";



                                        //        }
                                        //        catch (Exception ex)
                                        //        {

                                        //        }
                                        //}
                                        //catch
                                        //{

                                        //}


                                        counterIDCom++;
                                    }//fin boucle toutes les bulles

                                    //test autre manière de récupérer----------------------------------------------------------------------------------------------
                                    try
                                    {
                                        //on retourne au top de la page, on scroll et on capture
                                        ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", ligneCommens[0]);
                                        Thread.Sleep(2500);


                                        lienComments = driver.FindElementsByXPath("//div[@class='q9uorilb bvz0fpym c1et5uql sf5mxxl7']");
                                        int co = 0;
                                        counterIDCom = 0;
                                        nbsc = 2;

                                        imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                                        ////Save the screenshot
                                        //imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                        imageScreenshott.SaveAsFile(pathToSave + "\\SCREENSHOTSPICTURESCOMMENTS\\" + nomDossierCommentScreenshot + "\\image" + nbsc + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                        backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " capture d'écran : " + "\\SCREENSHOTSPICTURESCOMMENTS\\" + nomDossierCommentScreenshot + "\\image" + nbsc + ".png");

                                        nomAlbum = nomDossierCommentScreenshot + "\\image" + nbsc++ + ".png";
                                        Thread.Sleep(500);
                                       

                                        backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " scraping des identifiants : " + lienComments.Count());

                                        foreach (IWebElement ll in lienComments)
                                        {



                                            OpenQA.Selenium.Remote.RemoteWebElement ooo = (OpenQA.Selenium.Remote.RemoteWebElement)ll;
                                            string tentation = ll.ToString();
                                            string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                            if (ooo.LocationOnScreenOnceScrolledIntoView.Y > 15 && ooo.LocationOnScreenOnceScrolledIntoView.Y < (height - 215))
                                            {
                                                //string IDComment = lig.GetAttribute("data-hovercard").Substring(lig.GetAttribute("data-hovercard").IndexOf("php?id=") + 7).Split('&')[0];
                                                string commment = "";
                                                string auteur = "";
                                                string urlProfile = "";

                                                if (!commentsDir.ContainsKey(idd + nomAlbum))
                                                    commentsDir.Add(idd + nomAlbum, idd);
                                                else
                                                    continue;


                                                try
                                                {
                                                    commment = ll.Text.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries)[1];

                                                }
                                                catch
                                                {

                                                }

                                                try
                                                {

                                                    auteur = ll.Text.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries)[0];
                                                }
                                                catch
                                                {

                                                }


                                                try
                                                {

                                                    urlProfile = ll.FindElement(By.TagName("a")).GetAttribute("href").Split(new string[] { "?comment" }, StringSplitOptions.RemoveEmptyEntries)[0];
                                                }
                                                catch
                                                {

                                                }


                                                commentairesTexte += auteur + ";" + commment + ";" + nomImage + ";" + urlForD + ";" + nomAlbum + ";" + urlProfile + "\n";

                                                string urlCommen = ll.FindElement(By.TagName("a")).GetAttribute("href");
                                                string IDComment = "999999";

                                                nomCommen = ll.Text.Replace("\r\n"," ");

                                               

                                                if (urlCommen.Contains("/profile.php?id="))
                                                {
                                                    photosCommen = "&sk=photos";
                                                    urlCommen = urlCommen.Split('&')[0];

                                                    //if (urlCommen.Contains(">"))
                                                    //{
                                                    //urlCommen = urlCommen.Substring(urlCommen.IndexOf(">") + 1);
                                                    urlCommen = urlCommen + photosCommen;

                                                    //}
                                                }

                                                else
                                                {
                                                    photosCommen = "/photos";
                                                    urlCommen = urlCommen.Split('?')[0];
                                                    urlCommen = urlCommen + photosCommen;
                                                    urlCommen = urlCommen.Replace("/photos", "");
                                                }

                                                Analytics analy = new Analytics();
                                                analy.Category = "PICTURESCOMMENTS";
                                                analy.Url = urlCommen;
                                                analy.PathToPicture = nomAlbum;
                                                analy.Username = ooo.Text.Split(new string[] { "\r\n" },StringSplitOptions.RemoveEmptyEntries)[0];

                                                if (!Analytics.ContainsKey(nomCommen + ";" + urlCommen + ";" + nomAlbum))
                                                    Analytics.Add(nomCommen + ";" + urlCommen + ";" + nomAlbum, analy);

                                                if (!dicocomments.ContainsKey(urlCommen))
                                                {
                                                    dicocomments.Add(urlCommen, urlCommen + ";" + analy.Username + ";" + IDComment + ";" + nomAlbum);
                                                }
                                            }

                                            if (commentairesTexte != "")
                                                try
                                                {
                                                    string[] lignes = commentairesTexte.Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);
                                                    string urlll = "";
                                                    string user = "";
                                                    string comm = "";
                                                    string ligne = "";
                                                    string urlImage = "";
                                                    string album = "";

                                                    foreach (string valeur in lignes)
                                                    {
                                                        user = valeur.Split(';')[0];
                                                        comm = valeur.Split(';')[1];
                                                        urlll = valeur.Split(';')[2];
                                                        urlImage = valeur.Split(';')[3];
                                                        album = valeur.Split(';')[4];

                                                        ligne += user + ";" + comm + ";" + urlll + ";" + urlImage + ";" + album + "\r\n";
                                                    }

                                                    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\TXT" + @"\commentsFromPictures.txt", true))
                                                    {
                                                        //if (File.Exists(saveFileDialog1.FileName))
                                                        //    File.Delete(saveFileDialog1.FileName);
                                                        backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " écriture du fichier " +  "\\TXT" + @"\commentsFromPictures.txt");

                                                        file.Write(ligne);
                                                    }

                                                    commentairesTexte = "";

                                                   

                                                }
                                                catch (Exception ex)
                                                {

                                                }



                                            //ll.Click();
                                            //Thread.Sleep(250);
                                            OpenQA.Selenium.Remote.RemoteWebElement o = (OpenQA.Selenium.Remote.RemoteWebElement)ll;

                                            if (o.LocationOnScreenOnceScrolledIntoView.Y > (height - 215))
                                            {
                                                // o.Click();
                                                ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", lienComments[counterIDCom - 1]);
                                                Thread.Sleep(2500);


                                                imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                                                ////Save the screenshot
                                                //imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                                imageScreenshott.SaveAsFile(pathToSave + "\\SCREENSHOTSPICTURESCOMMENTS\\" + nomDossierCommentScreenshot + "\\image" + nbsc + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " capture d'écran : " + "\\SCREENSHOTSPICTURESCOMMENTS\\" + nomDossierCommentScreenshot + "\\image" + nbsc + ".png");

                                                nomAlbum = nomDossierCommentScreenshot + "\\image" + nbsc++ + ".png";
                                                Thread.Sleep(500);

                                                
                                            }



                                            counterIDCom++;

                                        }

                                    }

                                    catch
                                    {

                                    }




                                }
                                catch
                                {

                                }






                            }
                            catch
                            {

                            }

                            //on récupère les commentaires en texte

                            //try
                            //{
                            //    var ligncommentaires = driver.FindElementsByXPath("//div[@class='q9uorilb bvz0fpym c1et5uql sf5mxxl7']");

                            //    foreach (IWebElement lig in ligncommentaires)
                            //    {


                            //        //string IDComment = lig.GetAttribute("data-hovercard").Substring(lig.GetAttribute("data-hovercard").IndexOf("php?id=") + 7).Split('&')[0];
                            //        string commment = "";
                            //        string auteur = "";
                            //        string urlProfile = "";




                            //        try
                            //        {
                            //            commment = lig.Text.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries)[1];

                            //        }
                            //        catch
                            //        {

                            //        }

                            //        try
                            //        {

                            //            auteur = lig.Text.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries)[0];
                            //        }
                            //        catch
                            //        {

                            //        }


                            //        try
                            //        {

                            //            urlProfile = lig.FindElement(By.TagName("a")).GetAttribute("href").Split(new string[] { "?comment" }, StringSplitOptions.RemoveEmptyEntries)[0];
                            //        }
                            //        catch
                            //        {

                            //        }


                            //        commentairesTexte += auteur + ";" + commment + ";" + nomImage + ";" + urlForD + ";" + nomAlbum + ";" + urlProfile + "\n";


                            //    }
                            //}
                            //catch
                            //{

                            //}


                            //on essaie de récupérer les identifiants des amis qui postent des likes

                            try
                            {

                                //IWebElement el = driver.FindElementByXPath("//div[@class='_6iid']");////*[@id="u_o_2"]/div[2]/div/div[1]/div/div[1]

                                try
                                {
                                    //oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 a8c37x1j p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl l9j0dhe7 abiwlrkh p8dawk7l gmql0nx0 ce9h75a5 ni8dbmo4 stjgntxs
                                    //IWebElement el = driver.FindElementByXPath("//div[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl l9j0dhe7 abiwlrkh p8dawk7l']");

                                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " début du scraping des identifiants likes");


                                    IWebElement el = driver.FindElementByXPath("//div[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 a8c37x1j p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl l9j0dhe7 abiwlrkh p8dawk7l gmql0nx0 ce9h75a5 ni8dbmo4 stjgntxs']");

                                    Thread.Sleep(500);
                                    el.Click();
                                    Thread.Sleep(1500);

                                    Object lastHeight = null;
                                    lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 l56l04vs r57mb794 kh7kg01d c3g1iek1 otl40fxz cxgpxx05 rz4wbd8a sj5x9vvc a8nywdso')[0].scrollHeight");


                                    //Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[1].scrollHeight");

                                    while (true)
                                    {
                                        //driver.execute_script('document.getElementById("viewport").scrollTop += 100')

                                        ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 l56l04vs r57mb794 kh7kg01d c3g1iek1 otl40fxz cxgpxx05 rz4wbd8a sj5x9vvc a8nywdso')[0].scrollTo(0, document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 l56l04vs r57mb794 kh7kg01d c3g1iek1 otl40fxz cxgpxx05 rz4wbd8a sj5x9vvc a8nywdso')[0].scrollHeight)");
                                        Thread.Sleep(2000);

                                        Object newHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 l56l04vs r57mb794 kh7kg01d c3g1iek1 otl40fxz cxgpxx05 rz4wbd8a sj5x9vvc a8nywdso')[0].scrollHeight");//ll8tlv6m j83agx80 taijpn5t hzruof5a
                                        if (newHeight.Equals(lastHeight))
                                        {
                                            break;
                                        }
                                        lastHeight = newHeight;
                                    }


                                    el = driver.FindElementByXPath("//div[@class='ll8tlv6m j83agx80 taijpn5t hzruof5a']");
                                    //ll8tlv6m j83agx80 taijpn5t hzruof5a

                                    //IList<IWebElement> els = el.FindElements(By.TagName("a"));
                                    IList<IWebElement> els = el.FindElements(By.XPath(".//a[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl oo9gr5id gpro0wi8 lrazzd5p']"));
                                    IList<IWebElement> ids = el.FindElements(By.XPath(".//div[@class='q9uorilb l9j0dhe7 pzggbiyp du4w35lb']"));

                                    //q9uorilb l9j0dhe7 pzggbiyp du4w35lb

                                    int idCounter = 0;

                                    string urllll = "";
                                    string photosComment = "";
                                    string id = "999999";
                                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " scraping des identifiants likes : " + els.Count());

                                    foreach (IWebElement aelement in els)
                                    {
                                        if (aelement.Text == "")
                                            continue;

                                        urllll = aelement.GetAttribute("href").Split(new String[] { "__tn" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                        try
                                        {
                                            id = ids[idCounter].FindElement(By.TagName("image")).GetAttribute("xlink:href");
                                            id = id.Substring(id.IndexOf("_") + 1).Split('_')[0];
                                        }
                                        catch
                                        {

                                        }

                                        if (urllll.Contains("profile.php?"))
                                            urllll = urllll.Replace("&", "");
                                        else
                                            urllll = urllll.Replace("?", "");

                                        Analytics analy = new Analytics();
                                        analy.Category = "PICTURESLIKES";
                                        analy.Url = urllll;
                                        analy.PathToPicture = nomAlbum;
                                        analy.Username = aelement.Text;

                                        backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " scraping de l'identifiant : " + aelement.Text);


                                        if (!Analytics.ContainsKey(aelement.Text + ";" + urllll + ";" + nomAlbum))
                                            Analytics.Add(aelement.Text + ";" + urllll + ";" + nomAlbum, analy);

                                        if (!dicocomments.ContainsKey(urllll))
                                        {
                                            dicocomments.Add(urllll, urllll + ";" + aelement.Text + ";" + id);
                                        }
                                        //break;

                                        idCounter++;
                                    }

                                }
                                catch
                                {

                                }



                                Thread.Sleep(2500);
                                driver.Navigate().GoToUrl(urlForD);
                                Thread.Sleep(2500);




                                //IWebElement commel = driver.FindElementByXPath("//div[@class='_6iiv _6r_e']");
                                //IList<IWebElement> divs = commel.FindElements(By.ClassName("_72vr"));

                                //foreach (IWebElement aelement in divs)
                                //{
                                //    IWebElement ae = aelement.FindElement(By.TagName("a"));

                                //    string nom = ae.Text;
                                //    string idee = ae.GetAttribute("data-hovercard");
                                //    string urlel = ae.GetAttribute("href");
                                //    idee = idee.Substring(idee.IndexOf("id=") + 3).Split('&')[0].Replace("&amp;", "");

                                //    if (!dicocomments.ContainsKey(idee))
                                //    {
                                //        dicocomments.Add(idee, nom + ";" + urlel + ";" + idee + "\n");

                                //        break;
                                //    }
                                //}

                                //IList<IWebElement> els = driver.FindElementsByXPath("//*[@id=\"u_fetchstream_2_5\"]/div/div[3]/ul");

                                //foreach (IWebElement ell in els)
                                //{
                                //    IList<IWebElement> divs = ell.FindElements(By.ClassName("_72vr"));

                                //    foreach (IWebElement aelement in divs)
                                //    {
                                //        IWebElement ae = aelement.FindElement(By.TagName("a"));

                                //        string nom = ae.Text;
                                //        string idee = ae.GetAttribute("data-hovercard");
                                //        string urlel = ae.GetAttribute("href");
                                //        idee = idee.Substring(idee.IndexOf("id=") + 3).Split('&')[0].Replace("&amp;", "");

                                //        if (!dicocomments.ContainsKey(idee))
                                //        {
                                //            dicocomments.Add(idee, nom + ";" + urlel + ";" + idee + "\n");

                                //            break;
                                //        }
                                //    }

                                //}


                                //string codeComments = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)comments).WrappedDriver).PageSource;
                                //string commentaire = codeComments.Substring(codeComments.IndexOf("href=\"/ufi/reaction/profile/"));
                                //string[] ligneCommentaire = commentaire.Split(new string[] { "\"" }, StringSplitOptions.RemoveEmptyEntries);
                                //string linktolike = ligneCommentaire[1].Replace("amp;", "");

                                //driver.Navigate().GoToUrl("https://www.facebook.com/" + linktolike);
                                //Thread.Sleep(500);




                                //Thread.Sleep(2500);
                                ////on recupere les identifiants
                                //comments = driver.FindElementByXPath("_8u _42ef']");
                                //ligneCommentaire = commentaire.Split(new string[] { "<div class=\"_5j0e fsl fwb fcb\">" }, StringSplitOptions.RemoveEmptyEntries);//<div class="_5j0e fsl fwb fcb">




                            }
                            catch
                            {
                                //pictureBoxpictures.Image = global::FacebookAnalyzer.Properties.Resources.ko;
                            }



                            //try
                            //{
                            //    IWebElement el = driver.FindElementByXPath("//*[@id=\"reaction_profile_browser1\"]");
                            //    IList<IWebElement> elements = el.FindElements(By.TagName("li"));
                            //    foreach (IWebElement ell in elements)
                            //    {
                            //        IList<IWebElement> aelements = ell.FindElements(By.TagName("a"));

                            //        foreach (IWebElement ael in aelements)
                            //        {
                            //            string nom = aelements[1].GetAttribute("title");
                            //            string idd = aelements[1].GetAttribute("data-hovercard");
                            //            string urlll = aelements[1].GetAttribute("href").Replace("&amp;", "&");
                            //            idd = idd.Substring(idd.IndexOf("id=") + 3).Split('&')[0];

                            //            if (!dicocomments.ContainsKey(idd))
                            //            {
                            //                dicocomments.Add(idd, nom + ";" + urlll + ";" + idd + "\n");
                            //            }
                            //            break;
                            //        }
                            //    }

                            //    Thread.Sleep(rnd.Next(2500, 3500));
                            //    //driver.FindElementByClassName("_xlt _418x").Click();

                            //}
                            //catch { }
                        }
                        catch (Exception ex)
                        {
                            //pictureBoxpictures.Image = global::FacebookAnalyzer.Properties.Resources.ko;
                        }
                        //i++;
                        nbreImages++;
                        //backgroundWorker1.ReportProgress(nbreImages);

                    }
                    //imgprec = codeImages.Length;





                }
                catch (Exception ex)
                {


                    //pictureBoxpictures.Image = global::FacebookAnalyzer.Properties.Resources.ko;
                }

            }

            //on écrit les resultats des ID commentaires dans un fichier
            try
            {
                string ligne = "";
                string urll = "";
                string user = "";
                string iddd = "";
                foreach (string valeur in dicocomments.Keys)
                {
                    user = dicocomments[valeur].Split(';')[1];
                    urll = dicocomments[valeur].Split(';')[0];
                    iddd = dicocomments[valeur].Split(';')[2];

                    ligne += urll + ";" + user + ";" + iddd + "\r\n";
                }

                if (File.Exists(pathToSave + "\\TXT" + "\\friendsFromComments.txt"))
                    File.Delete(pathToSave + "\\TXT" + "\\friendsFromComments.txt");

                //File.WriteAllText(dossierLocal + @"\friendsFromComments.txt", ligne);
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " écriture du fichier "  + "\\TXT" + "\\friendsFromComments.txt");

                File.WriteAllText(pathToSave + "\\TXT" + "\\friendsFromComments.txt", ligne);

                dicocomments = new Dictionary<string, string>();
            }
            catch (Exception ex)
            {

            }

            //on écrit les commentaires
            //if(commentairesTexte != "")
            //try
            //{
            //    string [] lignes = commentairesTexte.Split(new string[] { "\n" },StringSplitOptions.RemoveEmptyEntries);
            //    string urll = "";
            //    string user = "";
            //    string comm = "";
            //    string ligne = "";
            //    string urlImage = "";
            //    string album = "";

            //    foreach (string valeur in lignes)
            //    {
            //        user = valeur.Split(';')[0];
            //        comm = valeur.Split(';')[1];
            //        urll = valeur.Split(';')[2];
            //        urlImage = valeur.Split(';')[3];
            //        album = valeur.Split(';')[4];

            //        ligne += user + ";" + comm + ";" + urll + ";" + urlImage + ";" + album +  "\r\n";
            //    }

            //    if (File.Exists(pathToSave + "\\TXT" + "\\commentsFromPictures.txt"))
            //        File.Delete(pathToSave + "\\TXT" + "\\commentsFromPictures.txt");

            //    File.WriteAllText(pathToSave + "\\TXT" + @"\commentsFromPictures.txt", ligne);

            //}
            //catch (Exception ex)
            //{

            //}

            ////photos de profil
            driver.Navigate().GoToUrl(pathToProfile);
            //var image = driver.FindElementByXPath("//a[@class='_1nv3 _11kg _1nv5 profilePicThumb']");

            ////clic sur image dans href
            //((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].click();", image);

            Thread.Sleep(5000);

            bool error = false;

            try
            {
                //var imageDown = driver.FindElementByXPath("clearfix fbPhotoSnowliftPopup']");
                //string codePage = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)imageDown).WrappedDriver).PageSource;
                //string codeImage = codePage.Substring(codePage.IndexOf("<img class=\"spotlight")).Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];
                //string link = codeImage.Substring(codeImage.IndexOf("src=") + 4).Split(new string[] { "\"" }, StringSplitOptions.RemoveEmptyEntries)[0];
                //link = link.Replace("\"", "").Replace("amp;", "");



                //using (var client = new WebClient())
                //{
                //    string cheminProf = targetName + "\\" + titrePage + "\\" + titrePage + "_profile" + ".jpg";
                //    client.DownloadFile(link, pathToSave + @"\Facebook_Friends\" + cheminProf);

                //}

                //Thread.Sleep(5000);


            }
            catch (Exception ex)
            {

                error = true;
                try
                {
                    string ligne = "";
                    string urll = "";
                    string user = "";
                    string iddd = "";
                    foreach (string valeur in dicocomments.Keys)
                    {
                        user = dicocomments[valeur].Split(';')[0];
                        urll = dicocomments[valeur].Split(';')[1];
                        //iddd = dicocomments[valeur].Split(';')[2];

                        ligne += urll + ";" + user + ";" + valeur.Replace("&amp", "") + ";" + "\r\n";
                    }

                    if (File.Exists(pathToSave + "\\TXT" + "\\friendsFromComments.txt"))
                        File.Delete(pathToSave + "\\TXT" + "\\friendsFromComments.txt");

                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " écriture du fichier "  + "\\TXT" + "\\friendsFromComments.txt");
                    File.WriteAllText(pathToSave + "\\TXT" + @"\friendsFromComments.txt", ligne);
                    dicocomments = new Dictionary<string, string>();
                }
                catch (Exception exx)
                {

                }

            }
            if (error)
            {
                try
                {
                    //var imageDown = driver.FindElementByXPath("_n3']");
                    //string codePage = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)imageDown).WrappedDriver).PageSource;
                    //string codeImage = codePage.Substring(codePage.IndexOf("class=\"_n3\"") + 11).Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    //codeImage = codeImage.Substring(codeImage.IndexOf("<img src=\"") + 10).Split(new string[] { " " }, StringSplitOptions.RemoveEmptyEntries)[0];
                    ////string link = codeImage.Substring(codeImage.IndexOf("src=") + 4).Split(new string[] { "\"" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    ////link = link.Replace("\"", "").Replace("amp;", "");
                    //codeImage = codeImage.Replace("\"", "").Replace("amp;", "");


                    //using (var client = new WebClient())
                    //{
                    //    string cheminProf = targetName + "\\" + titrePage + "\\" + titrePage + "_profile" + ".jpg";
                    //    client.DownloadFile(codeImage, pathToSave + @"\Facebook_Friends\" + cheminProf);
                    //}

                    //Thread.Sleep(5000);

                    try
                    {
                        string ligne = "";
                        string urll = "";
                        string user = "";
                        string iddd = "";
                        foreach (string valeur in dicocomments.Keys)
                        {
                            user = dicocomments[valeur].Split(';')[0];
                            urll = dicocomments[valeur].Split(';')[1];
                            iddd = dicocomments[valeur].Split(';')[2];

                            ligne += urll + ";" + user + ";" + valeur.Replace("&amp", "") + ";" + "\r\n";
                        }

                        if (File.Exists(pathToSave + "\\TXT" + "\\friendsFromComments.txt"))
                            File.Delete(pathToSave + "\\TXT" + "\\friendsFromComments.txt");

                        File.WriteAllText(pathToSave + "\\TXT" + @"\friendsFromComments.txt", ligne);
                        dicocomments = new Dictionary<string, string>();
                    }
                    catch (Exception ex)
                    {

                    }
                }
                catch (Exception ex)
                {
                    //pictureBoxpictures.Image = global::FacebookAnalyzer.Properties.Resources.ko;
                }
                finally
                {
                    i = 0;
                    nbreImages = 0;
                    photos = "";
                    photosBis = "";
                    backgroundWorker1.ReportProgress(++nbreRow);
                }
            }

            i = 0;
            nbreImages = 0;
            photos = "";
            photosBis = "";
            //backgroundWorker1.ReportProgress(++nbreRow);
            error = false;



            backgroundWorker1.ReportProgress(-102);
            Thread.Sleep(2000);

            //backgroundWorker1.ReportProgress(-3);
            //Thread.Sleep(2000);
            backgroundWorker1.CancelAsync();
            allimages = false;
            //labelanalyseencours.Visible = false;
            //pictureBoxwaiting.Visible = false;
            //pictureBoxlogofacebook.Visible = false;
        }

        //private void FindAllPicturesFromFacebookForNewLook(string url)
        //{

        //    //IsANewThread();
        //    backgroundWorker1.ReportProgress(-90);

        //    allimages = true;
        //    string targetName = textBoxops.Text.ToUpper();
        //    System.Random rnd = new System.Random();
        //    int nbreImages = 0;
        //    string titrePage = "";
        //    string urlFriend = textBoxUSERNAMEFRIENDS.Text;
        //    string dossierLocal = "";
        //    string ID = "";
        //    Dictionary<string, string> commentsDir = new Dictionary<string, string>();

        //    if (driver == null)
        //    {
        //        InitializeDriver();
        //        // 2. Go to the "Google" homepage
        //        driver.Navigate().GoToUrl("https://facebook.com/login");
        //        Thread.Sleep(500);

        //        if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
        //        {
        //            driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
        //            Thread.Sleep(2000);
        //        }

        //        // 3. Find the username textbox (by ID) on the homepage
        //        var userNameBox = driver.FindElementById("email");

        //        // 4. Enter the text (to search for) in the textbox
        //        userNameBox.SendKeys(textBoxUSERNAME.Text);

        //        // 3. Find the username textbox (by ID) on the homepage
        //        var userpasswordBox = driver.FindElementById("pass");

        //        // 4. Enter the text (to search for) in the textbox
        //        userpasswordBox.SendKeys(textBoxPASSWORD.Text);
        //        Thread.Sleep(5000);

        //        // 5. Find the search button (by Name) on the homepage
        //        driver.FindElementById("loginbutton").Click();
        //        Thread.Sleep(2500);


        //    }




        //    driver.Navigate().GoToUrl(urlFriend);
        //    titrePage = driver.Title;
        //    Thread.Sleep(5000);
        //    //backgroundWorker1.ReportProgress(-1, STEP);

        //    //if (!profilIsSet)
        //    //{
        //    //    GetProfileInformations(backgroundWorker1);

        //    //}






        //    if (!Directory.Exists(pathToSave + @"\PICTURES_SCREENSHOTS"))
        //        Directory.CreateDirectory(pathToSave + @"\PICTURES_SCREENSHOTS");

        //    //maintenant les photos 
        //    int nbreRow = 0;
        //    int i = 1;


        //    //deux url sont possibles /photos_of et /photos_all
        //    string photos = "";
        //    string photosBis = "";
        //    string chemin = "";
        //    string nomDossierCommentScreenshot = "";
        //    string commentairesTexte = "";
        //    int height = driver.Manage().Window.Size.Height;



        //    bool tout = false;
        //    int imgprec = 0;
        //    string pathToProfile = "";
        //    Dictionary<string, string> dicocomments = new Dictionary<string, string>();

        //    for (int j = 0; j < 2; j++)
        //    {


        //        if (j == 0)
        //        {
        //            if (url.Contains("id="))
        //            {
        //                photos = "&sk=photos";
        //            }
        //            else
        //                photos = "/photos";

        //            driver.Navigate().GoToUrl(url + photos);
        //            pathToProfile = url + photos;
        //            titrePage = driver.Title;

        //            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top

        //            Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
        //            long innerHeightt = (long)innerHeight;
        //            long scroll = (long)innerHeight;
        //            long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

        //            scrollHeight = scrollHeight + scroll;
        //            int hauteur = 450;



        //            try
        //            {
        //                Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
        //                int ii = 1;
        //                while (scrollHeight >= innerHeightt)
        //                {
        //                    //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
        //                    //Thread.Sleep(1000);

        //                    Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
        //                    imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

        //                    //Save the screenshot
        //                    imageScreenshott.SaveAsFile(pathToSave + @"\PICTURES_SCREENSHOTS\Screenshot" + "_" + ii + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
        //                    Thread.Sleep(100);


        //                    //Object newHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
        //                    //if (newHeight.Equals(lastHeight))
        //                    //{
        //                    //    break;
        //                    //}
        //                    //lastHeight = newHeight;

        //                    ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
        //                    if ((scrollHeight - innerHeightt) < 200)
        //                    {
        //                        Thread.Sleep(5000);
        //                    }
        //                    else
        //                        Thread.Sleep(2500);


        //                    scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
        //                    Thread.Sleep(2000);


        //                    if (scrollHeight <= innerHeightt)
        //                    {
        //                        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
        //                        Thread.Sleep(2000);
        //                        scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

        //                    }

        //                    scrollHeight = scrollHeight + scroll;
        //                    innerHeightt = innerHeightt + hauteur;
        //                    ii++;
        //                }
        //            }
        //            catch
        //            {
        //                //e.printStackTrace();
        //            }


        //            //while (!isElementPresent(driver))
        //            //    {
        //            //        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight)");
        //            //        Thread.Sleep(1500);
        //            //    }


        //            if (ONLYSCREENSHOT)
        //            {
        //                backgroundWorker1.ReportProgress(-102);
        //                Thread.Sleep(2000);

        //                //backgroundWorker1.ReportProgress(-3);
        //                //Thread.Sleep(2000);
        //                backgroundWorker1.CancelAsync();
        //                allimages = false;
        //                return;
        //            }



        //            if (titrePage.Contains(") "))
        //                titrePage = titrePage.Substring(titrePage.IndexOf(") ") + 2);

        //            Thread.Sleep(rnd.Next(5500, 7500));
        //        }
        //        else
        //        if (j == 1 && tout)
        //        {
        //            if (url.Contains("id="))
        //            {
        //                photosBis = "&sk=photos_all";
        //            }
        //            else
        //                photosBis = "/photos_all";

        //            driver.Navigate().GoToUrl(url + photosBis);
        //            pathToProfile = url + photosBis;
        //            //titrePage = driver.Title;

        //            Thread.Sleep(rnd.Next(5500, 7500));
        //        }
        //        else
        //        {
        //            continue;
        //        }



        //        try
        //        {
        //            //var imageDown = driver.FindElementByXPath("tagWrapper']");//uiMediaThumb _6i9 uiMediaThumbMedium

        //            if (isElementPresent(driver, "//div[@class='i09qtzwb rq0escxv n7fi1qx3 pmk7jnqg j9ispegn kr520xx4']"))
        //            {
        //                var tmp = driver.FindElementByXPath("//div[@class='i09qtzwb rq0escxv n7fi1qx3 pmk7jnqg j9ispegn kr520xx4']");
        //                string tmpCode = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)tmp).WrappedDriver).PageSource;

        //                string prenom = "";
        //                //if (tmpCode.Contains("Vos photos"))
        //                //    prenom = tmpCode.Substring(tmpCode.IndexOf("Vos photos") + 10).Split('<')[0];

        //                if (tmpCode.Contains("Photos de ") && (tmpCode.Contains("Vos photos") || tmpCode.Contains("Photos prises par")))
        //                    tout = true;
        //                else
        //                    tout = false;

        //            }
        //            var imageDown = driver.FindElementByXPath("//div[@class='j83agx80 btwxx1t3 lhclo0ds']");
        //            string codePage = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)imageDown).WrappedDriver).PageSource;



        //            //string [] codeImages = codePage.Split(new string[] { "<div class=\"tagWrapper" }, StringSplitOptions.RemoveEmptyEntries);
        //            //string[] codeImages = codePage.Split(new string[] { "<a class=\"uiMediaThumb _6i9 uiMediaThumbMedium" }, StringSplitOptions.RemoveEmptyEntries);
        //            IWebElement container = driver.FindElementByXPath("//div[@class='j83agx80 btwxx1t3 lhclo0ds']");
        //            IList<IWebElement> imagees = container.FindElements(By.TagName("a"));

        //            //IList <IWebElement> imagees = driver.FindElementsByXPath("//a[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 a8c37x1j p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl gmql0nx0 gpro0wi8 datstx6m l9j0dhe7 k4urcfbm']");

        //            if (!Directory.Exists(pathToSave + "\\PICTURES\\"))
        //                Directory.CreateDirectory(pathToSave + "\\PICTURES");

        //            if (!Directory.Exists(pathToSave + "\\SCREENSHOTSPICTURESCOMMENTS\\"))
        //                Directory.CreateDirectory(pathToSave + "\\SCREENSHOTSPICTURESCOMMENTS\\");

        //            //SCREENSHOTSPICTURESCOMMENTS
        //            //if (!Directory.Exists(pathToSave + "\\SCREENSHOTSPICTURESLIKES\\"))
        //            //    Directory.CreateDirectory(pathToSave + "\\SCREENSHOTSPICTURESLIKES\\");

        //            if (!Directory.Exists(pathToSave + "\\PICTURES_TAGGED\\"))
        //                Directory.CreateDirectory(pathToSave + "\\PICTURES_TAGGED\\");

        //            if (!Directory.Exists(pathToSave + "\\TXT\\"))
        //                Directory.CreateDirectory(pathToSave + "\\TXT\\");

        //            dossierLocal = pathToSave + @"\PICTURES";

        //            //backgroundWorker1.ReportProgress(-1, (codeImages.Length - 1) + imgprec);

        //            int counter = 0;
        //            object[] codeImagess = imagees.ToArray();

        //            object[] linktoImages = imagees.ToArray();

        //            IList <string> liens = new List<string>();
        //            foreach(IWebElement urll in codeImagess)
        //            {
        //                liens.Add(urll.GetAttribute("href"));

        //            }



        //            foreach (string urll in liens)
        //            {
        //                //if (!urll.Replace(" ", "").StartsWith("\"aria-label="))
        //                //{
        //                //    //backgroundWorker1.ReportProgress(i);
        //                //    i++;
        //                //    continue;
        //                //}


        //                //if (allimagesFast && nbreImages == 5)
        //                //{
        //                //    nbreImages = 0;
        //                //    break;
        //                //}

        //                //string urlForD = urll.Substring(urll.IndexOf("href=\"") + 6).Split('"')[0].Replace("\"", "").Replace("amp;", "").Replace("&type=3&theater", "&type=3&theater");
        //                string urlForD = urll;
        //                int nbsc = 1;

        //                ////////////////////////////////////////////////////////////////////////////////////////////////////////


        //                try
        //                {
        //                    //Thread.Sleep(rnd.Next(7500, 9500));
        //                    driver.Navigate().GoToUrl(urlForD);
        //                    Thread.Sleep(rnd.Next(2500, 4500));

        //                    commentsDir = new Dictionary<string, string>();

        //                    var imageFinale = driver.FindElementByXPath("//img[@class='gitj76qy r9f5tntg d2edcug0']");
        //                    //var imageFinale = driver.FindElementByTagName("//img[@class='gitj76qy r9f5tntg d2edcug0]");
        //                    //string codePagee = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)imageFinale).WrappedDriver).PageSource;
        //                    //string codeImage = codePagee.Substring(codePagee.IndexOf("<img class=\"spotlight")).Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];
        //                    //string link = codeImage.Substring(codeImage.IndexOf("src=") + 4).Split(new string[] { "\"" }, StringSplitOptions.RemoveEmptyEntries)[0];
        //                    string link = imageFinale.GetAttribute("src");



        //                    string nomImage = "";
        //                    string nomAlbum = "";
        //                    bool morePeople = false;
        //                    string tags = "";
        //                    string morepeople = "";

        //                    int numTag = 1;

        //                    using (var client = new WebClient())
        //                    {
        //                        //chemin = targetName + "\\" + titrePage + "\\" + titrePage + i + ".jpg";
        //                        //string sc = targetName + "\\" + titrePage + "\\screenshot_" + titrePage + i + ".jpg";

        //                        chemin = "Picture" + i + ".jpg";
        //                        nomDossierCommentScreenshot = "Picture" + i;
        //                        string sc = "screenshot_" + i + ".jpg";

        //                        client.DownloadFile(link, pathToSave + "\\PICTURES\\" + chemin);
        //                        Thread.Sleep(500);

        //                        //nomImage = pathToSave + "\\PICTURES\\" + chemin;
        //                        nomImage = "\\PICTURES\\" + chemin;

        //                        IList<IWebElement> list = new List<IWebElement>();
        //                        var tagImages = new ReadOnlyCollection<IWebElement>(list);
        //                        ////on essaie de récupérer des photos tagguées
        //                        try
        //                        {
        //                            //try
        //                            //{
        //                            //    //d2edcug0 hpfvmrgz qv66sw1b c1et5uql rrkovp55 a8c37x1j keod5gw0 nxhoafnm aigsh9s9 d3f4x2em fe6kdd0r mau55g9w c8b282yb mdeji52x a5q79mjw g1cxx5fr knj5qynh oo9gr5id
        //                            //    tagImages = driver.FindElementsByXPath("//span[@class='oi732d6d ik7dh3pa d2edcug0 hpfvmrgz qv66sw1b c1et5uql a8c37x1j s89635nw ew0dbk1b a5q79mjw g1cxx5fr knj5qynh oo9gr5id']");
        //                            //    if(tagImages.Count == 0)
        //                            //    {
        //                            //        try
        //                            //        {
        //                            //            tagImages = driver.FindElementsByXPath("//span[@class='d2edcug0 hpfvmrgz qv66sw1b c1et5uql rrkovp55 a8c37x1j keod5gw0 nxhoafnm aigsh9s9 d3f4x2em fe6kdd0r mau55g9w c8b282yb mdeji52x a5q79mjw g1cxx5fr knj5qynh oo9gr5id']");
        //                            //        }
        //                            //        catch
        //                            //        {

        //                            //        }
        //                            //    }
        //                            //}
        //                            //catch
        //                            //{
        //                            //    try
        //                            //    {
        //                            //        tagImages = driver.FindElementsByXPath("//span[@class='d2edcug0 hpfvmrgz qv66sw1b c1et5uql rrkovp55 a8c37x1j keod5gw0 nxhoafnm aigsh9s9 d3f4x2em fe6kdd0r mau55g9w c8b282yb mdeji52x a5q79mjw g1cxx5fr knj5qynh oo9gr5id']");
        //                            //    }
        //                            //    catch
        //                            //    {

        //                            //    }
        //                            //}

        //                            //object[] tmp = tagImages.ToArray();

        //                            IList<IWebElement> els = new List<IWebElement>();
        //                            IList<IWebElement> idss = new List<IWebElement>();
        //                            //si autres personnes on clic et on prend les noms
        //                            try 
        //                            {
        //                                IWebElement clickk = driver.FindElementByXPath("//div[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl oo9gr5id gpro0wi8 lrazzd5p']");
        //                                clickk.Click();
        //                                //((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", clickk);
        //                                Thread.Sleep(500);

        //                                //o8kakjsu rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb c3g1iek1 otl40fxz cxgpxx05 rz4wbd8a sj5x9vvc a8nywdso
        //                                Object lastHeight = null;
        //                                lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('j83agx80 cbu4d94t lzcic4wl ni8dbmo4 stjgntxs oqq733wu l9j0dhe7 du4w35lb cwj9ozl2 ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi nwpbqux9 gc7gaz0o k4urcfbm')[0].scrollHeight");


        //                                //Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[1].scrollHeight");

        //                                while (true)
        //                                {
        //                                    //driver.execute_script('document.getElementById("viewport").scrollTop += 100')

        //                                    ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('j83agx80 cbu4d94t lzcic4wl ni8dbmo4 stjgntxs oqq733wu l9j0dhe7 du4w35lb cwj9ozl2 ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi nwpbqux9 gc7gaz0o k4urcfbm')[0].scrollTo(0, document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 l56l04vs r57mb794 kh7kg01d c3g1iek1 otl40fxz cxgpxx05 rz4wbd8a sj5x9vvc a8nywdso')[0].scrollHeight)");
        //                                    Thread.Sleep(2000);

        //                                    Object newHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('j83agx80 cbu4d94t lzcic4wl ni8dbmo4 stjgntxs oqq733wu l9j0dhe7 du4w35lb cwj9ozl2 ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi nwpbqux9 gc7gaz0o k4urcfbm')[0].scrollHeight");//ll8tlv6m j83agx80 taijpn5t hzruof5a
        //                                    if (newHeight.Equals(lastHeight))
        //                                    {
        //                                        break;
        //                                    }
        //                                    lastHeight = newHeight;
        //                                }


        //                                var el = driver.FindElementByXPath("//div[@class='ll8tlv6m j83agx80 taijpn5t hzruof5a']");
        //                                //ll8tlv6m j83agx80 taijpn5t hzruof5a

        //                                //IList<IWebElement> els = el.FindElements(By.TagName("a"));
        //                                els = el.FindElements(By.XPath(".//a[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl oo9gr5id gpro0wi8 lrazzd5p']"));
        //                                idss = el.FindElements(By.XPath(".//div[@class='q9uorilb l9j0dhe7 pzggbiyp du4w35lb']"));

        //                                //q9uorilb l9j0dhe7 pzggbiyp du4w35lb

        //                                morePeople = true;
        //                                int idCounterr = 0;
        //                                string iddd = "999999";
        //                                if (els.Count > 0)
        //                                {
        //                                    foreach (IWebElement autre in els)
        //                                    {
        //                                        try
        //                                        {
        //                                            iddd = idss[idCounterr].FindElement(By.TagName("image")).GetAttribute("xlink:href");
        //                                            iddd = iddd.Substring(iddd.IndexOf("_") + 1).Split('_')[0];
        //                                        }
        //                                        catch
        //                                        {

        //                                        }



        //                                        //morepeople += autre.Text + ";" + iddd + ";" + autre.Text + "_" + "999999" + "_" + numTag + i + ".png" + ";" + autre.GetAttribute("href") + "\n";
        //                                        morepeople += autre.Text + ";" + iddd + ";" + "@@@@@@" + ";" + autre.GetAttribute("href") + "\n";

        //                                        //tags += autre.Text + ";" + iddd + ";" + sc + ";" + autre.GetAttribute("href") + "\n";

        //                                        idCounterr++;
        //                                    }
        //                                }




        //                            }//oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl oo9gr5id gpro0wi8 lrazzd5p
        //                            catch
        //                            {
        //                                morePeople = false;
        //                                //try
        //                                //{
        //                                //    driver.FindElementByXPath("//div[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 a8c37x1j p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl l9j0dhe7 abiwlrkh p8dawk7l gmql0nx0 ce9h75a5 ni8dbmo4 stjgntxs']").Click();
        //                                //    Thread.Sleep(500);

        //                                //    //o8kakjsu rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb c3g1iek1 otl40fxz cxgpxx05 rz4wbd8a sj5x9vvc a8nywdso
        //                                //    Object lastHeight = null;
        //                                //    lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('j83agx80 cbu4d94t lzcic4wl ni8dbmo4 stjgntxs oqq733wu l9j0dhe7 du4w35lb cwj9ozl2 ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi nwpbqux9 gc7gaz0o k4urcfbm')[0].scrollHeight");


        //                                //    //Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[1].scrollHeight");

        //                                //    while (true)
        //                                //    {
        //                                //        //driver.execute_script('document.getElementById("viewport").scrollTop += 100')

        //                                //        ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 l56l04vs r57mb794 kh7kg01d c3g1iek1 otl40fxz cxgpxx05 rz4wbd8a sj5x9vvc a8nywdso.scrollTo(0, document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 l56l04vs r57mb794 kh7kg01d c3g1iek1 otl40fxz cxgpxx05 rz4wbd8a sj5x9vvc a8nywdso')[0].scrollHeight)");
        //                                //        Thread.Sleep(2000);

        //                                //        Object newHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('j83agx80 cbu4d94t lzcic4wl ni8dbmo4 stjgntxs oqq733wu l9j0dhe7 du4w35lb cwj9ozl2 ue3kfks5 pw54ja7n uo3d90p7 l82x9zwi nwpbqux9 gc7gaz0o k4urcfbm')[0].scrollHeight");//ll8tlv6m j83agx80 taijpn5t hzruof5a
        //                                //        if (newHeight.Equals(lastHeight))
        //                                //        {
        //                                //            break;
        //                                //        }
        //                                //        lastHeight = newHeight;
        //                                //    }


        //                                //    var el = driver.FindElementByXPath("//div[@class='ll8tlv6m j83agx80 taijpn5t hzruof5a']");
        //                                //    //ll8tlv6m j83agx80 taijpn5t hzruof5a

        //                                //    //IList<IWebElement> els = el.FindElements(By.TagName("a"));
        //                                //    els = el.FindElements(By.XPath(".//a[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl oo9gr5id gpro0wi8 lrazzd5p']"));
        //                                //    Thread.Sleep(2500);
        //                                //    driver.Navigate().GoToUrl(urlForD);
        //                                //    Thread.Sleep(2500);
        //                                //}
        //                                //catch
        //                                //{

        //                                //}
        //                            }

        //                            if (morePeople)
        //                            {
        //                                try
        //                                {
        //                                    //driver.FindElementByXPath("//div[@class='cypi58rs pmk7jnqg fcg2cn6m tkr6xdv7']").Click();
        //                                    //Thread.Sleep(500);
        //                                    driver.Navigate().GoToUrl(urlForD);
        //                                    Thread.Sleep(2500);
        //                                    morePeople = false;
        //                                }
        //                                catch
        //                                {
        //                                    //driver.Navigate().GoToUrl(urlForD);
        //                                    //Thread.Sleep(2500);
        //                                    morePeople = false;
        //                                }



        //                            }

        //                            //d2edcug0 hpfvmrgz qv66sw1b c1et5uql rrkovp55 a8c37x1j keod5gw0 nxhoafnm aigsh9s9 d3f4x2em fe6kdd0r mau55g9w c8b282yb mdeji52x a5q79mjw g1cxx5fr knj5qynh oo9gr5id
        //                            try
        //                            {
        //                                //d2edcug0 hpfvmrgz qv66sw1b c1et5uql rrkovp55 a8c37x1j keod5gw0 nxhoafnm aigsh9s9 d3f4x2em fe6kdd0r mau55g9w c8b282yb mdeji52x a5q79mjw g1cxx5fr knj5qynh oo9gr5id
        //                                tagImages = driver.FindElementsByXPath("//span[@class='oi732d6d ik7dh3pa d2edcug0 hpfvmrgz qv66sw1b c1et5uql a8c37x1j s89635nw ew0dbk1b a5q79mjw g1cxx5fr knj5qynh oo9gr5id']");
        //                                if (tagImages.Count == 0)
        //                                {
        //                                    try
        //                                    {
        //                                        tagImages = driver.FindElementsByXPath("//span[@class='d2edcug0 hpfvmrgz qv66sw1b c1et5uql rrkovp55 a8c37x1j keod5gw0 nxhoafnm aigsh9s9 d3f4x2em fe6kdd0r mau55g9w c8b282yb mdeji52x a5q79mjw g1cxx5fr knj5qynh oo9gr5id']");
        //                                    }
        //                                    catch
        //                                    {

        //                                    }
        //                                }
        //                            }
        //                            catch
        //                            {
        //                                try
        //                                {
        //                                    tagImages = driver.FindElementsByXPath("//span[@class='d2edcug0 hpfvmrgz qv66sw1b c1et5uql rrkovp55 a8c37x1j keod5gw0 nxhoafnm aigsh9s9 d3f4x2em fe6kdd0r mau55g9w c8b282yb mdeji52x a5q79mjw g1cxx5fr knj5qynh oo9gr5id']");
        //                                }
        //                                catch
        //                                {

        //                                }
        //                            }

        //                            object[] tmp = tagImages.ToArray();

        //                            if (tmp.Length > 0)
        //                            {
        //                                //int numTag = 1;
        //                                //string tags = "";
        //                                Dictionary<string, string> dicotags = new Dictionary<string, string>();



        //                                //int idCounterr = 0;
        //                                //string iddd = "999999";
        //                                //if (els.Count > 0)
        //                                //{
        //                                //    foreach (IWebElement autre in els)
        //                                //    {
        //                                //        try
        //                                //        {
        //                                //            iddd = idss[idCounterr].FindElement(By.TagName("image")).GetAttribute("xlink:href");
        //                                //            iddd = iddd.Substring(iddd.IndexOf("_") + 1).Split('_')[0];
        //                                //        }
        //                                //        catch
        //                                //        {

        //                                //        }



        //                                //        tags += autre.Text + ";" + iddd + ";" + autre.Text + "_" + "999999" + "_" + numTag + i + ".png" + ";" + autre.GetAttribute("href") +"\n";
        //                                //        idCounterr++;
        //                                //    }
        //                                //}

        //                                foreach (IWebElement elli in tagImages)
        //                                {
        //                                    var inputTags = elli.FindElements(By.TagName("a"));


        //                                    foreach (IWebElement ii in inputTags)
        //                                    {
        //                                        //string idTag = ii.GetAttribute("data-tag");
        //                                        string userNameTag = ii.Text;
        //                                        string urllTag = ii.GetAttribute("href");

        //                                        if (!urllTag.Contains("profile.php?id="))
        //                                            urllTag = urllTag.Split('?')[0];
        //                                        else
        //                                            urllTag = urllTag.ToString().Split('&')[0];

        //                                        //if (idTag == "")
        //                                        string idTag = "999999";

        //                                        Screenshot imageScreenshot = ((ITakesScreenshot)driver).GetScreenshot();
        //                                        ////Save the screenshot
        //                                        //imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
        //                                        imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);

        //                                        Thread.Sleep(500);

        //                                        morepeople = morepeople.Replace("@@@@@@", userNameTag + "_" + idTag + "_" + numTag + i + ".png");
        //                                        tags += morepeople;
        //                                        morepeople = "";

        //                                        tags += userNameTag + ";" + idTag + ";" + userNameTag + "_" + idTag + "_" + numTag + i + ".png" + ";" + urllTag +"\n";

        //                                        Analytics analy = new Analytics();
        //                                        analy.Category = "TAGS";
        //                                        analy.Url = urllTag;
        //                                        analy.PathToPicture = userNameTag + "_" + idTag + "_" + numTag + i + ".png";
        //                                        analy.Username = userNameTag;

        //                                        if (!Analytics.ContainsKey(userNameTag + ";" + urllTag + ";" + userNameTag + "_" + idTag + "_" + numTag + i + ".png"))
        //                                            Analytics.Add(userNameTag + ";" + urllTag + ";" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", analy);



        //                                        userNameTag = "";
        //                                        idTag = "";
        //                                        numTag++;


        //                                        if (!dicotags.ContainsKey(tags))
        //                                        {
        //                                            using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\TXT\\tags.txt", true))
        //                                            {
        //                                                //if (File.Exists(saveFileDialog1.FileName))
        //                                                //    File.Delete(saveFileDialog1.FileName);

        //                                                file.Write(tags);

        //                                            }

        //                                            //using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\TXT\\tags.txt", true))
        //                                            //{
        //                                            //    //if (File.Exists(saveFileDialog1.FileName))
        //                                            //    //    File.Delete(saveFileDialog1.FileName);

        //                                            //    file.Write(tags);

        //                                            //}
        //                                            dicotags.Add(tags, tags);
        //                                            tags = "";
        //                                        }

        //                                    }

        //                                    tags = "";

        //                                }



        //                                tags = "";
        //                                dicotags = new Dictionary<string, string>();
        //                            }


        //                        }
        //                        catch(Exception ex)
        //                        {

        //                        }
        //                        backgroundWorker1.ReportProgress(i);

        //                        //Screenshot imageScreenshot = ((ITakesScreenshot)driver).GetScreenshot();
        //                        ////Save the screenshot
        //                        //imageScreenshot.SaveAsFile(pathToSave + @"\Facebook_Friends\" + targetName + "\\PICTURES\\" + sc, OpenQA.Selenium.ScreenshotImageFormat.Jpeg);

        //                        i++;

        //                    }

        //                    //on essaie de récupérer les identifiants des amis qui postent des commentaires

        //                    //Thread.Sleep(2500);

        //                    if (!Directory.Exists(pathToSave + "\\SCREENSHOTSPICTURESCOMMENTS\\" + nomDossierCommentScreenshot))
        //                        Directory.CreateDirectory(pathToSave + "\\SCREENSHOTSPICTURESCOMMENTS\\" + nomDossierCommentScreenshot);


        //                    Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
        //                    ////Save the screenshot
        //                    //imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
        //                    imageScreenshott.SaveAsFile(pathToSave + "\\SCREENSHOTSPICTURESCOMMENTS\\" + nomDossierCommentScreenshot + "\\image" + nbsc ++ + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
        //                    nomAlbum = nomDossierCommentScreenshot + "\\image1" + ".png";
        //                    Thread.Sleep(500);


        //                    try
        //                    {
        //                        try
        //                        {
        //                            var lienComments = driver.FindElementsByXPath("//div[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl l9j0dhe7 abiwlrkh gpro0wi8 dwo3fsh8 ow4ym5g4 auili1gw du4w35lb gmql0nx0']");

        //                            foreach (IWebElement ll in lienComments)
        //                            {

        //                                    //ll.Click();
        //                                //Thread.Sleep(250);


        //                                try
        //                                {
        //                                    var secondLien = driver.FindElementByXPath("//div[@class='oajrlxb2 bp9cbjyn g5ia77u1 mtkw9kbi tlpljxtp qensuy8j ppp5ayq2 goun2846 ccm00jje s44p3ltw mk2mc5f4 rt8b4zig n8ej3o3l agehan2d sk4xxmp2 rq0escxv nhd2j8a9 pq6dq46d mg4g778l btwxx1t3 g5gj957u p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x tgvbjcpo hpfvmrgz jb3vyjys p8fzw8mz qt6c0cv9 a8nywdso l9j0dhe7 i1ao9s8h esuyzwwr f1sip0of du4w35lb lzcic4wl abiwlrkh gpro0wi8 m9osqain buofh1pr']");
        //                                    secondLien.Click();
        //                                    Thread.Sleep(250);

        //                                    ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", lienComments[0]);
        //                                    Thread.Sleep(2500);

        //                                    imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
        //                                    ////Save the screenshot
        //                                    //imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
        //                                    imageScreenshott.SaveAsFile(pathToSave + "\\SCREENSHOTSPICTURESCOMMENTS\\" + nomDossierCommentScreenshot + "\\image" + nbsc + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
        //                                    nomAlbum = nomDossierCommentScreenshot + "\\image" +  nbsc++ + ".png";
        //                                    Thread.Sleep(500);


        //                                }
        //                                catch
        //                                {

        //                                }

        //                                break;

        //                            }

        //                            Thread.Sleep(500);

        //                            try
        //                            {
        //                                IList<IWebElement> secondLiens = driver.FindElementsByXPath("//div[@class='rq0escxv l9j0dhe7 du4w35lb j83agx80 cbu4d94t pfnyh3mw d2edcug0 hpfvmrgz n8tt0mok hyh9befq r8blr3vg jwdofwj8 g0qnabr5']");

        //                                foreach (IWebElement e in secondLiens)
        //                                {
        //                                    e.Click();
        //                                    Thread.Sleep(250);
        //                                    ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", lienComments[0]);
        //                                    Thread.Sleep(1500);
        //                                }



        //                            }
        //                            catch
        //                            {
        //                                ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", lienComments[0]);
        //                                Thread.Sleep(1500);
        //                            }

        //                            //oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl oo9gr5id gpro0wi8 lrazzd5p

        //                            try
        //                            {
        //                                IList<IWebElement> secondLiens = driver.FindElementsByXPath("//div[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl oo9gr5id gpro0wi8 lrazzd5p']");

        //                                foreach (IWebElement e in secondLiens)
        //                                {
        //                                    OpenQA.Selenium.Remote.RemoteWebElement o = (OpenQA.Selenium.Remote.RemoteWebElement)e;

        //                                    if (o.LocationOnScreenOnceScrolledIntoView.Y > 15 && o.LocationOnScreenOnceScrolledIntoView.Y < (height - 215))
        //                                    {
        //                                        if (o.Text.ToLower().Contains("moins") || o.Text.ToLower().Contains("less") || o.Text.ToLower().Contains("person") || o.Text.ToLower().Contains("masquer"))
        //                                            continue;

        //                                        if (o.Text.ToLower().Contains("afficher") || o.Text.ToLower().Contains("show"))
        //                                        o.Click();
        //                                        Thread.Sleep(250);

        //                                        ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", lienComments[0]);
        //                                        Thread.Sleep(2500);

        //                                        try
        //                                        {
        //                                            Actions action = new Actions(driver);
        //                                            action.MoveToElement(driver.FindElementByXPath("//div[@class='bp9cbjyn j83agx80 cbu4d94t taijpn5t l9j0dhe7']"));
        //                                            action.Perform();
        //                                            action.Click();
        //                                            Thread.Sleep(500);

        //                                        }
        //                                        catch
        //                                        {

        //                                        }

        //                                        imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
        //                                        ////Save the screenshot
        //                                        //imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
        //                                        imageScreenshott.SaveAsFile(pathToSave + "\\SCREENSHOTSPICTURESCOMMENTS\\" + nomDossierCommentScreenshot + "\\image" + nbsc + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
        //                                        nomAlbum = nomDossierCommentScreenshot + "\\image" + nbsc++ + ".png";

        //                                    }




        //                                }


        //                            }
        //                            catch
        //                            {

        //                            }

        //                            //autres reponses
        //                            try
        //                            {
        //                                IList<IWebElement> secondLiens = driver.FindElementsByXPath("//div[@class='oajrlxb2 bp9cbjyn g5ia77u1 mtkw9kbi tlpljxtp qensuy8j ppp5ayq2 goun2846 ccm00jje s44p3ltw mk2mc5f4 rt8b4zig n8ej3o3l agehan2d sk4xxmp2 rq0escxv nhd2j8a9 pq6dq46d mg4g778l btwxx1t3 g5gj957u p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x tgvbjcpo hpfvmrgz jb3vyjys p8fzw8mz qt6c0cv9 a8nywdso l9j0dhe7 i1ao9s8h esuyzwwr f1sip0of du4w35lb lzcic4wl abiwlrkh gpro0wi8 m9osqain buofh1pr']");



        //                                foreach (IWebElement e in secondLiens)
        //                                {
        //                                    OpenQA.Selenium.Remote.RemoteWebElement o = (OpenQA.Selenium.Remote.RemoteWebElement)e;

        //                                    if (o.LocationOnScreenOnceScrolledIntoView.Y > 15 && o.LocationOnScreenOnceScrolledIntoView.Y < (height - 215))
        //                                    {
        //                                        if (o.Text.ToLower().Contains("moins") || o.Text.ToLower().Contains("less") || o.Text.ToLower().Contains("person") || o.Text.ToLower().Contains("masquer"))
        //                                            continue;

        //                                        if (o.Text.ToLower().Contains("afficher") || o.Text.ToLower().Contains("show"))
        //                                            o.Click();

        //                                        ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", lienComments[0]);
        //                                        Thread.Sleep(2500);
        //                                        //((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", ligneCommens[counterIDCom - 1]);
        //                                        //Thread.Sleep(2500);

        //                                        try
        //                                        {
        //                                            Actions action = new Actions(driver);
        //                                            action.MoveToElement(driver.FindElementByXPath("//div[@class='bp9cbjyn j83agx80 cbu4d94t taijpn5t l9j0dhe7']"));
        //                                            action.Perform();
        //                                            action.Click();
        //                                            Thread.Sleep(500);

        //                                        }
        //                                        catch
        //                                        {

        //                                        }

        //                                        imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
        //                                        ////Save the screenshot
        //                                        //imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
        //                                        imageScreenshott.SaveAsFile(pathToSave + "\\SCREENSHOTSPICTURESCOMMENTS\\" + nomDossierCommentScreenshot + "\\image" + nbsc + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
        //                                        nomAlbum = nomDossierCommentScreenshot + "\\image" + nbsc++ + ".png";


        //                                        //((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", e);
        //                                        //Thread.Sleep(2500);


        //                                        //Thread.Sleep(250);

        //                                    }


        //                                    //e.Click();
        //                                    //Thread.Sleep(250);
        //                                }


        //                            }
        //                            catch (Exception ex)
        //                            {

        //                            }





        //                            string photosCommen = "";
        //                            string nomCommen = "";
        //                            var ligneCommens = driver.FindElementsByXPath("//a[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl gmql0nx0 gpro0wi8']");
        //                            var containerr = driver.FindElementByXPath("//div[@class='cwj9ozl2']");
        //                            IList<IWebElement> bulles = containerr.FindElements(By.XPath(".//a[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl gmql0nx0 gpro0wi8']"));

        //                            IList<IWebElement> idcom = containerr.FindElements(By.XPath(".//div[@class='q9uorilb l9j0dhe7 pzggbiyp du4w35lb']"));

        //                            ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", ligneCommens[0]);
        //                            Thread.Sleep(2500);

        //                            try
        //                            {
        //                                Actions action = new Actions(driver);
        //                                action.MoveToElement(driver.FindElementByXPath("//div[@class='bp9cbjyn j83agx80 cbu4d94t taijpn5t l9j0dhe7']"));
        //                                action.Perform();
        //                                action.Click();
        //                                Thread.Sleep(500);

        //                            }
        //                            catch
        //                            {

        //                            }

        //                            int counterIDCom = 0;

        //                            foreach (IWebElement lig in ligneCommens)
        //                            {
        //                                //on essaie de scroller afin de prendre des screenshots

        //                                try
        //                                {
        //                                    IList<IWebElement> secondLiens = driver.FindElementsByXPath("//div[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl oo9gr5id gpro0wi8 lrazzd5p']");

        //                                    foreach (IWebElement e in secondLiens)
        //                                    {
        //                                        OpenQA.Selenium.Remote.RemoteWebElement oooo = (OpenQA.Selenium.Remote.RemoteWebElement)e;

        //                                        if (oooo.LocationOnScreenOnceScrolledIntoView.Y > 15 && oooo.LocationOnScreenOnceScrolledIntoView.Y < (height - 215))
        //                                        {
        //                                            if (oooo.Text.ToLower().Contains("moins") || oooo.Text.ToLower().Contains("less") || oooo.Text.ToLower().Contains("person") || oooo.Text.ToLower().Contains("masquer"))
        //                                                continue;

        //                                            if (oooo.Text.ToLower().Contains("afficher") || oooo.Text.ToLower().Contains("show"))
        //                                                oooo.Click();
        //                                            Thread.Sleep(250);

        //                                            ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", lig);
        //                                            Thread.Sleep(2500);

        //                                            try
        //                                            {
        //                                                Actions action = new Actions(driver);
        //                                                action.MoveToElement(driver.FindElementByXPath("//div[@class='bp9cbjyn j83agx80 cbu4d94t taijpn5t l9j0dhe7']"));
        //                                                action.Perform();
        //                                                action.Click();
        //                                                Thread.Sleep(500);

        //                                            }
        //                                            catch
        //                                            {

        //                                            }

        //                                            imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
        //                                            ////Save the screenshot
        //                                            //imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
        //                                            imageScreenshott.SaveAsFile(pathToSave + "\\SCREENSHOTSPICTURESCOMMENTS\\" + nomDossierCommentScreenshot + "\\image" + nbsc + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
        //                                            nomAlbum = nomDossierCommentScreenshot + "\\image" + nbsc++ + ".png";

        //                                        }




        //                                    }


        //                                }
        //                                catch
        //                                {

        //                                }






        //                                //autres reponses
        //                                try
        //                                {
        //                                    IList<IWebElement> secondLiens = driver.FindElementsByXPath("//div[@class='oajrlxb2 bp9cbjyn g5ia77u1 mtkw9kbi tlpljxtp qensuy8j ppp5ayq2 goun2846 ccm00jje s44p3ltw mk2mc5f4 rt8b4zig n8ej3o3l agehan2d sk4xxmp2 rq0escxv nhd2j8a9 pq6dq46d mg4g778l btwxx1t3 g5gj957u p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x tgvbjcpo hpfvmrgz jb3vyjys p8fzw8mz qt6c0cv9 a8nywdso l9j0dhe7 i1ao9s8h esuyzwwr f1sip0of du4w35lb lzcic4wl abiwlrkh gpro0wi8 m9osqain buofh1pr']");



        //                                    foreach (IWebElement e in secondLiens)
        //                                    {
        //                                        OpenQA.Selenium.Remote.RemoteWebElement ooo = (OpenQA.Selenium.Remote.RemoteWebElement)e;

        //                                        if (ooo.LocationOnScreenOnceScrolledIntoView.Y > 15 && ooo.LocationOnScreenOnceScrolledIntoView.Y < (height - 215))
        //                                        {
        //                                            if (ooo.Text.ToLower().Contains("moins") || ooo.Text.ToLower().Contains("less") || ooo.Text.ToLower().Contains("person") || ooo.Text.ToLower().Contains("masquer"))
        //                                                continue;

        //                                            if (ooo.Text.ToLower().Contains("afficher") || ooo.Text.ToLower().Contains("show") || ooo.Text.ToLower().Contains("ponse"))
        //                                                ooo.Click();
        //                                            Thread.Sleep(250);

        //                                            try
        //                                            {
        //                                                Actions action = new Actions(driver);
        //                                                action.MoveToElement(driver.FindElementByXPath("//div[@class='bp9cbjyn j83agx80 cbu4d94t taijpn5t l9j0dhe7']"));
        //                                                action.Perform();
        //                                                action.Click();
        //                                                Thread.Sleep(500);

        //                                            }
        //                                            catch
        //                                            {

        //                                            }

        //                                            //((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", e);
        //                                            //Thread.Sleep(2500);


        //                                            imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
        //                                            ////Save the screenshot
        //                                            //imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
        //                                            imageScreenshott.SaveAsFile(pathToSave + "\\SCREENSHOTSPICTURESCOMMENTS\\" + nomDossierCommentScreenshot + "\\image" + nbsc + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
        //                                            nomAlbum = nomDossierCommentScreenshot + "\\image" + nbsc++ + ".png";
        //                                            Thread.Sleep(500);

        //                                        }


        //                                        //e.Click();
        //                                        //Thread.Sleep(250);
        //                                    }


        //                                }
        //                                catch (Exception ex)
        //                                {

        //                                }







        //                                try
        //                                {
        //                                    Actions action = new Actions(driver);
        //                                    action.MoveToElement(driver.FindElementByXPath("//div[@class='bp9cbjyn j83agx80 cbu4d94t taijpn5t l9j0dhe7']"));
        //                                    action.Perform();
        //                                    action.Click();
        //                                    Thread.Sleep(500);

        //                                }
        //                                catch
        //                                {

        //                                }






        //                                OpenQA.Selenium.Remote.RemoteWebElement o = (OpenQA.Selenium.Remote.RemoteWebElement)lig;

        //                                if (o.LocationOnScreenOnceScrolledIntoView.Y > (height - 215))
        //                                {
        //                                    // o.Click();
        //                                    ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", ligneCommens[counterIDCom - 1]);
        //                                    Thread.Sleep(2500);


        //                                    imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
        //                                    ////Save the screenshot
        //                                    //imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
        //                                    imageScreenshott.SaveAsFile(pathToSave + "\\SCREENSHOTSPICTURESCOMMENTS\\" + nomDossierCommentScreenshot + "\\image" + nbsc + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
        //                                    nomAlbum = nomDossierCommentScreenshot + "\\image" + nbsc++ + ".png";
        //                                    Thread.Sleep(500);

        //                                    try
        //                                    {
        //                                        IList<IWebElement> secondLiens = driver.FindElementsByXPath("//div[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl oo9gr5id gpro0wi8 lrazzd5p']");

        //                                        foreach (IWebElement e in secondLiens)
        //                                        {
        //                                            OpenQA.Selenium.Remote.RemoteWebElement oooo = (OpenQA.Selenium.Remote.RemoteWebElement)e;

        //                                            if (oooo.LocationOnScreenOnceScrolledIntoView.Y > 15 && oooo.LocationOnScreenOnceScrolledIntoView.Y < (height - 215))
        //                                            {
        //                                                if (oooo.Text.ToLower().Contains("moins") || oooo.Text.ToLower().Contains("less") || oooo.Text.ToLower().Contains("person") || oooo.Text.ToLower().Contains("masquer"))
        //                                                    continue;

        //                                                if (oooo.Text.ToLower().Contains("afficher") || oooo.Text.ToLower().Contains("show"))
        //                                                    oooo.Click();
        //                                                Thread.Sleep(250);
        //                                                //((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", e);
        //                                                //Thread.Sleep(2500);


        //                                                try
        //                                                {
        //                                                    Actions action = new Actions(driver);
        //                                                    action.MoveToElement(driver.FindElementByXPath("//div[@class='bp9cbjyn j83agx80 cbu4d94t taijpn5t l9j0dhe7']"));
        //                                                    action.Perform();
        //                                                    action.Click();
        //                                                    Thread.Sleep(500);

        //                                                }
        //                                                catch
        //                                                {

        //                                                }

        //                                                imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
        //                                                ////Save the screenshot
        //                                                //imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
        //                                                imageScreenshott.SaveAsFile(pathToSave + "\\SCREENSHOTSPICTURESCOMMENTS\\" + nomDossierCommentScreenshot + "\\image" + nbsc + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
        //                                                nomAlbum = nomDossierCommentScreenshot + "\\image" + nbsc++ + ".png";

        //                                            }




        //                                        }


        //                                    }
        //                                    catch
        //                                    {

        //                                    }






        //                                    //autres reponses
        //                                    try
        //                                    {
        //                                        IList<IWebElement> secondLiens = driver.FindElementsByXPath("//div[@class='oajrlxb2 bp9cbjyn g5ia77u1 mtkw9kbi tlpljxtp qensuy8j ppp5ayq2 goun2846 ccm00jje s44p3ltw mk2mc5f4 rt8b4zig n8ej3o3l agehan2d sk4xxmp2 rq0escxv nhd2j8a9 pq6dq46d mg4g778l btwxx1t3 g5gj957u p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x tgvbjcpo hpfvmrgz jb3vyjys p8fzw8mz qt6c0cv9 a8nywdso l9j0dhe7 i1ao9s8h esuyzwwr f1sip0of du4w35lb lzcic4wl abiwlrkh gpro0wi8 m9osqain buofh1pr']");



        //                                        foreach (IWebElement e in secondLiens)
        //                                        {
        //                                            OpenQA.Selenium.Remote.RemoteWebElement ooo = (OpenQA.Selenium.Remote.RemoteWebElement)e;

        //                                            if (ooo.LocationOnScreenOnceScrolledIntoView.Y > 15 && ooo.LocationOnScreenOnceScrolledIntoView.Y < (height - 215))
        //                                            {
        //                                                if (ooo.Text.ToLower().Contains("moins") || ooo.Text.ToLower().Contains("less") || ooo.Text.ToLower().Contains("person") || ooo.Text.ToLower().Contains("masquer"))
        //                                                    continue;

        //                                                if (ooo.Text.ToLower().Contains("afficher") || ooo.Text.ToLower().Contains("show") || ooo.Text.ToLower().Contains("ponse"))
        //                                                    ooo.Click();
        //                                                Thread.Sleep(250);

        //                                                //((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", e);
        //                                                //Thread.Sleep(2500);

        //                                                try
        //                                                {
        //                                                    Actions action = new Actions(driver);
        //                                                    action.MoveToElement(driver.FindElementByXPath("//div[@class='bp9cbjyn j83agx80 cbu4d94t taijpn5t l9j0dhe7']"));
        //                                                    action.Perform();
        //                                                    action.Click();
        //                                                    Thread.Sleep(500);

        //                                                }
        //                                                catch
        //                                                {

        //                                                }

        //                                                //((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", e);
        //                                                //Thread.Sleep(2500);


        //                                                imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
        //                                                ////Save the screenshot
        //                                                //imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
        //                                                imageScreenshott.SaveAsFile(pathToSave + "\\SCREENSHOTSPICTURESCOMMENTS\\" + nomDossierCommentScreenshot + "\\image" + nbsc + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
        //                                                nomAlbum = nomDossierCommentScreenshot + "\\image" + nbsc++ + ".png";
        //                                                Thread.Sleep(500);

        //                                            }


        //                                            //e.Click();
        //                                            //Thread.Sleep(250);
        //                                        }


        //                                    }
        //                                    catch (Exception ex)
        //                                    {

        //                                    }


        //                                }






        //                                //string IDComment = lig.GetAttribute("data-hovercard").Substring(lig.GetAttribute("data-hovercard").IndexOf("php?id=") + 7).Split('&')[0];
        //                                string urlCommen = lig.GetAttribute("href");
        //                                string IDComment = "999999";

        //                                nomCommen = lig.Text;

        //                                if(counterIDCom + 1 < idcom.Count)
        //                                try
        //                                {
        //                                    IDComment = idcom[counterIDCom].FindElement(By.TagName("image")).GetAttribute("xlink:href");
        //                                    IDComment = IDComment.Substring(IDComment.IndexOf("_") + 1).Split('_')[0];

        //                                }
        //                                catch
        //                                {

        //                                }

        //                                if (urlCommen.Contains("/profile.php?id="))
        //                                {
        //                                    photosCommen = "&sk=photos";
        //                                    urlCommen = urlCommen.Split('&')[0];

        //                                    //if (urlCommen.Contains(">"))
        //                                    //{
        //                                    //urlCommen = urlCommen.Substring(urlCommen.IndexOf(">") + 1);
        //                                    urlCommen = urlCommen + photosCommen;

        //                                    //}
        //                                }

        //                                else
        //                                {
        //                                    photosCommen = "/photos";
        //                                    urlCommen = urlCommen.Split('?')[0];
        //                                    urlCommen = urlCommen + photosCommen;
        //                                    urlCommen = urlCommen.Replace("/photos", "");
        //                                }

        //                                Analytics analy = new Analytics();
        //                                analy.Category = "PICTURESCOMMENTS";
        //                                analy.Url = urlCommen;
        //                                analy.PathToPicture = nomAlbum;
        //                                analy.Username = o.Text;

        //                                if (!Analytics.ContainsKey(nomCommen+ ";" + urlCommen + ";" + nomAlbum))
        //                                    Analytics.Add(nomCommen + ";" + urlCommen + ";" + nomAlbum, analy);

        //                                if (!dicocomments.ContainsKey(urlCommen + ";" + nomAlbum))
        //                                {
        //                                    dicocomments.Add(urlCommen + ";" + nomAlbum, urlCommen + ";" + nomCommen + ";" + IDComment + ";" + nomAlbum);
        //                                }


        //                                //on récupère les commentaires en texte

        //                                try
        //                                {
        //                                    var ligncommentaires = driver.FindElementsByXPath("//div[@class='q9uorilb bvz0fpym c1et5uql sf5mxxl7']");

        //                                    foreach (IWebElement ligg in ligncommentaires)
        //                                    {
        //                                        OpenQA.Selenium.Remote.RemoteWebElement ooo = (OpenQA.Selenium.Remote.RemoteWebElement)ligg;
        //                                        string tentation = ligg.ToString();
        //                                        string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

        //                                        if (ooo.LocationOnScreenOnceScrolledIntoView.Y > 15 && ooo.LocationOnScreenOnceScrolledIntoView.Y < (height - 215))
        //                                        {
        //                                            //string IDComment = lig.GetAttribute("data-hovercard").Substring(lig.GetAttribute("data-hovercard").IndexOf("php?id=") + 7).Split('&')[0];
        //                                            string commment = "";
        //                                            string auteur = "";
        //                                            string urlProfile = "";

        //                                            if (!commentsDir.ContainsKey(idd + nomAlbum))
        //                                                commentsDir.Add(idd + nomAlbum, idd);
        //                                            else
        //                                                continue;


        //                                            try
        //                                            {
        //                                                commment = ligg.Text.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries)[1];

        //                                            }
        //                                            catch
        //                                            {

        //                                            }

        //                                            try
        //                                            {

        //                                                auteur = ligg.Text.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries)[0];
        //                                            }
        //                                            catch
        //                                            {

        //                                            }


        //                                            try
        //                                            {

        //                                                urlProfile = ligg.FindElement(By.TagName("a")).GetAttribute("href").Split(new string[] { "?comment" }, StringSplitOptions.RemoveEmptyEntries)[0];
        //                                            }
        //                                            catch
        //                                            {

        //                                            }


        //                                            commentairesTexte += auteur + ";" + commment + ";" + nomImage + ";" + urlForD + ";" + nomAlbum + ";" + urlProfile + "\n";
        //                                        }




        //                                    }

        //                                    if (commentairesTexte != "")
        //                                        try
        //                                        {
        //                                            string[] lignes = commentairesTexte.Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);
        //                                            string urlll = "";
        //                                            string user = "";
        //                                            string comm = "";
        //                                            string ligne = "";
        //                                            string urlImage = "";
        //                                            string album = "";

        //                                            foreach (string valeur in lignes)
        //                                            {
        //                                                user = valeur.Split(';')[0];
        //                                                comm = valeur.Split(';')[1];
        //                                                urlll = valeur.Split(';')[2];
        //                                                urlImage = valeur.Split(';')[3];
        //                                                album = valeur.Split(';')[4];

        //                                                ligne += user + ";" + comm + ";" + urlll + ";" + urlImage + ";" + album + "\r\n";
        //                                            }

        //                                            using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\TXT" + @"\commentsFromPictures.txt", true))
        //                                            {
        //                                                //if (File.Exists(saveFileDialog1.FileName))
        //                                                //    File.Delete(saveFileDialog1.FileName);

        //                                                file.Write(ligne);
        //                                            }

        //                                            commentairesTexte = "";

        //                                            //if (File.Exists(pathToSave + "\\TXT" + "\\commentsFromPictures.txt"))
        //                                            //    File.Delete(pathToSave + "\\TXT" + "\\commentsFromPictures.txt");

        //                                            //File.WriteAllText(pathToSave + "\\TXT" + @"\commentsFromPictures.txt", ligne);

        //                                        }
        //                                        catch (Exception ex)
        //                                        {

        //                                        }
        //                                }
        //                                catch
        //                                {

        //                                }


        //                                counterIDCom++;
        //                            }//fin boucle toutes les bulles

        //                            //test autre manière de récupérer----------------------------------------------------------------------------------------------
        //                            try
        //                            {
        //                                //on retourne au top de la page, on scroll et on capture
        //                                ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", ligneCommens[0]);
        //                                Thread.Sleep(2500);


        //                                lienComments = driver.FindElementsByXPath("//div[@class='q9uorilb bvz0fpym c1et5uql sf5mxxl7']");
        //                                int co = 0;
        //                                counterIDCom = 0;
        //                                nbsc = 1;
        //                                foreach (IWebElement ll in lienComments)
        //                                {

        //                                    imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
        //                                    ////Save the screenshot
        //                                    //imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
        //                                    imageScreenshott.SaveAsFile(pathToSave + "\\SCREENSHOTSPICTURESCOMMENTS\\" + nomDossierCommentScreenshot + "\\image" + nbsc + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
        //                                    nomAlbum = nomDossierCommentScreenshot + "\\image" + nbsc++ + ".png";
        //                                    Thread.Sleep(500);



        //                                    OpenQA.Selenium.Remote.RemoteWebElement ooo = (OpenQA.Selenium.Remote.RemoteWebElement)ll;
        //                                    string tentation = ll.ToString();
        //                                    string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

        //                                    if (ooo.LocationOnScreenOnceScrolledIntoView.Y > 15 && ooo.LocationOnScreenOnceScrolledIntoView.Y < (height - 215))
        //                                    {
        //                                        //string IDComment = lig.GetAttribute("data-hovercard").Substring(lig.GetAttribute("data-hovercard").IndexOf("php?id=") + 7).Split('&')[0];
        //                                        string commment = "";
        //                                        string auteur = "";
        //                                        string urlProfile = "";

        //                                        if (!commentsDir.ContainsKey(idd + nomAlbum))
        //                                            commentsDir.Add(idd + nomAlbum, idd);
        //                                        else
        //                                            continue;


        //                                        try
        //                                        {
        //                                            commment = ll.Text.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries)[1];

        //                                        }
        //                                        catch
        //                                        {

        //                                        }

        //                                        try
        //                                        {

        //                                            auteur = ll.Text.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries)[0];
        //                                        }
        //                                        catch
        //                                        {

        //                                        }


        //                                        try
        //                                        {

        //                                            urlProfile = ll.FindElement(By.TagName("a")).GetAttribute("href").Split(new string[] { "?comment" }, StringSplitOptions.RemoveEmptyEntries)[0];
        //                                        }
        //                                        catch
        //                                        {

        //                                        }


        //                                        commentairesTexte += auteur + ";" + commment + ";" + nomImage + ";" + urlForD + ";" + nomAlbum + ";" + urlProfile + "\n";

        //                                        string urlCommen = ll.GetAttribute("href");
        //                                        string IDComment = "999999";

        //                                        nomCommen = ll.Text;

        //                                        //if (counterIDCom + 1 < idcom.Count)
        //                                        //    try
        //                                        //    {
        //                                        //        IDComment = idcom[counterIDCom].FindElement(By.TagName("image")).GetAttribute("xlink:href");
        //                                        //        IDComment = IDComment.Substring(IDComment.IndexOf("_") + 1).Split('_')[0];

        //                                        //    }
        //                                        //    catch
        //                                        //    {

        //                                        //    }

        //                                        if (urlCommen.Contains("/profile.php?id="))
        //                                        {
        //                                            photosCommen = "&sk=photos";
        //                                            urlCommen = urlCommen.Split('&')[0];

        //                                            //if (urlCommen.Contains(">"))
        //                                            //{
        //                                            //urlCommen = urlCommen.Substring(urlCommen.IndexOf(">") + 1);
        //                                            urlCommen = urlCommen + photosCommen;

        //                                            //}
        //                                        }

        //                                        else
        //                                        {
        //                                            photosCommen = "/photos";
        //                                            urlCommen = urlCommen.Split('?')[0];
        //                                            urlCommen = urlCommen + photosCommen;
        //                                            urlCommen = urlCommen.Replace("/photos", "");
        //                                        }

        //                                        Analytics analy = new Analytics();
        //                                        analy.Category = "PICTURESCOMMENTS";
        //                                        analy.Url = urlCommen;
        //                                        analy.PathToPicture = nomAlbum;
        //                                        analy.Username = ooo.Text;

        //                                        if (!Analytics.ContainsKey(nomCommen + ";" + urlCommen + ";" + nomAlbum))
        //                                            Analytics.Add(nomCommen + ";" + urlCommen + ";" + nomAlbum, analy);

        //                                        if (!dicocomments.ContainsKey(urlCommen + ";" + nomAlbum))
        //                                        {
        //                                            dicocomments.Add(urlCommen + ";" + nomAlbum, urlCommen + ";" + nomCommen + ";" + IDComment + ";" + nomAlbum);
        //                                        }
        //                                    }

        //                                    if (commentairesTexte != "")
        //                                        try
        //                                        {
        //                                            string[] lignes = commentairesTexte.Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);
        //                                            string urlll = "";
        //                                            string user = "";
        //                                            string comm = "";
        //                                            string ligne = "";
        //                                            string urlImage = "";
        //                                            string album = "";

        //                                            foreach (string valeur in lignes)
        //                                            {
        //                                                user = valeur.Split(';')[0];
        //                                                comm = valeur.Split(';')[1];
        //                                                urlll = valeur.Split(';')[2];
        //                                                urlImage = valeur.Split(';')[3];
        //                                                album = valeur.Split(';')[4];

        //                                                ligne += user + ";" + comm + ";" + urlll + ";" + urlImage + ";" + album + "\r\n";
        //                                            }

        //                                            using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\TXT" + @"\commentsFromPictures.txt", true))
        //                                            {
        //                                                //if (File.Exists(saveFileDialog1.FileName))
        //                                                //    File.Delete(saveFileDialog1.FileName);

        //                                                file.Write(ligne);
        //                                            }

        //                                            commentairesTexte = "";

        //                                            //if (File.Exists(pathToSave + "\\TXT" + "\\commentsFromPictures.txt"))
        //                                            //    File.Delete(pathToSave + "\\TXT" + "\\commentsFromPictures.txt");

        //                                            //File.WriteAllText(pathToSave + "\\TXT" + @"\commentsFromPictures.txt", ligne);

        //                                        }
        //                                        catch (Exception ex)
        //                                        {

        //                                        }




        //                                    //ll.Click();
        //                                    //Thread.Sleep(250);
        //                                    OpenQA.Selenium.Remote.RemoteWebElement o = (OpenQA.Selenium.Remote.RemoteWebElement)ll;

        //                                    if (o.LocationOnScreenOnceScrolledIntoView.Y > (height - 215))
        //                                    {
        //                                        // o.Click();
        //                                        ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollIntoView(true);", ligneCommens[counterIDCom - 1]);
        //                                        Thread.Sleep(2500);


        //                                        imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
        //                                        ////Save the screenshot
        //                                        //imageScreenshot.SaveAsFile(pathToSave + "\\PICTURES_TAGGED\\" + userNameTag + "_" + idTag + "_" + numTag + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
        //                                        imageScreenshott.SaveAsFile(pathToSave + "\\SCREENSHOTSPICTURESCOMMENTS\\" + nomDossierCommentScreenshot + "\\image" + nbsc + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
        //                                        nomAlbum = nomDossierCommentScreenshot + "\\image" + nbsc++ + ".png";
        //                                        Thread.Sleep(500);
        //                                    }



        //                                    counterIDCom++;  

        //                                }

        //                            }

        //                            catch
        //                            {

        //                            }




        //                        }
        //                        catch
        //                        {

        //                        }






        //                    }
        //                    catch
        //                    {

        //                    }

        //                    //on récupère les commentaires en texte

        //                    //try
        //                    //{
        //                    //    var ligncommentaires = driver.FindElementsByXPath("//div[@class='q9uorilb bvz0fpym c1et5uql sf5mxxl7']");

        //                    //    foreach (IWebElement lig in ligncommentaires)
        //                    //    {


        //                    //        //string IDComment = lig.GetAttribute("data-hovercard").Substring(lig.GetAttribute("data-hovercard").IndexOf("php?id=") + 7).Split('&')[0];
        //                    //        string commment = "";
        //                    //        string auteur = "";
        //                    //        string urlProfile = "";




        //                    //        try
        //                    //        {
        //                    //            commment = lig.Text.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries)[1];

        //                    //        }
        //                    //        catch
        //                    //        {

        //                    //        }

        //                    //        try
        //                    //        {

        //                    //            auteur = lig.Text.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries)[0];
        //                    //        }
        //                    //        catch
        //                    //        {

        //                    //        }


        //                    //        try
        //                    //        {

        //                    //            urlProfile = lig.FindElement(By.TagName("a")).GetAttribute("href").Split(new string[] { "?comment" }, StringSplitOptions.RemoveEmptyEntries)[0];
        //                    //        }
        //                    //        catch
        //                    //        {

        //                    //        }


        //                    //        commentairesTexte += auteur + ";" + commment + ";" + nomImage + ";" + urlForD + ";" + nomAlbum + ";" + urlProfile + "\n";


        //                    //    }
        //                    //}
        //                    //catch
        //                    //{

        //                    //}


        //                    //on essaie de récupérer les identifiants des amis qui postent des likes

        //                    try
        //                    {

        //                        //IWebElement el = driver.FindElementByXPath("//div[@class='_6iid']");////*[@id="u_o_2"]/div[2]/div/div[1]/div/div[1]

        //                        try
        //                        {
        //                            //oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 a8c37x1j p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl l9j0dhe7 abiwlrkh p8dawk7l gmql0nx0 ce9h75a5 ni8dbmo4 stjgntxs
        //                            //IWebElement el = driver.FindElementByXPath("//div[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl l9j0dhe7 abiwlrkh p8dawk7l']");
        //                            IWebElement el = driver.FindElementByXPath("//div[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 a8c37x1j p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl l9j0dhe7 abiwlrkh p8dawk7l gmql0nx0 ce9h75a5 ni8dbmo4 stjgntxs']");

        //                            Thread.Sleep(500);
        //                            el.Click();
        //                            Thread.Sleep(1500);

        //                            Object lastHeight = null;
        //                            lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 l56l04vs r57mb794 kh7kg01d c3g1iek1 otl40fxz cxgpxx05 rz4wbd8a sj5x9vvc a8nywdso')[0].scrollHeight");


        //                            //Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[1].scrollHeight");

        //                            while (true)
        //                            {
        //                                //driver.execute_script('document.getElementById("viewport").scrollTop += 100')

        //                                ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 l56l04vs r57mb794 kh7kg01d c3g1iek1 otl40fxz cxgpxx05 rz4wbd8a sj5x9vvc a8nywdso')[0].scrollTo(0, document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 l56l04vs r57mb794 kh7kg01d c3g1iek1 otl40fxz cxgpxx05 rz4wbd8a sj5x9vvc a8nywdso')[0].scrollHeight)");
        //                                Thread.Sleep(2000);

        //                                Object newHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 l56l04vs r57mb794 kh7kg01d c3g1iek1 otl40fxz cxgpxx05 rz4wbd8a sj5x9vvc a8nywdso')[0].scrollHeight");//ll8tlv6m j83agx80 taijpn5t hzruof5a
        //                                if (newHeight.Equals(lastHeight))
        //                                {
        //                                    break;
        //                                }
        //                                lastHeight = newHeight;
        //                            }


        //                            el = driver.FindElementByXPath("//div[@class='ll8tlv6m j83agx80 taijpn5t hzruof5a']");
        //                            //ll8tlv6m j83agx80 taijpn5t hzruof5a

        //                            //IList<IWebElement> els = el.FindElements(By.TagName("a"));
        //                            IList<IWebElement> els = el.FindElements(By.XPath(".//a[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl oo9gr5id gpro0wi8 lrazzd5p']"));
        //                            IList<IWebElement> ids = el.FindElements(By.XPath(".//div[@class='q9uorilb l9j0dhe7 pzggbiyp du4w35lb']"));

        //                            //q9uorilb l9j0dhe7 pzggbiyp du4w35lb

        //                            int idCounter = 0;

        //                            string urllll = "";
        //                            string photosComment = "";
        //                            string id = "999999";
        //                            foreach (IWebElement aelement in els)
        //                            {
        //                                if (aelement.Text == "")
        //                                    continue;

        //                                urllll = aelement.GetAttribute("href").Split(new String [] { "__tn" },StringSplitOptions.RemoveEmptyEntries)[0];

        //                                try
        //                                {
        //                                    id = ids[idCounter].FindElement(By.TagName("image")).GetAttribute("xlink:href");
        //                                    id = id.Substring(id.IndexOf("_") + 1).Split('_')[0];
        //                                }
        //                                catch
        //                                {

        //                                }

        //                                if (urllll.Contains("profile.php?"))
        //                                    urllll = urllll.Replace("&", "");
        //                                else
        //                                    urllll = urllll.Replace("?", "");

        //                                Analytics analy = new Analytics();
        //                                analy.Category = "PICTURESLIKES";
        //                                analy.Url = urllll;
        //                                analy.PathToPicture = nomAlbum;
        //                                analy.Username = aelement.Text;

        //                                if (!Analytics.ContainsKey(aelement.Text + ";" + urllll + ";" + nomAlbum))
        //                                    Analytics.Add(aelement.Text + ";" + urllll + ";" + nomAlbum, analy);

        //                                if (!dicocomments.ContainsKey(urllll))
        //                                {
        //                                    dicocomments.Add(urllll, urllll + ";" + aelement.Text + ";" + id);
        //                                }
        //                                //break;

        //                                idCounter++;
        //                            }

        //                        }
        //                        catch
        //                        {

        //                        }



        //                        Thread.Sleep(2500);
        //                        driver.Navigate().GoToUrl(urlForD);
        //                        Thread.Sleep(2500);




        //                        //IWebElement commel = driver.FindElementByXPath("//div[@class='_6iiv _6r_e']");
        //                        //IList<IWebElement> divs = commel.FindElements(By.ClassName("_72vr"));

        //                        //foreach (IWebElement aelement in divs)
        //                        //{
        //                        //    IWebElement ae = aelement.FindElement(By.TagName("a"));

        //                        //    string nom = ae.Text;
        //                        //    string idee = ae.GetAttribute("data-hovercard");
        //                        //    string urlel = ae.GetAttribute("href");
        //                        //    idee = idee.Substring(idee.IndexOf("id=") + 3).Split('&')[0].Replace("&amp;", "");

        //                        //    if (!dicocomments.ContainsKey(idee))
        //                        //    {
        //                        //        dicocomments.Add(idee, nom + ";" + urlel + ";" + idee + "\n");

        //                        //        break;
        //                        //    }
        //                        //}

        //                        //IList<IWebElement> els = driver.FindElementsByXPath("//*[@id=\"u_fetchstream_2_5\"]/div/div[3]/ul");

        //                        //foreach (IWebElement ell in els)
        //                        //{
        //                        //    IList<IWebElement> divs = ell.FindElements(By.ClassName("_72vr"));

        //                        //    foreach (IWebElement aelement in divs)
        //                        //    {
        //                        //        IWebElement ae = aelement.FindElement(By.TagName("a"));

        //                        //        string nom = ae.Text;
        //                        //        string idee = ae.GetAttribute("data-hovercard");
        //                        //        string urlel = ae.GetAttribute("href");
        //                        //        idee = idee.Substring(idee.IndexOf("id=") + 3).Split('&')[0].Replace("&amp;", "");

        //                        //        if (!dicocomments.ContainsKey(idee))
        //                        //        {
        //                        //            dicocomments.Add(idee, nom + ";" + urlel + ";" + idee + "\n");

        //                        //            break;
        //                        //        }
        //                        //    }

        //                        //}


        //                        //string codeComments = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)comments).WrappedDriver).PageSource;
        //                        //string commentaire = codeComments.Substring(codeComments.IndexOf("href=\"/ufi/reaction/profile/"));
        //                        //string[] ligneCommentaire = commentaire.Split(new string[] { "\"" }, StringSplitOptions.RemoveEmptyEntries);
        //                        //string linktolike = ligneCommentaire[1].Replace("amp;", "");

        //                        //driver.Navigate().GoToUrl("https://www.facebook.com/" + linktolike);
        //                        //Thread.Sleep(500);




        //                        //Thread.Sleep(2500);
        //                        ////on recupere les identifiants
        //                        //comments = driver.FindElementByXPath("_8u _42ef']");
        //                        //ligneCommentaire = commentaire.Split(new string[] { "<div class=\"_5j0e fsl fwb fcb\">" }, StringSplitOptions.RemoveEmptyEntries);//<div class="_5j0e fsl fwb fcb">




        //                    }
        //                    catch
        //                    {
        //                        //pictureBoxpictures.Image = global::FacebookAnalyzer.Properties.Resources.ko;
        //                    }



        //                    //try
        //                    //{
        //                    //    IWebElement el = driver.FindElementByXPath("//*[@id=\"reaction_profile_browser1\"]");
        //                    //    IList<IWebElement> elements = el.FindElements(By.TagName("li"));
        //                    //    foreach (IWebElement ell in elements)
        //                    //    {
        //                    //        IList<IWebElement> aelements = ell.FindElements(By.TagName("a"));

        //                    //        foreach (IWebElement ael in aelements)
        //                    //        {
        //                    //            string nom = aelements[1].GetAttribute("title");
        //                    //            string idd = aelements[1].GetAttribute("data-hovercard");
        //                    //            string urlll = aelements[1].GetAttribute("href").Replace("&amp;", "&");
        //                    //            idd = idd.Substring(idd.IndexOf("id=") + 3).Split('&')[0];

        //                    //            if (!dicocomments.ContainsKey(idd))
        //                    //            {
        //                    //                dicocomments.Add(idd, nom + ";" + urlll + ";" + idd + "\n");
        //                    //            }
        //                    //            break;
        //                    //        }
        //                    //    }

        //                    //    Thread.Sleep(rnd.Next(2500, 3500));
        //                    //    //driver.FindElementByClassName("_xlt _418x").Click();

        //                    //}
        //                    //catch { }
        //                }
        //                catch (Exception ex)
        //                {
        //                    //pictureBoxpictures.Image = global::FacebookAnalyzer.Properties.Resources.ko;
        //                }
        //                //i++;
        //                nbreImages++;
        //                //backgroundWorker1.ReportProgress(nbreImages);

        //            }
        //            //imgprec = codeImages.Length;





        //        }
        //        catch (Exception ex)
        //        {


        //            //pictureBoxpictures.Image = global::FacebookAnalyzer.Properties.Resources.ko;
        //        }

        //    }

        //    //on écrit les resultats des ID commentaires dans un fichier
        //    try
        //    {
        //        string ligne = "";
        //        string urll = "";
        //        string user = "";
        //        string iddd = "";
        //        foreach (string valeur in dicocomments.Keys)
        //        {
        //            user = dicocomments[valeur].Split(';')[1];
        //            urll = dicocomments[valeur].Split(';')[0];
        //            iddd = dicocomments[valeur].Split(';')[2];

        //            ligne += urll + ";" + user + ";" + iddd + "\r\n";
        //        }

        //        if (File.Exists(pathToSave + "\\TXT" + "\\friendsFromComments.txt"))
        //            File.Delete(pathToSave + "\\TXT" + "\\friendsFromComments.txt");

        //        //File.WriteAllText(dossierLocal + @"\friendsFromComments.txt", ligne);
        //        File.WriteAllText(pathToSave + "\\TXT" + "\\friendsFromComments.txt", ligne);

        //        dicocomments = new Dictionary<string, string>();
        //    }
        //    catch (Exception ex)
        //    {

        //    }

        //    //on écrit les commentaires
        //    //if(commentairesTexte != "")
        //    //try
        //    //{
        //    //    string [] lignes = commentairesTexte.Split(new string[] { "\n" },StringSplitOptions.RemoveEmptyEntries);
        //    //    string urll = "";
        //    //    string user = "";
        //    //    string comm = "";
        //    //    string ligne = "";
        //    //    string urlImage = "";
        //    //    string album = "";

        //    //    foreach (string valeur in lignes)
        //    //    {
        //    //        user = valeur.Split(';')[0];
        //    //        comm = valeur.Split(';')[1];
        //    //        urll = valeur.Split(';')[2];
        //    //        urlImage = valeur.Split(';')[3];
        //    //        album = valeur.Split(';')[4];

        //    //        ligne += user + ";" + comm + ";" + urll + ";" + urlImage + ";" + album +  "\r\n";
        //    //    }

        //    //    if (File.Exists(pathToSave + "\\TXT" + "\\commentsFromPictures.txt"))
        //    //        File.Delete(pathToSave + "\\TXT" + "\\commentsFromPictures.txt");

        //    //    File.WriteAllText(pathToSave + "\\TXT" + @"\commentsFromPictures.txt", ligne);

        //    //}
        //    //catch (Exception ex)
        //    //{

        //    //}

        //    ////photos de profil
        //    driver.Navigate().GoToUrl(pathToProfile);
        //    //var image = driver.FindElementByXPath("//a[@class='_1nv3 _11kg _1nv5 profilePicThumb']");

        //    ////clic sur image dans href
        //    //((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].click();", image);

        //    Thread.Sleep(5000);

        //    bool error = false;

        //    try
        //    {
        //        //var imageDown = driver.FindElementByXPath("clearfix fbPhotoSnowliftPopup']");
        //        //string codePage = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)imageDown).WrappedDriver).PageSource;
        //        //string codeImage = codePage.Substring(codePage.IndexOf("<img class=\"spotlight")).Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];
        //        //string link = codeImage.Substring(codeImage.IndexOf("src=") + 4).Split(new string[] { "\"" }, StringSplitOptions.RemoveEmptyEntries)[0];
        //        //link = link.Replace("\"", "").Replace("amp;", "");



        //        //using (var client = new WebClient())
        //        //{
        //        //    string cheminProf = targetName + "\\" + titrePage + "\\" + titrePage + "_profile" + ".jpg";
        //        //    client.DownloadFile(link, pathToSave + @"\Facebook_Friends\" + cheminProf);

        //        //}

        //        //Thread.Sleep(5000);


        //    }
        //    catch (Exception ex)
        //    {

        //        error = true;
        //        try
        //        {
        //            string ligne = "";
        //            string urll = "";
        //            string user = "";
        //            string iddd = "";
        //            foreach (string valeur in dicocomments.Keys)
        //            {
        //                user = dicocomments[valeur].Split(';')[0];
        //                urll = dicocomments[valeur].Split(';')[1];
        //                //iddd = dicocomments[valeur].Split(';')[2];

        //                ligne += urll + ";" + user + ";" + valeur.Replace("&amp", "") + ";" + "\r\n";
        //            }

        //            if (File.Exists(pathToSave + "\\TXT" + "\\friendsFromComments.txt"))
        //                File.Delete(pathToSave + "\\TXT" + "\\friendsFromComments.txt");

        //            File.WriteAllText(pathToSave + "\\TXT" + @"\friendsFromComments.txt", ligne);
        //            dicocomments = new Dictionary<string, string>();
        //        }
        //        catch (Exception exx)
        //        {

        //        }

        //    }
        //    if (error)
        //    {
        //        try
        //        {
        //            //var imageDown = driver.FindElementByXPath("_n3']");
        //            //string codePage = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)imageDown).WrappedDriver).PageSource;
        //            //string codeImage = codePage.Substring(codePage.IndexOf("class=\"_n3\"") + 11).Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];
        //            //codeImage = codeImage.Substring(codeImage.IndexOf("<img src=\"") + 10).Split(new string[] { " " }, StringSplitOptions.RemoveEmptyEntries)[0];
        //            ////string link = codeImage.Substring(codeImage.IndexOf("src=") + 4).Split(new string[] { "\"" }, StringSplitOptions.RemoveEmptyEntries)[0];
        //            ////link = link.Replace("\"", "").Replace("amp;", "");
        //            //codeImage = codeImage.Replace("\"", "").Replace("amp;", "");


        //            //using (var client = new WebClient())
        //            //{
        //            //    string cheminProf = targetName + "\\" + titrePage + "\\" + titrePage + "_profile" + ".jpg";
        //            //    client.DownloadFile(codeImage, pathToSave + @"\Facebook_Friends\" + cheminProf);
        //            //}

        //            //Thread.Sleep(5000);

        //            try
        //            {
        //                string ligne = "";
        //                string urll = "";
        //                string user = "";
        //                string iddd = "";
        //                foreach (string valeur in dicocomments.Keys)
        //                {
        //                    user = dicocomments[valeur].Split(';')[0];
        //                    urll = dicocomments[valeur].Split(';')[1];
        //                    iddd = dicocomments[valeur].Split(';')[2];

        //                    ligne += urll + ";" + user + ";" + valeur.Replace("&amp", "") + ";" + "\r\n";
        //                }

        //                if (File.Exists(pathToSave + "\\TXT" + "\\friendsFromComments.txt"))
        //                    File.Delete(pathToSave + "\\TXT" + "\\friendsFromComments.txt");

        //                File.WriteAllText(pathToSave + "\\TXT" + @"\friendsFromComments.txt", ligne);
        //                dicocomments = new Dictionary<string, string>();
        //            }
        //            catch (Exception ex)
        //            {

        //            }
        //        }
        //        catch (Exception ex)
        //        {
        //            //pictureBoxpictures.Image = global::FacebookAnalyzer.Properties.Resources.ko;
        //        }
        //        finally
        //        {
        //            i = 0;
        //            nbreImages = 0;
        //            photos = "";
        //            photosBis = "";
        //            backgroundWorker1.ReportProgress(++nbreRow);
        //        }
        //    }

        //    i = 0;
        //    nbreImages = 0;
        //    photos = "";
        //    photosBis = "";
        //    //backgroundWorker1.ReportProgress(++nbreRow);
        //    error = false;



        //    backgroundWorker1.ReportProgress(-102);
        //    Thread.Sleep(2000);

        //    //backgroundWorker1.ReportProgress(-3);
        //    //Thread.Sleep(2000);
        //    backgroundWorker1.CancelAsync();
        //    allimages = false;
        //    //labelanalyseencours.Visible = false;
        //    //pictureBoxwaiting.Visible = false;
        //    //pictureBoxlogofacebook.Visible = false;
        //}

        private void Form1_FormClosing(object sender, FormClosingEventArgs e)
        {
           
            try
            {
                
                SaveCaseClosingForm();
                
                if(LANGUAGESELECTED == "fr_FR")
                    SetDefaultLanguage();

                //Process[] chromeProcesses = Process.GetProcessesByName("chrome");

                //foreach (var chromeProcess in chromeProcesses)
                //{
                //    chromeProcess.Kill();
                //}

                Process[] chromeProcesses = Process.GetProcessesByName("chromedriver");

                foreach (var chromeProcess in chromeProcesses)
                {
                    chromeProcess.Kill();
                }
            }
            catch
            {

            }

            //try
            //{
            //    SendEmail(GetMacAddress());
            //}
            //catch
            //{

            //}

        }

        public static string GetMacAddress()
        {
            string macAddresses = "";

            foreach (NetworkInterface nic in NetworkInterface.GetAllNetworkInterfaces())
            {
                macAddresses = nic.GetPhysicalAddress().ToString();
                break;
            }
            return macAddresses;
        }

        private void SendEmail(string macadress)
        {
            string windowusername = "";
            try
            {
                windowusername = System.DirectoryServices.AccountManagement.UserPrincipal.Current.DisplayName;

            }
                catch
            {

            }
            MailMessage message = new System.Net.Mail.MailMessage();
            message.To.Add("facebookanalyzer20@gmail.com");

            message.Subject = "Fermeture Analyzer : " + macadress;
            message.From = new System.Net.Mail.MailAddress("facebookanalyzer20@gmail.com");
            message.Body = "Fermeture Analyzer : Mac Adresse : " + macadress + " - " + USERNAME + " - " + windowusername + "\r\n" + "CONTENU : \r\n" + labelAMIS.Text + "\r\n" + labelJournal.Text + "\r\n" + labelIMAGES.Text + "\r\n" + labelCommentss.Text + "\r\n" + labelIdentifiants.Text + "\r\n" + labelLikes.Text + "\r\n" + labelMessenger.Text + "\r\n" + labelParam.Text + "\r\n" + labelTags.Text + "\r\n" + labelMap.Text;
            System.Net.Mail.SmtpClient smtp = new System.Net.Mail.SmtpClient("smtp.gmail.com", 587);
            smtp.Credentials = new System.Net.NetworkCredential("facebookanalyzer20@gmail.com", "Mat8804256$.");
            smtp.EnableSsl = true;

            smtp.Send(message);
        }

        private void GetAllComments(int debut, int fin)
        {
           

            backgroundWorker1.ReportProgress(-90);

            if (driver == null)
            {
                InitializeDriver();
                // 1. Maximize the browser
                //driver.Manage().Window.Maximize();

                

                // 2. Go to the "Google" homepage
                driver.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }

                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driver.FindElementById("email");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driver.FindElementById("pass");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driver.FindElementById("loginbutton").Click();
                //searchButton.Click();
                Thread.Sleep(2500);

            }

            string urlFriend = textBoxUSERNAMEFRIENDS.Text;

            //driver.FindElementById("loginbutton").Click();
            ////searchButton.Click();
            //Thread.Sleep(2500);
            //pour cacher fenetre DOS
            //var driverService = ChromeDriverService.CreateDefaultService();
            //driverService.HideCommandPromptWindow = true;

            ////var driver = new ChromeDriver(driverService, new ChromeOptions());

            ////System.Diagnostics.Process.Start(filepath);
            //ChromeOptions chromeOptions = new ChromeOptions();
            //chromeOptions.AddArguments("--disable-notifications");
            System.Random rnd = new System.Random();
            int nbreAnnee = 1;
            //using (var driver = new ChromeDriver(driverService, chromeOptions))
            //{


            //u_0_8
            //"menuBar']//*[@class='menuItem']"
            // 2. Go to the "Google" homepage
            //string urlInfoUser = "/allactivity?privacy_source=your_facebook_information&entry_point=settings_yfi";
            //string urlInfoUser = "/allactivity?privacy_source=your_facebook_information&entry_point=settings_yfi";
            //driver.Navigate().GoToUrl(urlFriend + urlInfoUser);
            //titrePage = driver.Title;

            //Thread.Sleep(5000);
            if (!profilIsSet)
                GetProfileInformations(backgroundWorker1);

                try
                {


                    string targetName = textBoxops.Text;

                    //récupération des années 
                    //var years = driver.FindElementByXPath("rightColWrap']").Text;
                    //string codePagee = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)years).WrappedDriver).PageSource;
                    //string[] liYears = years.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries);

                    if (!Directory.Exists(pathToSave + @"\COMMENTS"))
                        Directory.CreateDirectory(pathToSave + @"\COMMENTS");

                    int nbreannee = fin - debut;

                    //backgroundWorkerComments.ReportProgress(-1, liYears.Length);
                    backgroundWorkerComments.ReportProgress(-1, (nbreannee == 0 ? 1 : nbreannee));

                    //label18.Text = "Téléchargement des comments en cours ";
                    for(int y = debut; y <= fin; y++)
                    {
                        driver.Navigate().GoToUrl(urlFriend + "/timeline/" + y);
                        Thread.Sleep(5000);

                        //while (!isElementPresentForComment(driver))
                        //{


                        //    ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight)");

                        //    //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 100)");
                        //    Thread.Sleep(2500);



                        //}

                        try
                        {
                            Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");

                            while (true)
                            {
                                ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                                Thread.Sleep(2000);

                                Object newHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                                if (newHeight.Equals(lastHeight))
                                {
                                    break;
                                }
                                lastHeight = newHeight;
                            }
                        }
                        catch
                        {
                            //e.printStackTrace();
                        }


                        string codePage = driver.PageSource;

                        using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + @"\COMMENTS" + "\\timeline_" + y + ".html", false))
                        {
                            //if (File.Exists(saveFileDialog1.FileName))
                            //    File.Delete(saveFileDialog1.FileName);

                            file.Write(codePage);
                        }

                        //backgroundWorkerComments.ReportProgress(y);
                        Thread.Sleep(2500);
                        //nbreAnnee++;
                    }






                    //driver.Close();

                   

                    //progressBar1.Maximum = lignes.Count() - 1;



                }
                catch (OpenQA.Selenium.NoSuchElementException ex)//si pas d'acces à la page on essaie les annees manuellement
                {
                    try
                    {
                        string targetName = textBoxops.Text;

                        
                        string[] liYears = new string[] { DateTime.Now.Year.ToString(), ((DateTime.Now.Year) - 1).ToString() };

                        if (!Directory.Exists(pathToSave))
                            Directory.CreateDirectory(pathToSave);

                        //backgroundWorker1.ReportProgress(-1, liYears.Length);

                        //label18.Text = "Téléchargement des comments en cours ";
                        foreach (string y in liYears)
                        {
                            driver.Navigate().GoToUrl(urlFriend + "/timeline/" + y);
                            Thread.Sleep(5000);

                            while (!isElementPresentForComment(driver))
                            {


                                ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight)");

                                //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 100)");
                                Thread.Sleep(rnd.Next(500, 1500));



                            }


                            string codePage = driver.PageSource;

                            using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\timeline_" + y + ".html", false))
                            {
                                //if (File.Exists(saveFileDialog1.FileName))
                                //    File.Delete(saveFileDialog1.FileName);

                                file.Write(codePage);
                            }

                            //backgroundWorkerComments.ReportProgress(nbreAnnee);
                            Thread.Sleep(100);
                            nbreAnnee++;
                        }






                        //driver.Close();

                        string url = "";
                        string label = "";
                        string id = "";

                    }
                    catch
                    {

                    }

                }


            backgroundWorker1.ReportProgress(-104);
            Thread.Sleep(2000);
            
            backgroundWorker1.CancelAsync();
            comments= false;
            //labelanalyseencours.Visible = false;
            //pictureBoxwaiting.Visible = false;
            //pictureBoxlogofacebook.Visible = false;

        }
        private void GetAllCommentsForNewLook(int debut, int fin)
        {


            backgroundWorker1.ReportProgress(-90);
            backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " début du scraping des pages likées et commentaires");

            int nbreresults = 0;

            if (driver == null)
            {
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " initialisation du driver");

                InitializeDriver();
                // 1. Maximize the browser
                //driver.Manage().Window.Maximize();



                // 2. Go to the "Google" homepage
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture de la page facebook login");

                driver.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }

                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driver.FindElementById("email");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driver.FindElementById("pass");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driver.FindElementById("loginbutton").Click();
                //searchButton.Click();
                Thread.Sleep(2500);

            }

            string urlFriend = textBoxUSERNAMEFRIENDS.Text;
            IList<string> allcomments = new List<string>();


            System.Random rnd = new System.Random();
            int nbreAnnee = 1;


            Thread.Sleep(5000);
            if (!profilIsSet)
                GetProfileInformations(backgroundWorker1);

            try
            {


                string targetName = textBoxops.Text;
                

                if (!Directory.Exists(pathToSave + @"\COMMENTS"))
                    Directory.CreateDirectory(pathToSave + @"\COMMENTS");

                if (!Directory.Exists(pathToSave + @"\COMMENTS\PICTURES"))
                    Directory.CreateDirectory(pathToSave + @"\COMMENTS\PICTURES");

                if (!Directory.Exists(pathToSave + @"\TXT"))
                    Directory.CreateDirectory(pathToSave + @"\TXT");

                //dabord les publications et commentaires

                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture de la page des pages likées");

                driver.Navigate().GoToUrl(urlFriend + "/allactivity?category_key=likedposts&privacy_source=access_hub&entry_point=ayi_hub");
                Thread.Sleep(5000);

                int nbreannee = fin - debut;

                //backgroundWorkerComments.ReportProgress(-1, liYears.Length);
                backgroundWorkerComments.ReportProgress(-1, (nbreannee == 0 ? 1 : nbreannee));
                

                ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top
                Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                long innerHeightt = (long)innerHeight;
                long scroll = (long)innerHeight;
                long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                scrollHeight = scrollHeight + scroll;
                int hauteur = 450;



                try
                {
                    var imageDown = driver.FindElementByXPath("//div[@class='j83agx80 cbu4d94t buofh1pr l9j0dhe7]");
                    //Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('j83agx80 cbu4d94t buofh1pr')[1].scrollHeight");

                    ReadOnlyCollection<IWebElement> resultats = (ReadOnlyCollection<IWebElement>)((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')");

                    Object lastHeight = null;
                    int y = 0;
                    foreach (IWebElement el in resultats)
                    {
                        lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight");
                        if (lastHeight != null && lastHeight.ToString() != "0")
                            break;
                        y++;
                    }

                    //Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[1].scrollHeight");
                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + "scrolling de la page des pages likées");

                    while (true)
                    {
                        //driver.execute_script('document.getElementById("viewport").scrollTop += 100')

                        ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollTo(0, document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight)");
                        Thread.Sleep(2000);

                        ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollTo(0, document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight)");
                        Thread.Sleep(2000);


                        ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollTo(0, document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight)");
                        Thread.Sleep(2000);


                        ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollTo(0, document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight)");
                        Thread.Sleep(2000);


                        Object newHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight");
                        if (newHeight.Equals(lastHeight))
                        {
                            break;
                        }
                        lastHeight = newHeight;
                    }
                }
                catch (Exception ex)
                {

                }

                IList<IWebElement> comments = driver.FindElementsByXPath("//div[@class='kvgmc6g5']");

                string commentaire = "";
                string lienvers = "";
                string linkImage = "";
                string pathLocalImage = "";
                
                string ligne = "";
                int i = 1;

                nbreresults = comments.Count;
                backgroundWorker1.ReportProgress(-1111, nbreresults);

                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " récupération du texte des pages likées : " + comments.Count());

                foreach (IWebElement el in comments)
                {

                    IList<IWebElement> commentaries = el.FindElements(By.XPath(".//div[@class='l9j0dhe7']"));

                    foreach (IWebElement ell in commentaries)
                    {
                        try
                        {
                            commentaire = ell.FindElements(By.TagName("span"))[0].Text.Replace("\r\n", " ") + " " + ell.FindElements(By.TagName("span"))[3].Text.Replace("\r\n", " ");
                            lienvers = ell.FindElement(By.TagName("a")).GetAttribute("href");
                            linkImage = ell.FindElement(By.TagName("image")).GetAttribute("xlink:href");

                           


                            try
                            {
                                using (var client = new WebClient())
                                {


                                    
                                    client.DownloadFile(linkImage, pathToSave + @"\COMMENTS\PICTURES\Picture_" + i + ".jpg");
                                    pathLocalImage = @"\COMMENTS\PICTURES\Picture_" + i + ".jpg";
                                    Thread.Sleep(500);
                                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " téléchargement de la photo de profil ");






                                }

                            }

                            catch
                            {

                            }

                            ligne += pathLocalImage + ";" + commentaire + ";" + lienvers + "\n";
                            allcomments.Add(ligne);

                            if (commentaire.ToLower().Contains("commentaire de ") || commentaire.ToLower().Contains("aim"))
                            {
                                Analytics analy = new Analytics();
                                analy.Category = "LIKEPAGES";
                                analy.Url = "aucune";
                                analy.PathToPicture = ligne;
                                try
                                {
                                    string temp = commentaire.Split('.')[0];
                                    temp = temp.Substring(temp.LastIndexOf("de ") + 3);
                                    analy.Username = temp;
                                }
                                catch
                                {

                                }


                                if (!Analytics.ContainsKey(analy.Category +";" + analy.Username + ";" + analy.Url))
                                    Analytics.Add(analy.Category + ";" + analy.Username + ";" + analy.Url, analy);
                            }


                            ligne = "";
                            pathLocalImage = "";
                            i++;
                        }
                        catch
                        {

                        }
                    }

                    backgroundWorker1.ReportProgress(-11111, 1);
                    Thread.Sleep(100);

                }

                string tmpp = "";
                foreach (string ell in allcomments)
                {
                    tmpp += ell;
                }

                using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\TXT\\comments.txt", false))
                {
                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " écriture du fichier " + pathToSave + "\\TXT\\comments.txt");

                    file.Write(tmpp);
                }


                //les pages likee

                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture de la page des likedinterest");

                driver.Navigate().GoToUrl(urlFriend + "/allactivity?category_key=likedinterests&privacy_source=access_hub&entry_point=ayi_hub");
                Thread.Sleep(5000);

                backgroundWorker1.ReportProgress(-2222, 0);

                allcomments = new List<string>();

                ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top
                innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                innerHeightt = (long)innerHeight;
                scroll = (long)innerHeight;
                scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                scrollHeight = scrollHeight + scroll;
                hauteur = 450;



                try
                {
                    var imageDown = driver.FindElementByXPath("//div[@class='j83agx80 cbu4d94t buofh1pr l9j0dhe7']");
                    //Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('j83agx80 cbu4d94t buofh1pr')[1].scrollHeight");

                    ReadOnlyCollection<IWebElement> resultats = (ReadOnlyCollection<IWebElement>)((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')");

                    Object lastHeight = null;
                    int y = 0;
                    foreach (IWebElement el in resultats)
                    {
                        lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight");
                        if (lastHeight != null && lastHeight.ToString() != "0")
                            break;
                        y++;
                    }

                    //Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[1].scrollHeight");
                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " scrolling de la page des likedinterest");

                    while (true)
                    {
                        //driver.execute_script('document.getElementById("viewport").scrollTop += 100')

                        ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollTo(0, document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight)");
                        Thread.Sleep(2000);


                        ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollTo(0, document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight)");
                        Thread.Sleep(2000);



                        ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollTo(0, document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight)");
                        Thread.Sleep(2000);



                        ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollTo(0, document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight)");
                        Thread.Sleep(2000);


                        Object newHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight");
                        if (newHeight.Equals(lastHeight))
                        {
                            break;
                        }
                        lastHeight = newHeight;
                    }
                }
                catch (Exception ex)
                {

                }

                comments = driver.FindElementsByXPath("//div[@class='kvgmc6g5']");

                commentaire = "";
                lienvers = "";
                linkImage = "";
                pathLocalImage = "";

                ligne = "";
                //int i = 1;
                backgroundWorker1.ReportProgress(-2222, comments.Count);
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " récupération du texte de la page des likedinterest : " + comments.Count());

                foreach (IWebElement el in comments)
                {
                    IList<IWebElement> commentaries = el.FindElements(By.XPath(".//div[@class='l9j0dhe7']"));

                    foreach (IWebElement ell in commentaries)
                    {
                        try
                        {
                            commentaire = ell.FindElements(By.TagName("span"))[0].Text;
                            lienvers = ell.FindElement(By.TagName("a")).GetAttribute("href");
                            linkImage = ell.FindElement(By.TagName("image")).GetAttribute("xlink:href");


                            try
                            {
                                using (var client = new WebClient())
                                {



                                    client.DownloadFile(linkImage, pathToSave + @"\COMMENTS\PICTURES\Picture_" + i + ".jpg");
                                    pathLocalImage = @"\COMMENTS\PICTURES\Picture_" + i + ".jpg";
                                    Thread.Sleep(500);
                                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " téléchargement de la photo de profil");





                                }

                            }

                            catch
                            {

                            }

                            ligne += pathLocalImage + ";" + commentaire + ";" + lienvers + "\n";
                            allcomments.Add(ligne);      

                            ligne = "";
                            pathLocalImage = "";
                            i++;
                        }
                        catch
                        {

                        }

                    }


                    backgroundWorker1.ReportProgress(-22222, 1);



                }

                backgroundWorker1.ReportProgress(-3333, 0);
                //les commentaires

                //driver.Manage().Window.Maximize();
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture de la page des commentaires");

                driver.Navigate().GoToUrl(urlFriend + "/allactivity?category_key=commentscluster&privacy_source=access_hub&entry_point=ayi_hub");
                Thread.Sleep(5000);

               


                allcomments = new List<string>();

                ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top
                innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                innerHeightt = (long)innerHeight;
                scroll = (long)innerHeight;
                scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                scrollHeight = scrollHeight + scroll;
                hauteur = 450;



                try
                {
                    var imageDown = driver.FindElementByXPath("//div[@class='j83agx80 cbu4d94t buofh1pr l9j0dhe7']");
                    //Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('j83agx80 cbu4d94t buofh1pr')[1].scrollHeight");
                    //q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv

                    ReadOnlyCollection<IWebElement> resultats = (ReadOnlyCollection<IWebElement>)((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')");

                    Object lastHeight = null;
                    int y = 0;
                    foreach (IWebElement el in resultats)
                    {
                        lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight");
                        if (lastHeight != null && lastHeight.ToString() != "0")
                            break;
                        y++;
                    }

                    //Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[1].scrollHeight");
                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " scrolling de la page des commentaires");

                    while (true)
                    {
                        //driver.execute_script('document.getElementById("viewport").scrollTop += 100')

                        ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollTo(0, document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight)");
                        Thread.Sleep(5000);


                        ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollTo(0, document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight)");
                        Thread.Sleep(5000);


                        ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollTo(0, document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight)");
                        Thread.Sleep(5000);


                        ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollTo(0, document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight)");
                        Thread.Sleep(5000);

                        Object newHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight");
                        if (newHeight.Equals(lastHeight))
                        {
                            break;
                        }
                        lastHeight = newHeight;
                    }
                }
                catch (Exception ex)
                {

                }

                comments = driver.FindElementsByXPath("//div[@class='kvgmc6g5']");

                commentaire = "";
                lienvers = "";
                linkImage = "";
                pathLocalImage = "";

                ligne = "";
                //int i = 1;

                if (!Directory.Exists(pathToSave + @"\COMMENTS\SCREENSHOTS"))
                    Directory.CreateDirectory(pathToSave + @"\COMMENTS\SCREENSHOTS");

                //int numberComment = 1;
                backgroundWorker1.ReportProgress(-3333, comments.Count);

                IList<string> urlsComments = new List<string>();
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " récupération du texte des commentaires : " + comments.Count());

                foreach (IWebElement el in comments)
                {
                    try
                    {
                        IList<IWebElement> commentaries = el.FindElements(By.XPath(".//div[@class='l9j0dhe7']"));

                        foreach (IWebElement ell in commentaries)
                        {


                            try
                            {
                               
                                urlsComments.Add(ell.FindElement(By.TagName("a")).GetAttribute("href"));
                               


                            }
                            catch
                            {

                            }




                            try
                            {
                                string commentBy = "";
                                commentaire = ell.FindElements(By.TagName("span"))[0].Text.Replace("\r\n"," ");
                                commentBy = ell.FindElements(By.TagName("span"))[0].Text;
                                lienvers = ell.FindElement(By.TagName("a")).GetAttribute("href");
                                linkImage = ell.FindElement(By.TagName("image")).GetAttribute("xlink:href");

                                if (isElementPresent(driver, "//span[@class='a8c37x1j ni8dbmo4 stjgntxs l9j0dhe7 ojkyduve']"))
                                {
                                    try
                                    {
                                        commentaire += " " + ell.FindElement(By.XPath(".//span[@class='a8c37x1j ni8dbmo4 stjgntxs l9j0dhe7 ojkyduve']")).Text.Replace("\r\n", " ");
                                    }
                                    catch
                                    {

                                    }

                                }


                                try
                                {
                                    using (var client = new WebClient())
                                    {



                                        client.DownloadFile(linkImage, pathToSave + @"\COMMENTS\PICTURES\Picture_" + i + ".jpg");
                                        pathLocalImage = @"\COMMENTS\PICTURES\Picture_" + i + ".jpg";
                                        Thread.Sleep(500);
                                        backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " téléchargement de l'image de profil");





                                    }

                                }

                                catch
                                {

                                }

                                ligne += pathLocalImage + ";" + commentaire + ";" + lienvers + "\n";
                                allcomments.Add(ligne);

                                if (commentBy.ToLower().Contains(" de "))
                                {
                                    Analytics analy = new Analytics();
                                    analy.Category = "COMMENTS";
                                    analy.Url = "aucune";
                                    analy.PathToPicture = ligne;
                                    try
                                    {
                                        string temp = commentaire.Split('.')[0];
                                        temp = temp.Substring(temp.LastIndexOf("de ") + 3);
                                        analy.Username = temp;
                                    }
                                    catch
                                    {

                                    }


                                    if (!Analytics.ContainsKey(analy.Category + ";" + analy.Username + ";" + analy.Url))
                                        Analytics.Add(analy.Category + ";" + analy.Username + ";" + analy.Url, analy);
                                }



                                ligne = "";
                                pathLocalImage = "";
                                i++;
                            }
                            catch
                            {

                            }

                            


                            //numberComment++;
                        }//fin boucle----------------------------------------------------------------
                    }
                    catch
                    {

                    }

                    backgroundWorker1.ReportProgress(-33333, i);

                }

                backgroundWorker1.ReportProgress(-3333, 0);

                //int numberComment = 1;
                if (ScreenshotComments)
                {
                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " début des captures d'écran des commentaires : " + urlsComments.Count());

                    backgroundWorker1.ReportProgress(-3333, urlsComments.Count);
                    foreach (string url in urlsComments)
                    {
                        //driver.Manage().Window.Maximize();
                        driver.Navigate().GoToUrl(url);
                        Thread.Sleep(1000);

                        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top

                        innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                        innerHeightt = (long)innerHeight;
                        scroll = (long)innerHeight;
                        scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                        scrollHeight = scrollHeight + scroll;
                        hauteur = 450;

                        try
                        {
                            Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                            i = 1;
                            while (scrollHeight >= innerHeightt)
                            {
                                //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                                //Thread.Sleep(1000);

                                Screenshot imageScreenshot = ((ITakesScreenshot)driver).GetScreenshot();
                                //imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                                //Save the screenshot
                                imageScreenshot.SaveAsFile(pathToSave + @"\COMMENTS\SCREENSHOTS\Comment_" + url.Replace("/", "_").Replace(":", "@") + "_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                Thread.Sleep(100);
                                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " capture d'écran n° " + i);


                                ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");


                                scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
                                Thread.Sleep(1000);


                                scrollHeight = scrollHeight + scroll;
                                innerHeightt = innerHeightt + hauteur;
                                i++;
                            }

                            try
                            {
                                if (isElementPresent(driver, "//div[@class='buofh1pr']"))
                                {

                                    IWebElement urlTmp = driver.FindElementByXPath("//div[@class='buofh1pr']");

                                    string urlll = urlTmp.FindElement(By.TagName("a")).GetAttribute("href");
                                    IWebElement urll = urlTmp.FindElement(By.TagName("a"));
                                    // string urlll = urll.GetAttribute("href");

                                    if (!urlll.Contains("profile.php?id="))
                                        urlll = urlll.Split('?')[0];
                                    else
                                        urlll = urlll.ToString().Split('&')[0];




                                    for (int a = 1; a <= i; a++)
                                    {
                                        //analy.PathToPicture = userNameTag + "_" + idTag + "_" + numTag + i + ".png";

                                        Analytics analy = new Analytics();
                                        analy.Category = "COMMENTSSCREENSHOTS";

                                        try
                                        {
                                            analy.Username = urll.Text;
                                            analy.Url = urlll;
                                            analy.PathToPicture = "Comment_" + url.Replace("/", "_").Replace(":", "@") + "_" + a + ".png";
                                        }
                                        catch
                                        {

                                        }


                                        if (!Analytics.ContainsKey(analy.Category + ";" + analy.Username + ";" + "Comment_" + url.Replace("/", "_").Replace(":", "@") + "_" + a + ".png"))
                                            Analytics.Add(analy.Category + ";" + analy.Username + ";" + "Comment_" + url.Replace("/", "_").Replace(":", "@") + "_" + a + ".png", analy);


                                    }


                                }
                            }
                            catch
                            {

                            }

                        }
                        catch
                        {
                            //e.printStackTrace();
                        }

                        //numberComment++;
                        backgroundWorker1.ReportProgress(-33333, 1);
                    }
                }


                

            }
            catch (OpenQA.Selenium.NoSuchElementException ex)//si pas d'acces à la page on essaie les annees manuellement
            {
                

            }

       

            string tmp = "";
            foreach (string ell in allcomments)
            {
                tmp += ell;
            }

            using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\TXT\\pagesLiked.txt", false))
            {
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " écriture du fichier " + pathToSave + "\\TXT\\pagesLiked.txt");

                file.Write(tmp);
            }

            backgroundWorker1.ReportProgress(-104);
            Thread.Sleep(2000);

            backgroundWorker1.CancelAsync();
            comments = false;
            //labelanalyseencours.Visible = false;
            //pictureBoxwaiting.Visible = false;
            //pictureBoxlogofacebook.Visible = false;

        }

        //public Bitmap MakeElemScreenshotForComments(IWebDriver driver, WebElement elem)
        //{
        //    Screenshot myScreenShot = ((ITakesScreenshot)driver).GetScreenshot();

        //    Bitmap screen = new Bitmap(new MemoryStream(myScreenShot.AsByteArray));
        //    Bitmap elemScreenshot = screen.Clone(new Rectangle(elem.Location, elem.Size), screen.PixelFormat);

        //    screen.Dispose();

        //    return elemScreenshot;
        //}

        private void GetHomePage()
        {
            backgroundWorker1.ReportProgress(-90);

            string resultat = "";
            Dictionary<string, string> resultats = new Dictionary<string, string>();
            Dictionary<string, string> mois = new Dictionary<string, string>();

            mois.Add("jan", "01");
            mois.Add("fév", "02");
            mois.Add("fev", "02");
            mois.Add("fèv", "02");
            mois.Add("mar", "03");
            mois.Add("avr", "04");
            mois.Add("mai", "05");
            mois.Add("jui", "06");
            mois.Add("juil", "07");
            mois.Add("janvier", "01");
            mois.Add("février", "02");
            mois.Add("mars", "03");
            mois.Add("avril", "04");
            mois.Add("juin", "06");
            mois.Add("juillet", "07");
            mois.Add("août", "08");
            mois.Add("septembre", "09");
            mois.Add("octobre", "10");
            mois.Add("novembre", "11");
            mois.Add("décembre", "12");

            List<IWebElement> earlier = new List<IWebElement>();
            List<DateTime> sameTime = new List<DateTime>();
            bool STOP = false;


            if (driver == null)
            {
                InitializeDriver();
                // 2. Go to the "Google" homepage
                driver.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }

                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driver.FindElementById("email");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driver.FindElementById("pass");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driver.FindElementById("loginbutton").Click();
                //searchButton.Click();
                Thread.Sleep(2500);
            }

            string urlFriend = textBoxUSERNAMEFRIENDS.Text;
            
            System.Random rnd = new System.Random();
            int nbreAnnee = 1;
            

            if (!profilIsSet)
                GetProfileInformations(backgroundWorker1);


                try
                {


                    string targetName = textBoxops.Text;
                    Dictionary<string, string> dicoMessagesFrom = new Dictionary<string, string>();
                    Dictionary<string, string> messagesVisibles = new Dictionary<string, string>();
                    Dictionary<string, string> messagesVisiblesForFile = new Dictionary<string, string>();
                    //Rectangle resolution = Screen.FromControl(this).WorkingArea;
                    //int hauteurtotale = resolution.Height;
                    //int resolutionEcran = resolution.Height;
                    int newHauteur = 0;

                    int width = driver.Manage().Window.Size.Width;
                    int height = driver.Manage().Window.Size.Height;



                    if (!Directory.Exists(pathToSave + @"\HOMEPAGE\"))
                        Directory.CreateDirectory(pathToSave + @"\HOMEPAGE\");

                if (checkBoxFrench.Checked && LANGUAGESELECTED =="")
                    SetFrenchLanguage();


                        driver.Navigate().GoToUrl(urlFriend);
                        Thread.Sleep(5000);

                        

                        try
                        {
                            Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");

                        int i = 1;
                    int hauteurr = 0;
                         //while (true)

                         ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top 
                         Thread.Sleep(500);


                        while (true)
                        {
                            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0," + hauteurr + ");");
                            Thread.Sleep(500);
                            //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                            //Thread.Sleep(1000);

                            IList<IWebElement> elements = driver.FindElements(By.XPath("//div[@class='_2pid _2pin _52jv']"));
                            IWebElement findePage = null;

                        //ceci récupère les années du journal
                        try
                        {
                            IWebElement testt = driver.FindElement(By.XPath("//div[@class='uiSelectorMenuWrapper uiToggleFlyout']"));
                            //driver.FindElement(By.XPath("//div[@class='uiSelectorMenuWrapper uiToggleFlyout']")).FindElements(By.XPath("//li[@class='uiMenuItem uiMenuItemRadio uiSelectorOption']"))[0].GetAttribute("data-label")
                        }
                        catch
                        {

                        }
                        

                        //calcul du temps
                        //DateTime datumm = new DateTime(1999,0,1);
                        //if (datumm.Year != 1900)
                        //{
                        //    IList<IWebElement> listeTimes = driver.FindElements(By.ClassName("timestampContent"));
                        //    Thread.Sleep(2000);

                        //    string dernieredate = "";
                        //    string datum = "";

                        //    if (listeTimes[0].Text.ToLower().Contains("à"))
                        //    {
                        //        datum = listeTimes[0].Text.ToLower().Split('à')[0].Trim().Replace(" ", "/");
                        //        if (mois.ContainsKey(datum.Split('/')[1].ToLower()))
                        //        {
                        //            datum = datum.ToLower().Replace(datum.Split('/')[1].ToLower(), mois[datum.Split('/')[1].ToLower()]);
                        //        }

                        //    }
                        //    else
                        //        datum = listeTimes[0].Text.Split(' ')[0];

                        //    CultureInfo culture = new CultureInfo("fr-FR");
                        //    DateTime firstDate = Convert.ToDateTime(datum, culture);// premiere date dans la liste
                        //    DateTime tempss;

                        //    tempss = Convert.ToDateTime(datum, culture);
                        //    DateTime date2 = new DateTime(datumm.Year, datumm.Month, datumm.Day);

                        //    foreach (IWebElement el in listeTimes)
                        //    {

                        //        //DateTime firstDate;

                        //        datum = "";
                        //        if (listeTimes[0].Text.ToLower().Contains("à"))
                        //        {
                        //            datum = listeTimes[0].Text.ToLower().Split('à')[0].Trim().Replace(" ", "/");
                        //            if (mois.ContainsKey(datum.Split('/')[1].ToLower()))
                        //            {
                        //                datum = datum.ToLower().Replace(datum.Split('/')[1].ToLower(), mois[datum.Split('/')[1].ToLower()]);
                        //            }

                        //        }
                        //        else
                        //            datum = listeTimes[0].Text.Split(' ')[0];

                        //        firstDate = Convert.ToDateTime(datum, culture);// premiere date dans la liste


                        //        datum = "";
                        //        if (el.Text.ToLower().Contains("à"))
                        //        {
                        //            datum = el.Text.ToLower().Split('à')[0].Trim().Replace(" ", "/");
                        //            if (mois.ContainsKey(datum.Split('/')[1].ToLower()))
                        //            {
                        //                datum = datum.ToLower().Replace(datum.Split('/')[1].ToLower(), mois[datum.Split('/')[1].ToLower()]);

                        //                if (Convert.ToInt32(datum.Split('/')[0]) < 10 && !datum.Split('/')[0].StartsWith("0"))
                        //                    datum = "0" + datum;
                        //            }

                        //        }
                        //        else
                        //            datum = el.Text.Split(' ')[0];

                        //        try
                        //        {
                        //            tempss = Convert.ToDateTime(datum, culture);
                        //        }
                        //        catch
                        //        {
                        //            continue;
                        //        }

                        //        int result = 0;
                        //        try
                        //        {


                        //            result = DateTime.Compare(tempss, date2);
                        //            string relationship;

                        //            if (result < 0)
                        //            {
                        //                earlier.Add(el);
                        //                relationship = "is earlier than";
                        //            }
                        //            else
                        //            if (result == 0)
                        //            {
                        //                relationship = "is the same time as";
                        //                sameTime.Add(tempss);

                        //                if (firstDate != tempss)
                        //                {
                        //                    //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollIntoView(true) + 1600;", el);
                        //                    //Thread.Sleep(500);
                        //                    STOP = true;
                        //                    //top = "0px";
                        //                    //fromdate = el;
                        //                    break;
                        //                }


                        //            }
                        //            else
                        //            {
                        //                relationship = "is later than";
                        //            }



                        //        }
                        //        catch
                        //        {

                        //        }


                        //    }

                        //    if (!STOP)
                        //    {
                        //        int result = DateTime.Compare(firstDate, date2);
                        //        if (result < 0)
                        //        {
                        //            STOP = true;
                        //            //top = "0px";
                        //            //fromdate = earlier[earlier.Count() - 1];

                        //        }
                        //    }

                        //}

                        //if (STOP)
                        //    break;


                        
                        if(!FASTJOURNAL)
                            if (elements.Count > 0)
                            {
                                findePage = elements[0];
                                foreach (IWebElement el in elements)
                                {
                                    IList<IWebElement> ell = el.FindElements(By.TagName("i"));
                                    findePage = ell[0];
                                    break;
                                }
                            }
                            

                            Object newHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");

                        if (!FASTJOURNAL)
                        {

                        
                            var messageFrom = driver.FindElementsByXPath("//div[@class='_5pcr userContentWrapper']");

                            

                            ////on récupère les message provenant de from
                            object[] messageFroms = messageFrom.ToArray();
                       
                            foreach (OpenQA.Selenium.Remote.RemoteWebElement o in messageFroms)
                            {

                                string tentation = o.ToString();
                                string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                if (!dicoMessagesFrom.ContainsKey(idd))
                                {
                                    dicoMessagesFrom.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                }
                                //else
                                //    continue;

                                if (o.LocationOnScreenOnceScrolledIntoView.Y > 15 && o.LocationOnScreenOnceScrolledIntoView.Y < (height - 250))
                                {
                                    if (!messagesVisibles.ContainsKey(idd) && o.Text != "")
                                    {
                                        messagesVisibles.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                    }
                                }

                            }

                        }

                            Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                            imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                            //Save the screenshot
                            imageScreenshott.SaveAsFile(pathToSave + @"\HOMEPAGE\" + "Screenshot_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                            Thread.Sleep(100);

                            string pathToFile = pathToSave + @"\HOMEPAGE\" + "Screenshot_" + i + ".png";
                        
                            if (!FASTJOURNAL)
                            foreach (string cle in messagesVisibles.Keys)
                            {

                                if (!messagesVisiblesForFile.ContainsKey(cle))
                                {

                                    string[] lignes = messagesVisibles[cle].Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);

                                    string tmp = "";
                                    foreach (string li in lignes)
                                    {
                                        tmp += li.Trim().Replace("\r", "").Replace(";","");
                                    }



                                    messagesVisiblesForFile.Add(cle, tmp + ";" + pathToFile + "\n");
                                }

                            }
                            if(findePage != null)
                                if (((OpenQA.Selenium.Remote.RemoteWebElement)findePage).LocationOnScreenOnceScrolledIntoView.Y <= (height - 100))
                                    break;


                            hauteurr = 450;
                            i++;
                        }
                        }
                        catch(Exception ex)
                        {
                            //e.printStackTrace();
                        }

                try
                {
                    string codePagee = driver.PageSource;

                    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\HOMEPAGE\\Journal.html", false))
                    {

                        file.Write(codePagee);
                    }

                    if (!FASTJOURNAL)
                    {                   
                        Dictionary<string, string> newDico = new Dictionary<string, string>();
                    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\HOMEPAGE\\friendsFromHomepage.txt", false))
                    {
                        //on essaie de recuperer les identifiants
                        string[] idfs = codePagee.Split(new string[] { "<a class=\"_6qw4\"" }, StringSplitOptions.RemoveEmptyEntries);
                        //string resultat = "";
                        string id = "";
                        string username = "";
                        string url = "";
                        //Dictionary<string, string> resultats = new Dictionary<string, string>();



                        foreach (string li in idfs)
                        {
                            string tmp = li.Trim();
                            if (tmp.StartsWith("data-hovercard=") && tmp.Contains("?id="))
                            {
                                id = tmp.Substring(tmp.IndexOf("?id=") + 4).Split('&')[0];

                                if (tmp.Contains("href=\""))
                                {


                                    url = "https://www.facebook.com/" + tmp.Substring(tmp.IndexOf("href=\"") + 6).Split('?')[0].Replace(";", "");
                                    username = tmp.Substring(tmp.IndexOf("\">") + 2).Split('<')[0];
                                }

                                resultat = url + ";" + username + ";" + id + "\n";
                                if (!resultats.ContainsKey(resultat))
                                {
                                    resultats.Add(resultat, resultat);
                                }

                            }
                        }

                        idfs = codePagee.Split(new string[] { "<a title=\"" }, StringSplitOptions.RemoveEmptyEntries);

                        foreach (string li in idfs)
                        {
                            string tmp = li.Trim();
                            if (tmp.Contains("href=\"") && tmp.Contains("?id="))


                            {
                                id = tmp.Substring(tmp.IndexOf("?id=") + 4).Split('&')[0];

                                if (tmp.Contains("href=\""))
                                {
                                    url = tmp.Substring(tmp.IndexOf("href=\"") + 6).Split('?')[0].Replace(";", "");
                                    username = tmp.Split('"')[0];
                                }

                                resultat = url + ";" + username + ";" + id + "\n";
                                if (!resultats.ContainsKey(resultat))
                                {
                                    resultats.Add(resultat, resultat);
                                }


                            }
                        }

                        idfs = codePagee.Split(new string[] { "<a class=\"profileLink" }, StringSplitOptions.RemoveEmptyEntries);
                        foreach (string li in idfs)
                        {
                            string tmp = li.Trim();
                            if (tmp.StartsWith("\" title=\"") && tmp.Contains("?id="))
                            {
                                id = tmp.Substring(tmp.IndexOf("?id=") + 4).Split('&')[0];



                                if (tmp.Contains("href=\""))
                                {
                                    url = tmp.Substring(tmp.IndexOf("href=\"") + 6).Split('?')[0].Replace(";", "");
                                    username = tmp.Substring(tmp.IndexOf("\" title=\"") + 9).Split('"')[0];
                                }

                                resultat = url + ";" + username + ";" + id + "\n";
                                if (!resultats.ContainsKey(resultat))
                                {
                                    resultats.Add(resultat, resultat);
                                }


                            }
                        }
                    
                        //try
                        //{
                        //    IList<IWebElement> elements = driver.FindElements(By.TagName("a"));

                        //    foreach (IWebElement el in elements)
                        //    {
                        //        if (el.GetAttribute("href") != null && el.GetAttribute("data-hovercard") != null)
                        //        {
                        //            url = el.GetAttribute("href");
                        //            id = el.GetAttribute("data-hovercard").Substring(el.GetAttribute("data-hovercard").IndexOf("?id=") + 4).Split('&')[0];

                        //            if (url.StartsWith("/"))
                        //            {
                        //                if (url.Contains("profile"))
                        //                {
                        //                    url = "https://www.facebook.com" + url.Split('&');
                        //                }
                        //                else
                        //                    url = "https://www.facebook.com" + url.Split('?');

                        //                username = el.Text;
                        //            }
                        //            else
                        //            if (url.StartsWith("https://www.facebook.com"))
                        //            {

                        //                if (url.Contains("profile"))
                        //                {
                        //                    url = url.Split('&')[0];
                        //                }
                        //                else
                        //                    url = url.Split('?')[0]; ;


                        //                if (el.GetAttribute("title") != null)
                        //                {
                        //                    username = el.GetAttribute("title");

                        //                    if (username == "")
                        //                        username = el.Text;
                        //                }
                        //            }

                        //        }
                        //        else
                        //            continue;

                        //        if (!newDico.ContainsKey(url))
                        //            newDico.Add(url, url + ";" + username + ";" + id + "\n");
                        //    }


                        //}
                        //catch
                        //{
                        //    if (newDico.Count() > 0)
                        //    {
                        //        using (System.IO.StreamWriter filee = new System.IO.StreamWriter(pathToSave + "\\HOMEPAGE\\AllContactsFromHomepage.txt", false))
                        //        {
                        //            string pourFichierr = "";
                        //            foreach (string ll in newDico.Values)
                        //            {
                        //                pourFichierr += ll;
                        //            }
                        //            file.Write(pourFichierr);
                        //        }
                        //    }
                        //}

                        string pourFichier = "";
                        foreach (string l in resultats.Values)
                        {
                            if (l.Contains("<img class") || l.Contains("<div class"))
                                continue;
                            pourFichier += l;
                        }

                        file.Write(pourFichier);
                    }

                    //if (newDico.Count() > 0)
                    //{
                    //    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\HOMEPAGE\\AllContactsFromHomepage.txt", false))
                    //    {
                    //        string pourFichier = "";
                    //        foreach (string ll in newDico.Values)
                    //        {
                    //            pourFichier += ll;
                    //        }
                    //        file.Write(pourFichier);
                    //    }
                    //}
                    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\HOMEPAGE\\HomepageComments_With_Screenshots.txt", false))
                    {
                        string textes = "";
                        foreach (string t in messagesVisiblesForFile.Values)
                        {
                            textes += t;
                        }


                        file.Write(textes);
                        messagesVisiblesForFile = new Dictionary<string, string>();
                    }
                }
                    Thread.Sleep(2500);
                }
                catch
                {
                    if(!FASTJOURNAL)
                    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\HOMEPAGE\\friendsFromHomepage.txt", false))
                    {
                        string pourFichier = "";
                        foreach (string l in resultats.Values)
                        {
                            if (l.Contains("<img class") || l.Contains("<div class"))
                                continue;
                            pourFichier += l;
                        }

                        file.Write(pourFichier);
                    }

                }


                    //page about -------------------------------------------------------------------------------------------------------------------------------------------------------------------------


                    if (!Directory.Exists(pathToSave + @"\ABOUT\"))
                        Directory.CreateDirectory(pathToSave + @"\ABOUT\");

                if (urlFriend.Contains("id="))
                {
                    driver.Navigate().GoToUrl(urlFriend + "&sk=about");
                    Thread.Sleep(5000);
                }
                else
                {
                    driver.Navigate().GoToUrl(urlFriend + "/about");
                    Thread.Sleep(5000);
                }
                

                ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top

                Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                long innerHeightt = (long)innerHeight;
                long scroll = (long)innerHeight;
                long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                scrollHeight = scrollHeight + scroll;
                int hauteur = 450;



                try
                    {
                        Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                        int i = 1;
                        while (scrollHeight >= innerHeightt)
                        {
                            //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                            //Thread.Sleep(1000);

                            Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                            imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                            //Save the screenshot
                            imageScreenshott.SaveAsFile(pathToSave + @"\ABOUT\" + "_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                            Thread.Sleep(100);



                        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                        if ((scrollHeight - innerHeightt) < 200)
                        {
                            Thread.Sleep(5000);
                        }
                        else
                            Thread.Sleep(2500);


                        scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
                        Thread.Sleep(2000);


                        if (scrollHeight <= innerHeightt)
                        {
                            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                            Thread.Sleep(2000);
                            scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                        }

                        scrollHeight = scrollHeight + scroll;
                        innerHeightt = innerHeightt + hauteur;
                        i++;
                        }
                    }
                    catch
                    {
                        //e.printStackTrace();
                    }


                    string codePage = driver.PageSource;

                    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\ABOUT\\About.html", false))
                    {
                        //if (File.Exists(saveFileDialog1.FileName))
                        //    File.Delete(saveFileDialog1.FileName);

                        file.Write(codePage);
                    }


                }
                catch (OpenQA.Selenium.NoSuchElementException ex)//si pas d'acces à la page on essaie les annees manuellement
                {
                    try
                    {
                        string targetName = textBoxops.Text;


                        string[] liYears = new string[] { DateTime.Now.Year.ToString(), ((DateTime.Now.Year) - 1).ToString() };

                        if (!Directory.Exists(pathToSave))
                            Directory.CreateDirectory(pathToSave);

                        backgroundWorkerJournal.ReportProgress(-1, liYears.Length);

                        //label18.Text = "Téléchargement des comments en cours ";
                        foreach (string y in liYears)
                        {
                            driver.Navigate().GoToUrl(urlFriend);
                            Thread.Sleep(5000);

                            while (!isElementPresentForComment(driver))
                            {


                                ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight)");

                                //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 100)");
                                Thread.Sleep(rnd.Next(500, 1500));



                            }


                            string codePage = driver.PageSource;

                            using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\HOMEPAGE\\Journal.html", false))
                            {
                                //if (File.Exists(saveFileDialog1.FileName))
                                //    File.Delete(saveFileDialog1.FileName);

                                file.Write(codePage);
                            }

                            backgroundWorkerJournal.ReportProgress(nbreAnnee);
                            Thread.Sleep(100);
                            nbreAnnee++;
                        }

                        

                    }
                    catch
                    {

                    }

                }


            backgroundWorker1.ReportProgress(-101);
            Thread.Sleep(2000);
            
            backgroundWorker1.CancelAsync();
            comments = false;
            //labelanalyseencours.Visible = false;
            //pictureBoxwaiting.Visible = false;
            //pictureBoxlogofacebook.Visible = false;

        }
        private void GetHomePage(int debut, int fin)
        {
            backgroundWorker1.ReportProgress(-90);

            string resultat = "";
            Dictionary<string, string> resultats = new Dictionary<string, string>();
            Dictionary<string, string> mois = new Dictionary<string, string>();

            mois.Add("jan", "01");
            mois.Add("fév", "02");
            mois.Add("fev", "02");
            mois.Add("fèv", "02");
            mois.Add("mar", "03");
            mois.Add("avr", "04");
            mois.Add("mai", "05");
            mois.Add("jui", "06");
            mois.Add("juil", "07");
            mois.Add("janvier", "01");
            mois.Add("février", "02");
            mois.Add("mars", "03");
            mois.Add("avril", "04");
            mois.Add("juin", "06");
            mois.Add("juillet", "07");
            mois.Add("août", "08");
            mois.Add("septembre", "09");
            mois.Add("octobre", "10");
            mois.Add("novembre", "11");
            mois.Add("décembre", "12");

            List<IWebElement> earlier = new List<IWebElement>();
            List<DateTime> sameTime = new List<DateTime>();
            bool STOP = false;


            if (driver == null)
            {
                InitializeDriver();
                // 2. Go to the "Google" homepage
                driver.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }

                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driver.FindElementById("email");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driver.FindElementById("pass");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driver.FindElementById("loginbutton").Click();
                //searchButton.Click();
                Thread.Sleep(2500);
            }

            string urlFriend = textBoxUSERNAMEFRIENDS.Text;

            System.Random rnd = new System.Random();
            int nbreAnnee = 1;


            if (!profilIsSet)
                GetProfileInformations(backgroundWorker1);


            try
            {


                string targetName = textBoxops.Text;
                Dictionary<string, string> dicoMessagesFrom = new Dictionary<string, string>();
                Dictionary<string, string> messagesVisibles = new Dictionary<string, string>();
                Dictionary<string, string> messagesVisiblesForFile = new Dictionary<string, string>();
                //Rectangle resolution = Screen.FromControl(this).WorkingArea;
                //int hauteurtotale = resolution.Height;
                //int resolutionEcran = resolution.Height;
                int newHauteur = 0;

                int width = driver.Manage().Window.Size.Width;
                int height = driver.Manage().Window.Size.Height;



                if (!Directory.Exists(pathToSave + @"\HOMEPAGE\"))
                    Directory.CreateDirectory(pathToSave + @"\HOMEPAGE\");

                if (checkBoxFrench.Checked && LANGUAGESELECTED == "")
                    SetFrenchLanguage();

                int i = 0;
                for (int y = debut; y <= fin; y++)
                {
                    driver.Navigate().GoToUrl(urlFriend + "/timeline?year=" + y);//https://www.facebook.com/cybercaution/timeline?year=2018
                    Thread.Sleep(5000);

                    i++;
                    int try_times = 0;

                    try
                    {
                        Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");                        
                        int hauteurr = 0;
                        //while (true)

                        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top 
                        Thread.Sleep(500);


                        while (true)
                        {
                            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0," + hauteurr + ");");
                            Thread.Sleep(500);
                            //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                            //Thread.Sleep(1000);

                            IList<IWebElement> elements = driver.FindElements(By.XPath("//div[@class='_2pid _2pin _52jv']"));
                            IWebElement findePage = null;

                            //ceci récupère les années du journal
                            try
                            {
                                IWebElement testt = driver.FindElement(By.XPath("//div[@class='uiSelectorMenuWrapper uiToggleFlyout']"));
                                //driver.FindElement(By.XPath("//div[@class='uiSelectorMenuWrapper uiToggleFlyout']")).FindElements(By.XPath("//li[@class='uiMenuItem uiMenuItemRadio uiSelectorOption']"))[0].GetAttribute("data-label")
                            }
                            catch
                            {

                            }



                            //if (!FASTJOURNAL)
                                if (elements.Count > 0)
                                {
                                    findePage = elements[0];
                                    foreach (IWebElement el in elements)
                                    {
                                        IList<IWebElement> ell = el.FindElements(By.TagName("i"));
                                        findePage = ell[0];
                                        break;
                                    }
                                }


                            Object newHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");

                            if (!FASTJOURNAL)
                            {


                                var messageFrom = driver.FindElementsByXPath("//div[@class='_5pcr userContentWrapper']");//new look j83agx80 cbu4d94t



                                ////on récupère les message provenant de from
                                object[] messageFroms = messageFrom.ToArray();

                                foreach (OpenQA.Selenium.Remote.RemoteWebElement o in messageFroms)
                                {

                                    string tentation = o.ToString();
                                    string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                    if (!dicoMessagesFrom.ContainsKey(idd))
                                    {
                                        dicoMessagesFrom.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                    }
                                    //else
                                    //    continue;

                                    if (o.LocationOnScreenOnceScrolledIntoView.Y > 15 && o.LocationOnScreenOnceScrolledIntoView.Y < (height - 250))
                                    {
                                        if (!messagesVisibles.ContainsKey(idd) && o.Text != "")
                                        {
                                            messagesVisibles.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                        }
                                    }

                                }

                            }

                            Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                            imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                            //Save the screenshot
                            imageScreenshott.SaveAsFile(pathToSave + @"\HOMEPAGE\" + "Screenshot_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                            Thread.Sleep(100);

                            string pathToFile = pathToSave + @"\HOMEPAGE\" + "Screenshot_" + i + ".png";

                            if (!FASTJOURNAL)
                                foreach (string cle in messagesVisibles.Keys)
                                {

                                    if (!messagesVisiblesForFile.ContainsKey(cle))
                                    {

                                        string[] lignes = messagesVisibles[cle].Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);

                                        string tmp = "";
                                        foreach (string li in lignes)
                                        {
                                            tmp += li.Trim().Replace("\r", "").Replace(";", "");
                                        }



                                        messagesVisiblesForFile.Add(cle, tmp + ";" + pathToFile + "\n");
                                    }

                                }
                            if (findePage != null)
                                if (((OpenQA.Selenium.Remote.RemoteWebElement)findePage).LocationOnScreenOnceScrolledIntoView.Y <= (height - 100))
                                    break;

                            
                            //if (newHeight.Equals(lastHeight) && hauteurr > 0)
                            //{
                            //    try_times += 1;
                            //    if (try_times > 3) 
                            //    {
                            //        try_times = 0;
                            //        break;
                                    
                            //    }

                                
                            //}
                            //lastHeight = newHeight;

                            hauteurr = 450;
                            i++;
                        }
                    }
                    catch (Exception ex)
                    {
                        //e.printStackTrace();
                    }

                    try
                    {
                        string codePagee = driver.PageSource;

                        using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\HOMEPAGE\\Journal.html", false))
                        {

                            file.Write(codePagee);
                        }

                        if (!FASTJOURNAL)
                        {
                            Dictionary<string, string> newDico = new Dictionary<string, string>();
                            using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\HOMEPAGE\\friendsFromHomepage.txt", false))
                            {
                                //on essaie de recuperer les identifiants
                                string[] idfs = codePagee.Split(new string[] { "<a class=\"_6qw4\"" }, StringSplitOptions.RemoveEmptyEntries);
                                //string resultat = "";
                                string id = "";
                                string username = "";
                                string url = "";
                                //Dictionary<string, string> resultats = new Dictionary<string, string>();



                                foreach (string li in idfs)
                                {
                                    string tmp = li.Trim();
                                    if (tmp.StartsWith("data-hovercard=") && tmp.Contains("?id="))
                                    {
                                        id = tmp.Substring(tmp.IndexOf("?id=") + 4).Split('&')[0];

                                        if (tmp.Contains("href=\""))
                                        {


                                            url = "https://www.facebook.com/" + tmp.Substring(tmp.IndexOf("href=\"") + 6).Split('?')[0].Replace(";", "");
                                            username = tmp.Substring(tmp.IndexOf("\">") + 2).Split('<')[0];
                                        }

                                        resultat = url + ";" + username + ";" + id + "\n";
                                        if (!resultats.ContainsKey(resultat))
                                        {
                                            resultats.Add(resultat, resultat);
                                        }

                                    }
                                }

                                idfs = codePagee.Split(new string[] { "<a title=\"" }, StringSplitOptions.RemoveEmptyEntries);

                                foreach (string li in idfs)
                                {
                                    string tmp = li.Trim();
                                    if (tmp.Contains("href=\"") && tmp.Contains("?id="))


                                    {
                                        id = tmp.Substring(tmp.IndexOf("?id=") + 4).Split('&')[0];

                                        if (tmp.Contains("href=\""))
                                        {
                                            url = tmp.Substring(tmp.IndexOf("href=\"") + 6).Split('?')[0].Replace(";", "");
                                            username = tmp.Split('"')[0];
                                        }

                                        resultat = url + ";" + username + ";" + id + "\n";
                                        if (!resultats.ContainsKey(resultat))
                                        {
                                            resultats.Add(resultat, resultat);
                                        }


                                    }
                                }

                                idfs = codePagee.Split(new string[] { "<a class=\"profileLink" }, StringSplitOptions.RemoveEmptyEntries);
                                foreach (string li in idfs)
                                {
                                    string tmp = li.Trim();
                                    if (tmp.StartsWith("\" title=\"") && tmp.Contains("?id="))
                                    {
                                        id = tmp.Substring(tmp.IndexOf("?id=") + 4).Split('&')[0];



                                        if (tmp.Contains("href=\""))
                                        {
                                            url = tmp.Substring(tmp.IndexOf("href=\"") + 6).Split('?')[0].Replace(";", "");
                                            username = tmp.Substring(tmp.IndexOf("\" title=\"") + 9).Split('"')[0];
                                        }

                                        resultat = url + ";" + username + ";" + id + "\n";
                                        if (!resultats.ContainsKey(resultat))
                                        {
                                            resultats.Add(resultat, resultat);
                                        }


                                    }
                                }



                                string pourFichier = "";
                                foreach (string l in resultats.Values)
                                {
                                    if (l.Contains("<img class") || l.Contains("<div class"))
                                        continue;
                                    pourFichier += l;
                                }

                                file.Write(pourFichier);
                            }


                            //using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\HOMEPAGE\\HomepageComments_With_Screenshots.txt", false))
                            //{
                            //    string textes = "";
                            //    foreach (string t in messagesVisiblesForFile.Values)
                            //    {
                            //        textes += t;
                            //    }


                            //    file.Write(textes);
                            //    messagesVisiblesForFile = new Dictionary<string, string>();
                            //    messagesVisibles = new Dictionary<string, string>();
                            //}
                        }
                        Thread.Sleep(2500);
                    }
                    catch
                    {
                        if (!FASTJOURNAL)
                            using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\HOMEPAGE\\friendsFromHomepage.txt", false))
                            {
                                string pourFichier = "";
                                foreach (string l in resultats.Values)
                                {
                                    if (l.Contains("<img class") || l.Contains("<div class"))
                                        continue;
                                    pourFichier += l;
                                }

                                file.Write(pourFichier);
                            }

                    }

                }

                using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\HOMEPAGE\\HomepageComments_With_Screenshots.txt", false))
                {
                    string textes = "";
                    foreach (string t in messagesVisiblesForFile.Values)
                    {
                        textes += t;
                    }


                    file.Write(textes);
                    messagesVisiblesForFile = new Dictionary<string, string>();
                    messagesVisibles = new Dictionary<string, string>();
                }


            //    //page about -------------------------------------------------------------------------------------------------------------------------------------------------------------------------


            //    if (!Directory.Exists(pathToSave + @"\ABOUT\"))
            //        Directory.CreateDirectory(pathToSave + @"\ABOUT\");

            //    if (urlFriend.Contains("id="))
            //    {
            //        driver.Navigate().GoToUrl(urlFriend + "&sk=about");
            //        Thread.Sleep(5000);
            //    }
            //    else
            //    {
            //        driver.Navigate().GoToUrl(urlFriend + "/about");
            //        Thread.Sleep(5000);
            //    }


            //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top

            //    Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
            //    long innerHeightt = (long)innerHeight;
            //    long scroll = (long)innerHeight;
            //    long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

            //    scrollHeight = scrollHeight + scroll;
            //    int hauteur = 450;



            //    try
            //    {
            //        Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
            //        int ii = 1;
            //        while (scrollHeight >= innerHeightt)
            //        {
            //            //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
            //            //Thread.Sleep(1000);

            //            Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
            //            imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

            //            //Save the screenshot
            //            imageScreenshott.SaveAsFile(pathToSave + @"\ABOUT\" + "_" + ii + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
            //            Thread.Sleep(100);



            //            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
            //            if ((scrollHeight - innerHeightt) < 200)
            //            {
            //                Thread.Sleep(5000);
            //            }
            //            else
            //                Thread.Sleep(2500);


            //            scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
            //            Thread.Sleep(2000);


            //            if (scrollHeight <= innerHeightt)
            //            {
            //                ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
            //                Thread.Sleep(2000);
            //                scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

            //            }

            //            scrollHeight = scrollHeight + scroll;
            //            innerHeightt = innerHeightt + hauteur;
            //            ii++;
            //        }
            //    }
            //    catch
            //    {
            //        //e.printStackTrace();
            //    }


            //    string codePage = driver.PageSource;

            //    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\ABOUT\\About.html", false))
            //    {
            //        //if (File.Exists(saveFileDialog1.FileName))
            //        //    File.Delete(saveFileDialog1.FileName);

            //        file.Write(codePage);
            //    }


            }
            catch (OpenQA.Selenium.NoSuchElementException ex)//si pas d'acces à la page on essaie les annees manuellement
            {
                try
                {
                    string targetName = textBoxops.Text;


                    string[] liYears = new string[] { DateTime.Now.Year.ToString(), ((DateTime.Now.Year) - 1).ToString() };

                    if (!Directory.Exists(pathToSave))
                        Directory.CreateDirectory(pathToSave);

                    backgroundWorkerJournal.ReportProgress(-1, liYears.Length);

                    //label18.Text = "Téléchargement des comments en cours ";
                    foreach (string y in liYears)
                    {
                        driver.Navigate().GoToUrl(urlFriend);
                        Thread.Sleep(5000);

                        while (!isElementPresentForComment(driver))
                        {


                            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight)");

                            //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 100)");
                            Thread.Sleep(rnd.Next(500, 1500));



                        }


                        string codePage = driver.PageSource;

                        using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\HOMEPAGE\\Journal.html", false))
                        {
                            //if (File.Exists(saveFileDialog1.FileName))
                            //    File.Delete(saveFileDialog1.FileName);

                            file.Write(codePage);
                        }

                        backgroundWorkerJournal.ReportProgress(nbreAnnee);
                        Thread.Sleep(100);
                        nbreAnnee++;
                    }



                }
                catch
                {

                }

            }


            backgroundWorker1.ReportProgress(-101);
            Thread.Sleep(2000);

            backgroundWorker1.CancelAsync();
            comments = false;
            //labelanalyseencours.Visible = false;
            //pictureBoxwaiting.Visible = false;
            //pictureBoxlogofacebook.Visible = false;

        }
        private void GetHomePageForNewLook(DateTime datumm)
        {
            backgroundWorker1.ReportProgress(-90);
            backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " début du scraping du journal");


            string resultat = "";
            Dictionary<string, string> resultats = new Dictionary<string, string>();
            Dictionary<string, string> mois = new Dictionary<string, string>();

            mois.Add("jan", "01");
            mois.Add("fév", "02");
            mois.Add("fev", "02");
            mois.Add("fèv", "02");
            mois.Add("mar", "03");
            mois.Add("avr", "04");
            mois.Add("mai", "05");
            mois.Add("jui", "06");
            mois.Add("juil", "07");
            mois.Add("janvier", "01");
            mois.Add("février", "02");
            mois.Add("mars", "03");
            mois.Add("avril", "04");
            mois.Add("juin", "06");
            mois.Add("juillet", "07");
            mois.Add("août", "08");
            mois.Add("septembre", "09");
            mois.Add("octobre", "10");
            mois.Add("novembre", "11");
            mois.Add("décembre", "12");

            //Dictionary<string, string> moisNL = new Dictionary<string, string>();

            //mois.Add("jan", "01");
            //mois.Add("fév", "02");
            //mois.Add("fev", "02");
            //mois.Add("fèv", "02");
            //mois.Add("mar", "03");
            //mois.Add("avr", "04");
            //mois.Add("mai", "05");
            //mois.Add("jui", "06");
            //mois.Add("juil", "07");
            //mois.Add("janvier", "01");
            //mois.Add("février", "02");
            //mois.Add("mars", "03");
            //mois.Add("avril", "04");
            //mois.Add("juin", "06");
            //mois.Add("juillet", "07");
            //mois.Add("août", "08");
            //mois.Add("septembre", "09");
            //mois.Add("octobre", "10");
            //mois.Add("novembre", "11");
            //mois.Add("décembre", "12");

            datumm = new DateTime(datumm.Year,1,1);

            List<IWebElement> earlier = new List<IWebElement>();
            List<DateTime> sameTime = new List<DateTime>();
            bool STOP = false;


            if (driver == null)
            {
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " initialisation du driver");
                InitializeDriver();
                // 2. Go to the "Google" homepage
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture page facebook login");
                driver.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }

                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driver.FindElementById("email");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driver.FindElementById("pass");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driver.FindElementById("loginbutton").Click();
                //searchButton.Click();
                Thread.Sleep(2500);
            }

            string urlFriend = textBoxUSERNAMEFRIENDS.Text;

            System.Random rnd = new System.Random();
            int nbreAnnee = 1;


            if (!profilIsSet)
                GetProfileInformations(backgroundWorker1);


            try
            {


                string targetName = textBoxops.Text;
                string album = "";
                Dictionary<string, string> dicoMessagesFrom = new Dictionary<string, string>();
                Dictionary<string, string> deja = new Dictionary<string, string>();
                Dictionary<string, string> dicoURLFrom = new Dictionary<string, string>();
                Dictionary<string, string> messagesVisibles = new Dictionary<string, string>();
                Dictionary<string, string> messagesVisiblesForFile = new Dictionary<string, string>();
                Dictionary<string, string> classesTraitees = new Dictionary<string, string>();
                //Rectangle resolution = Screen.FromControl(this).WorkingArea;
                //int hauteurtotale = resolution.Height;
                //int resolutionEcran = resolution.Height;
                int newHauteur = 0;

                int width = driver.Manage().Window.Size.Width;
                int height = driver.Manage().Window.Size.Height - 200;



                if (!Directory.Exists(pathToSave + @"\HOMEPAGE\"))
                {
                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " création de " +  @"\HOMEPAGE\");
                    Directory.CreateDirectory(pathToSave + @"\HOMEPAGE\");
                }
                    

                if (checkBoxFrench.Checked && LANGUAGESELECTED == "")
                    SetFrenchLanguageForNew();


               

                int i = 0;
                bool stop = false;
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " scrolling du journal");
                var toRemove = new HashSet<IWebElement>();

                while (! stop)
                {
                    driver.Navigate().GoToUrl(urlFriend);//https://www.facebook.com/cybercaution/timeline?year=2018
                    Thread.Sleep(5000);


                    //on essaie de récupérer les années

                    //try
                    //{
                    //    IList <IWebElement> annees = driver.FindElementsByXPath("//div[@class='oajrlxb2 tdjehn4e gcieejh5 bn081pho humdl8nn izx4hr6d rq0escxv nhd2j8a9 j83agx80 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys d1544ag0 qt6c0cv9 tw6a2znq i1ao9s8h esuyzwwr f1sip0of lzcic4wl l9j0dhe7 abiwlrkh p8dawk7l beltcj47 p86d2i9g aot14ch1 kzx2olss cbu4d94t taijpn5t ni8dbmo4 stjgntxs k4urcfbm tv7at329']");
                    //    annees[4].Click();
                    //    Thread.Sleep(500);

                    //    IWebElement combo = driver.FindElementByXPath("//div[@class='oajrlxb2 bp9cbjyn tdjehn4e mtkw9kbi tlpljxtp qensuy8j ppp5ayq2 goun2846 ccm00jje s44p3ltw mk2mc5f4 rt8b4zig n8ej3o3l agehan2d sk4xxmp2 rq0escxv nhd2j8a9 j83agx80 mg4g778l btwxx1t3 pfnyh3mw p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x tgvbjcpo hpfvmrgz jktsbyx5 d1544ag0 osnr6wyh tw6a2znq l9j0dhe7 hzawbc8m esuyzwwr f1sip0of du4w35lb lzcic4wl abiwlrkh p8dawk7l dwo3fsh8 ow4ym5g4 auili1gw beltcj47 p86d2i9g aot14ch1 kzx2olss i1fnvgqd']");
                    //    combo.Click();
                    //    Thread.Sleep(500);
                    //    IWebElement testAnnee = driver.FindElementByClassName("oi9244e8");
                    //    testAnnee.SendKeys("2017");


                    //    //SelectElement comboo = new SelectElement(driver.FindElement(By.TagName("select")));
                    //    //IWebElement item = comboo.SelectedOption;
                    //    //LANGUAGESELECTED = item.GetAttribute("value");

                    //}
                    //catch
                    //{

                    //}


                    i++;
                    int try_times = 0;

                    try
                    {
                        Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                        int hauteurr = 0;
                        //while (true)

                        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top 
                        Thread.Sleep(500);


                        Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                        //int frank = driver.Manage().Window.Size.Height;
                        long innerHeightt = (long)innerHeight;
                        long scroll = (long)innerHeight;
                        long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
                        //IList<IWebElement> allOthersOriginal = new List<IWebElement>();

                        scrollHeight = scrollHeight + scroll;
                        long hauteur = innerHeightt - 250;
                        //height = innerHeightt;


                        try
                        {
                           
                            int ii = 1;

                            //Screenshot imageScreenshottt = ((ITakesScreenshot)driver).GetScreenshot();
                            //imageScreenshottt = ((ITakesScreenshot)driver).GetScreenshot();

                            ////Save the screenshot
                            //imageScreenshottt.SaveAsFile(pathToSave + @"\HOMEPAGE\" + "Screenshot_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                            //Thread.Sleep(100);
                            //album = @"\HOMEPAGE\" + "Screenshot_" + i++ + ".png";

                            while (scrollHeight >= innerHeightt)
                            {
                                //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                                //Thread.Sleep(1000);


                                //IList<IWebElement> datumms = driver.FindElements(By.XPath("//a[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl gmql0nx0 gpro0wi8 b1v8xokw']"));//gpro0wi8 j1lvzwm4 stjgntxs ni8dbmo4 q9uorilb

                                //string tmpp = driver.FindElementsByXPath("//div[@class='l9j0dhe7 stjgntxs ni8dbmo4 dhix69tm wkznzc2l l82x9zwi uo3d90p7 pw54ja7n ue3kfks5 aypy0576 s1tcr66n maa8sdkg l6v480f0']")[0].FindElements(By.XPath(".//a[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl gmql0nx0 gpro0wi8 b1v8xokw']"))[0].GetAttribute("aria-label");

                                
                                //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                                if ((scrollHeight - innerHeightt) < 200)
                                {
                                    Thread.Sleep(5000);
                                }
                                else
                                    Thread.Sleep(500);


                                scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
                                Thread.Sleep(2000);


                                if (scrollHeight <= innerHeightt)
                                {
                                    ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                                    Thread.Sleep(2000);
                                    scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                                }

                                //Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                                //imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                                ////Save the screenshot
                                //imageScreenshott.SaveAsFile(pathToSave + @"\HOMEPAGE\" + "Screenshot_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                //Thread.Sleep(100);
                                //album = @"\HOMEPAGE\" + "Screenshot_" + i + ".png";


                                try
                                {
                                    IList<IWebElement> tmpp = driver.FindElementsByXPath("//div[@class='rq0escxv l9j0dhe7 du4w35lb d2edcug0 hpfvmrgz j83agx80 j5wkysh0 hytbnt81']");
                                    //rq0escxv l9j0dhe7 du4w35lb d2edcug0 hpfvmrgz j83agx80 j5wkysh0 hytbnt81

                                    foreach (IWebElement affich in tmpp)
                                    {
                                        Object secondLien = affich;


                                        OpenQA.Selenium.Remote.RemoteWebElement o = (OpenQA.Selenium.Remote.RemoteWebElement)secondLien;

                                        if (o.LocationOnScreenOnceScrolledIntoView.Y > 15 && o.LocationOnScreenOnceScrolledIntoView.Y < (height))
                                        {
                                            if (!o.Text.StartsWith("Voir") || !o.Text.StartsWith("Nog"))
                                                continue;

                                            o.Click();
                                            Thread.Sleep(2500);
                                            backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " clic sur le lien : " + o.Text);

                                            try
                                            {
                                                while (o.Text.StartsWith("Voir") || o.Text.ToLower().StartsWith("view") || o.Text.ToLower().Contains("bekijken") || o.Text.ToLower().StartsWith("bekijk") && ! o.Text.ToLower().Contains("vidéos"))
                                                {
                                                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " clic sur le lien : " + o.Text);
                                                    o.Click();
                                                    Thread.Sleep(2500);
                                                    //try
                                                    //{
                                                       
                                                        
                                                    //        Actions action = new Actions(driver);
                                                    //        action.MoveToElement(affich);
                                                    //        action.Perform();
                                                    //        //action.Click();
                                                    //        Thread.Sleep(500);
                                                        


                                                    //}
                                                    //catch
                                                    //{

                                                    //}

                                                }
                                            }
                                            catch
                                            {

                                            }
                                        }
                                    }
                                }
                                catch
                                {

                                }

                                try
                                {
                                    IList<IWebElement> tmpp = driver.FindElementsByXPath("//div[@class='oajrlxb2 bp9cbjyn g5ia77u1 mtkw9kbi tlpljxtp qensuy8j ppp5ayq2 goun2846 ccm00jje s44p3ltw mk2mc5f4 rt8b4zig n8ej3o3l agehan2d sk4xxmp2 rq0escxv nhd2j8a9 pq6dq46d mg4g778l btwxx1t3 g5gj957u p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x tgvbjcpo hpfvmrgz jb3vyjys p8fzw8mz qt6c0cv9 a8nywdso l9j0dhe7 i1ao9s8h esuyzwwr f1sip0of du4w35lb lzcic4wl abiwlrkh gpro0wi8 m9osqain buofh1pr']");


                                    //if (!allOthersOriginal.SequenceEqual(tmpp))
                                    //{
                                    //    allOthersOriginal = tmpp;

                                    //}
                                    //else
                                    //    continue;

                                    
                                    foreach (IWebElement affich in tmpp)
                                    {
                                        Object secondLien = affich;
                                        

                                        OpenQA.Selenium.Remote.RemoteWebElement o = (OpenQA.Selenium.Remote.RemoteWebElement)secondLien;

                                        if (o.LocationOnScreenOnceScrolledIntoView.Y > 15 && o.LocationOnScreenOnceScrolledIntoView.Y < (height))
                                        {
                                            if(o.Text.ToLower().Contains("affiche") || o.Text.ToLower().StartsWith("view") || o.Text.ToLower().StartsWith("voir") || o.Text.ToLower().StartsWith("bekijk") || o.Text.ToLower().Contains("ponse") || o.Text.ToLower().Contains("heeft geantwoord") || o.Text.ToLower().Contains("reacties bekijken") || o.Text.ToLower().Contains("more comments") || o.Text.ToLower().Contains("replied") && !o.Text.ToLower().Contains("vidéos"))
                                            {
                                                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " clic sur le lien : " + o.Text);
                                                o.Click();
                                                Thread.Sleep(2500);

                                                //try
                                                //{


                                                //    Actions action = new Actions(driver);
                                                //    action.MoveToElement(affich);
                                                //    action.Perform();
                                                //    //action.Click();
                                                //    Thread.Sleep(500);



                                                //}
                                                //catch
                                                //{

                                                //}
                                            }
                                            
                                            

                                            try
                                            {
                                                int nbrefois = 0;
                                                while ((o.Text.ToLower().Contains("affiche") || o.Text.ToLower().StartsWith("view") || o.Text.ToLower().StartsWith("bekijk") || o.Text.ToLower().Contains("bekijken") ||(o.Text.ToLower().StartsWith("voir") && !o.Text.ToLower().Contains("vidéos") )|| o.Text.ToLower().Contains("ponse")) ||o.Text.ToLower().Contains("heeft geantwoord") || o.Text.ToLower().Contains("reacties bekijken") || o.Text.ToLower().Contains("more comments") || o.Text.ToLower().Contains("replied") && nbrefois < 10)
                                                {
                                                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " clic sur le lien : " + o.Text);
                                                    o.Click();
                                                    Thread.Sleep(2500);

                                                    //try
                                                    //{


                                                    //    Actions action = new Actions(driver);
                                                    //    action.MoveToElement(affich);
                                                    //    action.Perform();
                                                    //    //action.Click();
                                                    //    Thread.Sleep(500);



                                                    //}
                                                    //catch
                                                    //{

                                                    //}
                                                    nbrefois++;

                                                }
                                            }
                                            catch
                                            {

                                            }
                                            
                                            IList<IWebElement> tmpptmpp = driver.FindElementsByXPath("//div[@class='oajrlxb2 bp9cbjyn g5ia77u1 mtkw9kbi tlpljxtp qensuy8j ppp5ayq2 goun2846 ccm00jje s44p3ltw mk2mc5f4 rt8b4zig n8ej3o3l agehan2d sk4xxmp2 rq0escxv nhd2j8a9 pq6dq46d mg4g778l btwxx1t3 g5gj957u p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x tgvbjcpo hpfvmrgz jb3vyjys p8fzw8mz qt6c0cv9 a8nywdso l9j0dhe7 i1ao9s8h esuyzwwr f1sip0of du4w35lb lzcic4wl abiwlrkh gpro0wi8 m9osqain buofh1pr']");
                                            foreach (IWebElement affichh in tmpptmpp)
                                            {
                                                secondLien = affichh;


                                                o = (OpenQA.Selenium.Remote.RemoteWebElement)secondLien;

                                                if (o.LocationOnScreenOnceScrolledIntoView.Y > 15 && o.LocationOnScreenOnceScrolledIntoView.Y < (height))
                                                {
                                                    if (o.Text.ToLower().Contains("masquer") || o.Text.ToLower().Contains("hide"))
                                                        continue;

                                                    if(o.Text.ToLower().Contains("afficher") || o.Text.ToLower().Contains("ponse") || o.Text.ToLower().StartsWith("voir") || o.Text.ToLower().StartsWith("bekijk") || o.Text.ToLower().StartsWith("view") || o.Text.ToLower().Contains("heeft geantwoord") || o.Text.ToLower().Contains("reacties bekijken") || o.Text.ToLower().Contains("more comments") || o.Text.ToLower().Contains("replied") && !o.Text.ToLower().Contains("vidéos"))
                                                    {
                                                        backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " clic sur le lien : " + o.Text);
                                                        o.Click();
                                                        Thread.Sleep(2500);

                                                        //try
                                                        //{


                                                        //    Actions action = new Actions(driver);
                                                        //    action.MoveToElement(affich);
                                                        //    action.Perform();
                                                        //    //action.Click();
                                                        //    Thread.Sleep(500);



                                                        //}
                                                        //catch
                                                        //{

                                                        //}

                                                    }


                                                    if (o.Text.ToLower().StartsWith("voir") || o.Text.ToLower().Contains("bekijken") || o.Text.ToLower().StartsWith("view") || o.Text.ToLower().StartsWith("bekijk") && !o.Text.ToLower().Contains("vidéos"))
                                                    {
                                                        tmpptmpp = driver.FindElementsByXPath("//div[@class='oajrlxb2 bp9cbjyn g5ia77u1 mtkw9kbi tlpljxtp qensuy8j ppp5ayq2 goun2846 ccm00jje s44p3ltw mk2mc5f4 rt8b4zig n8ej3o3l agehan2d sk4xxmp2 rq0escxv nhd2j8a9 pq6dq46d mg4g778l btwxx1t3 g5gj957u p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x tgvbjcpo hpfvmrgz jb3vyjys p8fzw8mz qt6c0cv9 a8nywdso l9j0dhe7 i1ao9s8h esuyzwwr f1sip0of du4w35lb lzcic4wl abiwlrkh gpro0wi8 m9osqain buofh1pr']");
                                                        foreach (IWebElement affichhh in tmpptmpp)
                                                        {
                                                            secondLien = affichhh;


                                                            o = (OpenQA.Selenium.Remote.RemoteWebElement)secondLien;

                                                            if (o.LocationOnScreenOnceScrolledIntoView.Y > 15 && o.LocationOnScreenOnceScrolledIntoView.Y < (height))
                                                            {
                                                                if (o.Text.ToLower().Contains("masquer") || o.Text.ToLower().Contains("hide"))
                                                                    continue;

                                                                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " clic sur le lien : " + o.Text);
                                                                o.Click();
                                                                Thread.Sleep(2500);

                                                                //try
                                                                //{


                                                                //    Actions action = new Actions(driver);
                                                                //    action.MoveToElement(affich);
                                                                //    action.Perform();
                                                                //    //action.Click();
                                                                //    Thread.Sleep(500);



                                                                //}
                                                                //catch
                                                                //{

                                                                //}


                                                            }
                                                        }
                                                    }

                                                }
                                            }
                                           

                                        }
                                    }



                                       
                                }
                                catch
                                {

                                }
                                //oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl oo9gr5id gpro0wi8 lrazzd5p

                                try
                                {


                                    IList<IWebElement> tmpp = driver.FindElementsByXPath("//div[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl oo9gr5id gpro0wi8 lrazzd5p']");

                                    //backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " scraping des identifiants du journal : " + tmpp.Count());

                                    // Object secondLien = driver.FindElementByXPath("//div[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl oo9gr5id gpro0wi8 lrazzd5p']");
                                    foreach (IWebElement affich in tmpp)
                                    {
                                        Object secondLien = affich;
                                        OpenQA.Selenium.Remote.RemoteWebElement o = (OpenQA.Selenium.Remote.RemoteWebElement)secondLien;

                                        if (o.LocationOnScreenOnceScrolledIntoView.Y > 15 && o.LocationOnScreenOnceScrolledIntoView.Y < (height))
                                        {
                                            if(o.Text.ToLower().Contains("afficher") || o.Text.ToLower().StartsWith("view") || o.Text.ToLower().Contains("ponse") || o.Text.ToLower().StartsWith("voir") || o.Text.ToLower().StartsWith("bekijk") || o.Text.ToLower().Contains("heeft geantwoord") || o.Text.ToLower().Contains("reacties bekijken") || o.Text.ToLower().Contains("more comments") || o.Text.ToLower().Contains("replied") && !o.Text.ToLower().Contains("vidéos"))
                                            {
                                                o.Click();
                                                Thread.Sleep(2500);
                                                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " clic sur le lien : " + o.Text);
                                            }


                                            //try
                                            //{
                                            //    Actions action = new Actions(driver);
                                            //    action.MoveToElement(affich);
                                            //    action.Perform();
                                            //    action.Click();
                                            //    Thread.Sleep(500);
                                            //}
                                            //catch
                                            //{

                                            //}



                                        }

                                        //try
                                        //{
                                        //    Actions action = new Actions(driver);
                                        //    action.MoveToElement(affich);
                                        //    action.Perform();
                                        //    //action.Click();
                                        //    Thread.Sleep(500);
                                        //}
                                        //catch
                                        //{

                                        //}
                                    }

                                }
                                catch
                                {

                                }

                                //try
                                //{
                                //    IList<IWebElement> tmpp = driver.FindElementsByXPath("//div[@class='oajrlxb2 bp9cbjyn g5ia77u1 mtkw9kbi tlpljxtp qensuy8j ppp5ayq2 goun2846 ccm00jje s44p3ltw mk2mc5f4 rt8b4zig n8ej3o3l agehan2d sk4xxmp2 rq0escxv nhd2j8a9 pq6dq46d mg4g778l btwxx1t3 g5gj957u p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x tgvbjcpo hpfvmrgz jb3vyjys p8fzw8mz qt6c0cv9 a8nywdso l9j0dhe7 i1ao9s8h esuyzwwr f1sip0of du4w35lb lzcic4wl abiwlrkh gpro0wi8 m9osqain buofh1pr']");

                                //    if(tmpp.Count > 0)
                                //    {
                                //        Actions action = new Actions(driver);
                                //        action.MoveToElement(tmpp[0]);
                                //        action.Perform();
                                //        //action.Click();
                                //        Thread.Sleep(500);
                                //    }


                                //}
                                //catch
                                //{

                                //}

                                List<IWebElement> bulles = new List<IWebElement>();
                                IList<IWebElement> getbulles = driver.FindElementsByXPath("//div[@class='_680y']");

                                foreach (IWebElement b in getbulles)
                                {
                                    bulles.Add(b);
                                }

                                try
                                {
                                    bulles = bulles.Where(o => ((OpenQA.Selenium.Remote.RemoteWebElement)o).LocationOnScreenOnceScrolledIntoView.Y > 15 && ((OpenQA.Selenium.Remote.RemoteWebElement)o).LocationOnScreenOnceScrolledIntoView.Y < (height) && ((OpenQA.Selenium.Remote.RemoteWebElement)o).LocationOnScreenOnceScrolledIntoView.X > 300).ToList();

                                }
                                catch
                                {

                                }

                                if(bulles.Count > 0)
                                {
                                    try
                                    {
                                        Actions action = new Actions(driver);
                                        action.MoveToElement(bulles[0]);
                                        action.Perform();
                                        //action.Click();
                                        Thread.Sleep(2500);
                                    }
                                    catch (Exception ex)
                                    {

                                    }
                                }

                                Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                                imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                                //Save the screenshot
                                imageScreenshott.SaveAsFile(pathToSave + @"\HOMEPAGE\" + "Screenshot_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " capture d'écran : " + @"\HOMEPAGE\" + "Screenshot_" + i + ".png");

                                Thread.Sleep(100);
                                album = @"\HOMEPAGE\" + "Screenshot_" + i + ".png";

                                if (!FASTJOURNAL)
                                {

                                    
                                    var messageFrom = driver.FindElementsByXPath("//div[@class='tw6a2znq sj5x9vvc d1544ag0 cxgpxx05']");//qzhwtbm6 knvmm38d
                                    var bandeaux = driver.FindElementsByXPath("//div[@class='du4w35lb l9j0dhe7']");



                                    var publicationsTris = driver.FindElementsByXPath("//div[@class='kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x c1et5uql ii04i59q']");//new look j83agx80 cbu4d94t  j83agx80 l9j0dhe7 k4urcfbm
                                    var publications = driver.FindElementsByXPath("//span[@class='d2edcug0 hpfvmrgz qv66sw1b c1et5uql rrkovp55 a8c37x1j keod5gw0 nxhoafnm aigsh9s9 d3f4x2em fe6kdd0r mau55g9w c8b282yb iv3no6db jq4qci2q a3bd9o3v knj5qynh oo9gr5id hzawbc8m']");//kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x c1et5uql ii04i59q
                                    var publicationsBis = driver.FindElementsByXPath("//div[@class='kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x c1et5uql ii04i59q']");
                                    //var publicationsBisBis = driver.FindElementsByXPath("//div[@class='kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x c1et5uql']");

                                    object[] messagePub = publications.ToArray();//var messa0g{eFrom = driver.FindElements(By.XPath("//div[@class='pybr56ya dati1w0a hv4rvrfc n851cfcs btwxx1t3 j83agx80 ll8tlv6m']"));
                                    object[] messagePubBis = publicationsBis.ToArray();//kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x c1et5uql ii04i59q
                                    object[] messagePubTris = publicationsTris.ToArray();
                                    //object[] messagePubTrisTris = publicationsBisBis.ToArray();
                                    //kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x c1et5uql ii04i59q
                                    //kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x c1et5uql
                                    //kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x c1et5uql ii04i59q
                                    //kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x c1et5uql
                                    //d2edcug0 hpfvmrgz qv66sw1b c1et5uql rrkovp55 jq4qci2q a3bd9o3v knj5qynh oo9gr5id hzawbc8m
                                    //publicationsTris = driver.FindElementsByXPath("//div[@class='l9j0dhe7 stjgntxs ni8dbmo4 dhix69tm wkznzc2l l82x9zwi uo3d90p7 pw54ja7n ue3kfks5 aypy0576 s1tcr66n maa8sdkg l6v480f0 n851cfcs']");
                                    //messagePubTris = publicationsTris.ToArray();
                                    //tw6a2znq sj5x9vvc d1544ag0 cxgpxx05
                                    //kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x c1et5uql

                                    ////on récupère les message provenant de from
                                    object[] messageFroms = messageFrom.ToArray();
                                    int pubi = messageFroms.Length;

                                    Array.Resize(ref messageFroms, (messageFroms.Length + messagePub.Length + messagePubBis.Length + messagePubTris.Length) /*+ messagePubTrisTris.Length*/);
                                    ////objArray[objArray.Length - 1] = new Someobject();

                                   
                                    foreach (OpenQA.Selenium.Remote.RemoteWebElement pubo in messagePub)
                                    {
                                                                                
                                        //if (pubo.Text == "")
                                        //{
                                        //    pubi++;
                                        //    continue;
                                        //}
                                            

                                        messageFroms[pubi] = pubo;

                                        pubi++;
                                    }

                                    foreach (OpenQA.Selenium.Remote.RemoteWebElement pubo in messagePubBis)
                                    {

                                        //if (pubo.Text == "")
                                        //{
                                        //    pubi++;
                                        //    continue;
                                        //}

                                        messageFroms[pubi] = pubo;

                                        pubi++;
                                    }

                                    foreach (OpenQA.Selenium.Remote.RemoteWebElement pubo in messagePubTris)
                                    {
                                        //if (pubo.Text == "")
                                        //{
                                        //    pubi++;
                                        //    continue;
                                        //}

                                        messageFroms[pubi] = pubo;

                                        pubi++;
                                    }

                                    //foreach (OpenQA.Selenium.Remote.RemoteWebElement pubo in messagePubTrisTris)
                                    //{
                                    //    //if (pubo.Text == "")
                                    //    //{
                                    //    //    pubi++;
                                    //    //    continue;
                                    //    //}

                                    //    messageFroms[pubi] = pubo;

                                    //    pubi++;
                                    //}

                                    List<IWebElement> messagees = new List<IWebElement>();
                                    foreach(Object ob in messageFroms)
                                    {
                                        if (ob.ToString() == "")
                                        {
                                            continue;
                                        }

                                        messagees.Add((IWebElement)ob);
                                    }

                                    try
                                    {
                                        messagees = messagees.Where(o => ((OpenQA.Selenium.Remote.RemoteWebElement)o).LocationOnScreenOnceScrolledIntoView.Y > 15 && ((OpenQA.Selenium.Remote.RemoteWebElement)o).LocationOnScreenOnceScrolledIntoView.Y < (height) && ((OpenQA.Selenium.Remote.RemoteWebElement)o).LocationOnScreenOnceScrolledIntoView.X > 300).ToList();

                                    }
                                    catch
                                    {

                                    }


                                    

                                    //messagees = messagees.Where((OpenQA.Selenium.Remote.RemoteWebElement)o) => (o.Location.Y > 15 && o.Location.Y < (height)) && o.Location.X > 300).ToList();
                                    messagees.RemoveAll(toRemove.Contains);
                                    //foreach (OpenQA.Selenium.Remote.RemoteWebElement pubo in messagePubTris)
                                    //{
                                    //    object test = publicationsTris[0].FindElements(By.XPath(".//a[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl oo9gr5id gpro0wi8 lrazzd5p']"))[0];

                                    //    messageFroms[pubi] = test;

                                    //    pubi++;
                                    //}
                                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " récupération des commentaires du journal : " + messagees.Count());
                                    //List<IWebElement> els = messageFroms.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList())


                                    int cc = 0;
                                    foreach (OpenQA.Selenium.Remote.RemoteWebElement o in messagees)
                                    {

                                        try
                                        {
                                            if (o.Location.X < 300)
                                            {
                                                cc++;
                                                continue;
                                            }


                                            if (o.Text == "")
                                            {
                                                cc++;
                                                continue;
                                            }
                                        }
                                        catch
                                        {
                                            continue;
                                        }
                                            

                                        if (stop)
                                            break;

                                        string tentation = o.ToString();
                                        string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                        //if (deja.ContainsKey(idd))
                                        //    continue;
                                        //else
                                        //    deja.Add(idd, idd);

                                        
                                        

                                        if (!dicoMessagesFrom.ContainsKey(idd))
                                        {
                                            dicoMessagesFrom.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                        }
                                        //else
                                        //    continue;

                                        if (o.LocationOnScreenOnceScrolledIntoView.Y > 15 && o.LocationOnScreenOnceScrolledIntoView.Y < (height))
                                        {
                                            if (!messagesVisibles.ContainsKey(idd) && o.Text != "")
                                            {
                                                string urlusercomment = "https://www.facebook.com";
                                                string usernamme = "anonymous";
                                                string lastYPosition = "";

                                                
                                                //if (o.Text.ToLower().Contains("courage"))
                                                //    ;

                                                try
                                                {
                                                    urlusercomment = o.FindElementByTagName("a").GetAttribute("href");


                                                    if (urlusercomment.Contains("profile.php?id="))
                                                        urlusercomment = urlusercomment.Split('&')[0];
                                                    else
                                                        urlusercomment = urlusercomment.Split('?')[0];


                                                    //urlusercomment = o.FindElementByTagName("a").GetAttribute("href").Split('?')[0];
                                                    usernamme = o.FindElementByTagName("a").Text;
                                                }
                                                catch
                                                {

                                                    //try
                                                    //{
                                                    //    IList<IWebElement>  tesst = driver.FindElementsByXPath("//div[@class='jq4qci2q ekzkrbhg a3bd9o3v']");
                                                    //   foreach(IWebElement eeee in tesst)
                                                    //    {
                                                    //        Object secondLien = eeee;
                                                    //        OpenQA.Selenium.Remote.RemoteWebElement ol = (OpenQA.Selenium.Remote.RemoteWebElement)secondLien;

                                                    //        if (ol.LocationOnScreenOnceScrolledIntoView.X < 300)
                                                    //            continue;

                                                    //        if (ol.LocationOnScreenOnceScrolledIntoView.Y > 15 && ol.LocationOnScreenOnceScrolledIntoView.Y < (o.LocationOnScreenOnceScrolledIntoView.Y))
                                                    //        {
                                                    //            usernamme = ol.Text;

                                                    //        }
                                                    //    }
                                                    //}
                                                    //catch
                                                    //{

                                                    //}

                                                    try
                                                    {
                                                        IList<IWebElement> tesst = driver.FindElementsByXPath("//a[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl oo9gr5id gpro0wi8 lrazzd5p']");//qzhwtbm6 knvmm38d
                                                        foreach (IWebElement eeee in tesst)
                                                        {
                                                            Object secondLien = eeee;
                                                            OpenQA.Selenium.Remote.RemoteWebElement ol = (OpenQA.Selenium.Remote.RemoteWebElement)secondLien;

                                                            if (ol.LocationOnScreenOnceScrolledIntoView.X < 300)
                                                                continue;

                                                            if (ol.LocationOnScreenOnceScrolledIntoView.Y > o.LocationOnScreenOnceScrolledIntoView.Y)
                                                                break;

                                                            if (ol.LocationOnScreenOnceScrolledIntoView.Y > 15 && ol.LocationOnScreenOnceScrolledIntoView.Y < (o.LocationOnScreenOnceScrolledIntoView.Y))
                                                            {
                                                                //lastYPosition = ol.LocationOnScreenOnceScrolledIntoView.Y.ToString();

                                                                if(lastYPosition == "" || lastYPosition != ol.LocationOnScreenOnceScrolledIntoView.Y.ToString())
                                                                {
                                                                    usernamme = ol.Text;
                                                                    lastYPosition = ol.LocationOnScreenOnceScrolledIntoView.Y.ToString();
                                                                }
                                                                 

                                                                //if (lastYPosition == "")
                                                                //    lastYPosition = ol.LocationOnScreenOnceScrolledIntoView.Y.ToString();

                                                            }
                                                        }
                                                    }
                                                    catch
                                                    {

                                                    }
                                                    
                                                    
                                                    ;//oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl oo9gr5id gpro0wi8 lrazzd5p


                                                    //try
                                                    //{



                                                    //    var tesst = driver.FindElementsByXPath("//div[@class='l9j0dhe7 stjgntxs ni8dbmo4 dhix69tm wkznzc2l l82x9zwi uo3d90p7 pw54ja7n ue3kfks5 aypy0576 s1tcr66n maa8sdkg l6v480f0 n851cfcs']");
                                                    //    var tesstBis = driver.FindElementsByXPath("//div[@class='du4w35lb l9j0dhe7']");
                                                    //    object[] tesstBiss = tesstBis.ToArray();//kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x c1et5uql ii04i59q
                                                    //    object[] tesstt = tesst.ToArray();

                                                    //    //du4w35lb l9j0dhe7


                                                    //    object[] tesstTab = tesst.ToArray();
                                                    //    int pubii = tesstTab.Length;

                                                    //    Array.Resize(ref tesstTab, (tesstTab.Length + tesstBiss.Length));
                                                    //    ////objArray[objArray.Length - 1] = new Someobject();


                                                    //    foreach (OpenQA.Selenium.Remote.RemoteWebElement pubo in tesstBis)
                                                    //    {


                                                    //        tesstTab[pubii] = pubo;

                                                    //        pubii++;
                                                    //    }




                                                    //    foreach (IWebElement ll in tesstTab)
                                                    //    {
                                                    //        try
                                                    //        {
                                                    //            string enta = ll.FindElement(By.XPath(".//div[@class='kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x c1et5uql']")).Text;//kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x c1et5uql



                                                    //            if (ll.FindElement(By.XPath(".//div[@class='kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x c1et5uql']")).Text.ToLower().Trim() == o.Text.Replace("\r\n"," ").ToLower().Trim())
                                                    //            {
                                                    //                usernamme = ll.FindElements(By.XPath(".//a[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl oo9gr5id gpro0wi8 lrazzd5p']"))[0].Text;
                                                    //                urlusercomment = ll.FindElements(By.XPath(".//a[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl oo9gr5id gpro0wi8 lrazzd5p']"))[0].GetAttribute("href");

                                                    //                if (urlusercomment.Contains("profile.php?id="))
                                                    //                    urlusercomment = urlusercomment.Split('&')[0];
                                                    //                else
                                                    //                    urlusercomment = urlusercomment.Split('?')[0];

                                                    //                break;
                                                    //            }
                                                    //        }
                                                    //        catch
                                                    //        {

                                                    //        }
                                                    //    }
                                                    //}
                                                    //catch
                                                    //{

                                                    //}
                                                }

                                                //if (o.Text.ToLower().Contains("commune") || o.Text.ToLower().Contains("forain"))
                                                //    ;

                                                //if (o.Text.ToLower().Contains("Afficher la suite"))
                                                //    ;

                                                messagesVisibles.Add(idd, o.Text.Trim().Replace("\n", " ").Replace("\t", " ").Replace(";", "") + ";" + usernamme + ";" + urlusercomment + ";" + album);
                                                Analytics analy = new Analytics();
                                                analy.Category = "HOMEPAGE";
                                                analy.Url = urlusercomment;
                                                analy.PathToPicture = album;
                                                analy.Username = usernamme;
                                                toRemove.Add(messagees[cc]);
                                                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " scraping du texte provenant de : " + usernamme);

                                                if (!Analytics.ContainsKey(usernamme + ";" + urlusercomment + ";" + album))
                                                {
                                                    Analytics.Add(usernamme + ";" + urlusercomment + ";" + album, analy);
                                                    

                                                }





                                            }


                                            ////on essaie de déterminer la date

                                            try
                                            {
                                                //try
                                                //{
                                                //    IList<IWebElement> attetne = driver.FindElementsByXPath("//div[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl gmql0nx0 gpro0wi8 b1v8xokw']");

                                                //    foreach(IWebElement ll in attetne)
                                                //    {
                                                //        try
                                                //        {
                                                //            IList<IWebElement> listea = ll.FindElements(By.TagName("a"));
                                                //            object[] datttums = listea.ToArray();

                                                //            foreach (OpenQA.Selenium.Remote.RemoteWebElement dd in datttums)
                                                //            {
                                                //                //if (dd.LocationOnScreenOnceScrolledIntoView.Y > 15 && dd.LocationOnScreenOnceScrolledIntoView.Y < (height - 250))
                                                //                //{

                                                //                    DateTime dateValue;

                                                //                    try
                                                //                    {
                                                //                        //IWebElement tmp = oo.FindElement(By.TagName("a"));
                                                //                        string dateString = dd.GetAttribute("aria-label");


                                                //                        if (DateTime.TryParse(dateString, out dateValue))
                                                //                        {
                                                //                            Console.WriteLine("  Converted '{0}' to {1} ({2}).", dateString,
                                                //                                              dateValue, dateValue.Kind);
                                                //                            //break;
                                                //                        }

                                                //                        else
                                                //                            Console.WriteLine("  Unable to parse '{0}'.", dateString);
                                                //                    }
                                                //                    catch
                                                //                    {
                                                //                        continue;
                                                //                    }

                                                //                    int result = DateTime.Compare(dateValue, datumm);
                                                //                    string relationship;

                                                //                    if (result < 0 && dateValue.Year != 1)
                                                //                    {
                                                //                        stop = true;
                                                //                        break;
                                                //                    }

                                                //                //}
                                                //            }

                                                //        }
                                                //        catch
                                                //        {
                                                //            continue;
                                                //        }

                                                //        if (stop)
                                                //            break;
                                                //    }

                                                //}
                                                //catch
                                                //{

                                                //}


                                                IList<IWebElement> cases = o.FindElements(By.XPath("//div[@class='pybr56ya dati1w0a hv4rvrfc n851cfcs btwxx1t3 j83agx80 ll8tlv6m']"));
                                                IList<IWebElement> datums = driver.FindElements(By.XPath("//div[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl gmql0nx0 gpro0wi8 b1v8xokw']"));//gpro0wi8 j1lvzwm4 stjgntxs ni8dbmo4 q9uorilb
                                                
                                                if(datums.Count == 0)
                                                    datums = driver.FindElements(By.XPath("//a[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl gmql0nx0 gpro0wi8 b1v8xokw']"));//gpro0wi8 j1lvzwm4 stjgntxs ni8dbmo4 q9uorilb

                                                object[] dattums = datums.ToArray();
                                                //backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " check de la date ");
                                                //oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 nc684nl6 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl gmql0nx0 gpro0wi8 b1v8xokw

                                                foreach (OpenQA.Selenium.Remote.RemoteWebElement oo in dattums)
                                                {

                                                    //string iddd = oo.ToString().Substring(oo.ToString().IndexOf("Element (id = ") + 14).Split(')')[0];

                                                    //if (classesTraitees.ContainsKey(iddd))
                                                    //{
                                                    //    continue;
                                                    //}
                                                    //else
                                                    //    classesTraitees.Add(iddd, iddd);

                                                    if (stop)
                                                    {
                                                        DateTime dateValue;

                                                        try
                                                        {
                                                            //IWebElement tmp = oo.FindElement(By.TagName("a"));
                                                            string dateString = oo.GetAttribute("aria-label");


                                                            if (DateTime.TryParse(dateString, out dateValue))
                                                            {
                                                                Console.WriteLine("  Converted '{0}' to {1} ({2}).", dateString,
                                                                                  dateValue, dateValue.Kind);
                                                                //break;
                                                            }

                                                            else
                                                                Console.WriteLine("  Unable to parse '{0}'.", dateString);
                                                        }
                                                        catch
                                                        {
                                                            continue;
                                                        }

                                                        int result = DateTime.Compare(dateValue, datumm);
                                                        

                                                        if (result < 0 && dateValue.Year != 1)
                                                        {
                                                            stop = true;
                                                            backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " date limite atteinte ");

                                                            //break;
                                                        }
                                                        else stop = false;
                                                    }

                                                    if (oo.LocationOnScreenOnceScrolledIntoView.Y > 15 && oo.LocationOnScreenOnceScrolledIntoView.Y < (height))
                                                    {

                                                        DateTime dateValue;

                                                        try
                                                        {
                                                            //IWebElement tmp = oo.FindElement(By.TagName("a"));
                                                            string dateString = oo.GetAttribute("aria-label");


                                                            if (DateTime.TryParse(dateString, out dateValue))
                                                            {
                                                                Console.WriteLine("  Converted '{0}' to {1} ({2}).", dateString,
                                                                                  dateValue, dateValue.Kind);
                                                                //break;
                                                            }

                                                            else
                                                                Console.WriteLine("  Unable to parse '{0}'.", dateString);
                                                        }
                                                        catch
                                                        {
                                                            continue;
                                                        }

                                                        int result = DateTime.Compare(dateValue, datumm);
                                                       

                                                        if (result < 0 && dateValue.Year != 1)
                                                        {
                                                            stop = true;
                                                            backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " date limite atteinte ");

                                                            //break;
                                                        }
                                                        else stop = false;

                                                    }


                                                }

                                            }
                                            catch
                                            {

                                            }



                                        }


                                        //IList<IWebElement> els = o.FindElementsByTagName("a");
                                        //IList<IWebElement> els = o.FindElementsByXPath("//div[@class='nc684nl6']");

                                        //try
                                        //{
                                        //    if (els.Count > 0)
                                        //    {
                                        //        string test = "";
                                        //        string url = "";
                                        //        string username = "";
                                        //        foreach (IWebElement ell in els)
                                        //        {
                                        //            if (ell.Location.X < 300)
                                        //                continue;

                                        //            try
                                        //            {
                                        //                IWebElement hreff = ell.FindElement(By.TagName("a"));
                                        //                test = hreff.GetAttribute("href");
                                        //                if (test == null)
                                        //                    continue;

                                        //            }
                                        //            catch
                                        //            {

                                        //            }


                                        //            if (test.Contains("?comment"))
                                        //            {
                                        //                IWebElement span1 = ell.FindElement(By.TagName("span"));

                                        //                try
                                        //                {
                                        //                    IWebElement span2 = span1.FindElement(By.TagName("span"));
                                        //                    username = span2.Text;

                                        //                    url = test.Split(new string[] { "?comment" }, StringSplitOptions.None)[0];
                                        //                }
                                        //                catch
                                        //                {
                                        //                    continue;
                                        //                }

                                        //                if (username != "" && url != "")
                                        //                {
                                        //                    if (!dicoURLFrom.ContainsKey(url))
                                        //                        dicoURLFrom.Add(url, url + ";" + username);
                                        //                }

                                        //            }
                                        //            else
                                        //            if (test.Contains("?__cft"))
                                        //            {


                                        //                try
                                        //                {
                                        //                    IWebElement span1 = ell.FindElement(By.TagName("span"));
                                        //                    username = span1.Text;

                                        //                    url = test.Split(new string[] { "?__cft" }, StringSplitOptions.None)[0];
                                        //                }
                                        //                catch
                                        //                {
                                        //                    continue;
                                        //                }

                                        //                if (username != "" && url != "")
                                        //                {
                                        //                    if (!dicoURLFrom.ContainsKey(url))
                                        //                        dicoURLFrom.Add(url, url + ";" + username);
                                        //                }

                                        //            }
                                        //        }
                                        //    }
                                        //}
                                        //catch
                                        //{

                                        //}
                                                                               

                                        //if(cc == 0)
                                        //{


                                        //    try
                                        //    {
                                        //        Actions action = new Actions(driver);
                                        //        action.MoveToElement(bulles[0]);
                                        //        action.Perform();
                                        //        //action.Click();
                                        //        Thread.Sleep(500);
                                        //    }
                                        //    catch(Exception ex)
                                        //    {

                                        //    }


                                        //    Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                                        //    imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                                        //    //Save the screenshot
                                        //    imageScreenshott.SaveAsFile(pathToSave + @"\HOMEPAGE\" + "Screenshot_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                        //    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " capture d'écran : " + @"\HOMEPAGE\" + "Screenshot_" + i + ".png");

                                        //    Thread.Sleep(100);
                                        //    album = @"\HOMEPAGE\" + "Screenshot_" + i + ".png";
                                        //}


                                        cc++;

                                    }

                                }

                                //Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                                //imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                                ////Save the screenshot
                                //imageScreenshott.SaveAsFile(pathToSave + @"\HOMEPAGE\" + "Screenshot_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                //Thread.Sleep(100);

                                string pathToFile = pathToSave + @"\HOMEPAGE\" + "Screenshot_" + i + ".png";
                                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " capture d'écran : " + @"\HOMEPAGE\" + "Screenshot_" + i + ".png");


                                if (!FASTJOURNAL)
                                {
                                    foreach (string cle in messagesVisibles.Keys)
                                    {

                                        if (!messagesVisiblesForFile.ContainsKey(cle))
                                        {

                                            string[] lignes = messagesVisibles[cle].Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);

                                            string tmp = "";
                                            foreach (string li in lignes)
                                            {
                                                tmp += li.Trim().Replace("\r", "");
                                            }



                                            messagesVisiblesForFile.Add(cle, tmp + ";" + pathToFile + "\n");
                                        }

                                    }

                                    //on essaie de récupérer identifiant
                                }
                                    



                                scrollHeight = scrollHeight + scroll;
                                innerHeightt = innerHeightt + hauteur;
                                ii++;
                                i++;

                                ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");

                                if (stop)
                                    break;
                            }

                            stop = true;


                            //ON IDENTIFIE

                            if (!FASTJOURNAL)
                            {


                                //var messageFrom = driver.FindElementsByXPath("//div[@class='j83agx80 cbu4d94t']");//new look j83agx80 cbu4d94t



                                ////on récupère les message provenant de from
                                //object[] messageFroms = messageFrom.ToArray();

                                //foreach (OpenQA.Selenium.Remote.RemoteWebElement o in messageFroms)
                                //{

                                    //if (o.Location.X < 100)
                                        //continue;

                                    //IList<IWebElement> els = o.FindElementsByTagName("a");
                                    IList<IWebElement> els = driver.FindElementsByXPath("//div[@class='nc684nl6']");
                                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " identification des utilisateurs : " + els.Count());

                                    try
                                    {
                                        if (els.Count > 0)
                                        {
                                            string test = "";
                                            string url = "";
                                            string username = "";
                                            foreach (IWebElement ell in els)
                                            {
                                                if (ell.Location.X < 300)
                                                    continue;

                                                try
                                                {
                                                    IWebElement hreff = ell.FindElement(By.TagName("a"));
                                                    test = hreff.GetAttribute("href");
                                                    if (test == null)
                                                        continue;

                                                }
                                                catch
                                                {
                                                    continue;
                                                }


                                                if (test.Contains("?comment"))
                                                {
                                                    

                                                    try
                                                    {
                                                        IWebElement span1 = ell.FindElement(By.TagName("span"));
                                                        IWebElement span2 = span1.FindElement(By.TagName("span"));
                                                        username = span2.Text;

                                                        url = test.Split(new string[] { "?comment" }, StringSplitOptions.None)[0];

                                                        if (dicoURLFrom.ContainsKey(url))
                                                            continue;
                                                    }
                                                    catch
                                                    {
                                                        continue;
                                                    }

                                                    if (username != "" && url != "")
                                                    {
                                                        if (!dicoURLFrom.ContainsKey(url))
                                                            dicoURLFrom.Add(url, url + ";" + username + ";999999\n");

                                                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ajout de l'utilisateur : " + username);

                                                }

                                                }
                                                else
                                                if (test.Contains("?__cft"))
                                                {


                                                    try
                                                    {
                                                        IWebElement span1 = ell.FindElement(By.TagName("span"));
                                                        username = span1.Text;

                                                        url = test.Split(new string[] { "?__cft" }, StringSplitOptions.None)[0];

                                                        if (dicoURLFrom.ContainsKey(url))
                                                            continue;
                                                    }
                                                    catch
                                                    {
                                                        continue;
                                                    }

                                                    if (username != "" && url != "")
                                                    {
                                                        if (!dicoURLFrom.ContainsKey(url))
                                                            dicoURLFrom.Add(url, url + ";" + username + ";999999\n");
                                                    }

                                                }
                                            }
                                        }
                                    }
                                    catch
                                    {

                                    }



                                //}

                                if (dicoURLFrom.Count > 0)
                                {
                                    string friend = "";

                                    foreach (string ll in dicoURLFrom.Values)
                                    {
                                        friend += ll;
                                    }

                                    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\TXT\\friendsFromHomepage.txt", false))
                                    {
                                        backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " écriture du fichier " + "\\TXT\\friendsFromHomepage.txt");
                                        file.Write(friend);
                                    }
                                }

                            }


                           
                        }
                        catch(Exception ex)
                        {
                            //e.printStackTrace();
                        }


                       
                    }
                    catch (Exception ex)
                    {
                        //e.printStackTrace();
                    }

                    try
                    {
                        string codePagee = driver.PageSource;

                        using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\HOMEPAGE\\Journal.html", false))
                        {
                            backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " écriture du fichier " + "\\HOMEPAGE\\Journal.html");

                            file.Write(codePagee);
                        }

                        //if (!FASTJOURNAL)
                        //{
                        //    Dictionary<string, string> newDico = new Dictionary<string, string>();
                        //    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\HOMEPAGE\\friendsFromHomepage.txt", false))
                        //    {
                        //        //on essaie de recuperer les identifiants
                        //        string[] idfs = codePagee.Split(new string[] { "<a class=\"_6qw4\"" }, StringSplitOptions.RemoveEmptyEntries);
                        //        //string resultat = "";
                        //        string id = "";
                        //        string username = "";
                        //        string url = "";
                        //        //Dictionary<string, string> resultats = new Dictionary<string, string>();



                        //        foreach (string li in idfs)
                        //        {
                        //            string tmp = li.Trim();
                        //            if (tmp.StartsWith("data-hovercard=") && tmp.Contains("?id="))
                        //            {
                        //                id = tmp.Substring(tmp.IndexOf("?id=") + 4).Split('&')[0];

                        //                if (tmp.Contains("href=\""))
                        //                {


                        //                    url = "https://www.facebook.com/" + tmp.Substring(tmp.IndexOf("href=\"") + 6).Split('?')[0].Replace(";", "");
                        //                    username = tmp.Substring(tmp.IndexOf("\">") + 2).Split('<')[0];
                        //                }

                        //                resultat = url + ";" + username + ";" + id + "\n";
                        //                if (!resultats.ContainsKey(resultat))
                        //                {
                        //                    resultats.Add(resultat, resultat);
                        //                }

                        //            }
                        //        }

                        //        idfs = codePagee.Split(new string[] { "<a title=\"" }, StringSplitOptions.RemoveEmptyEntries);

                        //        foreach (string li in idfs)
                        //        {
                        //            string tmp = li.Trim();
                        //            if (tmp.Contains("href=\"") && tmp.Contains("?id="))


                        //            {
                        //                id = tmp.Substring(tmp.IndexOf("?id=") + 4).Split('&')[0];

                        //                if (tmp.Contains("href=\""))
                        //                {
                        //                    url = tmp.Substring(tmp.IndexOf("href=\"") + 6).Split('?')[0].Replace(";", "");
                        //                    username = tmp.Split('"')[0];
                        //                }

                        //                resultat = url + ";" + username + ";" + id + "\n";
                        //                if (!resultats.ContainsKey(resultat))
                        //                {
                        //                    resultats.Add(resultat, resultat);
                        //                }


                        //            }
                        //        }

                        //        idfs = codePagee.Split(new string[] { "<a class=\"profileLink" }, StringSplitOptions.RemoveEmptyEntries);
                        //        foreach (string li in idfs)
                        //        {
                        //            string tmp = li.Trim();
                        //            if (tmp.StartsWith("\" title=\"") && tmp.Contains("?id="))
                        //            {
                        //                id = tmp.Substring(tmp.IndexOf("?id=") + 4).Split('&')[0];



                        //                if (tmp.Contains("href=\""))
                        //                {
                        //                    url = tmp.Substring(tmp.IndexOf("href=\"") + 6).Split('?')[0].Replace(";", "");
                        //                    username = tmp.Substring(tmp.IndexOf("\" title=\"") + 9).Split('"')[0];
                        //                }

                        //                resultat = url + ";" + username + ";" + id + "\n";
                        //                if (!resultats.ContainsKey(resultat))
                        //                {
                        //                    resultats.Add(resultat, resultat);
                        //                }


                        //            }
                        //        }



                        //        string pourFichier = "";
                        //        foreach (string l in resultats.Values)
                        //        {
                        //            if (l.Contains("<img class") || l.Contains("<div class"))
                        //                continue;
                        //            pourFichier += l;
                        //        }

                        //        file.Write(pourFichier);
                        //    }


                        //    //using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\HOMEPAGE\\HomepageComments_With_Screenshots.txt", false))
                        //    //{
                        //    //    string textes = "";
                        //    //    foreach (string t in messagesVisiblesForFile.Values)
                        //    //    {
                        //    //        textes += t;
                        //    //    }


                        //    //    file.Write(textes);
                        //    //    messagesVisiblesForFile = new Dictionary<string, string>();
                        //    //    messagesVisibles = new Dictionary<string, string>();
                        //    //}
                        //}
                        Thread.Sleep(2500);
                    }
                    catch
                    {
                        //if (!FASTJOURNAL)
                        //    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\HOMEPAGE\\friendsFromHomepage.txt", false))
                        //    {
                        //        string pourFichier = "";
                        //        foreach (string l in resultats.Values)
                        //        {
                        //            if (l.Contains("<img class") || l.Contains("<div class"))
                        //                continue;
                        //            pourFichier += l;
                        //        }

                        //        file.Write(pourFichier);
                        //    }

                    }

                }

                using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\HOMEPAGE\\HomepageComments_With_Screenshots.txt", false))
                {
                    string textes = "";
                    foreach (string t in messagesVisiblesForFile.Values)
                    {
                        textes += t;
                    }

                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " écriture du fichier " + "\\HOMEPAGE\\HomepageComments_With_Screenshots.txt");

                    file.Write(textes);
                    messagesVisiblesForFile = new Dictionary<string, string>();
                    messagesVisibles = new Dictionary<string, string>();
                }


                //    //page about -------------------------------------------------------------------------------------------------------------------------------------------------------------------------


                //    if (!Directory.Exists(pathToSave + @"\ABOUT\"))
                //        Directory.CreateDirectory(pathToSave + @"\ABOUT\");

                //    if (urlFriend.Contains("id="))
                //    {
                //        driver.Navigate().GoToUrl(urlFriend + "&sk=about");
                //        Thread.Sleep(5000);
                //    }
                //    else
                //    {
                //        driver.Navigate().GoToUrl(urlFriend + "/about");
                //        Thread.Sleep(5000);
                //    }


                //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top

                //    Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                //    long innerHeightt = (long)innerHeight;
                //    long scroll = (long)innerHeight;
                //    long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                //    scrollHeight = scrollHeight + scroll;
                //    int hauteur = 450;



                //    try
                //    {
                //        Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                //        int ii = 1;
                //        while (scrollHeight >= innerHeightt)
                //        {
                //            //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                //            //Thread.Sleep(1000);

                //            Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                //            imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                //            //Save the screenshot
                //            imageScreenshott.SaveAsFile(pathToSave + @"\ABOUT\" + "_" + ii + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                //            Thread.Sleep(100);



                //            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                //            if ((scrollHeight - innerHeightt) < 200)
                //            {
                //                Thread.Sleep(5000);
                //            }
                //            else
                //                Thread.Sleep(2500);


                //            scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
                //            Thread.Sleep(2000);


                //            if (scrollHeight <= innerHeightt)
                //            {
                //                ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                //                Thread.Sleep(2000);
                //                scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                //            }

                //            scrollHeight = scrollHeight + scroll;
                //            innerHeightt = innerHeightt + hauteur;
                //            ii++;
                //        }
                //    }
                //    catch
                //    {
                //        //e.printStackTrace();
                //    }


                //    string codePage = driver.PageSource;

                //    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\ABOUT\\About.html", false))
                //    {
                //        //if (File.Exists(saveFileDialog1.FileName))
                //        //    File.Delete(saveFileDialog1.FileName);

                //        file.Write(codePage);
                //    }


            }
            catch (OpenQA.Selenium.NoSuchElementException ex)//si pas d'acces à la page on essaie les annees manuellement
            {
                try
                {
                    string targetName = textBoxops.Text;


                    string[] liYears = new string[] { DateTime.Now.Year.ToString(), ((DateTime.Now.Year) - 1).ToString() };

                    if (!Directory.Exists(pathToSave))
                        Directory.CreateDirectory(pathToSave);

                    backgroundWorkerJournal.ReportProgress(-1, liYears.Length);

                    //label18.Text = "Téléchargement des comments en cours ";
                    foreach (string y in liYears)
                    {
                        driver.Navigate().GoToUrl(urlFriend);
                        Thread.Sleep(5000);

                        while (!isElementPresentForComment(driver))
                        {


                            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight)");

                            //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 100)");
                            Thread.Sleep(rnd.Next(500, 1500));



                        }


                        string codePage = driver.PageSource;

                        using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\HOMEPAGE\\Journal.html", false))
                        {
                            //if (File.Exists(saveFileDialog1.FileName))
                            //    File.Delete(saveFileDialog1.FileName);

                            file.Write(codePage);
                        }

                        backgroundWorkerJournal.ReportProgress(nbreAnnee);
                        Thread.Sleep(100);
                        nbreAnnee++;
                    }



                }
                catch
                {

                }

            }


            backgroundWorker1.ReportProgress(-101);
            Thread.Sleep(2000);

            backgroundWorker1.CancelAsync();
            comments = false;
            //labelanalyseencours.Visible = false;
            //pictureBoxwaiting.Visible = false;
            //pictureBoxlogofacebook.Visible = false;

        }
        private void GetAllCommentsForTest(int debut, int fin)
        {
            
           
            pictureBoxlogofacebook.Visible = true;
            pictureBoxwaiting.Visible = true;
            pictureBoxwaiting.Refresh();
            pictureBoxlogofacebook.Visible = true;
            pictureBoxlogofacebook.BringToFront();
            pictureBoxwaiting.Refresh();
            pictureBoxlogofacebook.Refresh();
            comments = true;

            string urlFriend = textBoxUSERNAMEFRIENDS.Text;
            //pour cacher fenetre DOS
            var driverService = ChromeDriverService.CreateDefaultService();
            driverService.HideCommandPromptWindow = true;

            //var driver = new ChromeDriver(driverService, new ChromeOptions());

            //System.Diagnostics.Process.Start(filepath);
            ChromeOptions chromeOptions = new ChromeOptions();
            chromeOptions.AddArguments("--disable-notifications");
            System.Random rnd = new System.Random();
            int nbreAnnee = 1;
            using (var driver = new ChromeDriver(driverService, chromeOptions))
            {

                // 1. Maximize the browser
                //driver.Manage().Window.Maximize();



                // 2. Go to the "Google" homepage
                driver.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }

                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driver.FindElementById("email");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driver.FindElementById("pass");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driver.FindElementById("loginbutton").Click();
                //searchButton.Click();
                Thread.Sleep(2500);

                //u_0_8
                //"menuBar']//*[@class='menuItem']"
                // 2. Go to the "Google" homepage
                //string urlInfoUser = "/allactivity?privacy_source=your_facebook_information&entry_point=settings_yfi";
                //string urlInfoUser = "/allactivity?privacy_source=your_facebook_information&entry_point=settings_yfi";
                //driver.Navigate().GoToUrl(urlFriend + urlInfoUser);
                //titrePage = driver.Title;

                //Thread.Sleep(5000);


                try
                {


                    string targetName = textBoxops.Text;

                    //récupération des années 
                    //var years = driver.FindElementByXPath("rightColWrap']").Text;
                    //string codePagee = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)years).WrappedDriver).PageSource;
                    //string[] liYears = years.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries);

                    if (!Directory.Exists(pathToSave ))
                        Directory.CreateDirectory(pathToSave);

                    int nbreannee = fin - debut;

                    //backgroundWorker1.ReportProgress(-1, liYears.Length);
                   

                    //label18.Text = "Téléchargement des comments en cours ";
                    for (int y = debut; y <= fin; y++)
                    {
                        driver.Navigate().GoToUrl(urlFriend + "/timeline/" + y);
                        Thread.Sleep(5000);

                        

                        try
                        {
                            Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");

                            while (true)
                            {
                                ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                                Thread.Sleep(2000);

                                Object newHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                                if (newHeight.Equals(lastHeight))
                                {
                                    break;
                                }
                                lastHeight = newHeight;
                            }
                        }
                        catch
                        {
                            //e.printStackTrace();
                        }


                        //string codePage = driver.PageSource;

                        //using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\timeline_" + y + ".html", false))
                        //{
                        //    //if (File.Exists(saveFileDialog1.FileName))
                        //    //    File.Delete(saveFileDialog1.FileName);

                        //    file.Write(codePage);
                        //}

                        
                        Thread.Sleep(2500);
                        //nbreAnnee++;
                    }






                    driver.Close();



                    //progressBar1.Maximum = lignes.Count() - 1;



                }
                catch (OpenQA.Selenium.NoSuchElementException ex)//si pas d'acces à la page on essaie les annees manuellement
                {
                    try
                    {
                        string targetName = textBoxops.Text;


                        string[] liYears = new string[] { DateTime.Now.Year.ToString(), ((DateTime.Now.Year) - 1).ToString() };

                        if (!Directory.Exists(pathToSave ))
                            Directory.CreateDirectory(pathToSave);

                        backgroundWorker1.ReportProgress(-1, liYears.Length);

                        //label18.Text = "Téléchargement des comments en cours ";
                        foreach (string y in liYears)
                        {
                            driver.Navigate().GoToUrl(urlFriend + "/timeline/" + y);
                            Thread.Sleep(5000);

                            while (!isElementPresentForComment(driver))
                            {


                                ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight)");

                                //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 100)");
                                Thread.Sleep(rnd.Next(500, 1500));



                            }


                            string codePage = driver.PageSource;

                            using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\timeline_" + y + ".html", false))
                            {
                                //if (File.Exists(saveFileDialog1.FileName))
                                //    File.Delete(saveFileDialog1.FileName);

                                file.Write(codePage);
                            }

                            backgroundWorker1.ReportProgress(nbreAnnee);
                            Thread.Sleep(100);
                            nbreAnnee++;
                        }






                        driver.Close();

                        string url = "";
                        string label = "";
                        string id = "";

                    }
                    catch
                    {

                    }

                }


            }
            //Thread.Sleep(2000);
            backgroundWorker1.ReportProgress(-3);
            Thread.Sleep(2000);
            backgroundWorker1.CancelAsync();
            comments = false;
            
            pictureBoxwaiting.Visible = false;
            pictureBoxlogofacebook.Visible = false;

        }

        public Boolean isElementPresentForComment(ChromeDriver driver)
        {
            try
            {
                //return driver.FindElementByXPath("//i[@class='img sp_jgaSVtiDmn_ sx_fa8e49']").Displayed;
                return driver.FindElementByXPath("//i[@class='img sp_jgaSVtiDmn__1_5x sx_dd9709']").Displayed;
                //return true;img sp_jgaSVtiDmn__1_5x sx_dd9709
            }
            catch (OpenQA.Selenium.NoSuchElementException e)
            {
                return false;
            }
        }

        public void IsANewThread(string param)
        {
            if (backgroundWorker1 != null && backgroundWorker1.IsBusy)
                return;

               else
                    if (backgroundWorker1 != null)
                        backgroundWorker1.RunWorkerAsync(param);
                    else
                    {
                        //Reset();

                        backgroundWorker1 = new BackgroundWorker();

                        backgroundWorker1.WorkerReportsProgress = true;

                        backgroundWorker1.ProgressChanged += new ProgressChangedEventHandler(backgroundWorker1_ProgressChanged);

                        backgroundWorker1.DoWork += new DoWorkEventHandler(backgroundWorker1_DoWork);

                        backgroundWorker1.RunWorkerCompleted += new RunWorkerCompletedEventHandler(backgroundWorker1_RunWorkerCompleted);

                        backgroundWorker1.WorkerSupportsCancellation = true;
                        backgroundWorker1.RunWorkerAsync(param);
                    }
        }

        private void button1_Click_1(object sender, EventArgs e)
        {
            if (backgroundWorker1 != null)
            {
                //SaveCaseClosingForm();
                StopProcess();

                try
                {
                    Process [] chromeDriverProcesses = Process.GetProcessesByName("FacebookAnalyzer");

                    foreach (var chromeDriverProcess in chromeDriverProcesses)
                    {
                        chromeDriverProcess.Kill();
                    }

                    

                    Process[] chromeProcesses = Process.GetProcessesByName("chromedriver");

                    foreach (var chromeProcess in chromeProcesses)
                    {
                        chromeProcess.Kill();
                    }
                }
                catch
                {

                }

                Reset();
            }
                
        }

        private void tabPageStart_Click(object sender, EventArgs e)
        {

        }

        private void Form1_Shown(object sender, EventArgs e)
        {
            textBoxops.Focus();
           
        }

        private void button2_Click(object sender, EventArgs e)
        {
            if (textBoxops.Text == "")
            {
                textBoxops.BackColor = Color.Red;
                MessageBox.Show("Veuillez remplir le champ OPS");
                return;
            }
            else
                textBoxops.BackColor = Color.White;

            if(!pathToSave.Contains(textBoxops.Text))
                pathToSave += textBoxops.Text;
            
            textBox3.Visible = false;

            InitializeDatagridViewMessenger();
            if (!backgroundWorkerMessenger.IsBusy)
            {
                backgroundWorkerMessenger.RunWorkerAsync();
            }


            //getContactMessenger = true;
            //InitializeDatagridViewMessenger();
            //GetContactsMessenger();
            //IsANewThread();

        }

        private void Messenger()
        {
            
            pictureBoxlogofacebook.Visible = true;
            pictureBoxwaiting.Visible = true;
            pictureBoxwaiting.Refresh();
            pictureBoxlogofacebook.Visible = true;
            pictureBoxlogofacebook.BringToFront();
            pictureBoxwaiting.Refresh();
            pictureBoxlogofacebook.Refresh();
           

            string urlFriend = textBoxUSERNAMEFRIENDS.Text;
            //pour cacher fenetre DOS
            var driverService = ChromeDriverService.CreateDefaultService();
            driverService.HideCommandPromptWindow = true;

            //var driver = new ChromeDriver(driverService, new ChromeOptions());

            //System.Diagnostics.Process.Start(filepath);
            ChromeOptions chromeOptions = new ChromeOptions();
            chromeOptions.AddArguments("--disable-notifications");
            System.Random rnd = new System.Random();
            int nbreAnnee = 1;
            using (var driver = new ChromeDriver(driverService, chromeOptions))
            {

                // 1. Maximize the browser
                //driver.Manage().Window.Maximize();



                // 2. Go to the "Google" homepage
                driver.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }

                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driver.FindElementById("email");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driver.FindElementById("pass");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driver.FindElementById("loginbutton").Click();
                //searchButton.Click();
                Thread.Sleep(2500);

               


                try
                {


                    string targetName = textBoxops.Text;

                    //récupération des années 
                    //var years = driver.FindElementByXPath("rightColWrap']").Text;
                    //string codePagee = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)years).WrappedDriver).PageSource;
                    //string[] liYears = years.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries);

                    if (!Directory.Exists(pathToSave))
                        Directory.CreateDirectory(pathToSave);

                   

                   
                  
                    driver.Navigate().GoToUrl("https://www.facebook.com/messages/t");//https://www.facebook.com/messages/t/MOD.orga
                        
                    Thread.Sleep(5000);



                    try
                    {
                        var imageDown = driver.FindElementByXPath("//div[@class='uiScrollableAreaWrap scrollable']");
                        Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('uiScrollableAreaWrap scrollable')[0].scrollHeight");

                        while (true)
                        {
                            //driver.execute_script('document.getElementById("viewport").scrollTop += 100')

                            ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('uiScrollableAreaWrap scrollable')[0].scrollTo(0, document.getElementsByClassName('uiScrollableAreaWrap scrollable')[0].scrollHeight)");
                            Thread.Sleep(2000);

                            Object newHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('uiScrollableAreaWrap scrollable')[0].scrollHeight");
                            if (newHeight.Equals(lastHeight))
                            {
                                break;
                            }
                            lastHeight = newHeight;
                        }
                    }
                    catch (Exception ex)
                    {
                        
                    }

                    try
                    {
                        //var imageDown = driver.FindElementById("js_10");
                        //string messenger = (String)((IJavaScriptExecutor)driver).ExecuteScript("return arguments[0].innerHTML;", imageDown);
                        //string messenger = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)imageDown).WrappedDriver).PageSource;
                        string messenger = driver.PageSource;

                        string debut = messenger.Substring(messenger.IndexOf("aria-label=\"Conversations\""));
                        string[] destinataires = debut.Split(new String[] { "data-href=\"" }, StringSplitOptions.RemoveEmptyEntries);
                        string[] profilePictures = debut.Split(new string[] { "<img class=\"_87v3 img\"" },StringSplitOptions.RemoveEmptyEntries);

                        // on récupère les destinataires

                        foreach(string dest in destinataires)
                        {
                            if (!dest.StartsWith("https://www.facebook.com/messages/t/"))
                                continue;

                            string linkk = dest.Split(new String[] { "\"" }, StringSplitOptions.RemoveEmptyEntries)[0];

                            if (linkk.Contains("#"))
                                continue;

                            string username= dest.Substring(dest.LastIndexOf("data-tooltip-content=\"") + 21).Split(new String[] { "\"" }, StringSplitOptions.RemoveEmptyEntries)[0];

                            if (!dicoMessenger.Keys.Contains(linkk))
                            {
                                dicoMessenger.Add(linkk, username);
                            }
                        }

                        

                        if (dicoMessenger.Count > 0)
                        {
                            foreach(string link in dicoMessenger.Keys)
                            {
                                try
                                {
                                    driver.Navigate().GoToUrl(link);
                                    Thread.Sleep(5000);

                                    messenger = driver.PageSource;

                                    string[] id = messenger.Split(new String[] { "class=\"uiScrollableAreaWrap scrollable\""}, StringSplitOptions.RemoveEmptyEntries);
                                    string[] topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                    //on récupère la valeur Top de la scrollBar

                                    string top = "";
                                    try
                                    {
                                        foreach (string t in topScrollBar)
                                        {
                                            if (!t.Contains("top:"))
                                                continue;

                                            top = t.Substring(t.IndexOf("top: ") + 4).Split(';')[0];
                                        }
                                    }
                                    catch
                                    {

                                    }
                                    
                                   
                                    string idTmp = "";
                                    foreach(string idd in id)
                                    {
                                        if (!idd.StartsWith("id") && !idd.Contains("Messages"))
                                            continue;


                                        idTmp = idd.Substring(idd.IndexOf("id=\"") + 4).Split('"')[0];
                                    }

                                    try
                                    {
                                        var imageDown = driver.FindElementById(idTmp);
                                        
                                        int lastHeight = imageDown.Size.Height;
                                        

                                        int hauteur = 100;
                                        int i = 1;

                                                                               

                                        Rectangle resolution = Screen.PrimaryScreen.WorkingArea;
                                        int hauteurtotale = resolution.Height;

                                       


                                        if (isElementMessengerEndingPresent(driver))
                                        {
                                            ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollTo(0,0);", imageDown);
                                            Thread.Sleep(2000);

                                            

                                        }
                                        else
                                            while (!isElementMessengerEndingPresent(driver))
                                        {
                                            ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollTo(0," + (lastHeight - hauteur) +");", imageDown);
                                            Thread.Sleep(2000);

                                            

                                            hauteur += 600;
                                            hauteurtotale += resolution.Height + (resolution.Height/2);
                                            //i++;
                                        }
                                        
                                        if (isElementMessengerEndingPresent(driver))
                                        {
                                            ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollTo(0,0);", imageDown);
                                            Thread.Sleep(2000);

                                        }



                                        hauteur = 0;
                                        
                                            Directory.CreateDirectory(pathToSave + "\\MESSENGER\\" + dicoMessenger[link]);
                                        try
                                        {
                                            messenger = driver.PageSource;
                                            topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);
                                            top = topScrollBar[1].Substring(topScrollBar[1].IndexOf("top: ") + 4).Split(';')[0];
                                        }
                                        catch
                                        {
                                            top = "";
                                        }
                                        

                                        if(top != "")
                                        {
                                            string topPrec = "";
                                            while (true)
                                            {
                                                ((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].scrollTo(0," + hauteur + ");", imageDown);
                                                Thread.Sleep(1500);


                                                messenger = driver.PageSource;
                                                topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                                //on récupère la valeur Top de la scrollBar

                                                top = "";
                                                try
                                                {


                                                    top = topScrollBar[1].Substring(topScrollBar[1].IndexOf("top: ") + 4).Split(';')[0];

                                                    if (top == topPrec)
                                                        break;

                                                    topPrec = top;
                                                }
                                                catch
                                                {

                                                }

                                                //imageDown = driver.FindElementById(idTmp);
                                                //lastHeight = imageDown.Size.Height;

                                                Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                                                imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                                                //Save the screenshot
                                                imageScreenshott.SaveAsFile(pathToSave + "\\MESSENGER\\" + dicoMessenger[link] + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg", OpenQA.Selenium.ScreenshotImageFormat.Jpeg);
                                                Thread.Sleep(1000);

                                                hauteur += 400;
                                                i++;
                                            }                                            
                                        }
                                        else
                                        {
                                            Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                                            imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                                            //Save the screenshot
                                            imageScreenshott.SaveAsFile(pathToSave + "\\MESSENGER\\" + dicoMessenger[link] + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg", OpenQA.Selenium.ScreenshotImageFormat.Jpeg);
                                            Thread.Sleep(1000);
                                        }




                                    }
                                    catch(Exception ex)
                                    {

                                    }

                                   
                                }
                                catch (Exception ex)
                                {

                                }

                                string codePagee = driver.PageSource;

                                using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\MESSENGER\\" + dicoMessenger[link] + "\\Messenger_" + dicoMessenger[link] + ".html", false))
                                {
                                    //if (File.Exists(saveFileDialog1.FileName))
                                    //    File.Delete(saveFileDialog1.FileName);

                                    file.Write(codePagee);
                                }

                                



                                Thread.Sleep(2500);
                            }
                        }

                        
                    }
                    catch
                    {

                    }


                        try
                        {
                            Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");

                            while (true)
                            {
                                ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                                Thread.Sleep(2000);

                                Object newHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                                if (newHeight.Equals(lastHeight))
                                {
                                    break;
                                }
                                lastHeight = newHeight;
                            }
                        }
                        catch
                        {
                            //e.printStackTrace();
                        }



                        //string codePage = driver.PageSource;

                        //using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\timeline_" + ".html", false))
                        //{
                            

                        //    file.Write(codePage);
                        //}


                        Thread.Sleep(2500);
                        //nbreAnnee++;
                    





                    driver.Close();



                    //progressBar1.Maximum = lignes.Count() - 1;



                }
                catch (OpenQA.Selenium.NoSuchElementException ex)
                {
                   

                }


            }
            //Thread.Sleep(2000);
            backgroundWorker1.ReportProgress(-3);
            Thread.Sleep(2000);
            backgroundWorker1.CancelAsync();
            
            
            pictureBoxwaiting.Visible = false;
            pictureBoxlogofacebook.Visible = false;
        }

        private void Messenger(Dictionary<string,string> dicoMessenger, DateTime datumm)
        {
           

            if (driverMessenger == null)
            {
                InitializeDriver();
                driverMessenger = driver;

                driverMessenger.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }


                //while (!isElementPresentByID(driver, "email"))
                ////{
                //// 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driverMessenger.FindElementById("email");
                //// 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);
                ////}


                //// 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driverMessenger.FindElementById("pass");

                //// 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                //// 5. Find the search button (by Name) on the homepage
                driverMessenger.FindElementById("loginbutton").Click();
                ////searchButton.Click();
                Thread.Sleep(2500);
            }

            //string urlFriend = textBoxUSERNAMEFRIENDS.Text;
            //pour cacher fenetre DOS
            //var driverService = ChromeDriverService.CreateDefaultService();
            //driverService.HideCommandPromptWindow = true;

            //var driver = new ChromeDriver(driverService, new ChromeOptions());

            //System.Diagnostics.Process.Start(filepath);
            //ChromeOptions chromeOptions = new ChromeOptions();
            //chromeOptions.AddArguments("--disable-notifications");
            System.Random rnd = new System.Random();
            int nbreAnnee = 1;

                       
                // 1. Maximize the browser
                //driver.Manage().Window.Maximize();
                //driverMessenger.Close();
                //driverMessenger = new ChromeDriver(driverService, chromeOptions);
                driverMessenger = driver;

            // 2. Go to the "Google" homepage
            //driverMessenger.Navigate().GoToUrl("https://facebook.com/login");




            try
            {


                    string targetName = textBoxops.Text;
                    string textes = "";
                    string messagesFromInString = "";
                    string messagesVisiblesWithScreenshots = "";
                    string pathToFolder = "";
                    List<IWebElement> earlier = new List<IWebElement>();
                    List<DateTime> sameTime = new List<DateTime>();
                    int hauteurr = 0;
                //var imageDown = "";
                    Dictionary<string, string> dicoMessagesFrom = new Dictionary<string, string>();
                    Dictionary<string, string> dicoMessagesTo = new Dictionary<string, string>();
                    Dictionary<string, string> dicoPictures = new Dictionary<string, string>();
                    Dictionary<string, string> messagesVisibles = new Dictionary<string, string>();
                    Dictionary<string, string> videosVisibles = new Dictionary<string, string>();
                    Dictionary<string, string> messagesVisiblesForFile = new Dictionary<string, string>();
                    List<string> videosVisiblesForFile = new List<string>();
                    Dictionary<string, string> audioVisiblesForFile = new Dictionary<string, string>();
                    Dictionary<string, string> audioVisibles = new Dictionary<string, string>();
                    List<string> audioVisibless = new List<string>();
                    List<string> audioVisiblessForFile = new List<string>();
                    List<string> docPartages = new List<string>();
                    Dictionary<string,string> mois = new Dictionary<string, string>();
                    Dictionary<string, string> classeTraitee = new Dictionary<string, string>();
                    int WAIT = 500;
                    mois.Add("jan", "01");
                    mois.Add("fév", "02");
                    mois.Add("fev", "02");
                    mois.Add("fèv", "02");
                    mois.Add("mar", "03");
                    mois.Add("avr", "04");
                    mois.Add("mai", "05");
                    mois.Add("jui", "06");
                    mois.Add("juil", "07");
                    mois.Add("janvier", "01");
                    mois.Add("février", "02");
                    mois.Add("mars", "03");
                    mois.Add("avril", "04");
                    mois.Add("juin", "06");
                    mois.Add("juillet", "07");
                    mois.Add("août", "08");
                    mois.Add("septembre", "09");
                    mois.Add("octobre", "10");
                    mois.Add("novembre", "11");
                    mois.Add("décembre", "12");
               


                    List<string> classesConnues = new System.Collections.Generic.List<string>();
                    classesConnues.Add("//div[@class='clearfix _o46 _3erg _29_7 _8lma direction_ltr text_align_ltr']");
                    classesConnues.Add("//div[@class='clearfix _o46 _3erg _29_7 direction_ltr text_align_ltr']");
                    classesConnues.Add("//div[@class='clearfix _o46 _3erg _29_7 _8lma direction_ltr text_align_ltr _ylc']");
                    classesConnues.Add("//div[@class='clearfix _o46 _3erg _3i_m _nd_ _8lma direction_ltr text_align_ltr']");
                    classesConnues.Add("//div[@class='clearfix _o46 _3erg _3i_m _nd_ _8lma direction_ltr text_align_ltr _ylc']");
                    classesConnues.Add("//div[@class='_52mr _2poz _ui9 _4skb']");
                    classesConnues.Add("//div[@class='clearfix _o46 _3erg _3i_m _nd_ direction_ltr text_align_ltr']");
                    classesConnues.Add("//div[@class='clearfix _o46 _3erg _3i_m _nd_ _q4a _8lma direction_ltr text_align_ltr _ylc']");
                    classesConnues.Add("//div[@class='_2poz _52mr _ui9 _2n8h _2n8i _5fk1']");//_2poz _52mr _ui9 _2n8h _2n8i _5fk1 Vidéo ?_ccq _4tsk _3o67 _52mr _1byr _4-od
                    classesConnues.Add("//div[@class='_1mj2 _2e-6']");
                    classesConnues.Add("//div[@class='_1mj4 _2e-7']");//_1mj4 _2e-7
                    classesConnues.Add("//div[@class='_3058 _15gf']");//_3058 _15gf
                                                                      //_1mjb _454y _3czg _2poz _ui9
                                                                      //_1mjb _454y _3czg _2poz _ui9
                                                                      //_hh7 _6ybn _s1- _52mr _1fz8 _1nqp

                //récupération des années 
                //var years = driver.FindElementByXPath("rightColWrap']").Text;
                //string codePagee = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)years).WrappedDriver).PageSource;
                //string[] liYears = years.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries);

                //if (!Directory.Exists(pathToSave + @"\Facebook_Friends\" + targetName.ToUpper()))
                //    Directory.CreateDirectory(pathToSave + @"\Facebook_Friends\" + targetName.ToUpper());

                //driver.Navigate().GoToUrl("https://www.facebook.com/messages/t");//https://www.facebook.com/messages/t/MOD.orga
                //Thread.Sleep(5000);



                try
                {

                        bool STOP = false;
                        string messenger = "";
                        int idFictif = 1;
                        string idFictifString = "";
                        IWebElement fromdate = null;

                    if (FASTMESSENGER)
                        WAIT = 500;
                    else
                        WAIT = 1000;

                        if (dicoMessenger.Count > 0)
                        {
                            foreach (string link in dicoMessenger.Keys)
                            {

                                hauteurr = 0;
                                string pathToSaveScreenshot = "";

                                if (!Directory.Exists(pathToSave + "\\MESSENGER\\" + dicoMessenger[link]))
                                {
                                    //EraseDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link], true);  
                                    Directory.CreateDirectory(pathToSave + "\\MESSENGER\\" + dicoMessenger[link]);
                                    pathToSaveScreenshot = pathToSave + "\\MESSENGER\\" + dicoMessenger[link];
                                }
                                else
                                if (dicoMessenger[link].ToLower().Contains("utilisateur de") || dicoMessenger[link].ToLower().Contains("user"))
                                {
                                    idFictif++;
                                    idFictifString = idFictif.ToString();
                                    Directory.CreateDirectory(pathToSave + "\\MESSENGER\\" + dicoMessenger[link] + idFictifString);
                                    pathToSaveScreenshot = pathToSave + "\\MESSENGER\\" + dicoMessenger[link] + idFictifString;
                                }
                                else
                                pathToSaveScreenshot = pathToSave + "\\MESSENGER\\" + dicoMessenger[link];



                            if (!Directory.Exists(pathToSaveScreenshot + "\\Audio\\"))
                            {
                                //EraseDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link], true);  
                                Directory.CreateDirectory(pathToSaveScreenshot + "\\Audio\\");
                            }

                            var imageDown = driverMessenger.FindElement(By.Id("facebook"));
                            int hauteur = 400;
                            int resolutionEcran = resolution.Height;
                            string[] topScrollBar = null;
                            string firstValueTopBar = "";
                            string top = "";
                            string hauteurScroll = "";
                            string newHauteurScroll = "";
                            int i = 1;
                            string idTmp = "";
                            //DEPART TRY TIMEOUT------------------------------------------------------------------------------
                            try
                            {
                                driverMessenger.Manage().Timeouts().ImplicitWait.Add(System.TimeSpan.FromSeconds(300));
                                driverMessenger.Navigate().GoToUrl(link);
                                Thread.Sleep(5000);

                                messenger = driverMessenger.PageSource;
                                

                                


                                string[] id = messenger.Split(new String[] { "class=\"uiScrollableAreaWrap scrollable\"" }, StringSplitOptions.RemoveEmptyEntries);
                                topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                //on récupère la valeur Top de la scrollBar
                                

                                try
                                {
                                    foreach (string t in topScrollBar)
                                    {
                                        string tmp = t.Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                        if ((!t.Contains("top:") && !t.Contains("uiScrollableAreaWrap")) || t.StartsWith("<html"))
                                            continue;

                                        firstValueTopBar = tmp.Substring(tmp.IndexOf("top: ") + 4).Split(';')[0];
                                        hauteurScroll = tmp.Substring(tmp.IndexOf("height: ") + 8).Split(';')[0];
                                    }


                                }
                                catch
                                {

                                }
                                //try
                                //{
                                //    foreach (string t in topScrollBar)
                                //    {
                                //        if (!t.Contains("top:"))
                                //            continue;

                                //        top = t.Substring(t.IndexOf("top: ") + 4).Split(';')[0];
                                //        firstValueTopBar = top;
                                //    }
                                //}
                                //catch
                                //{

                                //}

                                //on récupère l'id dynamique du composant
                                
                                foreach (string idd in id)
                                {
                                    if (!idd.StartsWith("id") && !idd.Contains("Messages"))
                                        continue;


                                    idTmp = idd.Substring(idd.IndexOf("id=\"") + 4).Split('"')[0];
                                }

                                try
                                {
                                    imageDown = driverMessenger.FindElementById(idTmp);
                                    var test = driverMessenger.FindElements(By.ClassName("uiScrollableAreaGripper"));//uiScrollableAreaTrack hidden_elem
                                    //var test2 = driverMessenger.FindElements(By.CssSelector("uiScrollableAreaTrack hidden_elem"));
                                    int lastHeight = imageDown.Size.Height;


                                    
                                    

                                    int width = driverMessenger.Manage().Window.Size.Width;
                                    int height = driverMessenger.Manage().Window.Size.Height;


                                    int hauteurtotale = resolution.Height;
                                    resolutionEcran = resolution.Height;
                                    int scroll = 0;
                                    Int32.TryParse(firstValueTopBar.Replace(".", "").Replace("px", ""), out scroll);



                                    //ON SCROLL JUSQUAU DEBUT DE LA PAGE LE PLUS LOIN POSSIBLE

                                    //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollIntoView(true);", listeTimes[0 ]);
                                    //Thread.Sleep(500);

                                    if (firstValueTopBar != "")
                                    {
                                        try
                                        {
                                            while (top.Trim() != "0px")
                                            //while (newHauteurScroll != hauteurScroll)
                                            {
                                                //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + (0 - scroll) + ");", imageDown);
                                                //Thread.Sleep(2500);

                                                //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + (0 - (scroll * scroll)) + ");", imageDown);
                                                //Thread.Sleep(2500);


                                                ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0,0);", imageDown);
                                                Thread.Sleep(5000);



                                                //calcul du temps
                                                if (datumm.Year != 1900)
                                                {
                                                    IList<IWebElement> listeTimes = driver.FindElements(By.TagName("time"));
                                                    Thread.Sleep(2000);

                                                    string dernieredate = "";
                                                    string datum = "";

                                                    if (listeTimes[0].Text.ToLower().Contains("à"))
                                                    {
                                                        datum = listeTimes[0].Text.ToLower().Split('à')[0].Trim().Replace(" ", "/");
                                                        if (mois.ContainsKey(datum.Split('/')[1].ToLower()))
                                                        {
                                                            datum = datum.ToLower().Replace(datum.Split('/')[1].ToLower(), mois[datum.Split('/')[1].ToLower()]);
                                                        }

                                                    }
                                                    else
                                                        datum = listeTimes[0].Text.Split(' ')[0];

                                                    CultureInfo culture = new CultureInfo("fr-FR");
                                                    DateTime testDatumValable;
                                                    if (!DateTime.TryParse(datum, out testDatumValable))
                                                        continue;

                                                    DateTime firstDate = Convert.ToDateTime(datum, culture);// premiere date dans la liste
                                                    DateTime tempss;

                                                    
                                                    tempss = Convert.ToDateTime(datum, culture);
                                                    DateTime date2 = new DateTime(datumm.Year, datumm.Month, datumm.Day);

                                                    

                                                    try
                                                    {


                                                        foreach (IWebElement el in listeTimes)
                                                        {
                                                            if (DateTime.Compare(firstDate, date2) == 0)
                                                                break;
                                                                
                                                            //DateTime firstDate;



                                                            datum = "";
                                                            if (listeTimes[0].Text.ToLower().Contains("à"))
                                                            {
                                                                datum = listeTimes[0].Text.ToLower().Split('à')[0].Trim().Replace(" ", "/");
                                                                if (mois.ContainsKey(datum.Split('/')[1].ToLower()))
                                                                {
                                                                    datum = datum.ToLower().Replace(datum.Split('/')[1].ToLower(), mois[datum.Split('/')[1].ToLower()]);
                                                                }

                                                            }
                                                            else
                                                                datum = listeTimes[0].Text.Split(' ')[0];


                                                            if (DateTime.TryParse(datum, out testDatumValable))
                                                                firstDate = Convert.ToDateTime(datum, culture);// premiere date dans la liste
                                                            else
                                                                continue;

                                                            datum = "";
                                                            if (el.Text.ToLower().Contains("à"))
                                                            {
                                                                datum = el.Text.ToLower().Split('à')[0].Trim().Replace(" ", "/");
                                                                if (mois.ContainsKey(datum.Split('/')[1].ToLower()))
                                                                {
                                                                    datum = datum.ToLower().Replace(datum.Split('/')[1].ToLower(), mois[datum.Split('/')[1].ToLower()]);

                                                                    if (Convert.ToInt32(datum.Split('/')[0]) < 10 && !datum.Split('/')[0].StartsWith("0"))
                                                                        datum = "0" + datum;
                                                                }

                                                            }
                                                            else
                                                                datum = el.Text.Split(' ')[0];

                                                            try
                                                            {
                                                                tempss = Convert.ToDateTime(datum, culture);
                                                            }
                                                            catch
                                                            {
                                                                continue;
                                                            }

                                                            int result = 0;
                                                            try
                                                            {


                                                                result = DateTime.Compare(tempss, date2);
                                                                string relationship;

                                                                if (result < 0)
                                                                {
                                                                    earlier.Add(el);
                                                                    relationship = "is earlier than";
                                                                }
                                                                else
                                                                if (result == 0)
                                                                {
                                                                    relationship = "is the same time as";
                                                                    sameTime.Add(tempss);

                                                                    if (firstDate != tempss)
                                                                    {
                                                                        //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollIntoView(true) + 1600;", el);
                                                                        //Thread.Sleep(500);
                                                                        STOP = true;
                                                                        top = "0px";
                                                                        fromdate = el;
                                                                        break;
                                                                    }


                                                                }
                                                                else
                                                                {
                                                                    relationship = "is later than";
                                                                }



                                                            }
                                                            catch
                                                            {

                                                            }


                                                        }

                                                        if (!STOP)
                                                        {
                                                            int result = DateTime.Compare(firstDate, date2);
                                                            if (result < 0)
                                                            {
                                                                STOP = true;
                                                                top = "0px";
                                                                fromdate = earlier[earlier.Count() - 1];

                                                            }
                                                        }

                                                    }
                                                    catch
                                                    {

                                                    }

                                                    if (STOP)
                                                        break;

                                                }//FIN DU IF DATE


                                                if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                                {

                                                        try
                                                        {
                                                            driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                                        }
                                                        catch
                                                        {

                                                        }
                                                }


                                                    hauteur += 600;
                                                    hauteurtotale += resolution.Height + (resolution.Height / 2);

                                                    messenger = driverMessenger.PageSource;

                                                    top = "";
                                                    topScrollBar = messenger.Split(new String[] { "<div class=\"uiScrollableAreaGripper" }, StringSplitOptions.RemoveEmptyEntries);
                                                    try
                                                    {
                                                        foreach (string t in topScrollBar)
                                                        {
                                                            string tmp = t.Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                                            if (!tmp.Contains("top:") || tmp.Contains("hidden"))
                                                                continue;

                                                            int heightt = 0;
                                                            top = tmp.Substring(tmp.IndexOf("top: ") + 4).Split(';')[0];
                                                            newHauteurScroll = tmp.Substring(tmp.IndexOf("height: ") + 8).Split(';')[0];
                                                            Int32.TryParse(top.Trim().Replace(".", "").Replace("px", ""), out heightt);
                                                            scroll = scroll - hauteur;
                                                            break;
                                                        }

                                                        if (top.Trim() == "0px")
                                                        {
                                                            //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + (lastHeight - hauteur) + ");", imageDown);
                                                            //Thread.Sleep(2000);
                                                            ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0,0);", imageDown);
                                                            Thread.Sleep(5000);

                                                            ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0,0);", imageDown);
                                                            Thread.Sleep(5000);

                                                            ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0,0);", imageDown);
                                                            Thread.Sleep(5000);

                                                            hauteurScroll = newHauteurScroll;
                                                            //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + (0 - scroll * scroll) + ");", imageDown);
                                                            //Thread.Sleep(2500);

                                                            //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + (0 - scroll) + ");", imageDown);
                                                            // Thread.Sleep(2500);

                                                            //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + (lastHeight - 2 * hauteur) + ");", imageDown);
                                                            //Thread.Sleep(2000);

                                                            messenger = driverMessenger.PageSource;

                                                            top = "";
                                                            topScrollBar = messenger.Split(new String[] { "<div class=\"uiScrollableAreaGripper" }, StringSplitOptions.RemoveEmptyEntries);


                                                            try
                                                            {
                                                                foreach (string tt in topScrollBar)
                                                                {
                                                                    string tmpp = tt.Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                                                    if (!tmpp.Contains("top:") || tmpp.Contains("hidden"))
                                                                        continue;

                                                                    top = tmpp.Substring(tmpp.IndexOf("top: ") + 4).Split(';')[0];
                                                                    newHauteurScroll = tmpp.Substring(tmpp.IndexOf("height: ") + 8).Split(';')[0];
                                                                    int heightt = 0;
                                                                    Int32.TryParse(top.Trim().Replace(".", "").Replace("px", ""), out heightt);
                                                                    scroll = scroll - hauteur;
                                                                    break;
                                                                }


                                                            }
                                                            catch
                                                            {
                                                                top = "";
                                                            }

                                                            hauteur += 600;
                                                            hauteurtotale += resolution.Height + (resolution.Height / 2);
                                                        }


                                                    }
                                                    catch
                                                    {

                                                    }

                                                    Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                                                    int innerHeightt = 0;

                                                    Int32.TryParse(innerHeight.ToString(), out innerHeightt);
                                                    scroll -= innerHeightt;


                                                    //i++;
                                            }
                                        }
                                        catch(Exception ex)
                                        {
                                            top = "0px";
                                        }
                                    }
                                    else
                                        if (isElementMessengerEndingPresent(driverMessenger))
                                    {
                                        ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0,0);", imageDown);
                                        Thread.Sleep(2000);



                                    }
                                    else
                                        if (!isElementMessengerEndingPresent(driverMessenger))
                                        while (!isElementMessengerEndingPresent(driverMessenger))
                                        {
                                            ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + (lastHeight - hauteur) + ");", imageDown);
                                            Thread.Sleep(2000);



                                            hauteur += 600;
                                            hauteurtotale += resolution.Height + (resolution.Height / 2);
                                            //i++;
                                        }
                                    else
                                        if (isElementMessengerEndingPresent(driverMessenger))
                                    {
                                        ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0,0);", imageDown);
                                        Thread.Sleep(2000);

                                    }



                                    hauteur = 0;


                                    top = "";
                                    try
                                    {
                                        foreach (string t in topScrollBar)
                                        {
                                            string tmp = t.Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                            if (!tmp.Contains("top:") || tmp.Contains("hidden"))
                                                continue;

                                            top = tmp.Substring(tmp.IndexOf("top: ") + 4).Split(';')[0];

                                            //top = tmp.Substring(tmp.IndexOf("top: ") + 4).Split(';')[0];
                                        }


                                    }
                                    catch(Exception ex) 
                                    {
                                        top = "";
                                    }

                                    //ON DESCEND--------------------------------------------------------------------------------------
                                    if (top != "")
                                    {

                                        //Screenshot imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                        //imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();

                                        //Thread.Sleep(500);


                                        ////imageScreenshott.SaveAsFile(pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg", OpenQA.Selenium.ScreenshotImageFormat.Jpeg);
                                        //imageScreenshott.SaveAsFile(pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + 1 + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);

                                        //Thread.Sleep(500);

                                        string topPrec = "";
                                        textes = imageDown.Text;

                                        
                                        int j = 1;
                                        int hauteurfromdate = 0;
                                        string hauteurfromdateString = "";

                                        Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                                        long innerHeightt = (long)innerHeight;
                                        long scrolll = (long)innerHeight;
                                        long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                                        //on initialise

                                        IList<IWebElement> firstlisteVocauxx = null;
                                        IList<IWebElement> firstallDivElements = null;
                                        IList<IWebElement> firstallOthers = new List<IWebElement>();
                                        List<IWebElement> listeNotReadOnly = null;
                                        List<IWebElement> listeOthersNotReadOnly = new List<IWebElement>();
                                        List<IWebElement> listeVideoNotReadOnly = new List<IWebElement>();
                                        var toRemove = new HashSet<IWebElement>();
                                        var toRemoveOthers = new HashSet<IWebElement>();
                                        var toRemoveVideo = new HashSet<IWebElement>();

                                        IList<IWebElement> listeVocauxxOriginal;
                                        IList<IWebElement> allDivElementsOriginal = null;
                                        IList<IWebElement> allOthersOriginal = new List<IWebElement>();

                                        foreach (string classee in classesConnues)
                                        {
                                            if (classee.Contains("_1mj2 _2e-6") || classee.Contains("_1mj4 _2e-7"))//|| classe.Contains("_3058 _15gf")
                                            {

                                                firstlisteVocauxx = driverMessenger.FindElements(By.XPath("//div[@class='_1mj2 _2e-6']"));
                                                listeNotReadOnly = firstlisteVocauxx.ToList();

                                            }

                                            if (classee.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))//si classe contenant vidéo on télécharge d'abord la vidéo
                                            {

                                                firstallDivElements = driverMessenger.FindElementsByXPath(classee + "//video");//_ox1 _21y0}
                                                listeVideoNotReadOnly = firstallDivElements.ToList();
                                            }

                                            if (!classee.Contains("_1mj2 _2e-6") || !classee.Contains("_1mj4 _2e-7") || !classee.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))
                                            {
                                                
                                                foreach(IWebElement el in driverMessenger.FindElementsByXPath(classee))
                                                {
                                                    firstallOthers.Add(el);
                                                    listeOthersNotReadOnly.Add(el);
                                                }
                                                
                                                //firstallOthers = driverMessenger.FindElementsByXPath(classee);//_ox1 _21y0}
                                                //listeOthersNotReadOnly = firstallOthers.ToList();

                                            }

                                                
                                        }

                                            while (true)
                                            {
                                            
                                            if (fromdate != null)
                                            {
                                                //hauteurfromdate = fromdate.Location.Y + (Int32)scrolll;
                                                hauteurfromdate = fromdate.Location.Y;
                                                hauteurfromdateString = hauteurfromdate.ToString();

                                                ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollIntoView(true);", fromdate);
                                                Thread.Sleep(500);

                                                //hauteurfromdate = fromdate.Location.Y;
                                                fromdate = null;
                                                STOP = false;
                                                //hauteur += 600;

                                            }
                                            else
                                            {

                                                //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollBy(0,450);", imageDown);
                                                ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollBy(0," + hauteurr + ");", imageDown);

                                                Thread.Sleep(WAIT);
                                            }



                                            if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                            {

                                                try
                                                {
                                                    driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                                }
                                                catch
                                                {

                                                }
                                            }
                                            //int hei = imageDown.Size.Height;
                                            messenger = driverMessenger.PageSource;

                                            if(!FASTMESSENGER)
                                            foreach (string classe in classesConnues)
                                            {

                                                if (classe.Contains("_1mj2 _2e-6") || classe.Contains("_1mj4 _2e-7"))//|| classe.Contains("_3058 _15gf")
                                                {


                                                        //pour récupérer les a contenant la longueur du message vocal
                                                        //IList<IWebElement> newlisteVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                        //IList<IWebElement> listeVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                        IList<IWebElement> listeVocauxx = firstlisteVocauxx;
                                                        listeVocauxxOriginal = driverMessenger.FindElements(By.XPath("//div[@class='_1mj2 _2e-6']"));

                                                        if(!listeVocauxxOriginal.SequenceEqual(firstlisteVocauxx))
                                                        {
                                                            listeVocauxx = listeVocauxxOriginal;
                                                            firstlisteVocauxx = listeVocauxxOriginal;
                                                            listeNotReadOnly = listeVocauxx.ToList();

                                                        }


                                                        List<IWebElement> newListVocaux = listeNotReadOnly.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList();


                                                    if (listeNotReadOnly.Count > 0)
                                                    foreach (IWebElement ell in newListVocaux)
                                                    {
                                                        //if (listeVocaux[0].Location.Y > 15 && listeVocaux[0].Location.Y < (resolutionEcran - 250))
                                                        //    break;
                                                        if (ell.Text == "")
                                                            continue;

                                                        string tentation = ell.ToString();
                                                        string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                        if (ell.Location.Y > 15 && ell.Location.Y < (resolutionEcran - 250))
                                                        {
                                                            //string tentation = ell.ToString();
                                                            //string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];


                                                            IList<IWebElement> els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs _5z-5']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                            string dateAudio = "";
                                                            string nomFichierAudio = "";

                                                            foreach (IWebElement el in els)
                                                            {
                                                                if (el.GetAttribute("data-tooltip-content") != null)
                                                                {

                                                                    if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                    {
                                                                        var texte = el.GetAttribute("data-tooltip-content");
                                                                        var position = el.Location;
                                                                        dateAudio = texte.Replace(":", "-");
                                                                        nomFichierAudio = "From";
                                                                        toRemove.Add(ell);
                                                                        break;
                                                                    }



                                                                }
                                                            }
                                                            if (dateAudio == "")
                                                            {
                                                                els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                                dateAudio = "";
                                                                foreach (IWebElement el in els)
                                                                {
                                                                    if (el.GetAttribute("data-tooltip-content") != null)
                                                                    {

                                                                        if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                        {
                                                                            var texte = el.GetAttribute("data-tooltip-content");
                                                                            var position = el.Location;
                                                                            dateAudio = texte.Replace(":", "-");
                                                                            nomFichierAudio = "To";
                                                                            break;
                                                                        }



                                                                    }
                                                                }
                                                            }

                                                            string duree = ell.Text.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries)[0];


                                                            if (duree.Length == 4)
                                                                duree = "00:0" + duree;

                                                            if (audioVisibles.ContainsKey(idd))
                                                            {
                                                                audioVisibless.Add(audioVisibles[idd]);
                                                                continue;
                                                            }

                                                            try
                                                            {
                                                                TimeSpan tempss;
                                                                TimeSpan.TryParse(duree, out tempss);
                                                                //DateTime temps;
                                                                //DateTime.TryParse(duree, out temps);
                                                                ell.Click();
                                                                StartRecord(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                                Stopwatch sw = new Stopwatch();
                                                                sw.Start();
                                                                //Thread.Sleep(500);
                                                                while (true)
                                                                {

                                                                    if (sw.ElapsedMilliseconds > tempss.TotalMilliseconds + (2000))
                                                                    {
                                                                        if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                                                        {

                                                                            try
                                                                            {
                                                                                driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                                                            }
                                                                            catch
                                                                            {

                                                                            }
                                                                        }
                                                                        break;
                                                                    }

                                                                        toRemove.Add(ell);
                                                                }

                                                                StopRecording();
                                                                Thread.Sleep(1000);

                                                                if (!audioVisibles.ContainsKey(idd))
                                                                {
                                                                    audioVisibles.Add(idd, pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                                    audioVisibless.Add(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                                        
                                                                        if (!classeTraitee.ContainsKey(idd))
                                                                        {
                                                                            classeTraitee.Add(idd, idd);
                                                                        }
                                                                }



                                                                j++;

                                                            }
                                                            catch (Exception exx)
                                                            {
                                                                //StopRecording();
                                                                //Thread.Sleep(5000);
                                                            }


                                                            //ell.Click();


                                                        }
                                                            
                                                            
                                                            
                                                        }

                                                        listeNotReadOnly.RemoveAll(toRemove.Contains);

                                                        //pour cliquer sur le message vocal et jouer le son
                                                        //driverMessenger.FindElementsByXPath(classe)[0].Click();

                                                    }


                                                if (classe.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))//si classe contenant vidéo on télécharge d'abord la vidéo
                                                {

                                                        IList<IWebElement> listeVideos = firstallDivElements;
                                                        allDivElementsOriginal = driverMessenger.FindElementsByXPath(classe + "//video");

                                                        if (!allDivElementsOriginal.SequenceEqual(firstallDivElements))
                                                        {
                                                            listeVideos = allDivElementsOriginal;
                                                            firstlisteVocauxx = allDivElementsOriginal;
                                                            listeVideoNotReadOnly = listeVideos.ToList();

                                                        }


                                                        List<IWebElement> newListVideos = listeVideoNotReadOnly.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList();



                                                        //IList<IWebElement> allDivElements = driverMessenger.FindElementsByXPath(classe + "//video");//_ox1 _21y0
                                                    if (listeVideoNotReadOnly.Count > 0)
                                                    for (int ii = newListVideos.Count() - 1; ii >=0; ii--)
                                                    {
                                                            string tentation = newListVideos[ii].ToString();
                                                            string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                            if (classeTraitee.ContainsKey(idd))
                                                            {
                                                                continue;
                                                            }


                                                        if (listeVideoNotReadOnly[ii].GetAttribute("class") != null)
                                                        {
                                                            //here the print statement will print the value of each div tag element
                                                            var tmp = newListVideos[ii].GetAttribute("class");

                                                            if (tmp == "_ox1 _21y0")// si div avec vidéo
                                                            {
                                                                //var video = driver.FindElementsByClassName(tmp);
                                                                //IList<IWebElement> allDivElementss = driver.FindElementsByClassName(tmp);

                                                                try
                                                                {
                                                                    //var tmpp = allDivElementss[0].FindElement(By.XPath("video")).GetAttribute("src");
                                                                    var tmpp = newListVideos[ii].GetAttribute("src");

                                                                    //if (allDivElements[0].Location.Y > 15 && allDivElements[0].Location.Y < (resolutionEcran - 250))
                                                                    //    break;


                                                                    if (newListVideos[ii].Location.Y > 15 && newListVideos[ii].Location.Y < (resolutionEcran - 250))
                                                                    {
                                                                           

                                                                        if (!videosVisibles.ContainsKey(tmpp + ii))
                                                                        {
                                                                            videosVisibles.Add(tmpp + ii, tmpp);

                                                                                if (!classeTraitee.ContainsKey(idd))
                                                                                {
                                                                                    classeTraitee.Add(idd, tmpp);
                                                                                }
                                                                        }

                                                                    toRemoveVideo.Add(newListVideos[ii]);
                                                                    }
                                                                    //break;



                                                                    //IWebElement oo = allDivElementss[0].FindElement(By.XPath("video"));


                                                                }
                                                                catch (Exception ex)
                                                                {

                                                                }

                                                            }
                                                        }

                                                     listeVideoNotReadOnly.RemoveAll(toRemoveVideo.Contains);

                                                    }




                                                }

                                                    //if (!classe.Contains("_1mj2 _2e-6") || !classe.Contains("_1mj4 _2e-7") || !classe.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))
                                                    //{
                                                    //    foreach (IWebElement el in driverMessenger.FindElementsByXPath(classe))
                                                    //    {
                                                    //        //firstallOthers.Add(el);
                                                    //        //listeOthersNotReadOnly.Add(el);
                                                    //        allOthersOriginal.Add(el);
                                                    //    }




                                                    //}
                                                   


                                                       


                                            }//FIN FOREACH CLASSES CONNUES


                                            IList<IWebElement> listeOthers = firstallOthers;
                                            //allOthersOriginal = driverMessenger.FindElements(By.XPath(classe));

                                            //if (!allOthersOriginal.SequenceEqual(firstallOthers))
                                            //{
                                            //    listeOthers = allOthersOriginal;
                                            //    firstallOthers = allOthersOriginal;
                                            //    listeOthersNotReadOnly = listeOthers.ToList();

                                            //}

                                            List<IWebElement> newList = listeOthersNotReadOnly.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList();


                                            if (listeOthersNotReadOnly.Count > 0)

                                                //var messages = driverMessenger.FindElementsByXPath(classe);
                                                //object[] messagesToExtract = messages.ToArray();


                                                foreach (OpenQA.Selenium.Remote.RemoteWebElement o in newList)
                                                {

                                                    string tentation = o.ToString();
                                                    string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                    if (classeTraitee.ContainsKey(idd))
                                                        continue;

                                                    if (!dicoMessagesFrom.ContainsKey(idd))
                                                    {
                                                        dicoMessagesFrom.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                    }
                                                    //else
                                                    //    continue;


                                                    if (o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250))
                                                    {
                                                        if (!messagesVisibles.ContainsKey(idd) && o.Text != "" && !o.Text.Contains("Lire-4:01Paramètres"))
                                                        {
                                                            messagesVisibles.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));

                                                            if (!classeTraitee.ContainsKey(idd))
                                                            {
                                                                classeTraitee.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                            }
                                                        }

                                                        toRemoveOthers.Add(o);
                                                    }
                                                    //else
                                                    //    break;

                                                    //messagesToExtract.ToList().Remove(o);

                                                }

                                            listeOthersNotReadOnly.RemoveAll(toRemoveOthers.Contains);
                                            allOthersOriginal = new List<IWebElement>();
                                            toRemoveOthers = new HashSet<IWebElement>();



                                            //on récupère tous les messages ppur ensuite comparer avec messageFrom et messageTo
                                            //imageDown = driver.FindElementById(idTmp);
                                            //Thread.Sleep(200);

                                            //if (textes != imageDown.Text)
                                            //    textes = imageDown.Text + "\n";

                                            messenger = driverMessenger.PageSource;
                                            //topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                            //on récupère la valeur Top de la scrollBar

                                            topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                            //on récupère la valeur Top de la scrollBar

                                            top = "";
                                            try
                                            {
                                                foreach (string t in topScrollBar)
                                                {
                                                    string tmp = t.Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                                    if (!tmp.Contains("top:") || tmp.Contains("hidden"))
                                                        continue;

                                                    top = tmp.Substring(tmp.IndexOf("top: ") + 4).Split(';')[0];

                                                    //if ((!tmp.Contains("top:") && ! tmp.Contains("uiScrollableAreaWrap")) || tmp.StartsWith("<html"))
                                                    //    continue;

                                                    //top = t.Substring(t.IndexOf("top: ") + 4).Split(';')[0];
                                                }

                                                if (top == topPrec)
                                                    break;

                                                topPrec = top;
                                            }
                                            catch
                                            {

                                            }

                                            Screenshot imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                            //imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();

                                            Thread.Sleep(500);


                                            //imageScreenshott.SaveAsFile(pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg", OpenQA.Selenium.ScreenshotImageFormat.Jpeg);
                                            imageScreenshott.SaveAsFile(pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);


                                            Thread.Sleep(500);

                                            //string pathToFile = pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg";
                                            string pathToFile = pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png";
                                            //pathToFolder = pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString);
                                            pathToFolder = pathToSaveScreenshot;

                                            if(!FASTMESSENGER)
                                            foreach (string cle in messagesVisibles.Keys)
                                            {

                                                if (!messagesVisiblesForFile.ContainsKey(cle))
                                                {

                                                    string[] lignes = messagesVisibles[cle].Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);

                                                    string tmp = "";
                                                    foreach (string li in lignes)
                                                    {
                                                        tmp += li.Trim().Replace("\r", "").Replace(";", "");
                                                    }



                                                    messagesVisiblesForFile.Add(cle, tmp + ";" + pathToFile + "\n");
                                                }

                                                //messagesVisiblesWithScreenshots += valeur + ";" + pathToFile + "\n";
                                            }

                                            if (!FASTMESSENGER)
                                               if (videosVisibles.Count > 0)
                                                foreach (string cle in videosVisibles.Keys)
                                                {
                                                    //if (!videosVisiblesForFile.ContainsKey(cle))
                                                    //{

                                                    videosVisiblesForFile.Add(cle + ";" + pathToFile + "\n");
                                                    //}
                                                }

                                            if (!FASTMESSENGER)
                                                if (audioVisibless.Count > 0)
                                                foreach (string cle in audioVisibless)
                                                {
                                                    //if (!videosVisiblesForFile.ContainsKey(cle))
                                                    //{
                                                    if (!audioVisiblesForFile.ContainsKey(cle))
                                                        audioVisiblesForFile.Add(cle, cle + ";" + pathToFile + "\n");
                                                    //}
                                                }

                                            messagesVisibles = new Dictionary<string, string>();
                                            videosVisibles = new Dictionary<string, string>();
                                            //audioVisibles = new Dictionary<string, string>();
                                            hauteur += 600;
                                            hauteurr = 450;

                                            i++;
                                        }
                                        ForGrid forGrid = new ForGrid();
                                        forGrid.PathToFolder = pathToFolder;
                                        forGrid.Url = link;

                                        imageDown = driverMessenger.FindElementById(idTmp);
                                        textes = imageDown.Text + "\n";
                                        

                                        backgroundWorkerGetMessenger.ReportProgress(-7, forGrid);
                                        //FillDataGridViewMessenger(pathToFolder, link);
                                    }
                                    else//Si pas de scrollbar alors seulement une page------------------------------------------------------------------------------------------
                                    {
                                        int j = 1;
                                        foreach (string classe in classesConnues)
                                        {


                                            if (classe.Contains("_1mj2 _2e-6") || classe.Contains("_1mj4 _2e-7"))//|| classe.Contains("_3058 _15gf")
                                            {


                                                //pour récupérer les a contenant la longueur du message vocal
                                                //IList<IWebElement> newlisteVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                //IList<IWebElement> listeVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                IList<IWebElement> listeVocauxx = driverMessenger.FindElements(By.XPath("//div[@class='_1mj2 _2e-6']"));

                                                foreach (IWebElement ell in listeVocauxx)
                                                {
                                                    //if (listeVocaux[0].Location.Y > 15 && listeVocaux[0].Location.Y < (resolutionEcran - 250))
                                                    //    break;
                                                    if (ell.Text == "")
                                                        continue;

                                                    string tentation = ell.ToString();
                                                    string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                    //IList<IWebElement> testt = ell.FindElements(By.TagName("a"));

                                                    //string tentation = ell.ToString();
                                                    //string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                    //if (audioVisibles.ContainsKey(idd))
                                                    //{
                                                    //    continue;
                                                    //}

                                                    if (ell.Location.Y > 15 && ell.Location.Y < (resolutionEcran - 250))
                                                    {
                                                        //string tentation = ell.ToString();
                                                        //string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];


                                                        IList<IWebElement> els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs _5z-5']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                        string dateAudio = "";
                                                        string nomFichierAudio = "";

                                                        foreach (IWebElement el in els)
                                                        {
                                                            if (el.GetAttribute("data-tooltip-content") != null)
                                                            {

                                                                if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                {
                                                                    var texte = el.GetAttribute("data-tooltip-content");
                                                                    var position = el.Location;
                                                                    dateAudio = texte.Replace(":", "-");
                                                                    nomFichierAudio = "From";
                                                                    break;
                                                                }



                                                            }
                                                        }
                                                        if (dateAudio == "")
                                                        {
                                                            els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                            dateAudio = "";
                                                            foreach (IWebElement el in els)
                                                            {
                                                                if (el.GetAttribute("data-tooltip-content") != null)
                                                                {

                                                                    if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                    {
                                                                        var texte = el.GetAttribute("data-tooltip-content");
                                                                        var position = el.Location;
                                                                        dateAudio = texte.Replace(":", "-");
                                                                        nomFichierAudio = "To";
                                                                        break;
                                                                    }



                                                                }
                                                            }
                                                        }

                                                        string duree = ell.Text.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                                        //if (classe.Contains("_1mj2 _2e-6"))
                                                        //    nomFichierAudio = "From";
                                                        //else
                                                        //    nomFichierAudio = "To";

                                                        if (duree.Length == 4)
                                                            duree = "00:0" + duree;

                                                        if (audioVisibles.ContainsKey(idd))
                                                        {
                                                            audioVisibless.Add(audioVisibles[idd]);
                                                            continue;
                                                        }

                                                        try
                                                        {
                                                            TimeSpan tempss;
                                                            TimeSpan.TryParse(duree, out tempss);
                                                            //DateTime temps;
                                                            //DateTime.TryParse(duree, out temps);
                                                            ell.Click();
                                                            StartRecord(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                            Stopwatch sw = new Stopwatch();
                                                            sw.Start();
                                                            //Thread.Sleep(500);
                                                            while (true)
                                                            {

                                                                if (sw.ElapsedMilliseconds > tempss.TotalMilliseconds + (2000))
                                                                {
                                                                    if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                                                    {

                                                                        try
                                                                        {
                                                                            driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                                                        }
                                                                        catch
                                                                        {

                                                                        }
                                                                    }
                                                                    break;
                                                                }

                                                            }

                                                            StopRecording();
                                                            Thread.Sleep(1000);

                                                            if (!audioVisibles.ContainsKey(idd))
                                                            {
                                                                audioVisibles.Add(idd, pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                                audioVisibless.Add(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");

                                                            }



                                                            j++;

                                                        }
                                                        catch (Exception exx)
                                                        {
                                                            //StopRecording();
                                                            //Thread.Sleep(5000);
                                                        }


                                                        //ell.Click();


                                                    }

                                                }

                                                //pour cliquer sur le message vocal et jouer le son
                                                //driverMessenger.FindElementsByXPath(classe)[0].Click();
                                            }







                                            if (classe.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))//si classe contenant vidéo on télécharge d'abord la vidéo
                                            {


                                                IList<IWebElement> allDivElements = driverMessenger.FindElementsByXPath(classe + "//video");//_ox1 _21y0
                                                for (int ii = 0; ii < allDivElements.Count(); ii++)
                                                {

                                                    if (allDivElements[ii].GetAttribute("class") != null)
                                                    {
                                                        //here the print statement will print the value of each div tag element
                                                        var tmp = allDivElements[ii].GetAttribute("class");

                                                        if (tmp == "_ox1 _21y0")// si div avec vidéo
                                                        {
                                                            //var video = driver.FindElementsByClassName(tmp);
                                                            //IList<IWebElement> allDivElementss = driver.FindElementsByClassName(tmp);

                                                            try
                                                            {
                                                                //var tmpp = allDivElementss[0].FindElement(By.XPath("video")).GetAttribute("src");
                                                                var tmpp = allDivElements[ii].GetAttribute("src");


                                                                if (allDivElements[ii].Location.Y > 15 && allDivElements[ii].Location.Y < (resolutionEcran - 250))
                                                                {
                                                                    if (!videosVisibles.ContainsKey(tmpp + ii))
                                                                    {
                                                                        videosVisibles.Add(tmpp + ii, tmpp);
                                                                    }
                                                                }
                                                                //break;



                                                                //IWebElement oo = allDivElementss[0].FindElement(By.XPath("video"));


                                                            }
                                                            catch (Exception ex)
                                                            {

                                                            }

                                                        }
                                                    }

                                                }




                                            }

                                            if (!classe.Contains("_1mj2 _2e-6") && !classe.Contains("_1mj4 _2e-7") && classe.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))
                                            {
                                                var messages = driverMessenger.FindElementsByXPath(classe);
                                                object[] messagesToExtract = messages.ToArray();



                                                foreach (OpenQA.Selenium.Remote.RemoteWebElement o in messagesToExtract)
                                                {

                                                    string tentation = o.ToString();
                                                    string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                    if (!dicoMessagesFrom.ContainsKey(idd))
                                                    {
                                                        dicoMessagesFrom.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                    }
                                                    //else
                                                    //    continue;

                                                    if (o.Location.Y + o.Size.Height > 15 && o.Location.Y < (resolutionEcran - 300))
                                                    {
                                                        if (!messagesVisibles.ContainsKey(idd) && o.Text != "")
                                                        {
                                                            messagesVisibles.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                        }
                                                    }

                                                }
                                            }

                                            
                                        }


                                        imageDown = driverMessenger.FindElementById(idTmp);
                                        textes = imageDown.Text + "\n";

                                        Screenshot imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                        imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                        //Save the screenshot
                                        //if (!Directory.Exists(pathToSave + "\\Messenger\\" + dicoMessenger[link]))
                                        //{
                                        //    //EraseDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link], true);  
                                        //    Directory.CreateDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link]);
                                        //}
                                        //else
                                        //if (dicoMessenger[link].ToLower().Contains("utilisateur de") || dicoMessenger[link].ToLower().Contains("user"))
                                        //{
                                        //    idFictif++;
                                        //    idFictifString = idFictif.ToString();
                                        //    Directory.CreateDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link] + i.ToString());
                                        //}



                                        imageScreenshott.SaveAsFile(pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                        Thread.Sleep(100);

                                        string pathToFile = pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png";
                                        pathToFolder = pathToSaveScreenshot;

                                        foreach (string cle in messagesVisibles.Keys)
                                        {

                                            if (!messagesVisiblesForFile.ContainsKey(cle))
                                            {

                                                string[] lignes = messagesVisibles[cle].Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);

                                                string tmp = "";
                                                foreach (string li in lignes)
                                                {
                                                    tmp += li.Trim().Replace("\r", "");
                                                }



                                                messagesVisiblesForFile.Add(cle, tmp + ";" + pathToFile + "\n");
                                            }

                                            //messagesVisiblesWithScreenshots += valeur + ";" + pathToFile + "\n";
                                        }

                                        if (videosVisibles.Count > 0)
                                            foreach (string cle in videosVisibles.Keys)
                                            {
                                                //if (!videosVisiblesForFile.ContainsKey(cle))
                                                //{

                                                videosVisiblesForFile.Add(cle + ";" + pathToFile + "\n");
                                                //}
                                            }

                                        if (audioVisibles.Count > 0)
                                            foreach (string cle in audioVisibles.Values)
                                            {
                                                //if (!videosVisiblesForFile.ContainsKey(cle))
                                                //{
                                                if (!audioVisibles.ContainsKey(cle))
                                                    audioVisiblesForFile.Add(cle + ";" + pathToFile + "\n", cle + ";" + pathToFile + "\n");
                                                //}
                                            }

                                        messagesVisibles = new Dictionary<string, string>();
                                        videosVisibles = new Dictionary<string, string>();
                                        //audioVisibles = new Dictionary<string, string>();

                                        ForGrid forGrid = new ForGrid();
                                        forGrid.PathToFolder = pathToFolder;
                                        forGrid.Url = link;

                                        backgroundWorkerGetMessenger.ReportProgress(-7, forGrid);
                                        //FillDataGridViewMessenger(pathToFolder, link);
                                        //continue;
                                    }




                                }
                                catch (Exception ex)//SI TIMEOUT
                                {
                                    //MessageBox.Show("error dans Messenger : " + ex.Message);
                                    //((IJavaScriptExecutor)driverMessenger).ExecuteScript("return window.stop");
                                    driverMessenger.Navigate().Refresh();
                                    Thread.Sleep(1000);

                                    backgroundWorkerGetMessenger.ReportProgress(-666);

                                    continue;
                                                                       
                                   

                                    Screenshot imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                    imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();

                                    Thread.Sleep(500);


                                    //imageScreenshott.SaveAsFile(pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg", OpenQA.Selenium.ScreenshotImageFormat.Jpeg);
                                    imageScreenshott.SaveAsFile(pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + 1 + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);

                                    Thread.Sleep(500);

                                    string topPrec = "";
                                    textes = imageDown.Text;


                                    int j = 1;
                                    int hauteurfromdate = 0;
                                    string hauteurfromdateString = "";

                                    Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                                    long innerHeightt = (long)innerHeight;
                                    long scrolll = (long)innerHeight;
                                    long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                                    //on initialise

                                    IList<IWebElement> firstlisteVocauxx = null;
                                    IList<IWebElement> firstallDivElements = null;
                                    IList<IWebElement> firstallOthers = new List<IWebElement>();
                                    List<IWebElement> listeNotReadOnly = null;
                                    List<IWebElement> listeOthersNotReadOnly = new List<IWebElement>();
                                    List<IWebElement> listeVideoNotReadOnly = new List<IWebElement>();
                                    var toRemove = new HashSet<IWebElement>();
                                    var toRemoveOthers = new HashSet<IWebElement>();
                                    var toRemoveVideo = new HashSet<IWebElement>();

                                    IList<IWebElement> listeVocauxxOriginal;
                                    IList<IWebElement> allDivElementsOriginal = null;
                                    IList<IWebElement> allOthersOriginal = new List<IWebElement>();

                                    foreach (string classee in classesConnues)
                                    {
                                        if (classee.Contains("_1mj2 _2e-6") || classee.Contains("_1mj4 _2e-7"))//|| classe.Contains("_3058 _15gf")
                                        {

                                            firstlisteVocauxx = driverMessenger.FindElements(By.XPath("//div[@class='_1mj2 _2e-6']"));
                                            listeNotReadOnly = firstlisteVocauxx.ToList();

                                        }

                                        if (classee.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))//si classe contenant vidéo on télécharge d'abord la vidéo
                                        {

                                            firstallDivElements = driverMessenger.FindElementsByXPath(classee + "//video");//_ox1 _21y0}
                                            listeVideoNotReadOnly = firstallDivElements.ToList();
                                        }

                                        if (!classee.Contains("_1mj2 _2e-6") || !classee.Contains("_1mj4 _2e-7") || classee.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))
                                        {

                                            foreach (IWebElement el in driverMessenger.FindElementsByXPath(classee))
                                            {
                                                firstallOthers.Add(el);
                                                listeOthersNotReadOnly.Add(el);
                                            }

                                            //firstallOthers = driverMessenger.FindElementsByXPath(classee);//_ox1 _21y0}
                                            //listeOthersNotReadOnly = firstallOthers.ToList();

                                        }


                                    }


                                    //calcul du temps
                                    datumm = new DateTime(DateTime.Today.Day,DateTime.Today.Month,DateTime.Today.Year - 1);
                                    if (datumm.Year != 1900)
                                    {
                                        IList<IWebElement> listeTimes = driver.FindElements(By.TagName("time"));
                                        Thread.Sleep(2000);

                                        string dernieredate = "";
                                        string datum = "";

                                        if (listeTimes[0].Text.ToLower().Contains("à"))
                                        {
                                            datum = listeTimes[0].Text.ToLower().Split('à')[0].Trim().Replace(" ", "/");
                                            if (mois.ContainsKey(datum.Split('/')[1].ToLower()))
                                            {
                                                datum = datum.ToLower().Replace(datum.Split('/')[1].ToLower(), mois[datum.Split('/')[1].ToLower()]);
                                            }

                                        }
                                        else
                                            datum = listeTimes[0].Text.Split(' ')[0];

                                        CultureInfo culture = new CultureInfo("fr-FR");
                                        DateTime testDatumValable;
                                        if (!DateTime.TryParse(datum, out testDatumValable))
                                            continue;

                                        DateTime firstDate = Convert.ToDateTime(datum, culture);// premiere date dans la liste
                                        DateTime tempss;


                                        tempss = Convert.ToDateTime(datum, culture);
                                        DateTime date2 = new DateTime(datumm.Year, datumm.Month, datumm.Day);



                                        try
                                        {


                                            foreach (IWebElement el in listeTimes)
                                            {
                                                if (DateTime.Compare(firstDate, date2) == 0)
                                                    break;

                                                //DateTime firstDate;



                                                datum = "";
                                                if (listeTimes[0].Text.ToLower().Contains("à"))
                                                {
                                                    datum = listeTimes[0].Text.ToLower().Split('à')[0].Trim().Replace(" ", "/");
                                                    if (mois.ContainsKey(datum.Split('/')[1].ToLower()))
                                                    {
                                                        datum = datum.ToLower().Replace(datum.Split('/')[1].ToLower(), mois[datum.Split('/')[1].ToLower()]);
                                                    }

                                                }
                                                else
                                                    datum = listeTimes[0].Text.Split(' ')[0];


                                                if (DateTime.TryParse(datum, out testDatumValable))
                                                    firstDate = Convert.ToDateTime(datum, culture);// premiere date dans la liste
                                                else
                                                    continue;

                                                datum = "";
                                                if (el.Text.ToLower().Contains("à"))
                                                {
                                                    datum = el.Text.ToLower().Split('à')[0].Trim().Replace(" ", "/");
                                                    if (mois.ContainsKey(datum.Split('/')[1].ToLower()))
                                                    {
                                                        datum = datum.ToLower().Replace(datum.Split('/')[1].ToLower(), mois[datum.Split('/')[1].ToLower()]);

                                                        if (Convert.ToInt32(datum.Split('/')[0]) < 10 && !datum.Split('/')[0].StartsWith("0"))
                                                            datum = "0" + datum;
                                                    }

                                                }
                                                else
                                                    datum = el.Text.Split(' ')[0];

                                                try
                                                {
                                                    tempss = Convert.ToDateTime(datum, culture);
                                                }
                                                catch
                                                {
                                                    continue;
                                                }

                                                int result = 0;
                                                try
                                                {


                                                    result = DateTime.Compare(tempss, date2);
                                                    string relationship;

                                                    if (result < 0)
                                                    {
                                                        earlier.Add(el);
                                                        relationship = "is earlier than";
                                                    }
                                                    else
                                                    if (result == 0)
                                                    {
                                                        relationship = "is the same time as";
                                                        sameTime.Add(tempss);

                                                        if (firstDate != tempss)
                                                        {
                                                            //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollIntoView(true) + 1600;", el);
                                                            //Thread.Sleep(500);
                                                            STOP = true;
                                                            top = "0px";
                                                            fromdate = el;
                                                            break;
                                                        }


                                                    }
                                                    else
                                                    {
                                                        relationship = "is later than";
                                                    }



                                                }
                                                catch
                                                {

                                                }


                                            }

                                            if (!STOP)
                                            {
                                                int result = DateTime.Compare(firstDate, date2);
                                                if (result < 0)
                                                {
                                                    STOP = true;
                                                    top = "0px";
                                                    fromdate = earlier[earlier.Count() - 1];

                                                }
                                            }

                                        }
                                        catch
                                        {

                                        }


                                    }



                                    while (true)
                                    {

                                        if (fromdate != null)
                                        {
                                            //hauteurfromdate = fromdate.Location.Y + (Int32)scrolll;
                                            hauteurfromdate = fromdate.Location.Y;
                                            hauteurfromdateString = hauteurfromdate.ToString();

                                            ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollIntoView(true);", fromdate);
                                            Thread.Sleep(500);

                                            //hauteurfromdate = fromdate.Location.Y;
                                            fromdate = null;
                                            STOP = false;
                                            //hauteur += 600;

                                        }
                                        else
                                        {

                                            //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollBy(0,450);", imageDown);
                                            ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollBy(0," + hauteurr + ");", imageDown);

                                            Thread.Sleep(WAIT);
                                        }



                                        if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                        {

                                            try
                                            {
                                                driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                            }
                                            catch
                                            {

                                            }
                                        }
                                        //int hei = imageDown.Size.Height;
                                        messenger = driverMessenger.PageSource;

                                        if (!FASTMESSENGER)
                                            foreach (string classe in classesConnues)
                                            {

                                                if (classe.Contains("_1mj2 _2e-6") || classe.Contains("_1mj4 _2e-7"))//|| classe.Contains("_3058 _15gf")
                                                {


                                                    //pour récupérer les a contenant la longueur du message vocal
                                                    //IList<IWebElement> newlisteVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                    //IList<IWebElement> listeVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                    IList<IWebElement> listeVocauxx = firstlisteVocauxx;
                                                    listeVocauxxOriginal = driverMessenger.FindElements(By.XPath("//div[@class='_1mj2 _2e-6']"));

                                                    if (!listeVocauxxOriginal.SequenceEqual(firstlisteVocauxx))
                                                    {
                                                        listeVocauxx = listeVocauxxOriginal;
                                                        firstlisteVocauxx = listeVocauxxOriginal;
                                                        listeNotReadOnly = listeVocauxx.ToList();

                                                    }


                                                    List<IWebElement> newListVocaux = listeNotReadOnly.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList();


                                                    if (listeNotReadOnly.Count > 0)
                                                        foreach (IWebElement ell in newListVocaux)
                                                        {
                                                            //if (listeVocaux[0].Location.Y > 15 && listeVocaux[0].Location.Y < (resolutionEcran - 250))
                                                            //    break;
                                                            if (ell.Text == "")
                                                                continue;

                                                            string tentation = ell.ToString();
                                                            string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                            if (ell.Location.Y > 15 && ell.Location.Y < (resolutionEcran - 250))
                                                            {
                                                                //string tentation = ell.ToString();
                                                                //string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];


                                                                IList<IWebElement> els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs _5z-5']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                                string dateAudio = "";
                                                                string nomFichierAudio = "";

                                                                foreach (IWebElement el in els)
                                                                {
                                                                    if (el.GetAttribute("data-tooltip-content") != null)
                                                                    {

                                                                        if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                        {
                                                                            var texte = el.GetAttribute("data-tooltip-content");
                                                                            var position = el.Location;
                                                                            dateAudio = texte.Replace(":", "-");
                                                                            nomFichierAudio = "From";
                                                                            toRemove.Add(ell);
                                                                            break;
                                                                        }



                                                                    }
                                                                }
                                                                if (dateAudio == "")
                                                                {
                                                                    els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                                    dateAudio = "";
                                                                    foreach (IWebElement el in els)
                                                                    {
                                                                        if (el.GetAttribute("data-tooltip-content") != null)
                                                                        {

                                                                            if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                            {
                                                                                var texte = el.GetAttribute("data-tooltip-content");
                                                                                var position = el.Location;
                                                                                dateAudio = texte.Replace(":", "-");
                                                                                nomFichierAudio = "To";
                                                                                break;
                                                                            }



                                                                        }
                                                                    }
                                                                }

                                                                string duree = ell.Text.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries)[0];


                                                                if (duree.Length == 4)
                                                                    duree = "00:0" + duree;

                                                                if (audioVisibles.ContainsKey(idd))
                                                                {
                                                                    audioVisibless.Add(audioVisibles[idd]);
                                                                    continue;
                                                                }

                                                                try
                                                                {
                                                                    TimeSpan tempss;
                                                                    TimeSpan.TryParse(duree, out tempss);
                                                                    //DateTime temps;
                                                                    //DateTime.TryParse(duree, out temps);
                                                                    ell.Click();
                                                                    StartRecord(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                                    Stopwatch sw = new Stopwatch();
                                                                    sw.Start();
                                                                    //Thread.Sleep(500);
                                                                    while (true)
                                                                    {

                                                                        if (sw.ElapsedMilliseconds > tempss.TotalMilliseconds + (2000))
                                                                        {
                                                                            if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                                                            {

                                                                                try
                                                                                {
                                                                                    driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                                                                }
                                                                                catch
                                                                                {

                                                                                }
                                                                            }
                                                                            break;
                                                                        }

                                                                        toRemove.Add(ell);
                                                                    }

                                                                    StopRecording();
                                                                    Thread.Sleep(1000);

                                                                    if (!audioVisibles.ContainsKey(idd))
                                                                    {
                                                                        audioVisibles.Add(idd, pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                                        audioVisibless.Add(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");

                                                                        if (!classeTraitee.ContainsKey(idd))
                                                                        {
                                                                            classeTraitee.Add(idd, idd);
                                                                        }
                                                                    }



                                                                    j++;

                                                                }
                                                                catch (Exception exx)
                                                                {
                                                                    //StopRecording();
                                                                    //Thread.Sleep(5000);
                                                                }


                                                                //ell.Click();


                                                            }



                                                        }

                                                    listeNotReadOnly.RemoveAll(toRemove.Contains);

                                                    //pour cliquer sur le message vocal et jouer le son
                                                    //driverMessenger.FindElementsByXPath(classe)[0].Click();

                                                }


                                                if (classe.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))//si classe contenant vidéo on télécharge d'abord la vidéo
                                                {

                                                    IList<IWebElement> listeVideos = firstallDivElements;
                                                    allDivElementsOriginal = driverMessenger.FindElementsByXPath(classe + "//video");

                                                    if (!allDivElementsOriginal.SequenceEqual(firstallDivElements))
                                                    {
                                                        listeVideos = allDivElementsOriginal;
                                                        firstlisteVocauxx = allDivElementsOriginal;
                                                        listeVideoNotReadOnly = listeVideos.ToList();

                                                    }


                                                    List<IWebElement> newListVideos = listeVideoNotReadOnly.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList();



                                                    //IList<IWebElement> allDivElements = driverMessenger.FindElementsByXPath(classe + "//video");//_ox1 _21y0
                                                    if (listeVideoNotReadOnly.Count > 0)
                                                        for (int ii = newListVideos.Count() - 1; ii >= 0; ii--)
                                                        {
                                                            string tentation = newListVideos[ii].ToString();
                                                            string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                            if (classeTraitee.ContainsKey(idd))
                                                            {
                                                                continue;
                                                            }


                                                            if (listeVideoNotReadOnly[ii].GetAttribute("class") != null)
                                                            {
                                                                //here the print statement will print the value of each div tag element
                                                                var tmp = newListVideos[ii].GetAttribute("class");

                                                                if (tmp == "_ox1 _21y0")// si div avec vidéo
                                                                {
                                                                    //var video = driver.FindElementsByClassName(tmp);
                                                                    //IList<IWebElement> allDivElementss = driver.FindElementsByClassName(tmp);

                                                                    try
                                                                    {
                                                                        //var tmpp = allDivElementss[0].FindElement(By.XPath("video")).GetAttribute("src");
                                                                        var tmpp = newListVideos[ii].GetAttribute("src");

                                                                        //if (allDivElements[0].Location.Y > 15 && allDivElements[0].Location.Y < (resolutionEcran - 250))
                                                                        //    break;


                                                                        if (newListVideos[ii].Location.Y > 15 && newListVideos[ii].Location.Y < (resolutionEcran - 250))
                                                                        {


                                                                            if (!videosVisibles.ContainsKey(tmpp + ii))
                                                                            {
                                                                                videosVisibles.Add(tmpp + ii, tmpp);

                                                                                if (!classeTraitee.ContainsKey(idd))
                                                                                {
                                                                                    classeTraitee.Add(idd, tmpp);
                                                                                }
                                                                            }

                                                                            toRemoveVideo.Add(newListVideos[ii]);
                                                                        }
                                                                        //break;



                                                                        //IWebElement oo = allDivElementss[0].FindElement(By.XPath("video"));


                                                                    }
                                                                    catch (Exception exx)
                                                                    {

                                                                    }

                                                                }
                                                            }

                                                            listeVideoNotReadOnly.RemoveAll(toRemoveVideo.Contains);

                                                        }




                                                }

                                                if (!classe.Contains("_1mj2 _2e-6") || !classe.Contains("_1mj4 _2e-7") || !classe.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))
                                                {
                                                    foreach (IWebElement el in driverMessenger.FindElementsByXPath(classe))
                                                    {
                                                        //firstallOthers.Add(el);
                                                        //listeOthersNotReadOnly.Add(el);
                                                        allOthersOriginal.Add(el);
                                                    }




                                                }




                                            }//FIN FOREACH CLASSES CONNUES


                                        IList<IWebElement> listeOthers = firstallOthers;
                                        //allOthersOriginal = driverMessenger.FindElements(By.XPath(classe));

                                        if (!allOthersOriginal.SequenceEqual(firstallOthers))
                                        {
                                            listeOthers = allOthersOriginal;
                                            firstallOthers = allOthersOriginal;
                                            listeOthersNotReadOnly = listeOthers.ToList();

                                        }

                                        List<IWebElement> newList = listeOthersNotReadOnly.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList();


                                        if (listeOthersNotReadOnly.Count > 0)

                                            //var messages = driverMessenger.FindElementsByXPath(classe);
                                            //object[] messagesToExtract = messages.ToArray();


                                            foreach (OpenQA.Selenium.Remote.RemoteWebElement o in newList)
                                            {

                                                string tentation = o.ToString();
                                                string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                if (classeTraitee.ContainsKey(idd))
                                                    continue;

                                                if (!dicoMessagesFrom.ContainsKey(idd))
                                                {
                                                    dicoMessagesFrom.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                }
                                                //else
                                                //    continue;


                                                if (o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250))
                                                {
                                                    if (!messagesVisibles.ContainsKey(idd) && o.Text != "" && !o.Text.Contains("Lire-4:01Paramètres"))
                                                    {
                                                        messagesVisibles.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));

                                                        if (!classeTraitee.ContainsKey(idd))
                                                        {
                                                            classeTraitee.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                        }
                                                    }

                                                    toRemoveOthers.Add(o);
                                                }
                                                //else
                                                //    break;

                                                //messagesToExtract.ToList().Remove(o);

                                            }

                                        listeOthersNotReadOnly.RemoveAll(toRemoveOthers.Contains);
                                        allOthersOriginal = new List<IWebElement>();
                                        toRemoveOthers = new HashSet<IWebElement>();



                                        //on récupère tous les messages ppur ensuite comparer avec messageFrom et messageTo
                                        //imageDown = driver.FindElementById(idTmp);
                                        //Thread.Sleep(200);

                                        //if (textes != imageDown.Text)
                                        //    textes = imageDown.Text + "\n";

                                        messenger = driverMessenger.PageSource;
                                        //topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                        //on récupère la valeur Top de la scrollBar

                                        topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                        //on récupère la valeur Top de la scrollBar

                                        top = "";
                                        try
                                        {
                                            foreach (string t in topScrollBar)
                                            {
                                                string tmp = t.Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                                if (!tmp.Contains("top:") || tmp.Contains("hidden"))
                                                    continue;

                                                top = tmp.Substring(tmp.IndexOf("top: ") + 4).Split(';')[0];

                                                //if ((!tmp.Contains("top:") && ! tmp.Contains("uiScrollableAreaWrap")) || tmp.StartsWith("<html"))
                                                //    continue;

                                                //top = t.Substring(t.IndexOf("top: ") + 4).Split(';')[0];
                                            }

                                            if (top == topPrec)
                                                break;

                                            topPrec = top;
                                        }
                                        catch
                                        {

                                        }

                                        imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                        //imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();

                                        Thread.Sleep(500);


                                        //imageScreenshott.SaveAsFile(pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg", OpenQA.Selenium.ScreenshotImageFormat.Jpeg);
                                        imageScreenshott.SaveAsFile(pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);


                                        Thread.Sleep(500);

                                        //string pathToFile = pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg";
                                        string pathToFile = pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png";
                                        //pathToFolder = pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString);
                                        pathToFolder = pathToSaveScreenshot;

                                        if (!FASTMESSENGER)
                                            foreach (string cle in messagesVisibles.Keys)
                                            {

                                                if (!messagesVisiblesForFile.ContainsKey(cle))
                                                {

                                                    string[] lignes = messagesVisibles[cle].Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);

                                                    string tmp = "";
                                                    foreach (string li in lignes)
                                                    {
                                                        tmp += li.Trim().Replace("\r", "").Replace(";", "");
                                                    }



                                                    messagesVisiblesForFile.Add(cle, tmp + ";" + pathToFile + "\n");
                                                }

                                                //messagesVisiblesWithScreenshots += valeur + ";" + pathToFile + "\n";
                                            }

                                        if (!FASTMESSENGER)
                                            if (videosVisibles.Count > 0)
                                                foreach (string cle in videosVisibles.Keys)
                                                {
                                                    //if (!videosVisiblesForFile.ContainsKey(cle))
                                                    //{

                                                    videosVisiblesForFile.Add(cle + ";" + pathToFile + "\n");
                                                    //}
                                                }

                                        if (!FASTMESSENGER)
                                            if (audioVisibless.Count > 0)
                                                foreach (string cle in audioVisibless)
                                                {
                                                    //if (!videosVisiblesForFile.ContainsKey(cle))
                                                    //{
                                                    if (!audioVisiblesForFile.ContainsKey(cle))
                                                        audioVisiblesForFile.Add(cle, cle + ";" + pathToFile + "\n");
                                                    //}
                                                }

                                        messagesVisibles = new Dictionary<string, string>();
                                        videosVisibles = new Dictionary<string, string>();
                                        //audioVisibles = new Dictionary<string, string>();
                                        hauteur += 600;
                                        hauteurr = 450;


                                        i++;
                                    }
                                    ForGrid forGrid = new ForGrid();
                                    forGrid.PathToFolder = pathToFolder;
                                    forGrid.Url = link;

                                    imageDown = driverMessenger.FindElementById(idTmp);
                                    textes = imageDown.Text + "\n";
                                    

                                    backgroundWorkerGetMessenger.ReportProgress(-7, forGrid);



                                }


                            }
                            catch (Exception ex)//FIN TRY TIMEOUT-----------------------------------------------------------------------
                            {
                                //MessageBox.Show("error dans Messenger " + ex.Message);

                                       Screenshot imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                        imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();

                                        Thread.Sleep(500);


                                        //imageScreenshott.SaveAsFile(pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg", OpenQA.Selenium.ScreenshotImageFormat.Jpeg);
                                        imageScreenshott.SaveAsFile(pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + 1 + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);

                                        Thread.Sleep(500);

                                        string topPrec = "";
                                        textes = imageDown.Text;

                                        
                                        int j = 1;
                                        int hauteurfromdate = 0;
                                        string hauteurfromdateString = "";

                                        Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                                        long innerHeightt = (long)innerHeight;
                                        long scrolll = (long)innerHeight;
                                        long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                                        //on initialise

                                        IList<IWebElement> firstlisteVocauxx = null;
                                        IList<IWebElement> firstallDivElements = null;
                                        IList<IWebElement> firstallOthers = new List<IWebElement>();
                                        List<IWebElement> listeNotReadOnly = null;
                                        List<IWebElement> listeOthersNotReadOnly = new List<IWebElement>();
                                        List<IWebElement> listeVideoNotReadOnly = new List<IWebElement>();
                                        var toRemove = new HashSet<IWebElement>();
                                        var toRemoveOthers = new HashSet<IWebElement>();
                                        var toRemoveVideo = new HashSet<IWebElement>();

                                        IList<IWebElement> listeVocauxxOriginal;
                                        IList<IWebElement> allDivElementsOriginal = null;
                                        IList<IWebElement> allOthersOriginal = new List<IWebElement>();

                                        foreach (string classee in classesConnues)
                                        {
                                            if (classee.Contains("_1mj2 _2e-6") || classee.Contains("_1mj4 _2e-7"))//|| classe.Contains("_3058 _15gf")
                                            {

                                                firstlisteVocauxx = driverMessenger.FindElements(By.XPath("//div[@class='_1mj2 _2e-6']"));
                                                listeNotReadOnly = firstlisteVocauxx.ToList();

                                            }

                                            if (classee.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))//si classe contenant vidéo on télécharge d'abord la vidéo
                                            {

                                                firstallDivElements = driverMessenger.FindElementsByXPath(classee + "//video");//_ox1 _21y0}
                                                listeVideoNotReadOnly = firstallDivElements.ToList();
                                            }

                                            if (!classee.Contains("_1mj2 _2e-6") || !classee.Contains("_1mj4 _2e-7") || classee.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))
                                            {
                                                
                                                foreach(IWebElement el in driverMessenger.FindElementsByXPath(classee))
                                                {
                                                    firstallOthers.Add(el);
                                                    listeOthersNotReadOnly.Add(el);
                                                }
                                                
                                                //firstallOthers = driverMessenger.FindElementsByXPath(classee);//_ox1 _21y0}
                                                //listeOthersNotReadOnly = firstallOthers.ToList();

                                            }

                                                
                                        }

                                            while (true)
                                            {
                                            
                                            if (fromdate != null)
                                            {
                                                //hauteurfromdate = fromdate.Location.Y + (Int32)scrolll;
                                                hauteurfromdate = fromdate.Location.Y;
                                                hauteurfromdateString = hauteurfromdate.ToString();

                                                ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollIntoView(true);", fromdate);
                                                Thread.Sleep(500);

                                                //hauteurfromdate = fromdate.Location.Y;
                                                fromdate = null;
                                                STOP = false;
                                                //hauteur += 600;

                                            }
                                            else
                                            {

                                                //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollBy(0,450);", imageDown);
                                                ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollBy(0," + hauteurr + ");", imageDown);

                                                Thread.Sleep(WAIT);
                                            }



                                            if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                            {

                                                try
                                                {
                                                    driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                                }
                                                catch
                                                {

                                                }
                                            }
                                            //int hei = imageDown.Size.Height;
                                            messenger = driverMessenger.PageSource;

                                            if(!FASTMESSENGER)
                                            foreach (string classe in classesConnues)
                                            {

                                                if (classe.Contains("_1mj2 _2e-6") || classe.Contains("_1mj4 _2e-7"))//|| classe.Contains("_3058 _15gf")
                                                {


                                                        //pour récupérer les a contenant la longueur du message vocal
                                                        //IList<IWebElement> newlisteVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                        //IList<IWebElement> listeVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                        IList<IWebElement> listeVocauxx = firstlisteVocauxx;
                                                        listeVocauxxOriginal = driverMessenger.FindElements(By.XPath("//div[@class='_1mj2 _2e-6']"));

                                                        if(!listeVocauxxOriginal.SequenceEqual(firstlisteVocauxx))
                                                        {
                                                            listeVocauxx = listeVocauxxOriginal;
                                                            firstlisteVocauxx = listeVocauxxOriginal;
                                                            listeNotReadOnly = listeVocauxx.ToList();

                                                        }


                                                        List<IWebElement> newListVocaux = listeNotReadOnly.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList();


                                                    if (listeNotReadOnly.Count > 0)
                                                    foreach (IWebElement ell in newListVocaux)
                                                    {
                                                        //if (listeVocaux[0].Location.Y > 15 && listeVocaux[0].Location.Y < (resolutionEcran - 250))
                                                        //    break;
                                                        if (ell.Text == "")
                                                            continue;

                                                        string tentation = ell.ToString();
                                                        string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                        if (ell.Location.Y > 15 && ell.Location.Y < (resolutionEcran - 250))
                                                        {
                                                            //string tentation = ell.ToString();
                                                            //string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];


                                                            IList<IWebElement> els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs _5z-5']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                            string dateAudio = "";
                                                            string nomFichierAudio = "";

                                                            foreach (IWebElement el in els)
                                                            {
                                                                if (el.GetAttribute("data-tooltip-content") != null)
                                                                {

                                                                    if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                    {
                                                                        var texte = el.GetAttribute("data-tooltip-content");
                                                                        var position = el.Location;
                                                                        dateAudio = texte.Replace(":", "-");
                                                                        nomFichierAudio = "From";
                                                                        toRemove.Add(ell);
                                                                        break;
                                                                    }



                                                                }
                                                            }
                                                            if (dateAudio == "")
                                                            {
                                                                els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                                dateAudio = "";
                                                                foreach (IWebElement el in els)
                                                                {
                                                                    if (el.GetAttribute("data-tooltip-content") != null)
                                                                    {

                                                                        if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                        {
                                                                            var texte = el.GetAttribute("data-tooltip-content");
                                                                            var position = el.Location;
                                                                            dateAudio = texte.Replace(":", "-");
                                                                            nomFichierAudio = "To";
                                                                            break;
                                                                        }



                                                                    }
                                                                }
                                                            }

                                                            string duree = ell.Text.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries)[0];


                                                            if (duree.Length == 4)
                                                                duree = "00:0" + duree;

                                                            if (audioVisibles.ContainsKey(idd))
                                                            {
                                                                audioVisibless.Add(audioVisibles[idd]);
                                                                continue;
                                                            }

                                                            try
                                                            {
                                                                TimeSpan tempss;
                                                                TimeSpan.TryParse(duree, out tempss);
                                                                //DateTime temps;
                                                                //DateTime.TryParse(duree, out temps);
                                                                ell.Click();
                                                                StartRecord(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                                Stopwatch sw = new Stopwatch();
                                                                sw.Start();
                                                                //Thread.Sleep(500);
                                                                while (true)
                                                                {

                                                                    if (sw.ElapsedMilliseconds > tempss.TotalMilliseconds + (2000))
                                                                    {
                                                                        if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                                                        {

                                                                            try
                                                                            {
                                                                                driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                                                            }
                                                                            catch
                                                                            {

                                                                            }
                                                                        }
                                                                        break;
                                                                    }

                                                                        toRemove.Add(ell);
                                                                }

                                                                StopRecording();
                                                                Thread.Sleep(1000);

                                                                if (!audioVisibles.ContainsKey(idd))
                                                                {
                                                                    audioVisibles.Add(idd, pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                                    audioVisibless.Add(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                                        
                                                                        if (!classeTraitee.ContainsKey(idd))
                                                                        {
                                                                            classeTraitee.Add(idd, idd);
                                                                        }
                                                                }



                                                                j++;

                                                            }
                                                            catch (Exception exx)
                                                            {
                                                                //StopRecording();
                                                                //Thread.Sleep(5000);
                                                            }


                                                            //ell.Click();


                                                        }
                                                            
                                                            
                                                            
                                                        }

                                                        listeNotReadOnly.RemoveAll(toRemove.Contains);

                                                        //pour cliquer sur le message vocal et jouer le son
                                                        //driverMessenger.FindElementsByXPath(classe)[0].Click();

                                                    }


                                                if (classe.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))//si classe contenant vidéo on télécharge d'abord la vidéo
                                                {

                                                        IList<IWebElement> listeVideos = firstallDivElements;
                                                        allDivElementsOriginal = driverMessenger.FindElementsByXPath(classe + "//video");

                                                        if (!allDivElementsOriginal.SequenceEqual(firstallDivElements))
                                                        {
                                                            listeVideos = allDivElementsOriginal;
                                                            firstlisteVocauxx = allDivElementsOriginal;
                                                            listeVideoNotReadOnly = listeVideos.ToList();

                                                        }


                                                        List<IWebElement> newListVideos = listeVideoNotReadOnly.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList();



                                                        //IList<IWebElement> allDivElements = driverMessenger.FindElementsByXPath(classe + "//video");//_ox1 _21y0
                                                    if (listeVideoNotReadOnly.Count > 0)
                                                    for (int ii = newListVideos.Count() - 1; ii >=0; ii--)
                                                    {
                                                            string tentation = newListVideos[ii].ToString();
                                                            string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                            if (classeTraitee.ContainsKey(idd))
                                                            {
                                                                continue;
                                                            }


                                                        if (listeVideoNotReadOnly[ii].GetAttribute("class") != null)
                                                        {
                                                            //here the print statement will print the value of each div tag element
                                                            var tmp = newListVideos[ii].GetAttribute("class");

                                                            if (tmp == "_ox1 _21y0")// si div avec vidéo
                                                            {
                                                                //var video = driver.FindElementsByClassName(tmp);
                                                                //IList<IWebElement> allDivElementss = driver.FindElementsByClassName(tmp);

                                                                try
                                                                {
                                                                    //var tmpp = allDivElementss[0].FindElement(By.XPath("video")).GetAttribute("src");
                                                                    var tmpp = newListVideos[ii].GetAttribute("src");

                                                                    //if (allDivElements[0].Location.Y > 15 && allDivElements[0].Location.Y < (resolutionEcran - 250))
                                                                    //    break;


                                                                    if (newListVideos[ii].Location.Y > 15 && newListVideos[ii].Location.Y < (resolutionEcran - 250))
                                                                    {
                                                                           

                                                                        if (!videosVisibles.ContainsKey(tmpp + ii))
                                                                        {
                                                                            videosVisibles.Add(tmpp + ii, tmpp);

                                                                                if (!classeTraitee.ContainsKey(idd))
                                                                                {
                                                                                    classeTraitee.Add(idd, tmpp);
                                                                                }
                                                                        }

                                                                    toRemoveVideo.Add(newListVideos[ii]);
                                                                    }
                                                                    //break;



                                                                    //IWebElement oo = allDivElementss[0].FindElement(By.XPath("video"));


                                                                }
                                                                catch (Exception exx)
                                                                {

                                                                }

                                                            }
                                                        }

                                                     listeVideoNotReadOnly.RemoveAll(toRemoveVideo.Contains);

                                                    }




                                                }

                                                    if (!classe.Contains("_1mj2 _2e-6") || !classe.Contains("_1mj4 _2e-7") || !classe.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))
                                                    {
                                                        foreach (IWebElement el in driverMessenger.FindElementsByXPath(classe))
                                                        {
                                                            //firstallOthers.Add(el);
                                                            //listeOthersNotReadOnly.Add(el);
                                                            allOthersOriginal.Add(el);
                                                        }




                                                    }

                                                       


                                            }//FIN FOREACH CLASSES CONNUES


                                            IList<IWebElement> listeOthers = firstallOthers;
                                            //allOthersOriginal = driverMessenger.FindElements(By.XPath(classe));

                                            if (!allOthersOriginal.SequenceEqual(firstallOthers))
                                            {
                                                listeOthers = allOthersOriginal;
                                                firstallOthers = allOthersOriginal;
                                                listeOthersNotReadOnly = listeOthers.ToList();

                                            }

                                            List<IWebElement> newList = listeOthersNotReadOnly.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList();


                                            if (listeOthersNotReadOnly.Count > 0)

                                                //var messages = driverMessenger.FindElementsByXPath(classe);
                                                //object[] messagesToExtract = messages.ToArray();


                                                foreach (OpenQA.Selenium.Remote.RemoteWebElement o in newList)
                                                {

                                                    string tentation = o.ToString();
                                                    string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                    if (classeTraitee.ContainsKey(idd))
                                                        continue;

                                                    if (!dicoMessagesFrom.ContainsKey(idd))
                                                    {
                                                        dicoMessagesFrom.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                    }
                                                    //else
                                                    //    continue;


                                                    if (o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250))
                                                    {
                                                        if (!messagesVisibles.ContainsKey(idd) && o.Text != "" && !o.Text.Contains("Lire-4:01Paramètres"))
                                                        {
                                                            messagesVisibles.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));

                                                            if (!classeTraitee.ContainsKey(idd))
                                                            {
                                                                classeTraitee.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                            }
                                                        }

                                                        toRemoveOthers.Add(o);
                                                    }
                                                    //else
                                                    //    break;

                                                    //messagesToExtract.ToList().Remove(o);

                                                }

                                            listeOthersNotReadOnly.RemoveAll(toRemoveOthers.Contains);
                                            allOthersOriginal = new List<IWebElement>();
                                            toRemoveOthers = new HashSet<IWebElement>();



                                            //on récupère tous les messages ppur ensuite comparer avec messageFrom et messageTo
                                            //imageDown = driver.FindElementById(idTmp);
                                            //Thread.Sleep(200);

                                            //if (textes != imageDown.Text)
                                            //    textes = imageDown.Text + "\n";

                                            messenger = driverMessenger.PageSource;
                                            //topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                            //on récupère la valeur Top de la scrollBar

                                            topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                            //on récupère la valeur Top de la scrollBar

                                            top = "";
                                            try
                                            {
                                                foreach (string t in topScrollBar)
                                                {
                                                    string tmp = t.Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                                    if (!tmp.Contains("top:") || tmp.Contains("hidden"))
                                                        continue;

                                                    top = tmp.Substring(tmp.IndexOf("top: ") + 4).Split(';')[0];

                                                    //if ((!tmp.Contains("top:") && ! tmp.Contains("uiScrollableAreaWrap")) || tmp.StartsWith("<html"))
                                                    //    continue;

                                                    //top = t.Substring(t.IndexOf("top: ") + 4).Split(';')[0];
                                                }

                                                if (top == topPrec)
                                                    break;

                                                topPrec = top;
                                            }
                                            catch
                                            {

                                            }

                                            imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                            //imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();

                                            Thread.Sleep(500);


                                            //imageScreenshott.SaveAsFile(pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg", OpenQA.Selenium.ScreenshotImageFormat.Jpeg);
                                            imageScreenshott.SaveAsFile(pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);


                                            Thread.Sleep(500);

                                            //string pathToFile = pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg";
                                            string pathToFile = pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png";
                                            //pathToFolder = pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString);
                                            pathToFolder = pathToSaveScreenshot;

                                            if(!FASTMESSENGER)
                                            foreach (string cle in messagesVisibles.Keys)
                                            {

                                                if (!messagesVisiblesForFile.ContainsKey(cle))
                                                {

                                                    string[] lignes = messagesVisibles[cle].Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);

                                                    string tmp = "";
                                                    foreach (string li in lignes)
                                                    {
                                                        tmp += li.Trim().Replace("\r", "").Replace(";", "");
                                                    }



                                                    messagesVisiblesForFile.Add(cle, tmp + ";" + pathToFile + "\n");
                                                }

                                                //messagesVisiblesWithScreenshots += valeur + ";" + pathToFile + "\n";
                                            }

                                            if (!FASTMESSENGER)
                                               if (videosVisibles.Count > 0)
                                                foreach (string cle in videosVisibles.Keys)
                                                {
                                                    //if (!videosVisiblesForFile.ContainsKey(cle))
                                                    //{

                                                    videosVisiblesForFile.Add(cle + ";" + pathToFile + "\n");
                                                    //}
                                                }

                                            if (!FASTMESSENGER)
                                                if (audioVisibless.Count > 0)
                                                foreach (string cle in audioVisibless)
                                                {
                                                    //if (!videosVisiblesForFile.ContainsKey(cle))
                                                    //{
                                                    if (!audioVisiblesForFile.ContainsKey(cle))
                                                        audioVisiblesForFile.Add(cle, cle + ";" + pathToFile + "\n");
                                                    //}
                                                }

                                            messagesVisibles = new Dictionary<string, string>();
                                            videosVisibles = new Dictionary<string, string>();
                                            //audioVisibles = new Dictionary<string, string>();
                                            hauteur += 600;
                                            hauteurr = 450;


                                            i++;
                                        }
                                        ForGrid forGrid = new ForGrid();
                                        forGrid.PathToFolder = pathToFolder;
                                        forGrid.Url = link;

                                        imageDown = driverMessenger.FindElementById(idTmp);
                                        textes = imageDown.Text + "\n";
                                        

                                        backgroundWorkerGetMessenger.ReportProgress(-7, forGrid);

                                

                            }

                                string codePagee = driverMessenger.PageSource;

                                using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSaveScreenshot + "\\Messenger_Messages.txt", false))
                                {
                                    //if (File.Exists(saveFileDialog1.FileName))
                                    //    File.Delete(saveFileDialog1.FileName);

                                    file.Write(textes);
                                }

                                //using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSaveScreenshot + "\\Messenger_Messages_Bis.txt", false))
                                //{
                                //    //if (File.Exists(saveFileDialog1.FileName))
                                //    //    File.Delete(saveFileDialog1.FileName);

                                //    textes = "";
                                //    foreach(string t in messagesVisibles.Values)
                                //    {
                                //        textes += t + "\n";
                                //    }

                                    
                                //    file.Write(textes);
                                //}

                                using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSaveScreenshot + "\\Messenger_Messages_With_Screenshots.txt", false))
                                {
                                    textes = "";
                                    foreach (string t in messagesVisiblesForFile.Values)
                                    {
                                        textes += t;
                                    }


                                    file.Write(textes);
                                    messagesVisiblesForFile = new Dictionary<string, string>();
                                }

                                using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSaveScreenshot + "\\Messenger_Videos_With_Screenshots.txt", false))
                                {
                                    if (videosVisiblesForFile.Count > 0)
                                    {
                                        textes = "";
                                        foreach (string t in videosVisiblesForFile)
                                        {
                                            textes += t;
                                        }


                                        file.Write(textes);
                                        
                                    }
                                        
                                            

                                }

                            using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSaveScreenshot + "\\Messenger_Audio_With_Screenshots.txt", false))
                            {
                                if (audioVisiblesForFile.Count > 0)
                                {
                                    textes = "";
                                    foreach (string t in audioVisiblesForFile.Values)
                                    {
                                        textes += t;
                                    }


                                    file.Write(textes);

                                }



                            }

                            if (!Directory.Exists(pathToSaveScreenshot + "\\Videos\\"))
                                {
                                    //EraseDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link], true);  
                                    Directory.CreateDirectory(pathToSaveScreenshot + "\\Videos\\");
                                }

                                using (var client = new WebClient())
                                {

                                    try

                                    {
                                        Dictionary<string, string> dico = new Dictionary<string, string>();
                                        foreach (string t in videosVisiblesForFile)
                                        {
                                            //FileInfo fileinfo = new FileInfo(t);
                                            string keyy = t.Substring(t.LastIndexOf('/') + 1).Split('?')[0];

                                            if (!dico.ContainsKey(keyy))
                                            {
                                                dico.Add(keyy, t);
                                                string nomFichier = t.Substring(t.LastIndexOf('/') + 1).Split('?')[0];
                                                client.DownloadFile(t, pathToSaveScreenshot + "\\Videos\\" + nomFichier);
                                                Thread.Sleep(1000);
                                            }
                                            

                                        }

                                        videosVisiblesForFile = new List<string>();
                                    }
                                    catch (Exception ex)
                                    {
                                        //MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT DES VIDEOS");
                                        //return;
                                    }
                                }


                            //on essaie de récupérer les documents partagés
                            if (!FASTMESSENGER)
                            try
                            {
                                IList<IWebElement> tmpp = driverMessenger.FindElements(By.ClassName("uiScrollableAreaContent"));
                                foreach (IWebElement div in tmpp)
                                {
                                    if (!div.Text.StartsWith("Information"))
                                        continue;

                                    IList<IWebElement> docPartagess = div.FindElements(By.TagName("a"));

                                    foreach (IWebElement elpart in docPartagess)
                                    {
                                        if (elpart.GetAttribute("href") != "")
                                        {
                                            docPartages.Add(elpart.GetAttribute("href"));
                                        }
                                    }
                                }

                            }
                            catch
                            {

                            }

                            if (!FASTMESSENGER)
                            if (docPartages.Count > 0)
                            {
                                if (!Directory.Exists(pathToSaveScreenshot + "\\Documents_Partages\\"))
                                {
                                    //EraseDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link], true);  
                                    Directory.CreateDirectory(pathToSaveScreenshot + "\\Documents_Partages\\");
                                }

                                using (var client = new WebClient())
                                {

                                    try

                                    {
                                        
                                        foreach (string t in docPartages)
                                        {
                                            try
                                            {
                                                //FileInfo fichier = new FileInfo(t);
                                                string urll = t;
                                                string nomFichier = t.Split(new string[] { "%3F" },StringSplitOptions.RemoveEmptyEntries)[0];
                                                
                                                urll = urll.Replace("%3A", ":").Replace("%3D", "=").Replace("%2F", "/").Replace("%3F", "?").Replace("%26", "&");
                                                
                                                if (urll.Contains("https://l.facebook.com/l.php?u="))
                                                {
                                                    nomFichier = nomFichier.Substring(nomFichier.LastIndexOf("%2F") + 3).Trim();
                                                    urll = urll.Substring(urll.IndexOf("https://l.facebook.com/l.php?u=") + 31);
                                                }
                                                //else
                                                //    nomFichier = nomFichier.Split('?')[0].Substring(nomFichier.LastIndexOf("/") + 1).Trim();



                                                client.DownloadFile(urll, pathToSaveScreenshot + "\\Documents_Partages\\" + nomFichier);
                                                Thread.Sleep(1000);
                                            }

                                            catch
                                            {

                                            }

                                        }

                                        docPartages = new List<string>();
                                    }
                                    catch (Exception ex)
                                    {
                                        //MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT DES VIDEOS");
                                        //return;
                                    }
                                }
                            }




                                Thread.Sleep(2500);

                                textes = "";
                                messagesVisiblesForFile = new Dictionary<string, string>();
                                messagesVisibles = new Dictionary<string, string>();
                                videosVisibles = new Dictionary<string, string>();
                                videosVisiblesForFile = new List<string>();
                                audioVisiblesForFile = new Dictionary<string, string>();
                                messagesVisibles = new Dictionary<string, string>();
                                videosVisibles = new Dictionary<string, string>();
                                audioVisibles = new Dictionary<string, string>();
                                audioVisibless = new List<string>();
                            //idFictif = 1;
                        }

                            textes = "";
                            messagesVisiblesForFile = new Dictionary<string, string>();
                            audioVisiblesForFile = new Dictionary<string, string>();
                            videosVisiblesForFile = new List<string>();
                            messagesVisibles = new Dictionary<string, string>();
                            videosVisibles = new Dictionary<string, string>();
                            audioVisibles = new Dictionary<string, string>();
                            audioVisibless = new List<string>();
                            classeTraitee = new Dictionary<string, string>();
                        
                            idFictif = 1;
                        }


                }
                    catch
                    {

                    }


                    try
                    {
                        Object lastHeight = ((IJavaScriptExecutor)driverMessenger).ExecuteScript("return document.body.scrollHeight");

                        while (true)
                        {
                            ((IJavaScriptExecutor)driverMessenger).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                            Thread.Sleep(2000);

                            Object newHeight = ((IJavaScriptExecutor)driverMessenger).ExecuteScript("return document.body.scrollHeight");
                            if (newHeight.Equals(lastHeight))
                            {
                                break;
                            }
                            lastHeight = newHeight;
                        }
                    }
                    catch
                    {
                        //e.printStackTrace();
                    }



            }
            catch 
            {

                    //driverMessenger.Quit();
            }




            //}
            //Thread.Sleep(2000);
            backgroundWorkerGetMessenger.ReportProgress(-105);
            Thread.Sleep(2000);
            //backgroundWorker1.CancelAsync();

            if (backgroundWorkerGetMessenger != null && backgroundWorkerGetMessenger.IsBusy)
                backgroundWorkerGetMessenger.CancelAsync();

            //labelanalyseencours.Visible = false;
            //pictureBoxwaiting.Visible = false;
            //pictureBoxlogofacebook.Visible = false;
        }
        private void MessengerFAST(Dictionary<string, string> dicoMessenger, DateTime datumm)
        {


            if (driverMessenger == null)
            {
                InitializeDriver();
                driverMessenger = driver;

                driverMessenger.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }


                //while (!isElementPresentByID(driver, "email"))
                ////{
                //// 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driverMessenger.FindElementById("email");
                //// 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);
                ////}


                //// 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driverMessenger.FindElementById("pass");

                //// 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                //// 5. Find the search button (by Name) on the homepage
                driverMessenger.FindElementById("loginbutton").Click();
                ////searchButton.Click();
                Thread.Sleep(2500);
            }

            //string urlFriend = textBoxUSERNAMEFRIENDS.Text;
            //pour cacher fenetre DOS
            //var driverService = ChromeDriverService.CreateDefaultService();
            //driverService.HideCommandPromptWindow = true;

            //var driver = new ChromeDriver(driverService, new ChromeOptions());

            //System.Diagnostics.Process.Start(filepath);
            //ChromeOptions chromeOptions = new ChromeOptions();
            //chromeOptions.AddArguments("--disable-notifications");
            System.Random rnd = new System.Random();
            int nbreAnnee = 1;


            // 1. Maximize the browser
            //driver.Manage().Window.Maximize();
            //driverMessenger.Close();
            //driverMessenger = new ChromeDriver(driverService, chromeOptions);
            driverMessenger = driver;

            // 2. Go to the "Google" homepage
            //driverMessenger.Navigate().GoToUrl("https://facebook.com/login");




            try
            {


                string targetName = textBoxops.Text;
                string textes = "";
                string messagesFromInString = "";
                string messagesVisiblesWithScreenshots = "";
                string pathToFolder = "";
                List<IWebElement> earlier = new List<IWebElement>();
                List<DateTime> sameTime = new List<DateTime>();
                int hauteurr = 0;
                //var imageDown = "";
                Dictionary<string, string> dicoMessagesFrom = new Dictionary<string, string>();
                Dictionary<string, string> dicoMessagesTo = new Dictionary<string, string>();
                Dictionary<string, string> dicoPictures = new Dictionary<string, string>();
                Dictionary<string, string> messagesVisibles = new Dictionary<string, string>();
                Dictionary<string, string> videosVisibles = new Dictionary<string, string>();
                Dictionary<string, string> messagesVisiblesForFile = new Dictionary<string, string>();
                List<string> videosVisiblesForFile = new List<string>();
                Dictionary<string, string> audioVisiblesForFile = new Dictionary<string, string>();
                Dictionary<string, string> audioVisibles = new Dictionary<string, string>();
                List<string> audioVisibless = new List<string>();
                List<string> audioVisiblessForFile = new List<string>();
                List<string> docPartages = new List<string>();
                Dictionary<string, string> mois = new Dictionary<string, string>();
                Dictionary<string, string> classeTraitee = new Dictionary<string, string>();
                int WAIT = 500;
                mois.Add("jan", "01");
                mois.Add("fév", "02");
                mois.Add("fev", "02");
                mois.Add("fèv", "02");
                mois.Add("mar", "03");
                mois.Add("avr", "04");
                mois.Add("mai", "05");
                mois.Add("jui", "06");
                mois.Add("juil", "07");
                mois.Add("janvier", "01");
                mois.Add("février", "02");
                mois.Add("mars", "03");
                mois.Add("avril", "04");
                mois.Add("juin", "06");
                mois.Add("juillet", "07");
                mois.Add("août", "08");
                mois.Add("septembre", "09");
                mois.Add("octobre", "10");
                mois.Add("novembre", "11");
                mois.Add("décembre", "12");



                List<string> classesConnues = new System.Collections.Generic.List<string>();
                classesConnues.Add("//div[@class='clearfix _o46 _3erg _29_7 _8lma direction_ltr text_align_ltr']");
                classesConnues.Add("//div[@class='clearfix _o46 _3erg _29_7 direction_ltr text_align_ltr']");
                classesConnues.Add("//div[@class='clearfix _o46 _3erg _29_7 _8lma direction_ltr text_align_ltr _ylc']");
                classesConnues.Add("//div[@class='clearfix _o46 _3erg _3i_m _nd_ _8lma direction_ltr text_align_ltr']");
                classesConnues.Add("//div[@class='clearfix _o46 _3erg _3i_m _nd_ _8lma direction_ltr text_align_ltr _ylc']");
                classesConnues.Add("//div[@class='_52mr _2poz _ui9 _4skb']");
                classesConnues.Add("//div[@class='clearfix _o46 _3erg _3i_m _nd_ direction_ltr text_align_ltr']");
                classesConnues.Add("//div[@class='clearfix _o46 _3erg _3i_m _nd_ _q4a _8lma direction_ltr text_align_ltr _ylc']");
                classesConnues.Add("//div[@class='_2poz _52mr _ui9 _2n8h _2n8i _5fk1']");//_2poz _52mr _ui9 _2n8h _2n8i _5fk1 Vidéo ?_ccq _4tsk _3o67 _52mr _1byr _4-od
                classesConnues.Add("//div[@class='_1mj2 _2e-6']");
                classesConnues.Add("//div[@class='_1mj4 _2e-7']");//_1mj4 _2e-7
                classesConnues.Add("//div[@class='_3058 _15gf']");//_3058 _15gf
                                                                  //_1mjb _454y _3czg _2poz _ui9
                                                                  //_1mjb _454y _3czg _2poz _ui9
                                                                  //_hh7 _6ybn _s1- _52mr _1fz8 _1nqp

                


                try
                {

                    bool STOP = false;
                    string messenger = "";
                    int idFictif = 1;
                    string idFictifString = "";
                    IWebElement fromdate = null;

                    if (FASTMESSENGER)
                        WAIT = 500;
                    else
                        WAIT = 1000;

                    if (dicoMessenger.Count > 0)
                    {
                        foreach (string link in dicoMessenger.Keys)
                        {

                            hauteurr = 0;
                            string pathToSaveScreenshot = "";

                            if (!Directory.Exists(pathToSave + "\\Messenger\\" + dicoMessenger[link]))
                            {
                                //EraseDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link], true);  
                                Directory.CreateDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link]);
                                pathToSaveScreenshot = pathToSave + "\\Messenger\\" + dicoMessenger[link];
                            }
                            else
                            if (dicoMessenger[link].ToLower().Contains("utilisateur de") || dicoMessenger[link].ToLower().Contains("user"))
                            {
                                idFictif++;
                                idFictifString = idFictif.ToString();
                                Directory.CreateDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link] + idFictifString);
                                pathToSaveScreenshot = pathToSave + "\\Messenger\\" + dicoMessenger[link] + idFictifString;
                            }
                            else
                            if (Directory.Exists(pathToSave + "\\Messenger\\" + dicoMessenger[link]))
                            {
                                //EraseDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link], true);  
                                Directory.CreateDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link] + DateTime.Now.Ticks);
                                pathToSaveScreenshot = pathToSave + "\\Messenger\\" + dicoMessenger[link] + DateTime.Now.Ticks;
                            }
                            else
                            pathToSaveScreenshot = pathToSave + "\\Messenger\\" + dicoMessenger[link];

                            pathToSaveScreenshot = pathToSaveScreenshot.Trim();

                            if (!Directory.Exists(pathToSaveScreenshot + "\\Audio\\"))
                            {
                                //EraseDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link], true);  
                                Directory.CreateDirectory(pathToSaveScreenshot + "\\Audio\\");
                            }

                            var imageDown = driverMessenger.FindElement(By.Id("facebook"));
                            int hauteur = 400;
                            int resolutionEcran = resolution.Height;
                            string[] topScrollBar = null;
                            string firstValueTopBar = "";
                            string top = "";
                            string hauteurScroll = "";
                            string newHauteurScroll = "";
                            int i = 1;
                            string idTmp = "";
                            //DEPART TRY TIMEOUT------------------------------------------------------------------------------
                            try
                            {
                                driverMessenger.Manage().Timeouts().ImplicitWait.Add(System.TimeSpan.FromSeconds(300));
                                driverMessenger.Navigate().GoToUrl(link);
                                Thread.Sleep(5000);

                                messenger = driverMessenger.PageSource;





                                string[] id = messenger.Split(new String[] { "class=\"uiScrollableAreaWrap scrollable\"" }, StringSplitOptions.RemoveEmptyEntries);
                                topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                //on récupère la valeur Top de la scrollBar


                                try
                                {
                                    foreach (string t in topScrollBar)
                                    {
                                        string tmp = t.Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                        if ((!t.Contains("top:") && !t.Contains("uiScrollableAreaWrap")) || t.StartsWith("<html"))
                                            continue;

                                        firstValueTopBar = tmp.Substring(tmp.IndexOf("top: ") + 4).Split(';')[0];
                                        hauteurScroll = tmp.Substring(tmp.IndexOf("height: ") + 8).Split(';')[0];
                                    }


                                }
                                catch
                                {

                                }
                                

                                //on récupère l'id dynamique du composant

                                foreach (string idd in id)
                                {
                                    if (!idd.StartsWith("id") && !idd.Contains("Messages"))
                                        continue;


                                    idTmp = idd.Substring(idd.IndexOf("id=\"") + 4).Split('"')[0];
                                }

                                try
                                {
                                    imageDown = driverMessenger.FindElementById(idTmp);
                                    var test = driverMessenger.FindElements(By.ClassName("uiScrollableAreaGripper"));//uiScrollableAreaTrack hidden_elem
                                    //var test2 = driverMessenger.FindElements(By.CssSelector("uiScrollableAreaTrack hidden_elem"));
                                    int lastHeight = imageDown.Size.Height;


                                    int width = driverMessenger.Manage().Window.Size.Width;
                                    int height = driverMessenger.Manage().Window.Size.Height;


                                    int hauteurtotale = resolution.Height;
                                    resolutionEcran = resolution.Height;
                                    int scroll = 0;
                                    Int32.TryParse(firstValueTopBar.Replace(".", "").Replace("px", ""), out scroll);



                                    //ON SCROLL JUSQUAU DEBUT DE LA PAGE LE PLUS LOIN POSSIBLE

                                    //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollIntoView(true);", listeTimes[0 ]);
                                    //Thread.Sleep(500);

                                    if (firstValueTopBar != "")
                                    {
                                        try
                                        {
                                            while (top.Trim() != "0px")
                                            //while (newHauteurScroll != hauteurScroll)
                                            {
                                                //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + (0 - scroll) + ");", imageDown);
                                                //Thread.Sleep(2500);

                                                //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + (0 - (scroll * scroll)) + ");", imageDown);
                                                //Thread.Sleep(2500);


                                                ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0,0);", imageDown);
                                                Thread.Sleep(5000);



                                                //calcul du temps
                                                if (datumm.Year != 1900)
                                                {
                                                    IList<IWebElement> listeTimes = driver.FindElements(By.TagName("time"));
                                                    Thread.Sleep(2000);

                                                    string dernieredate = "";
                                                    string datum = "";

                                                    if (listeTimes[0].Text.ToLower().Contains("à"))
                                                    {
                                                        datum = listeTimes[0].Text.ToLower().Split('à')[0].Trim().Replace(" ", "/");
                                                        if (mois.ContainsKey(datum.Split('/')[1].ToLower()))
                                                        {
                                                            datum = datum.ToLower().Replace(datum.Split('/')[1].ToLower(), mois[datum.Split('/')[1].ToLower()]);
                                                        }

                                                    }
                                                    else
                                                        datum = listeTimes[0].Text.Split(' ')[0];

                                                    CultureInfo culture = new CultureInfo("fr-FR");
                                                    DateTime testDatumValable;
                                                    if (!DateTime.TryParse(datum, out testDatumValable))
                                                        continue;

                                                    DateTime firstDate = Convert.ToDateTime(datum, culture);// premiere date dans la liste
                                                    DateTime tempss;


                                                    tempss = Convert.ToDateTime(datum, culture);
                                                    DateTime date2 = new DateTime(datumm.Year, datumm.Month, datumm.Day);



                                                    try
                                                    {


                                                        foreach (IWebElement el in listeTimes)
                                                        {
                                                            if (DateTime.Compare(firstDate, date2) == 0)
                                                                break;

                                                            //DateTime firstDate;



                                                            datum = "";
                                                            if (listeTimes[0].Text.ToLower().Contains("à"))
                                                            {
                                                                datum = listeTimes[0].Text.ToLower().Split('à')[0].Trim().Replace(" ", "/");
                                                                if (mois.ContainsKey(datum.Split('/')[1].ToLower()))
                                                                {
                                                                    datum = datum.ToLower().Replace(datum.Split('/')[1].ToLower(), mois[datum.Split('/')[1].ToLower()]);
                                                                }

                                                            }
                                                            else
                                                                datum = listeTimes[0].Text.Split(' ')[0];


                                                            if (DateTime.TryParse(datum, out testDatumValable))
                                                                firstDate = Convert.ToDateTime(datum, culture);// premiere date dans la liste
                                                            else
                                                                continue;

                                                            datum = "";
                                                            if (el.Text.ToLower().Contains("à"))
                                                            {
                                                                datum = el.Text.ToLower().Split('à')[0].Trim().Replace(" ", "/");
                                                                if (mois.ContainsKey(datum.Split('/')[1].ToLower()))
                                                                {
                                                                    datum = datum.ToLower().Replace(datum.Split('/')[1].ToLower(), mois[datum.Split('/')[1].ToLower()]);

                                                                    if (Convert.ToInt32(datum.Split('/')[0]) < 10 && !datum.Split('/')[0].StartsWith("0"))
                                                                        datum = "0" + datum;
                                                                }

                                                            }
                                                            else
                                                                datum = el.Text.Split(' ')[0];

                                                            try
                                                            {
                                                                tempss = Convert.ToDateTime(datum, culture);
                                                            }
                                                            catch
                                                            {
                                                                continue;
                                                            }

                                                            int result = 0;
                                                            try
                                                            {


                                                                result = DateTime.Compare(tempss, date2);
                                                                string relationship;

                                                                if (result < 0)
                                                                {
                                                                    earlier.Add(el);
                                                                    relationship = "is earlier than";
                                                                }
                                                                else
                                                                if (result == 0)
                                                                {
                                                                    relationship = "is the same time as";
                                                                    sameTime.Add(tempss);

                                                                    if (firstDate != tempss)
                                                                    {
                                                                        //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollIntoView(true) + 1600;", el);
                                                                        //Thread.Sleep(500);
                                                                        STOP = true;
                                                                        top = "0px";
                                                                        fromdate = el;
                                                                        break;
                                                                    }


                                                                }
                                                                else
                                                                {
                                                                    relationship = "is later than";
                                                                }



                                                            }
                                                            catch
                                                            {

                                                            }


                                                        }

                                                        if (!STOP)
                                                        {
                                                            int result = DateTime.Compare(firstDate, date2);
                                                            if (result < 0)
                                                            {
                                                                STOP = true;
                                                                top = "0px";
                                                                fromdate = earlier[earlier.Count() - 1];

                                                            }
                                                        }

                                                    }
                                                    catch
                                                    {

                                                    }

                                                    if (STOP)
                                                        break;

                                                }//FIN DU IF DATE


                                                if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                                {

                                                    try
                                                    {
                                                        driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                                    }
                                                    catch
                                                    {

                                                    }
                                                }


                                                hauteur += 600;
                                                hauteurtotale += resolution.Height + (resolution.Height / 2);

                                                messenger = driverMessenger.PageSource;

                                                top = "";
                                                topScrollBar = messenger.Split(new String[] { "<div class=\"uiScrollableAreaGripper" }, StringSplitOptions.RemoveEmptyEntries);
                                                try
                                                {
                                                    foreach (string t in topScrollBar)
                                                    {
                                                        string tmp = t.Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                                        if (!tmp.Contains("top:") || tmp.Contains("hidden"))
                                                            continue;

                                                        int heightt = 0;
                                                        top = tmp.Substring(tmp.IndexOf("top: ") + 4).Split(';')[0];
                                                        newHauteurScroll = tmp.Substring(tmp.IndexOf("height: ") + 8).Split(';')[0];
                                                        Int32.TryParse(top.Trim().Replace(".", "").Replace("px", ""), out heightt);
                                                        scroll = scroll - hauteur;
                                                        break;
                                                    }

                                                    if (top.Trim() == "0px")
                                                    {
                                                        //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + (lastHeight - hauteur) + ");", imageDown);
                                                        //Thread.Sleep(2000);
                                                        ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0,0);", imageDown);
                                                        Thread.Sleep(5000);

                                                        ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0,0);", imageDown);
                                                        Thread.Sleep(5000);

                                                        ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0,0);", imageDown);
                                                        Thread.Sleep(5000);

                                                        hauteurScroll = newHauteurScroll;
                                                        //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + (0 - scroll * scroll) + ");", imageDown);
                                                        //Thread.Sleep(2500);

                                                        //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + (0 - scroll) + ");", imageDown);
                                                        // Thread.Sleep(2500);

                                                        //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + (lastHeight - 2 * hauteur) + ");", imageDown);
                                                        //Thread.Sleep(2000);

                                                        messenger = driverMessenger.PageSource;

                                                        top = "";
                                                        topScrollBar = messenger.Split(new String[] { "<div class=\"uiScrollableAreaGripper" }, StringSplitOptions.RemoveEmptyEntries);


                                                        try
                                                        {
                                                            foreach (string tt in topScrollBar)
                                                            {
                                                                string tmpp = tt.Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                                                if (!tmpp.Contains("top:") || tmpp.Contains("hidden"))
                                                                    continue;

                                                                top = tmpp.Substring(tmpp.IndexOf("top: ") + 4).Split(';')[0];
                                                                newHauteurScroll = tmpp.Substring(tmpp.IndexOf("height: ") + 8).Split(';')[0];
                                                                int heightt = 0;
                                                                Int32.TryParse(top.Trim().Replace(".", "").Replace("px", ""), out heightt);
                                                                scroll = scroll - hauteur;
                                                                break;
                                                            }


                                                        }
                                                        catch
                                                        {
                                                            top = "";
                                                        }

                                                        hauteur += 600;
                                                        hauteurtotale += resolution.Height + (resolution.Height / 2);
                                                    }


                                                }
                                                catch
                                                {

                                                }

                                                Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                                                int innerHeightt = 0;

                                                Int32.TryParse(innerHeight.ToString(), out innerHeightt);
                                                scroll -= innerHeightt;


                                                //i++;
                                            }
                                        }
                                        catch (Exception ex)
                                        {
                                            top = "0px";
                                        }
                                    }
                                    else
                                        if (isElementMessengerEndingPresent(driverMessenger))
                                    {
                                        ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0,0);", imageDown);
                                        Thread.Sleep(2000);



                                    }
                                    else
                                        if (!isElementMessengerEndingPresent(driverMessenger))
                                        while (!isElementMessengerEndingPresent(driverMessenger))
                                        {
                                            ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + (lastHeight - hauteur) + ");", imageDown);
                                            Thread.Sleep(2000);



                                            hauteur += 600;
                                            hauteurtotale += resolution.Height + (resolution.Height / 2);
                                            //i++;
                                        }
                                    else
                                        if (isElementMessengerEndingPresent(driverMessenger))
                                    {
                                        ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0,0);", imageDown);
                                        Thread.Sleep(2000);

                                    }



                                    hauteur = 0;


                                    top = "";
                                    try
                                    {
                                        foreach (string t in topScrollBar)
                                        {
                                            string tmp = t.Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                            if (!tmp.Contains("top:") || tmp.Contains("hidden"))
                                                continue;

                                            top = tmp.Substring(tmp.IndexOf("top: ") + 4).Split(';')[0];

                                            //top = tmp.Substring(tmp.IndexOf("top: ") + 4).Split(';')[0];
                                        }


                                    }
                                    catch (Exception ex)
                                    {
                                        top = "";
                                    }

                                    //ON DESCEND--------------------------------------------------------------------------------------
                                    if (top != "")
                                    {

                                        //Screenshot imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                        //imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();

                                        //Thread.Sleep(500);


                                        ////imageScreenshott.SaveAsFile(pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg", OpenQA.Selenium.ScreenshotImageFormat.Jpeg);
                                        //imageScreenshott.SaveAsFile(pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + 1 + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);

                                        //Thread.Sleep(500);

                                        string topPrec = "";
                                        textes = imageDown.Text;


                                        int j = 1;
                                        int hauteurfromdate = 0;
                                        string hauteurfromdateString = "";

                                        Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                                        long innerHeightt = (long)innerHeight;
                                        long scrolll = (long)innerHeight;
                                        long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                                        //on initialise

                                        IList<IWebElement> firstlisteVocauxx = null;
                                        IList<IWebElement> firstallDivElements = null;
                                        IList<IWebElement> firstallOthers = new List<IWebElement>();
                                        List<IWebElement> listeNotReadOnly = null;
                                        List<IWebElement> listeOthersNotReadOnly = new List<IWebElement>();
                                        List<IWebElement> listeVideoNotReadOnly = new List<IWebElement>();
                                        var toRemove = new HashSet<IWebElement>();
                                        var toRemoveOthers = new HashSet<IWebElement>();
                                        var toRemoveVideo = new HashSet<IWebElement>();

                                        IList<IWebElement> listeVocauxxOriginal;
                                        IList<IWebElement> allDivElementsOriginal = null;
                                        IList<IWebElement> allOthersOriginal = new List<IWebElement>();

                                        foreach (string classee in classesConnues)
                                        {
                                            if (classee.Contains("_1mj2 _2e-6") || classee.Contains("_1mj4 _2e-7"))//|| classe.Contains("_3058 _15gf")
                                            {

                                                firstlisteVocauxx = driverMessenger.FindElements(By.XPath("//div[@class='_1mj2 _2e-6']"));
                                                listeNotReadOnly = firstlisteVocauxx.ToList();

                                            }

                                            if (classee.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))//si classe contenant vidéo on télécharge d'abord la vidéo
                                            {

                                                firstallDivElements = driverMessenger.FindElementsByXPath(classee + "//video");//_ox1 _21y0}
                                                listeVideoNotReadOnly = firstallDivElements.ToList();
                                            }

                                            if (!classee.Contains("_1mj2 _2e-6") || !classee.Contains("_1mj4 _2e-7") || !classee.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))
                                            {

                                                foreach (IWebElement el in driverMessenger.FindElementsByXPath(classee))
                                                {
                                                    firstallOthers.Add(el);
                                                    listeOthersNotReadOnly.Add(el);
                                                }

                                                //firstallOthers = driverMessenger.FindElementsByXPath(classee);//_ox1 _21y0}
                                                //listeOthersNotReadOnly = firstallOthers.ToList();

                                            }


                                        }

                                        while (true)
                                        {

                                            if (fromdate != null)
                                            {
                                                //hauteurfromdate = fromdate.Location.Y + (Int32)scrolll;
                                                hauteurfromdate = fromdate.Location.Y;
                                                hauteurfromdateString = hauteurfromdate.ToString();

                                                ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollIntoView(true);", fromdate);
                                                Thread.Sleep(500);

                                                //hauteurfromdate = fromdate.Location.Y;
                                                fromdate = null;
                                                STOP = false;
                                                //hauteur += 600;

                                            }
                                            else
                                            {

                                                //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollBy(0,450);", imageDown);
                                                ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollBy(0," + hauteurr + ");", imageDown);

                                                Thread.Sleep(WAIT);
                                            }



                                            if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                            {

                                                try
                                                {
                                                    driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                                }
                                                catch
                                                {

                                                }
                                            }
                                            //int hei = imageDown.Size.Height;
                                            messenger = driverMessenger.PageSource;

                                            if (!FASTMESSENGER) 
                                            { 
                                                //foreach (string classe in classesConnues)
                                                //{

                                                //if (classe.Contains("_1mj2 _2e-6") || classe.Contains("_1mj4 _2e-7"))//|| classe.Contains("_3058 _15gf")
                                                //{


                                                //pour récupérer les a contenant la longueur du message vocal
                                                //IList<IWebElement> newlisteVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                //IList<IWebElement> listeVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                IList<IWebElement> listeVocauxx = firstlisteVocauxx;
                                                //listeVocauxxOriginal = driverMessenger.FindElements(By.XPath("//div[@class='_1mj2 _2e-6']"));//A TESTER

                                                //if (!listeVocauxxOriginal.SequenceEqual(firstlisteVocauxx))
                                                //{
                                                //    listeVocauxx = listeVocauxxOriginal;
                                                //    firstlisteVocauxx = listeVocauxxOriginal;
                                                //    listeNotReadOnly = listeVocauxx.ToList();

                                                //}//A TESTER ------------------------------------------------------------------------


                                                List<IWebElement> newListVocaux = listeNotReadOnly.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList();
                                                //List<IWebElement> newListVocaux = listeNotReadOnly.ToList();


                                                if (listeNotReadOnly.Count > 0)
                                                foreach (IWebElement ell in newListVocaux)
                                                {
                                                    //if (listeVocaux[0].Location.Y > 15 && listeVocaux[0].Location.Y < (resolutionEcran - 250))
                                                    //    break;
                                                    if (ell.Text == "")
                                                        continue;

                                                    string tentation = ell.ToString();
                                                    string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                    if (ell.Location.Y > 15 && ell.Location.Y < (resolutionEcran - 250))
                                                    {
                                                        //string tentation = ell.ToString();
                                                        //string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];


                                                        IList<IWebElement> els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs _5z-5']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                        string dateAudio = "";
                                                        string nomFichierAudio = "";

                                                        foreach (IWebElement el in els.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList())
                                                        {
                                                            if (el.GetAttribute("data-tooltip-content") != null)
                                                            {

                                                                if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                {
                                                                    var texte = el.GetAttribute("data-tooltip-content");
                                                                    var position = el.Location;
                                                                    dateAudio = texte.Replace(":", "-");
                                                                    nomFichierAudio = "From";
                                                                    toRemove.Add(ell);
                                                                    break;
                                                                }



                                                            }
                                                        }
                                                        if (dateAudio == "")
                                                        {
                                                            els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                            dateAudio = "";
                                                            foreach (IWebElement el in els.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList())
                                                            {
                                                                if (el.GetAttribute("data-tooltip-content") != null)
                                                                {

                                                                    if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                    {
                                                                        var texte = el.GetAttribute("data-tooltip-content");
                                                                        var position = el.Location;
                                                                        dateAudio = texte.Replace(":", "-");
                                                                        nomFichierAudio = "To";
                                                                        break;
                                                                    }



                                                                }
                                                            }
                                                        }

                                                        string duree = ell.Text.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries)[0];


                                                        if (duree.Length == 4)
                                                            duree = "00:0" + duree;

                                                        if (audioVisibles.ContainsKey(idd))
                                                        {
                                                            audioVisibless.Add(audioVisibles[idd]);
                                                            continue;
                                                        }

                                                        try
                                                        {
                                                            TimeSpan tempss;
                                                            TimeSpan.TryParse(duree, out tempss);
                                                            //DateTime temps;
                                                            //DateTime.TryParse(duree, out temps);
                                                            ell.Click();
                                                            StartRecord(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                            Stopwatch sw = new Stopwatch();
                                                            sw.Start();
                                                            //Thread.Sleep(500);
                                                            while (true)
                                                            {

                                                                if (sw.ElapsedMilliseconds > tempss.TotalMilliseconds + (2000))
                                                                {
                                                                    if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                                                    {

                                                                        try
                                                                        {
                                                                            driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                                                        }
                                                                        catch
                                                                        {

                                                                        }
                                                                    }
                                                                    break;
                                                                }

                                                                toRemove.Add(ell);
                                                            }

                                                            StopRecording();
                                                            Thread.Sleep(1000);

                                                            if (!audioVisibles.ContainsKey(idd))
                                                            {
                                                                audioVisibles.Add(idd, pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                                audioVisibless.Add(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");

                                                                if (!classeTraitee.ContainsKey(idd))
                                                                {
                                                                    classeTraitee.Add(idd, idd);
                                                                }
                                                            }



                                                            j++;

                                                        }
                                                        catch (Exception exx)
                                                        {
                                                            //StopRecording();
                                                            //Thread.Sleep(5000);
                                                        }


                                                        //ell.Click();


                                                    }
                                                        else if(ell.Location.Y < 15)
                                                        {
                                                            toRemove.Add(ell);

                                                        }
                                                        else if (ell.Location.Y > (resolutionEcran - 250))
                                                        {
                                                           break;

                                                        }



                                                    }

                                            listeNotReadOnly.RemoveAll(toRemove.Contains);

                                            //pour cliquer sur le message vocal et jouer le son
                                            //driverMessenger.FindElementsByXPath(classe)[0].Click();

                                            //}


                                            //if (classe.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))//si classe contenant vidéo on télécharge d'abord la vidéo
                                            //{

                                                IList<IWebElement> listeVideos = firstallDivElements;
                                                allDivElementsOriginal = driverMessenger.FindElementsByXPath("//div[@class='_2poz _52mr _ui9 _2n8h _2n8i _5fk1']" + "//video");

                                                if (!allDivElementsOriginal.SequenceEqual(firstallDivElements))
                                                {
                                                    listeVideos = allDivElementsOriginal;
                                                    firstlisteVocauxx = allDivElementsOriginal;
                                                    listeVideoNotReadOnly = listeVideos.ToList();

                                                }


                                                List<IWebElement> newListVideos = listeVideoNotReadOnly.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList();



                                                //IList<IWebElement> allDivElements = driverMessenger.FindElementsByXPath(classe + "//video");//_ox1 _21y0
                                                if (listeVideoNotReadOnly.Count > 0)
                                                    for (int ii = newListVideos.Count() - 1; ii >= 0; ii--)
                                                    {
                                                        string tentation = newListVideos[ii].ToString();
                                                        string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                        if (classeTraitee.ContainsKey(idd))
                                                        {
                                                            continue;
                                                        }


                                                        if (listeVideoNotReadOnly[ii].GetAttribute("class") != null)
                                                        {
                                                            //here the print statement will print the value of each div tag element
                                                            var tmp = newListVideos[ii].GetAttribute("class");

                                                            if (tmp == "_ox1 _21y0")// si div avec vidéo
                                                            {
                                                                //var video = driver.FindElementsByClassName(tmp);
                                                                //IList<IWebElement> allDivElementss = driver.FindElementsByClassName(tmp);

                                                                try
                                                                {
                                                                    //var tmpp = allDivElementss[0].FindElement(By.XPath("video")).GetAttribute("src");
                                                                    var tmpp = newListVideos[ii].GetAttribute("src");

                                                                    //if (allDivElements[0].Location.Y > 15 && allDivElements[0].Location.Y < (resolutionEcran - 250))
                                                                    //    break;


                                                                    if (newListVideos[ii].Location.Y > 15 && newListVideos[ii].Location.Y < (resolutionEcran - 250))
                                                                    {


                                                                        if (!videosVisibles.ContainsKey(tmpp + ii))
                                                                        {
                                                                            videosVisibles.Add(tmpp + ii, tmpp);

                                                                            if (!classeTraitee.ContainsKey(idd))
                                                                            {
                                                                                classeTraitee.Add(idd, tmpp);
                                                                            }
                                                                        }

                                                                        toRemoveVideo.Add(newListVideos[ii]);
                                                                    }
                                                                    //break;



                                                                    //IWebElement oo = allDivElementss[0].FindElement(By.XPath("video"));


                                                                }
                                                                catch (Exception ex)
                                                                {

                                                                }

                                                            }
                                                        }

                                                        listeVideoNotReadOnly.RemoveAll(toRemoveVideo.Contains);

                                                    }




                                            //}

                                            //if (!classe.Contains("_1mj2 _2e-6") || !classe.Contains("_1mj4 _2e-7") || !classe.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))
                                            //{
                                            //    foreach (IWebElement el in driverMessenger.FindElementsByXPath(classe))
                                            //    {
                                            //        //firstallOthers.Add(el);
                                            //        //listeOthersNotReadOnly.Add(el);
                                            //        allOthersOriginal.Add(el);
                                            //    }




                                            //}




                                        }

                                                //}//FIN FOREACH CLASSES CONNUES


                                            IList<IWebElement> listeOthers = firstallOthers;
                                            //allOthersOriginal = driverMessenger.FindElements(By.XPath(classe));

                                            //if (!allOthersOriginal.SequenceEqual(firstallOthers))
                                            //{
                                            //    listeOthers = allOthersOriginal;
                                            //    firstallOthers = allOthersOriginal;
                                            //    listeOthersNotReadOnly = listeOthers.ToList();

                                            //}

                                            //List<IWebElement> newList = listeOthersNotReadOnly.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList();
                                            List<IWebElement> newList = listeOthersNotReadOnly.ToList();


                                            if (listeOthersNotReadOnly.Count > 0)

                                                //var messages = driverMessenger.FindElementsByXPath(classe);
                                                //object[] messagesToExtract = messages.ToArray();


                                                foreach (OpenQA.Selenium.Remote.RemoteWebElement o in newList)
                                                {

                                                    string tentation = o.ToString();
                                                    string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                    if (classeTraitee.ContainsKey(idd))
                                                        continue;

                                                    if (!dicoMessagesFrom.ContainsKey(idd))
                                                    {
                                                        dicoMessagesFrom.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                    }
                                                    //else
                                                    //    continue;


                                                    if (o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250))
                                                    {
                                                        if (!messagesVisibles.ContainsKey(idd) && o.Text != "" && !o.Text.Contains("Lire-4:01Paramètres"))
                                                        {
                                                            messagesVisibles.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));

                                                            if (!classeTraitee.ContainsKey(idd))
                                                            {
                                                                classeTraitee.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                            }
                                                        }

                                                        toRemoveOthers.Add(o);
                                                    }
                                                    else if (o.Location.Y < 15)
                                                    {
                                                        toRemoveOthers.Add(o);
                                                    }
                                                    else 
                                                    if (o.Location.Y > (resolutionEcran - 250))
                                                        break;
                                                    //else
                                                    //    break;

                                                    //messagesToExtract.ToList().Remove(o);

                                                }

                                            listeOthersNotReadOnly.RemoveAll(toRemoveOthers.Contains);
                                            allOthersOriginal = new List<IWebElement>();
                                            toRemoveOthers = new HashSet<IWebElement>();



                                            //on récupère tous les messages ppur ensuite comparer avec messageFrom et messageTo
                                            //imageDown = driver.FindElementById(idTmp);
                                            //Thread.Sleep(200);

                                            //if (textes != imageDown.Text)
                                            //    textes = imageDown.Text + "\n";

                                            messenger = driverMessenger.PageSource;
                                            //topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                            //on récupère la valeur Top de la scrollBar

                                            topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                            //on récupère la valeur Top de la scrollBar

                                            top = "";
                                            try
                                            {
                                                foreach (string t in topScrollBar)
                                                {
                                                    string tmp = t.Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                                    if (!tmp.Contains("top:") || tmp.Contains("hidden"))
                                                        continue;

                                                    top = tmp.Substring(tmp.IndexOf("top: ") + 4).Split(';')[0];

                                                    //if ((!tmp.Contains("top:") && ! tmp.Contains("uiScrollableAreaWrap")) || tmp.StartsWith("<html"))
                                                    //    continue;

                                                    //top = t.Substring(t.IndexOf("top: ") + 4).Split(';')[0];
                                                }

                                                if (top == topPrec)
                                                    break;

                                                topPrec = top;
                                            }
                                            catch
                                            {

                                            }

                                            Screenshot imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                            //imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();

                                            Thread.Sleep(500);


                                            //imageScreenshott.SaveAsFile(pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg", OpenQA.Selenium.ScreenshotImageFormat.Jpeg);
                                            imageScreenshott.SaveAsFile(pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);


                                            Thread.Sleep(500);

                                            //string pathToFile = pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg";
                                            string pathToFile = pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png";
                                            //pathToFolder = pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString);
                                            pathToFolder = pathToSaveScreenshot;

                                            if (!FASTMESSENGER)
                                                foreach (string cle in messagesVisibles.Keys)
                                                {

                                                    if (!messagesVisiblesForFile.ContainsKey(cle))
                                                    {

                                                        string[] lignes = messagesVisibles[cle].Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);

                                                        string tmp = "";
                                                        foreach (string li in lignes)
                                                        {
                                                            tmp += li.Trim().Replace("\r", "").Replace(";", "");
                                                        }



                                                        messagesVisiblesForFile.Add(cle, tmp + ";" + pathToFile + "\n");
                                                    }

                                                    //messagesVisiblesWithScreenshots += valeur + ";" + pathToFile + "\n";
                                                }

                                            if (!FASTMESSENGER)
                                                if (videosVisibles.Count > 0)
                                                    foreach (string cle in videosVisibles.Keys)
                                                    {
                                                        //if (!videosVisiblesForFile.ContainsKey(cle))
                                                        //{

                                                        videosVisiblesForFile.Add(cle + ";" + pathToFile + "\n");
                                                        //}
                                                    }

                                            if (!FASTMESSENGER)
                                                if (audioVisibless.Count > 0)
                                                    foreach (string cle in audioVisibless)
                                                    {
                                                        //if (!videosVisiblesForFile.ContainsKey(cle))
                                                        //{
                                                        if (!audioVisiblesForFile.ContainsKey(cle))
                                                            audioVisiblesForFile.Add(cle, cle + ";" + pathToFile + "\n");
                                                        //}
                                                    }

                                            messagesVisibles = new Dictionary<string, string>();
                                            videosVisibles = new Dictionary<string, string>();
                                            //audioVisibles = new Dictionary<string, string>();
                                            hauteur += 600;
                                            hauteurr = 450;

                                            i++;
                                        }
                                        ForGrid forGrid = new ForGrid();
                                        forGrid.PathToFolder = pathToFolder;
                                        forGrid.Url = link;

                                        imageDown = driverMessenger.FindElementById(idTmp);
                                        textes = imageDown.Text + "\n";


                                        backgroundWorkerGetMessenger.ReportProgress(-7, forGrid);
                                        //FillDataGridViewMessenger(pathToFolder, link);
                                    }
                                    else//Si pas de scrollbar alors seulement une page------------------------------------------------------------------------------------------
                                    {
                                        int j = 1;
                                        foreach (string classe in classesConnues)
                                        {


                                            if (classe.Contains("_1mj2 _2e-6") || classe.Contains("_1mj4 _2e-7"))//|| classe.Contains("_3058 _15gf")
                                            {


                                                //pour récupérer les a contenant la longueur du message vocal
                                                //IList<IWebElement> newlisteVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                //IList<IWebElement> listeVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                IList<IWebElement> listeVocauxx = driverMessenger.FindElements(By.XPath("//div[@class='_1mj2 _2e-6']"));

                                                foreach (IWebElement ell in listeVocauxx)
                                                {
                                                    //if (listeVocaux[0].Location.Y > 15 && listeVocaux[0].Location.Y < (resolutionEcran - 250))
                                                    //    break;
                                                    if (ell.Text == "")
                                                        continue;

                                                    string tentation = ell.ToString();
                                                    string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                    //IList<IWebElement> testt = ell.FindElements(By.TagName("a"));

                                                    //string tentation = ell.ToString();
                                                    //string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                    //if (audioVisibles.ContainsKey(idd))
                                                    //{
                                                    //    continue;
                                                    //}

                                                    if (ell.Location.Y > 15 && ell.Location.Y < (resolutionEcran - 250))
                                                    {
                                                        //string tentation = ell.ToString();
                                                        //string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];


                                                        IList<IWebElement> els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs _5z-5']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                        string dateAudio = "";
                                                        string nomFichierAudio = "";

                                                        foreach (IWebElement el in els)
                                                        {
                                                            if (el.GetAttribute("data-tooltip-content") != null)
                                                            {

                                                                if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                {
                                                                    var texte = el.GetAttribute("data-tooltip-content");
                                                                    var position = el.Location;
                                                                    dateAudio = texte.Replace(":", "-");
                                                                    nomFichierAudio = "From";
                                                                    break;
                                                                }



                                                            }
                                                        }
                                                        if (dateAudio == "")
                                                        {
                                                            els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                            dateAudio = "";
                                                            foreach (IWebElement el in els)
                                                            {
                                                                if (el.GetAttribute("data-tooltip-content") != null)
                                                                {

                                                                    if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                    {
                                                                        var texte = el.GetAttribute("data-tooltip-content");
                                                                        var position = el.Location;
                                                                        dateAudio = texte.Replace(":", "-");
                                                                        nomFichierAudio = "To";
                                                                        break;
                                                                    }



                                                                }
                                                            }
                                                        }

                                                        string duree = ell.Text.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                                        //if (classe.Contains("_1mj2 _2e-6"))
                                                        //    nomFichierAudio = "From";
                                                        //else
                                                        //    nomFichierAudio = "To";

                                                        if (duree.Length == 4)
                                                            duree = "00:0" + duree;

                                                        if (audioVisibles.ContainsKey(idd))
                                                        {
                                                            audioVisibless.Add(audioVisibles[idd]);
                                                            continue;
                                                        }

                                                        try
                                                        {
                                                            TimeSpan tempss;
                                                            TimeSpan.TryParse(duree, out tempss);
                                                            //DateTime temps;
                                                            //DateTime.TryParse(duree, out temps);
                                                            ell.Click();
                                                            StartRecord(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                            Stopwatch sw = new Stopwatch();
                                                            sw.Start();
                                                            //Thread.Sleep(500);
                                                            while (true)
                                                            {

                                                                if (sw.ElapsedMilliseconds > tempss.TotalMilliseconds + (2000))
                                                                {
                                                                    if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                                                    {

                                                                        try
                                                                        {
                                                                            driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                                                        }
                                                                        catch
                                                                        {

                                                                        }
                                                                    }
                                                                    break;
                                                                }

                                                            }

                                                            StopRecording();
                                                            Thread.Sleep(1000);

                                                            if (!audioVisibles.ContainsKey(idd))
                                                            {
                                                                audioVisibles.Add(idd, pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                                audioVisibless.Add(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");

                                                            }



                                                            j++;

                                                        }
                                                        catch (Exception exx)
                                                        {
                                                            //StopRecording();
                                                            //Thread.Sleep(5000);
                                                        }


                                                        //ell.Click();


                                                    }

                                                }

                                                //pour cliquer sur le message vocal et jouer le son
                                                //driverMessenger.FindElementsByXPath(classe)[0].Click();
                                            }







                                            if (classe.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))//si classe contenant vidéo on télécharge d'abord la vidéo
                                            {


                                                IList<IWebElement> allDivElements = driverMessenger.FindElementsByXPath(classe + "//video");//_ox1 _21y0
                                                for (int ii = 0; ii < allDivElements.Count(); ii++)
                                                {

                                                    if (allDivElements[ii].GetAttribute("class") != null)
                                                    {
                                                        //here the print statement will print the value of each div tag element
                                                        var tmp = allDivElements[ii].GetAttribute("class");

                                                        if (tmp == "_ox1 _21y0")// si div avec vidéo
                                                        {
                                                            //var video = driver.FindElementsByClassName(tmp);
                                                            //IList<IWebElement> allDivElementss = driver.FindElementsByClassName(tmp);

                                                            try
                                                            {
                                                                //var tmpp = allDivElementss[0].FindElement(By.XPath("video")).GetAttribute("src");
                                                                var tmpp = allDivElements[ii].GetAttribute("src");


                                                                if (allDivElements[ii].Location.Y > 15 && allDivElements[ii].Location.Y < (resolutionEcran - 250))
                                                                {
                                                                    if (!videosVisibles.ContainsKey(tmpp + ii))
                                                                    {
                                                                        videosVisibles.Add(tmpp + ii, tmpp);
                                                                    }
                                                                }
                                                                //break;



                                                                //IWebElement oo = allDivElementss[0].FindElement(By.XPath("video"));


                                                            }
                                                            catch (Exception ex)
                                                            {

                                                            }

                                                        }
                                                    }

                                                }




                                            }

                                            if (!classe.Contains("_1mj2 _2e-6") && !classe.Contains("_1mj4 _2e-7") && classe.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))
                                            {
                                                var messages = driverMessenger.FindElementsByXPath(classe);
                                                object[] messagesToExtract = messages.ToArray();



                                                foreach (OpenQA.Selenium.Remote.RemoteWebElement o in messagesToExtract)
                                                {

                                                    string tentation = o.ToString();
                                                    string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                    if (!dicoMessagesFrom.ContainsKey(idd))
                                                    {
                                                        dicoMessagesFrom.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                    }
                                                    //else
                                                    //    continue;

                                                    if (o.Location.Y + o.Size.Height > 15 && o.Location.Y < (resolutionEcran - 300))
                                                    {
                                                        if (!messagesVisibles.ContainsKey(idd) && o.Text != "")
                                                        {
                                                            messagesVisibles.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                        }
                                                    }

                                                }
                                            }


                                        }


                                        imageDown = driverMessenger.FindElementById(idTmp);
                                        textes = imageDown.Text + "\n";

                                        Screenshot imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                        imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                        //Save the screenshot
                                        //if (!Directory.Exists(pathToSave + "\\Messenger\\" + dicoMessenger[link]))
                                        //{
                                        //    //EraseDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link], true);  
                                        //    Directory.CreateDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link]);
                                        //}
                                        //else
                                        //if (dicoMessenger[link].ToLower().Contains("utilisateur de") || dicoMessenger[link].ToLower().Contains("user"))
                                        //{
                                        //    idFictif++;
                                        //    idFictifString = idFictif.ToString();
                                        //    Directory.CreateDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link] + i.ToString());
                                        //}



                                        imageScreenshott.SaveAsFile(pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                        Thread.Sleep(100);

                                        string pathToFile = pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png";
                                        pathToFolder = pathToSaveScreenshot;

                                        foreach (string cle in messagesVisibles.Keys)
                                        {

                                            if (!messagesVisiblesForFile.ContainsKey(cle))
                                            {

                                                string[] lignes = messagesVisibles[cle].Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);

                                                string tmp = "";
                                                foreach (string li in lignes)
                                                {
                                                    tmp += li.Trim().Replace("\r", "");
                                                }



                                                messagesVisiblesForFile.Add(cle, tmp + ";" + pathToFile + "\n");
                                            }

                                            //messagesVisiblesWithScreenshots += valeur + ";" + pathToFile + "\n";
                                        }

                                        if (videosVisibles.Count > 0)
                                            foreach (string cle in videosVisibles.Keys)
                                            {
                                                //if (!videosVisiblesForFile.ContainsKey(cle))
                                                //{

                                                videosVisiblesForFile.Add(cle + ";" + pathToFile + "\n");
                                                //}
                                            }

                                        if (audioVisibles.Count > 0)
                                            foreach (string cle in audioVisibles.Values)
                                            {
                                                //if (!videosVisiblesForFile.ContainsKey(cle))
                                                //{
                                                if (!audioVisibles.ContainsKey(cle))
                                                    audioVisiblesForFile.Add(cle + ";" + pathToFile + "\n", cle + ";" + pathToFile + "\n");
                                                //}
                                            }

                                        messagesVisibles = new Dictionary<string, string>();
                                        videosVisibles = new Dictionary<string, string>();
                                        //audioVisibles = new Dictionary<string, string>();

                                        ForGrid forGrid = new ForGrid();
                                        forGrid.PathToFolder = pathToFolder;
                                        forGrid.Url = link;

                                        backgroundWorkerGetMessenger.ReportProgress(-7, forGrid);
                                        //FillDataGridViewMessenger(pathToFolder, link);
                                        //continue;
                                    }




                                }
                                catch (Exception ex)//SI TIMEOUT
                                {
                                    //MessageBox.Show("error dans Messenger : " + ex.Message);
                                    //((IJavaScriptExecutor)driverMessenger).ExecuteScript("return window.stop");
                                    driverMessenger.Navigate().Refresh();
                                    Thread.Sleep(1000);

                                    backgroundWorkerGetMessenger.ReportProgress(-666,link);

                                    continue;



                                    Screenshot imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                    imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();

                                    Thread.Sleep(500);


                                    //imageScreenshott.SaveAsFile(pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg", OpenQA.Selenium.ScreenshotImageFormat.Jpeg);
                                    imageScreenshott.SaveAsFile(pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + 1 + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);

                                    Thread.Sleep(500);

                                    string topPrec = "";
                                    textes = imageDown.Text;


                                    int j = 1;
                                    int hauteurfromdate = 0;
                                    string hauteurfromdateString = "";

                                    Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                                    long innerHeightt = (long)innerHeight;
                                    long scrolll = (long)innerHeight;
                                    long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                                    //on initialise

                                    IList<IWebElement> firstlisteVocauxx = null;
                                    IList<IWebElement> firstallDivElements = null;
                                    IList<IWebElement> firstallOthers = new List<IWebElement>();
                                    List<IWebElement> listeNotReadOnly = null;
                                    List<IWebElement> listeOthersNotReadOnly = new List<IWebElement>();
                                    List<IWebElement> listeVideoNotReadOnly = new List<IWebElement>();
                                    var toRemove = new HashSet<IWebElement>();
                                    var toRemoveOthers = new HashSet<IWebElement>();
                                    var toRemoveVideo = new HashSet<IWebElement>();

                                    IList<IWebElement> listeVocauxxOriginal;
                                    IList<IWebElement> allDivElementsOriginal = null;
                                    IList<IWebElement> allOthersOriginal = new List<IWebElement>();

                                    foreach (string classee in classesConnues)
                                    {
                                        if (classee.Contains("_1mj2 _2e-6") || classee.Contains("_1mj4 _2e-7"))//|| classe.Contains("_3058 _15gf")
                                        {

                                            firstlisteVocauxx = driverMessenger.FindElements(By.XPath("//div[@class='_1mj2 _2e-6']"));
                                            listeNotReadOnly = firstlisteVocauxx.ToList();

                                        }

                                        if (classee.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))//si classe contenant vidéo on télécharge d'abord la vidéo
                                        {

                                            firstallDivElements = driverMessenger.FindElementsByXPath(classee + "//video");//_ox1 _21y0}
                                            listeVideoNotReadOnly = firstallDivElements.ToList();
                                        }

                                        if (!classee.Contains("_1mj2 _2e-6") || !classee.Contains("_1mj4 _2e-7") || classee.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))
                                        {

                                            foreach (IWebElement el in driverMessenger.FindElementsByXPath(classee))
                                            {
                                                firstallOthers.Add(el);
                                                listeOthersNotReadOnly.Add(el);
                                            }

                                            //firstallOthers = driverMessenger.FindElementsByXPath(classee);//_ox1 _21y0}
                                            //listeOthersNotReadOnly = firstallOthers.ToList();

                                        }


                                    }


                                    //calcul du temps
                                    datumm = new DateTime(DateTime.Today.Day, DateTime.Today.Month, DateTime.Today.Year - 1);
                                    if (datumm.Year != 1900)
                                    {
                                        IList<IWebElement> listeTimes = driver.FindElements(By.TagName("time"));
                                        Thread.Sleep(2000);

                                        string dernieredate = "";
                                        string datum = "";

                                        if (listeTimes[0].Text.ToLower().Contains("à"))
                                        {
                                            datum = listeTimes[0].Text.ToLower().Split('à')[0].Trim().Replace(" ", "/");
                                            if (mois.ContainsKey(datum.Split('/')[1].ToLower()))
                                            {
                                                datum = datum.ToLower().Replace(datum.Split('/')[1].ToLower(), mois[datum.Split('/')[1].ToLower()]);
                                            }

                                        }
                                        else
                                            datum = listeTimes[0].Text.Split(' ')[0];

                                        CultureInfo culture = new CultureInfo("fr-FR");
                                        DateTime testDatumValable;
                                        if (!DateTime.TryParse(datum, out testDatumValable))
                                            continue;

                                        DateTime firstDate = Convert.ToDateTime(datum, culture);// premiere date dans la liste
                                        DateTime tempss;


                                        tempss = Convert.ToDateTime(datum, culture);
                                        DateTime date2 = new DateTime(datumm.Year, datumm.Month, datumm.Day);



                                        try
                                        {


                                            foreach (IWebElement el in listeTimes)
                                            {
                                                if (DateTime.Compare(firstDate, date2) == 0)
                                                    break;

                                                //DateTime firstDate;



                                                datum = "";
                                                if (listeTimes[0].Text.ToLower().Contains("à"))
                                                {
                                                    datum = listeTimes[0].Text.ToLower().Split('à')[0].Trim().Replace(" ", "/");
                                                    if (mois.ContainsKey(datum.Split('/')[1].ToLower()))
                                                    {
                                                        datum = datum.ToLower().Replace(datum.Split('/')[1].ToLower(), mois[datum.Split('/')[1].ToLower()]);
                                                    }

                                                }
                                                else
                                                    datum = listeTimes[0].Text.Split(' ')[0];


                                                if (DateTime.TryParse(datum, out testDatumValable))
                                                    firstDate = Convert.ToDateTime(datum, culture);// premiere date dans la liste
                                                else
                                                    continue;

                                                datum = "";
                                                if (el.Text.ToLower().Contains("à"))
                                                {
                                                    datum = el.Text.ToLower().Split('à')[0].Trim().Replace(" ", "/");
                                                    if (mois.ContainsKey(datum.Split('/')[1].ToLower()))
                                                    {
                                                        datum = datum.ToLower().Replace(datum.Split('/')[1].ToLower(), mois[datum.Split('/')[1].ToLower()]);

                                                        if (Convert.ToInt32(datum.Split('/')[0]) < 10 && !datum.Split('/')[0].StartsWith("0"))
                                                            datum = "0" + datum;
                                                    }

                                                }
                                                else
                                                    datum = el.Text.Split(' ')[0];

                                                try
                                                {
                                                    tempss = Convert.ToDateTime(datum, culture);
                                                }
                                                catch
                                                {
                                                    continue;
                                                }

                                                int result = 0;
                                                try
                                                {


                                                    result = DateTime.Compare(tempss, date2);
                                                    string relationship;

                                                    if (result < 0)
                                                    {
                                                        earlier.Add(el);
                                                        relationship = "is earlier than";
                                                    }
                                                    else
                                                    if (result == 0)
                                                    {
                                                        relationship = "is the same time as";
                                                        sameTime.Add(tempss);

                                                        if (firstDate != tempss)
                                                        {
                                                            //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollIntoView(true) + 1600;", el);
                                                            //Thread.Sleep(500);
                                                            STOP = true;
                                                            top = "0px";
                                                            fromdate = el;
                                                            break;
                                                        }


                                                    }
                                                    else
                                                    {
                                                        relationship = "is later than";
                                                    }



                                                }
                                                catch
                                                {

                                                }


                                            }

                                            if (!STOP)
                                            {
                                                int result = DateTime.Compare(firstDate, date2);
                                                if (result < 0)
                                                {
                                                    STOP = true;
                                                    top = "0px";
                                                    fromdate = earlier[earlier.Count() - 1];

                                                }
                                            }

                                        }
                                        catch
                                        {

                                        }


                                    }



                                    while (true)
                                    {

                                        if (fromdate != null)
                                        {
                                            //hauteurfromdate = fromdate.Location.Y + (Int32)scrolll;
                                            hauteurfromdate = fromdate.Location.Y;
                                            hauteurfromdateString = hauteurfromdate.ToString();

                                            ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollIntoView(true);", fromdate);
                                            Thread.Sleep(500);

                                            //hauteurfromdate = fromdate.Location.Y;
                                            fromdate = null;
                                            STOP = false;
                                            //hauteur += 600;

                                        }
                                        else
                                        {

                                            //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollBy(0,450);", imageDown);
                                            ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollBy(0," + hauteurr + ");", imageDown);

                                            Thread.Sleep(WAIT);
                                        }



                                        if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                        {

                                            try
                                            {
                                                driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                            }
                                            catch
                                            {

                                            }
                                        }
                                        //int hei = imageDown.Size.Height;
                                        messenger = driverMessenger.PageSource;

                                        if (!FASTMESSENGER)
                                            foreach (string classe in classesConnues)
                                            {

                                                if (classe.Contains("_1mj2 _2e-6") || classe.Contains("_1mj4 _2e-7"))//|| classe.Contains("_3058 _15gf")
                                                {


                                                    //pour récupérer les a contenant la longueur du message vocal
                                                    //IList<IWebElement> newlisteVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                    //IList<IWebElement> listeVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                    IList<IWebElement> listeVocauxx = firstlisteVocauxx;
                                                    listeVocauxxOriginal = driverMessenger.FindElements(By.XPath("//div[@class='_1mj2 _2e-6']"));

                                                    if (!listeVocauxxOriginal.SequenceEqual(firstlisteVocauxx))
                                                    {
                                                        listeVocauxx = listeVocauxxOriginal;
                                                        firstlisteVocauxx = listeVocauxxOriginal;
                                                        listeNotReadOnly = listeVocauxx.ToList();

                                                    }


                                                    List<IWebElement> newListVocaux = listeNotReadOnly.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList();


                                                    if (listeNotReadOnly.Count > 0)
                                                        foreach (IWebElement ell in newListVocaux)
                                                        {
                                                            //if (listeVocaux[0].Location.Y > 15 && listeVocaux[0].Location.Y < (resolutionEcran - 250))
                                                            //    break;
                                                            if (ell.Text == "")
                                                                continue;

                                                            string tentation = ell.ToString();
                                                            string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                            if (ell.Location.Y > 15 && ell.Location.Y < (resolutionEcran - 250))
                                                            {
                                                                //string tentation = ell.ToString();
                                                                //string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];


                                                                IList<IWebElement> els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs _5z-5']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                                string dateAudio = "";
                                                                string nomFichierAudio = "";

                                                                foreach (IWebElement el in els)
                                                                {
                                                                    if (el.GetAttribute("data-tooltip-content") != null)
                                                                    {

                                                                        if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                        {
                                                                            var texte = el.GetAttribute("data-tooltip-content");
                                                                            var position = el.Location;
                                                                            dateAudio = texte.Replace(":", "-");
                                                                            nomFichierAudio = "From";
                                                                            toRemove.Add(ell);
                                                                            break;
                                                                        }



                                                                    }
                                                                }
                                                                if (dateAudio == "")
                                                                {
                                                                    els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                                    dateAudio = "";
                                                                    foreach (IWebElement el in els)
                                                                    {
                                                                        if (el.GetAttribute("data-tooltip-content") != null)
                                                                        {

                                                                            if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                            {
                                                                                var texte = el.GetAttribute("data-tooltip-content");
                                                                                var position = el.Location;
                                                                                dateAudio = texte.Replace(":", "-");
                                                                                nomFichierAudio = "To";
                                                                                break;
                                                                            }



                                                                        }
                                                                    }
                                                                }

                                                                string duree = ell.Text.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries)[0];


                                                                if (duree.Length == 4)
                                                                    duree = "00:0" + duree;

                                                                if (audioVisibles.ContainsKey(idd))
                                                                {
                                                                    audioVisibless.Add(audioVisibles[idd]);
                                                                    continue;
                                                                }

                                                                try
                                                                {
                                                                    TimeSpan tempss;
                                                                    TimeSpan.TryParse(duree, out tempss);
                                                                    //DateTime temps;
                                                                    //DateTime.TryParse(duree, out temps);
                                                                    ell.Click();
                                                                    StartRecord(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                                    Stopwatch sw = new Stopwatch();
                                                                    sw.Start();
                                                                    //Thread.Sleep(500);
                                                                    while (true)
                                                                    {

                                                                        if (sw.ElapsedMilliseconds > tempss.TotalMilliseconds + (2000))
                                                                        {
                                                                            if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                                                            {

                                                                                try
                                                                                {
                                                                                    driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                                                                }
                                                                                catch
                                                                                {

                                                                                }
                                                                            }
                                                                            break;
                                                                        }

                                                                        toRemove.Add(ell);
                                                                    }

                                                                    StopRecording();
                                                                    Thread.Sleep(1000);

                                                                    if (!audioVisibles.ContainsKey(idd))
                                                                    {
                                                                        audioVisibles.Add(idd, pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                                        audioVisibless.Add(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");

                                                                        if (!classeTraitee.ContainsKey(idd))
                                                                        {
                                                                            classeTraitee.Add(idd, idd);
                                                                        }
                                                                    }



                                                                    j++;

                                                                }
                                                                catch (Exception exx)
                                                                {
                                                                    //StopRecording();
                                                                    //Thread.Sleep(5000);
                                                                }


                                                                //ell.Click();


                                                            }



                                                        }

                                                    listeNotReadOnly.RemoveAll(toRemove.Contains);

                                                    //pour cliquer sur le message vocal et jouer le son
                                                    //driverMessenger.FindElementsByXPath(classe)[0].Click();

                                                }


                                                if (classe.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))//si classe contenant vidéo on télécharge d'abord la vidéo
                                                {

                                                    IList<IWebElement> listeVideos = firstallDivElements;
                                                    allDivElementsOriginal = driverMessenger.FindElementsByXPath(classe + "//video");

                                                    if (!allDivElementsOriginal.SequenceEqual(firstallDivElements))
                                                    {
                                                        listeVideos = allDivElementsOriginal;
                                                        firstlisteVocauxx = allDivElementsOriginal;
                                                        listeVideoNotReadOnly = listeVideos.ToList();

                                                    }


                                                    List<IWebElement> newListVideos = listeVideoNotReadOnly.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList();



                                                    //IList<IWebElement> allDivElements = driverMessenger.FindElementsByXPath(classe + "//video");//_ox1 _21y0
                                                    if (listeVideoNotReadOnly.Count > 0)
                                                        for (int ii = newListVideos.Count() - 1; ii >= 0; ii--)
                                                        {
                                                            string tentation = newListVideos[ii].ToString();
                                                            string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                            if (classeTraitee.ContainsKey(idd))
                                                            {
                                                                continue;
                                                            }


                                                            if (listeVideoNotReadOnly[ii].GetAttribute("class") != null)
                                                            {
                                                                //here the print statement will print the value of each div tag element
                                                                var tmp = newListVideos[ii].GetAttribute("class");

                                                                if (tmp == "_ox1 _21y0")// si div avec vidéo
                                                                {
                                                                    //var video = driver.FindElementsByClassName(tmp);
                                                                    //IList<IWebElement> allDivElementss = driver.FindElementsByClassName(tmp);

                                                                    try
                                                                    {
                                                                        //var tmpp = allDivElementss[0].FindElement(By.XPath("video")).GetAttribute("src");
                                                                        var tmpp = newListVideos[ii].GetAttribute("src");

                                                                        //if (allDivElements[0].Location.Y > 15 && allDivElements[0].Location.Y < (resolutionEcran - 250))
                                                                        //    break;


                                                                        if (newListVideos[ii].Location.Y > 15 && newListVideos[ii].Location.Y < (resolutionEcran - 250))
                                                                        {


                                                                            if (!videosVisibles.ContainsKey(tmpp + ii))
                                                                            {
                                                                                videosVisibles.Add(tmpp + ii, tmpp);

                                                                                if (!classeTraitee.ContainsKey(idd))
                                                                                {
                                                                                    classeTraitee.Add(idd, tmpp);
                                                                                }
                                                                            }

                                                                            toRemoveVideo.Add(newListVideos[ii]);
                                                                        }
                                                                        //break;



                                                                        //IWebElement oo = allDivElementss[0].FindElement(By.XPath("video"));


                                                                    }
                                                                    catch (Exception exx)
                                                                    {

                                                                    }

                                                                }
                                                            }

                                                            listeVideoNotReadOnly.RemoveAll(toRemoveVideo.Contains);

                                                        }




                                                }

                                                if (!classe.Contains("_1mj2 _2e-6") || !classe.Contains("_1mj4 _2e-7") || !classe.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))
                                                {
                                                    foreach (IWebElement el in driverMessenger.FindElementsByXPath(classe))
                                                    {
                                                        //firstallOthers.Add(el);
                                                        //listeOthersNotReadOnly.Add(el);
                                                        allOthersOriginal.Add(el);
                                                    }




                                                }




                                            }//FIN FOREACH CLASSES CONNUES


                                        IList<IWebElement> listeOthers = firstallOthers;
                                        //allOthersOriginal = driverMessenger.FindElements(By.XPath(classe));

                                        if (!allOthersOriginal.SequenceEqual(firstallOthers))
                                        {
                                            listeOthers = allOthersOriginal;
                                            firstallOthers = allOthersOriginal;
                                            listeOthersNotReadOnly = listeOthers.ToList();

                                        }

                                        List<IWebElement> newList = listeOthersNotReadOnly.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList();


                                        if (listeOthersNotReadOnly.Count > 0)

                                            //var messages = driverMessenger.FindElementsByXPath(classe);
                                            //object[] messagesToExtract = messages.ToArray();


                                            foreach (OpenQA.Selenium.Remote.RemoteWebElement o in newList)
                                            {

                                                string tentation = o.ToString();
                                                string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                if (classeTraitee.ContainsKey(idd))
                                                    continue;

                                                if (!dicoMessagesFrom.ContainsKey(idd))
                                                {
                                                    dicoMessagesFrom.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                }
                                                //else
                                                //    continue;


                                                if (o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250))
                                                {
                                                    if (!messagesVisibles.ContainsKey(idd) && o.Text != "" && !o.Text.Contains("Lire-4:01Paramètres"))
                                                    {
                                                        messagesVisibles.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));

                                                        if (!classeTraitee.ContainsKey(idd))
                                                        {
                                                            classeTraitee.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                        }
                                                    }

                                                    toRemoveOthers.Add(o);
                                                }
                                                //else
                                                //    break;

                                                //messagesToExtract.ToList().Remove(o);

                                            }

                                        listeOthersNotReadOnly.RemoveAll(toRemoveOthers.Contains);
                                        allOthersOriginal = new List<IWebElement>();
                                        toRemoveOthers = new HashSet<IWebElement>();



                                        //on récupère tous les messages ppur ensuite comparer avec messageFrom et messageTo
                                        //imageDown = driver.FindElementById(idTmp);
                                        //Thread.Sleep(200);

                                        //if (textes != imageDown.Text)
                                        //    textes = imageDown.Text + "\n";

                                        messenger = driverMessenger.PageSource;
                                        //topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                        //on récupère la valeur Top de la scrollBar

                                        topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                        //on récupère la valeur Top de la scrollBar

                                        top = "";
                                        try
                                        {
                                            foreach (string t in topScrollBar)
                                            {
                                                string tmp = t.Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                                if (!tmp.Contains("top:") || tmp.Contains("hidden"))
                                                    continue;

                                                top = tmp.Substring(tmp.IndexOf("top: ") + 4).Split(';')[0];

                                                //if ((!tmp.Contains("top:") && ! tmp.Contains("uiScrollableAreaWrap")) || tmp.StartsWith("<html"))
                                                //    continue;

                                                //top = t.Substring(t.IndexOf("top: ") + 4).Split(';')[0];
                                            }

                                            if (top == topPrec)
                                                break;

                                            topPrec = top;
                                        }
                                        catch
                                        {

                                        }

                                        imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                        //imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();

                                        Thread.Sleep(500);


                                        //imageScreenshott.SaveAsFile(pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg", OpenQA.Selenium.ScreenshotImageFormat.Jpeg);
                                        imageScreenshott.SaveAsFile(pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);


                                        Thread.Sleep(500);

                                        //string pathToFile = pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg";
                                        string pathToFile = pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png";
                                        //pathToFolder = pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString);
                                        pathToFolder = pathToSaveScreenshot;

                                        if (!FASTMESSENGER)
                                            foreach (string cle in messagesVisibles.Keys)
                                            {

                                                if (!messagesVisiblesForFile.ContainsKey(cle))
                                                {

                                                    string[] lignes = messagesVisibles[cle].Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);

                                                    string tmp = "";
                                                    foreach (string li in lignes)
                                                    {
                                                        tmp += li.Trim().Replace("\r", "").Replace(";", "");
                                                    }



                                                    messagesVisiblesForFile.Add(cle, tmp + ";" + pathToFile + "\n");
                                                }

                                                //messagesVisiblesWithScreenshots += valeur + ";" + pathToFile + "\n";
                                            }

                                        if (!FASTMESSENGER)
                                            if (videosVisibles.Count > 0)
                                                foreach (string cle in videosVisibles.Keys)
                                                {
                                                    //if (!videosVisiblesForFile.ContainsKey(cle))
                                                    //{

                                                    videosVisiblesForFile.Add(cle + ";" + pathToFile + "\n");
                                                    //}
                                                }

                                        if (!FASTMESSENGER)
                                            if (audioVisibless.Count > 0)
                                                foreach (string cle in audioVisibless)
                                                {
                                                    //if (!videosVisiblesForFile.ContainsKey(cle))
                                                    //{
                                                    if (!audioVisiblesForFile.ContainsKey(cle))
                                                        audioVisiblesForFile.Add(cle, cle + ";" + pathToFile + "\n");
                                                    //}
                                                }

                                        messagesVisibles = new Dictionary<string, string>();
                                        videosVisibles = new Dictionary<string, string>();
                                        //audioVisibles = new Dictionary<string, string>();
                                        hauteur += 600;
                                        hauteurr = 450;


                                        i++;
                                    }
                                    ForGrid forGrid = new ForGrid();
                                    forGrid.PathToFolder = pathToFolder;
                                    forGrid.Url = link;

                                    imageDown = driverMessenger.FindElementById(idTmp);
                                    textes = imageDown.Text + "\n";


                                    backgroundWorkerGetMessenger.ReportProgress(-7, forGrid);



                                }


                            }
                            catch (Exception ex)//FIN TRY TIMEOUT-----------------------------------------------------------------------
                            {
                                //MessageBox.Show("error dans Messenger " + ex.Message);

                                Screenshot imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();

                                Thread.Sleep(500);


                                //imageScreenshott.SaveAsFile(pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg", OpenQA.Selenium.ScreenshotImageFormat.Jpeg);
                                imageScreenshott.SaveAsFile(pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + 1 + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);

                                Thread.Sleep(500);

                                string topPrec = "";
                                textes = imageDown.Text;


                                int j = 1;
                                int hauteurfromdate = 0;
                                string hauteurfromdateString = "";

                                Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                                long innerHeightt = (long)innerHeight;
                                long scrolll = (long)innerHeight;
                                long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                                //on initialise

                                IList<IWebElement> firstlisteVocauxx = null;
                                IList<IWebElement> firstallDivElements = null;
                                IList<IWebElement> firstallOthers = new List<IWebElement>();
                                List<IWebElement> listeNotReadOnly = null;
                                List<IWebElement> listeOthersNotReadOnly = new List<IWebElement>();
                                List<IWebElement> listeVideoNotReadOnly = new List<IWebElement>();
                                var toRemove = new HashSet<IWebElement>();
                                var toRemoveOthers = new HashSet<IWebElement>();
                                var toRemoveVideo = new HashSet<IWebElement>();

                                IList<IWebElement> listeVocauxxOriginal;
                                IList<IWebElement> allDivElementsOriginal = null;
                                IList<IWebElement> allOthersOriginal = new List<IWebElement>();

                                foreach (string classee in classesConnues)
                                {
                                    if (classee.Contains("_1mj2 _2e-6") || classee.Contains("_1mj4 _2e-7"))//|| classe.Contains("_3058 _15gf")
                                    {

                                        firstlisteVocauxx = driverMessenger.FindElements(By.XPath("//div[@class='_1mj2 _2e-6']"));
                                        listeNotReadOnly = firstlisteVocauxx.ToList();

                                    }

                                    if (classee.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))//si classe contenant vidéo on télécharge d'abord la vidéo
                                    {

                                        firstallDivElements = driverMessenger.FindElementsByXPath(classee + "//video");//_ox1 _21y0}
                                        listeVideoNotReadOnly = firstallDivElements.ToList();
                                    }

                                    if (!classee.Contains("_1mj2 _2e-6") || !classee.Contains("_1mj4 _2e-7") || classee.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))
                                    {

                                        foreach (IWebElement el in driverMessenger.FindElementsByXPath(classee))
                                        {
                                            firstallOthers.Add(el);
                                            listeOthersNotReadOnly.Add(el);
                                        }

                                        //firstallOthers = driverMessenger.FindElementsByXPath(classee);//_ox1 _21y0}
                                        //listeOthersNotReadOnly = firstallOthers.ToList();

                                    }


                                }

                                while (true)
                                {

                                    if (fromdate != null)
                                    {
                                        //hauteurfromdate = fromdate.Location.Y + (Int32)scrolll;
                                        hauteurfromdate = fromdate.Location.Y;
                                        hauteurfromdateString = hauteurfromdate.ToString();

                                        ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollIntoView(true);", fromdate);
                                        Thread.Sleep(500);

                                        //hauteurfromdate = fromdate.Location.Y;
                                        fromdate = null;
                                        STOP = false;
                                        //hauteur += 600;

                                    }
                                    else
                                    {

                                        //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollBy(0,450);", imageDown);
                                        ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollBy(0," + hauteurr + ");", imageDown);

                                        Thread.Sleep(WAIT);
                                    }



                                    if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                    {

                                        try
                                        {
                                            driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                        }
                                        catch
                                        {

                                        }
                                    }
                                    //int hei = imageDown.Size.Height;
                                    messenger = driverMessenger.PageSource;

                                    if (!FASTMESSENGER)
                                        foreach (string classe in classesConnues)
                                        {

                                            if (classe.Contains("_1mj2 _2e-6") || classe.Contains("_1mj4 _2e-7"))//|| classe.Contains("_3058 _15gf")
                                            {


                                                //pour récupérer les a contenant la longueur du message vocal
                                                //IList<IWebElement> newlisteVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                //IList<IWebElement> listeVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                IList<IWebElement> listeVocauxx = firstlisteVocauxx;
                                                listeVocauxxOriginal = driverMessenger.FindElements(By.XPath("//div[@class='_1mj2 _2e-6']"));

                                                if (!listeVocauxxOriginal.SequenceEqual(firstlisteVocauxx))
                                                {
                                                    listeVocauxx = listeVocauxxOriginal;
                                                    firstlisteVocauxx = listeVocauxxOriginal;
                                                    listeNotReadOnly = listeVocauxx.ToList();

                                                }


                                                List<IWebElement> newListVocaux = listeNotReadOnly.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList();


                                                if (listeNotReadOnly.Count > 0)
                                                    foreach (IWebElement ell in newListVocaux)
                                                    {
                                                        //if (listeVocaux[0].Location.Y > 15 && listeVocaux[0].Location.Y < (resolutionEcran - 250))
                                                        //    break;
                                                        if (ell.Text == "")
                                                            continue;

                                                        string tentation = ell.ToString();
                                                        string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                        if (ell.Location.Y > 15 && ell.Location.Y < (resolutionEcran - 250))
                                                        {
                                                            //string tentation = ell.ToString();
                                                            //string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];


                                                            IList<IWebElement> els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs _5z-5']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                            string dateAudio = "";
                                                            string nomFichierAudio = "";

                                                            foreach (IWebElement el in els)
                                                            {
                                                                if (el.GetAttribute("data-tooltip-content") != null)
                                                                {

                                                                    if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                    {
                                                                        var texte = el.GetAttribute("data-tooltip-content");
                                                                        var position = el.Location;
                                                                        dateAudio = texte.Replace(":", "-");
                                                                        nomFichierAudio = "From";
                                                                        toRemove.Add(ell);
                                                                        break;
                                                                    }



                                                                }
                                                            }
                                                            if (dateAudio == "")
                                                            {
                                                                els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                                dateAudio = "";
                                                                foreach (IWebElement el in els)
                                                                {
                                                                    if (el.GetAttribute("data-tooltip-content") != null)
                                                                    {

                                                                        if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                        {
                                                                            var texte = el.GetAttribute("data-tooltip-content");
                                                                            var position = el.Location;
                                                                            dateAudio = texte.Replace(":", "-");
                                                                            nomFichierAudio = "To";
                                                                            break;
                                                                        }



                                                                    }
                                                                }
                                                            }

                                                            string duree = ell.Text.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries)[0];


                                                            if (duree.Length == 4)
                                                                duree = "00:0" + duree;

                                                            if (audioVisibles.ContainsKey(idd))
                                                            {
                                                                audioVisibless.Add(audioVisibles[idd]);
                                                                continue;
                                                            }

                                                            try
                                                            {
                                                                TimeSpan tempss;
                                                                TimeSpan.TryParse(duree, out tempss);
                                                                //DateTime temps;
                                                                //DateTime.TryParse(duree, out temps);
                                                                ell.Click();
                                                                StartRecord(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                                Stopwatch sw = new Stopwatch();
                                                                sw.Start();
                                                                //Thread.Sleep(500);
                                                                while (true)
                                                                {

                                                                    if (sw.ElapsedMilliseconds > tempss.TotalMilliseconds + (2000))
                                                                    {
                                                                        if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                                                        {

                                                                            try
                                                                            {
                                                                                driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                                                            }
                                                                            catch
                                                                            {

                                                                            }
                                                                        }
                                                                        break;
                                                                    }

                                                                    toRemove.Add(ell);
                                                                }

                                                                StopRecording();
                                                                Thread.Sleep(1000);

                                                                if (!audioVisibles.ContainsKey(idd))
                                                                {
                                                                    audioVisibles.Add(idd, pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                                    audioVisibless.Add(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");

                                                                    if (!classeTraitee.ContainsKey(idd))
                                                                    {
                                                                        classeTraitee.Add(idd, idd);
                                                                    }
                                                                }



                                                                j++;

                                                            }
                                                            catch (Exception exx)
                                                            {
                                                                //StopRecording();
                                                                //Thread.Sleep(5000);
                                                            }


                                                            //ell.Click();


                                                        }



                                                    }

                                                listeNotReadOnly.RemoveAll(toRemove.Contains);

                                                //pour cliquer sur le message vocal et jouer le son
                                                //driverMessenger.FindElementsByXPath(classe)[0].Click();

                                            }


                                            if (classe.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))//si classe contenant vidéo on télécharge d'abord la vidéo
                                            {

                                                IList<IWebElement> listeVideos = firstallDivElements;
                                                allDivElementsOriginal = driverMessenger.FindElementsByXPath(classe + "//video");

                                                if (!allDivElementsOriginal.SequenceEqual(firstallDivElements))
                                                {
                                                    listeVideos = allDivElementsOriginal;
                                                    firstlisteVocauxx = allDivElementsOriginal;
                                                    listeVideoNotReadOnly = listeVideos.ToList();

                                                }


                                                List<IWebElement> newListVideos = listeVideoNotReadOnly.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList();



                                                //IList<IWebElement> allDivElements = driverMessenger.FindElementsByXPath(classe + "//video");//_ox1 _21y0
                                                if (listeVideoNotReadOnly.Count > 0)
                                                    for (int ii = newListVideos.Count() - 1; ii >= 0; ii--)
                                                    {
                                                        string tentation = newListVideos[ii].ToString();
                                                        string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                        if (classeTraitee.ContainsKey(idd))
                                                        {
                                                            continue;
                                                        }


                                                        if (listeVideoNotReadOnly[ii].GetAttribute("class") != null)
                                                        {
                                                            //here the print statement will print the value of each div tag element
                                                            var tmp = newListVideos[ii].GetAttribute("class");

                                                            if (tmp == "_ox1 _21y0")// si div avec vidéo
                                                            {
                                                                //var video = driver.FindElementsByClassName(tmp);
                                                                //IList<IWebElement> allDivElementss = driver.FindElementsByClassName(tmp);

                                                                try
                                                                {
                                                                    //var tmpp = allDivElementss[0].FindElement(By.XPath("video")).GetAttribute("src");
                                                                    var tmpp = newListVideos[ii].GetAttribute("src");

                                                                    //if (allDivElements[0].Location.Y > 15 && allDivElements[0].Location.Y < (resolutionEcran - 250))
                                                                    //    break;


                                                                    if (newListVideos[ii].Location.Y > 15 && newListVideos[ii].Location.Y < (resolutionEcran - 250))
                                                                    {


                                                                        if (!videosVisibles.ContainsKey(tmpp + ii))
                                                                        {
                                                                            videosVisibles.Add(tmpp + ii, tmpp);

                                                                            if (!classeTraitee.ContainsKey(idd))
                                                                            {
                                                                                classeTraitee.Add(idd, tmpp);
                                                                            }
                                                                        }

                                                                        toRemoveVideo.Add(newListVideos[ii]);
                                                                    }
                                                                    //break;



                                                                    //IWebElement oo = allDivElementss[0].FindElement(By.XPath("video"));


                                                                }
                                                                catch (Exception exx)
                                                                {

                                                                }

                                                            }
                                                        }

                                                        listeVideoNotReadOnly.RemoveAll(toRemoveVideo.Contains);

                                                    }




                                            }

                                            if (!classe.Contains("_1mj2 _2e-6") || !classe.Contains("_1mj4 _2e-7") || !classe.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))
                                            {
                                                foreach (IWebElement el in driverMessenger.FindElementsByXPath(classe))
                                                {
                                                    //firstallOthers.Add(el);
                                                    //listeOthersNotReadOnly.Add(el);
                                                    allOthersOriginal.Add(el);
                                                }




                                            }




                                        }//FIN FOREACH CLASSES CONNUES


                                    IList<IWebElement> listeOthers = firstallOthers;
                                    //allOthersOriginal = driverMessenger.FindElements(By.XPath(classe));

                                    if (!allOthersOriginal.SequenceEqual(firstallOthers))
                                    {
                                        listeOthers = allOthersOriginal;
                                        firstallOthers = allOthersOriginal;
                                        listeOthersNotReadOnly = listeOthers.ToList();

                                    }

                                    List<IWebElement> newList = listeOthersNotReadOnly.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList();


                                    if (listeOthersNotReadOnly.Count > 0)

                                        //var messages = driverMessenger.FindElementsByXPath(classe);
                                        //object[] messagesToExtract = messages.ToArray();


                                        foreach (OpenQA.Selenium.Remote.RemoteWebElement o in newList)
                                        {

                                            string tentation = o.ToString();
                                            string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                            if (classeTraitee.ContainsKey(idd))
                                                continue;

                                            if (!dicoMessagesFrom.ContainsKey(idd))
                                            {
                                                dicoMessagesFrom.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                            }
                                            //else
                                            //    continue;


                                            if (o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250))
                                            {
                                                if (!messagesVisibles.ContainsKey(idd) && o.Text != "" && !o.Text.Contains("Lire-4:01Paramètres"))
                                                {
                                                    messagesVisibles.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));

                                                    if (!classeTraitee.ContainsKey(idd))
                                                    {
                                                        classeTraitee.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                    }
                                                }

                                                toRemoveOthers.Add(o);
                                            }
                                            //else
                                            //    break;

                                            //messagesToExtract.ToList().Remove(o);

                                        }

                                    listeOthersNotReadOnly.RemoveAll(toRemoveOthers.Contains);
                                    allOthersOriginal = new List<IWebElement>();
                                    toRemoveOthers = new HashSet<IWebElement>();



                                    //on récupère tous les messages ppur ensuite comparer avec messageFrom et messageTo
                                    //imageDown = driver.FindElementById(idTmp);
                                    //Thread.Sleep(200);

                                    //if (textes != imageDown.Text)
                                    //    textes = imageDown.Text + "\n";

                                    messenger = driverMessenger.PageSource;
                                    //topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                    //on récupère la valeur Top de la scrollBar

                                    topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                    //on récupère la valeur Top de la scrollBar

                                    top = "";
                                    try
                                    {
                                        foreach (string t in topScrollBar)
                                        {
                                            string tmp = t.Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                            if (!tmp.Contains("top:") || tmp.Contains("hidden"))
                                                continue;

                                            top = tmp.Substring(tmp.IndexOf("top: ") + 4).Split(';')[0];

                                            //if ((!tmp.Contains("top:") && ! tmp.Contains("uiScrollableAreaWrap")) || tmp.StartsWith("<html"))
                                            //    continue;

                                            //top = t.Substring(t.IndexOf("top: ") + 4).Split(';')[0];
                                        }

                                        if (top == topPrec)
                                            break;

                                        topPrec = top;
                                    }
                                    catch
                                    {

                                    }

                                    imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                    //imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();

                                    Thread.Sleep(500);


                                    //imageScreenshott.SaveAsFile(pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg", OpenQA.Selenium.ScreenshotImageFormat.Jpeg);
                                    imageScreenshott.SaveAsFile(pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);


                                    Thread.Sleep(500);

                                    //string pathToFile = pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg";
                                    string pathToFile = pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png";
                                    //pathToFolder = pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString);
                                    pathToFolder = pathToSaveScreenshot;

                                    if (!FASTMESSENGER)
                                        foreach (string cle in messagesVisibles.Keys)
                                        {

                                            if (!messagesVisiblesForFile.ContainsKey(cle))
                                            {

                                                string[] lignes = messagesVisibles[cle].Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);

                                                string tmp = "";
                                                foreach (string li in lignes)
                                                {
                                                    tmp += li.Trim().Replace("\r", "").Replace(";", "");
                                                }



                                                messagesVisiblesForFile.Add(cle, tmp + ";" + pathToFile + "\n");
                                            }

                                            //messagesVisiblesWithScreenshots += valeur + ";" + pathToFile + "\n";
                                        }

                                    if (!FASTMESSENGER)
                                        if (videosVisibles.Count > 0)
                                            foreach (string cle in videosVisibles.Keys)
                                            {
                                                //if (!videosVisiblesForFile.ContainsKey(cle))
                                                //{

                                                videosVisiblesForFile.Add(cle + ";" + pathToFile + "\n");
                                                //}
                                            }

                                    if (!FASTMESSENGER)
                                        if (audioVisibless.Count > 0)
                                            foreach (string cle in audioVisibless)
                                            {
                                                //if (!videosVisiblesForFile.ContainsKey(cle))
                                                //{
                                                if (!audioVisiblesForFile.ContainsKey(cle))
                                                    audioVisiblesForFile.Add(cle, cle + ";" + pathToFile + "\n");
                                                //}
                                            }

                                    messagesVisibles = new Dictionary<string, string>();
                                    videosVisibles = new Dictionary<string, string>();
                                    //audioVisibles = new Dictionary<string, string>();
                                    hauteur += 600;
                                    hauteurr = 450;


                                    i++;
                                }
                                ForGrid forGrid = new ForGrid();
                                forGrid.PathToFolder = pathToFolder;
                                forGrid.Url = link;

                                imageDown = driverMessenger.FindElementById(idTmp);
                                textes = imageDown.Text + "\n";


                                backgroundWorkerGetMessenger.ReportProgress(-7, forGrid);



                            }

                            string codePagee = driverMessenger.PageSource;

                            using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSaveScreenshot + "\\Messenger_Messages.txt", false))
                            {
                                //if (File.Exists(saveFileDialog1.FileName))
                                //    File.Delete(saveFileDialog1.FileName);

                                file.Write(textes);
                            }

                            //using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSaveScreenshot + "\\Messenger_Messages_Bis.txt", false))
                            //{
                            //    //if (File.Exists(saveFileDialog1.FileName))
                            //    //    File.Delete(saveFileDialog1.FileName);

                            //    textes = "";
                            //    foreach(string t in messagesVisibles.Values)
                            //    {
                            //        textes += t + "\n";
                            //    }


                            //    file.Write(textes);
                            //}

                            using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSaveScreenshot + "\\Messenger_Messages_With_Screenshots.txt", false))
                            {
                                textes = "";
                                foreach (string t in messagesVisiblesForFile.Values)
                                {
                                    textes += t;
                                }


                                file.Write(textes);
                                messagesVisiblesForFile = new Dictionary<string, string>();
                            }

                            using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSaveScreenshot + "\\Messenger_Videos_With_Screenshots.txt", false))
                            {
                                if (videosVisiblesForFile.Count > 0)
                                {
                                    textes = "";
                                    foreach (string t in videosVisiblesForFile)
                                    {
                                        textes += t;
                                    }


                                    file.Write(textes);

                                }



                            }

                            using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSaveScreenshot + "\\Messenger_Audio_With_Screenshots.txt", false))
                            {
                                if (audioVisiblesForFile.Count > 0)
                                {
                                    textes = "";
                                    foreach (string t in audioVisiblesForFile.Values)
                                    {
                                        textes += t;
                                    }


                                    file.Write(textes);

                                }



                            }

                            if (!Directory.Exists(pathToSaveScreenshot + "\\Videos\\"))
                            {
                                //EraseDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link], true);  
                                Directory.CreateDirectory(pathToSaveScreenshot + "\\Videos\\");
                            }

                            using (var client = new WebClient())
                            {

                                try

                                {
                                    Dictionary<string, string> dico = new Dictionary<string, string>();
                                    foreach (string t in videosVisiblesForFile)
                                    {
                                        //FileInfo fileinfo = new FileInfo(t);
                                        string keyy = t.Substring(t.LastIndexOf('/') + 1).Split('?')[0];

                                        if (!dico.ContainsKey(keyy))
                                        {
                                            dico.Add(keyy, t);
                                            string nomFichier = t.Substring(t.LastIndexOf('/') + 1).Split('?')[0];
                                            client.DownloadFile(t, pathToSaveScreenshot + "\\Videos\\" + nomFichier);
                                            Thread.Sleep(1000);
                                        }


                                    }

                                    videosVisiblesForFile = new List<string>();
                                }
                                catch (Exception ex)
                                {
                                    //MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT DES VIDEOS");
                                    //return;
                                }
                            }


                            //on essaie de récupérer les documents partagés
                            if (!FASTMESSENGER)
                                try
                                {
                                    IList<IWebElement> tmpp = driverMessenger.FindElements(By.ClassName("uiScrollableAreaContent"));
                                    foreach (IWebElement div in tmpp)
                                    {
                                        if (!div.Text.StartsWith("Information"))
                                            continue;

                                        IList<IWebElement> docPartagess = div.FindElements(By.TagName("a"));

                                        foreach (IWebElement elpart in docPartagess)
                                        {
                                            if (elpart.GetAttribute("href") != "")
                                            {
                                                docPartages.Add(elpart.GetAttribute("href"));
                                            }
                                        }
                                    }

                                }
                                catch
                                {

                                }

                            if (!FASTMESSENGER)
                                if (docPartages.Count > 0)
                                {
                                    if (!Directory.Exists(pathToSaveScreenshot + "\\Documents_Partages\\"))
                                    {
                                        //EraseDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link], true);  
                                        Directory.CreateDirectory(pathToSaveScreenshot + "\\Documents_Partages\\");
                                    }

                                    using (var client = new WebClient())
                                    {

                                        try

                                        {

                                            foreach (string t in docPartages)
                                            {
                                                try
                                                {
                                                    //FileInfo fichier = new FileInfo(t);
                                                    string urll = t;
                                                    string nomFichier = t.Split(new string[] { "%3F" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                                    urll = urll.Replace("%3A", ":").Replace("%3D", "=").Replace("%2F", "/").Replace("%3F", "?").Replace("%26", "&");

                                                    if (urll.Contains("https://l.facebook.com/l.php?u="))
                                                    {
                                                        nomFichier = nomFichier.Substring(nomFichier.LastIndexOf("%2F") + 3).Trim();
                                                        urll = urll.Substring(urll.IndexOf("https://l.facebook.com/l.php?u=") + 31);
                                                    }
                                                    //else
                                                    //    nomFichier = nomFichier.Split('?')[0].Substring(nomFichier.LastIndexOf("/") + 1).Trim();



                                                    client.DownloadFile(urll, pathToSaveScreenshot + "\\Documents_Partages\\" + nomFichier);
                                                    Thread.Sleep(1000);
                                                }

                                                catch
                                                {

                                                }

                                            }

                                            docPartages = new List<string>();
                                        }
                                        catch (Exception ex)
                                        {
                                            //MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT DES VIDEOS");
                                            //return;
                                        }
                                    }
                                }




                            Thread.Sleep(2500);

                            textes = "";
                            messagesVisiblesForFile = new Dictionary<string, string>();
                            messagesVisibles = new Dictionary<string, string>();
                            videosVisibles = new Dictionary<string, string>();
                            videosVisiblesForFile = new List<string>();
                            audioVisiblesForFile = new Dictionary<string, string>();
                            messagesVisibles = new Dictionary<string, string>();
                            videosVisibles = new Dictionary<string, string>();
                            audioVisibles = new Dictionary<string, string>();
                            audioVisibless = new List<string>();
                            //idFictif = 1;
                        }

                        textes = "";
                        messagesVisiblesForFile = new Dictionary<string, string>();
                        audioVisiblesForFile = new Dictionary<string, string>();
                        videosVisiblesForFile = new List<string>();
                        messagesVisibles = new Dictionary<string, string>();
                        videosVisibles = new Dictionary<string, string>();
                        audioVisibles = new Dictionary<string, string>();
                        audioVisibless = new List<string>();
                        classeTraitee = new Dictionary<string, string>();

                        idFictif = 1;
                    }


                }
                catch(Exception ex)
                {
                    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\ERROR_LOG.txt", false))
                    {
                       
                            file.Write(ex.Message + "\n" +  ex.StackTrace);   
                    }

                }


                try
                {
                    Object lastHeight = ((IJavaScriptExecutor)driverMessenger).ExecuteScript("return document.body.scrollHeight");

                    while (true)
                    {
                        ((IJavaScriptExecutor)driverMessenger).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                        Thread.Sleep(2000);

                        Object newHeight = ((IJavaScriptExecutor)driverMessenger).ExecuteScript("return document.body.scrollHeight");
                        if (newHeight.Equals(lastHeight))
                        {
                            break;
                        }
                        lastHeight = newHeight;
                    }
                }
                catch
                {
                    //e.printStackTrace();
                }



            }
            catch
            {

                //driverMessenger.Quit();
            }




            //}
            //Thread.Sleep(2000);
            backgroundWorkerGetMessenger.ReportProgress(-105);
            Thread.Sleep(2000);
            //backgroundWorker1.CancelAsync();

            if (backgroundWorkerGetMessenger != null && backgroundWorkerGetMessenger.IsBusy)
                backgroundWorkerGetMessenger.CancelAsync();

            //labelanalyseencours.Visible = false;
            //pictureBoxwaiting.Visible = false;
            //pictureBoxlogofacebook.Visible = false;
        }
        private void MessengerFASTForNewLook(Dictionary<string, string> dicoMessenger, DateTime datumm)
        {


            if (driverMessenger == null)
            {
                InitializeDriver();
                driverMessenger = driver;

                driverMessenger.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }


                //while (!isElementPresentByID(driver, "email"))
                ////{
                //// 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driverMessenger.FindElementById("email");
                //// 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);
                ////}


                //// 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driverMessenger.FindElementById("pass");

                //// 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                //// 5. Find the search button (by Name) on the homepage
                driverMessenger.FindElementById("loginbutton").Click();
                ////searchButton.Click();
                Thread.Sleep(2500);
            }

            //string urlFriend = textBoxUSERNAMEFRIENDS.Text;
            //pour cacher fenetre DOS
            //var driverService = ChromeDriverService.CreateDefaultService();
            //driverService.HideCommandPromptWindow = true;

            //var driver = new ChromeDriver(driverService, new ChromeOptions());

            //System.Diagnostics.Process.Start(filepath);
            //ChromeOptions chromeOptions = new ChromeOptions();
            //chromeOptions.AddArguments("--disable-notifications");
            System.Random rnd = new System.Random();
            int nbreAnnee = 1;


            // 1. Maximize the browser
            //driver.Manage().Window.Maximize();
            //driverMessenger.Close();
            //driverMessenger = new ChromeDriver(driverService, chromeOptions);
            driverMessenger = driver;

            // 2. Go to the "Google" homepage
            //driverMessenger.Navigate().GoToUrl("https://facebook.com/login");




            try
            {


                string targetName = textBoxops.Text;
                string textes = "";
                string messagesFromInString = "";
                string messagesVisiblesWithScreenshots = "";
                string pathToFolder = "";
                List<IWebElement> earlier = new List<IWebElement>();
                List<DateTime> sameTime = new List<DateTime>();
                int hauteurr = 0;
                //var imageDown = "";
                Dictionary<string, string> dicoMessagesFrom = new Dictionary<string, string>();
                Dictionary<string, string> dicoMessagesTo = new Dictionary<string, string>();
                Dictionary<string, string> dicoPictures = new Dictionary<string, string>();
                Dictionary<string, string> messagesVisibles = new Dictionary<string, string>();
                Dictionary<string, string> videosVisibles = new Dictionary<string, string>();
                Dictionary<string, string> messagesVisiblesForFile = new Dictionary<string, string>();
                List<string> videosVisiblesForFile = new List<string>();
                Dictionary<string, string> audioVisiblesForFile = new Dictionary<string, string>();
                Dictionary<string, string> audioVisibles = new Dictionary<string, string>();
                List<string> audioVisibless = new List<string>();
                List<string> audioVisiblessForFile = new List<string>();
                List<string> docPartages = new List<string>();
                Dictionary<string, string> mois = new Dictionary<string, string>();
                Dictionary<string, string> classeTraitee = new Dictionary<string, string>();
                int WAIT = 500;
                mois.Add("jan", "01");
                mois.Add("fév", "02");
                mois.Add("fev", "02");
                mois.Add("fèv", "02");
                mois.Add("mar", "03");
                mois.Add("avr", "04");
                mois.Add("mai", "05");
                mois.Add("jui", "06");
                mois.Add("juil", "07");
                mois.Add("janvier", "01");
                mois.Add("février", "02");
                mois.Add("mars", "03");
                mois.Add("avril", "04");
                mois.Add("juin", "06");
                mois.Add("juillet", "07");
                mois.Add("août", "08");
                mois.Add("septembre", "09");
                mois.Add("octobre", "10");
                mois.Add("novembre", "11");
                mois.Add("décembre", "12");



                List<string> classesConnues = new System.Collections.Generic.List<string>();
                classesConnues.Add("//div[@class='clearfix _o46 _3erg _29_7 _8lma direction_ltr text_align_ltr']");
                classesConnues.Add("//div[@class='clearfix _o46 _3erg _29_7 direction_ltr text_align_ltr']");
                classesConnues.Add("//div[@class='clearfix _o46 _3erg _29_7 _8lma direction_ltr text_align_ltr _ylc']");
                classesConnues.Add("//div[@class='clearfix _o46 _3erg _3i_m _nd_ _8lma direction_ltr text_align_ltr']");
                classesConnues.Add("//div[@class='clearfix _o46 _3erg _3i_m _nd_ _8lma direction_ltr text_align_ltr _ylc']");
                classesConnues.Add("//div[@class='_52mr _2poz _ui9 _4skb']");
                classesConnues.Add("//div[@class='clearfix _o46 _3erg _3i_m _nd_ direction_ltr text_align_ltr']");
                classesConnues.Add("//div[@class='clearfix _o46 _3erg _3i_m _nd_ _q4a _8lma direction_ltr text_align_ltr _ylc']");
                classesConnues.Add("//div[@class='_2poz _52mr _ui9 _2n8h _2n8i _5fk1']");//_2poz _52mr _ui9 _2n8h _2n8i _5fk1 Vidéo ?_ccq _4tsk _3o67 _52mr _1byr _4-od
                classesConnues.Add("//div[@class='_1mj2 _2e-6']");
                classesConnues.Add("//div[@class='_1mj4 _2e-7']");//_1mj4 _2e-7
                classesConnues.Add("//div[@class='_3058 _15gf']");//_3058 _15gf
                                                                  //_1mjb _454y _3czg _2poz _ui9
                                                                  //_1mjb _454y _3czg _2poz _ui9
                                                                  //_hh7 _6ybn _s1- _52mr _1fz8 _1nqp




                try
                {

                    bool STOP = false;
                    string messenger = "";
                    int idFictif = 1;
                    string idFictifString = "";
                    IWebElement fromdate = null;

                    if (FASTMESSENGER)
                        WAIT = 500;
                    else
                        WAIT = 1000;

                    if (dicoMessenger.Count > 0)
                    {
                        foreach (string link in dicoMessenger.Keys)
                        {

                            hauteurr = 0;
                            string pathToSaveScreenshot = "";

                            if (!Directory.Exists(pathToSave + "\\Messenger\\" + dicoMessenger[link]))
                            {
                                //EraseDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link], true);  
                                Directory.CreateDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link]);
                                pathToSaveScreenshot = pathToSave + "\\Messenger\\" + dicoMessenger[link];
                            }
                            else
                            if (dicoMessenger[link].ToLower().Contains("utilisateur de") || dicoMessenger[link].ToLower().Contains("user"))
                            {
                                idFictif++;
                                idFictifString = idFictif.ToString();
                                Directory.CreateDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link] + idFictifString);
                                pathToSaveScreenshot = pathToSave + "\\Messenger\\" + dicoMessenger[link] + idFictifString;
                            }
                            else
                            if (Directory.Exists(pathToSave + "\\Messenger\\" + dicoMessenger[link]))
                            {
                                //EraseDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link], true);  
                                Directory.CreateDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link] + DateTime.Now.Ticks);
                                pathToSaveScreenshot = pathToSave + "\\Messenger\\" + dicoMessenger[link] + DateTime.Now.Ticks;
                            }
                            else
                                pathToSaveScreenshot = pathToSave + "\\Messenger\\" + dicoMessenger[link];

                            pathToSaveScreenshot = pathToSaveScreenshot.Trim();

                            if (!Directory.Exists(pathToSaveScreenshot + "\\Audio\\"))
                            {
                                //EraseDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link], true);  
                                Directory.CreateDirectory(pathToSaveScreenshot + "\\Audio\\");
                            }

                            var imageDown = driverMessenger.FindElement(By.Id("facebook"));
                            int hauteur = 400;
                            int resolutionEcran = resolution.Height;
                            string[] topScrollBar = null;
                            string firstValueTopBar = "";
                            string top = "";
                            string hauteurScroll = "";
                            string newHauteurScroll = "";
                            int i = 1;
                            string idTmp = "";
                            //DEPART TRY TIMEOUT------------------------------------------------------------------------------
                            try
                            {
                                driverMessenger.Manage().Timeouts().ImplicitWait.Add(System.TimeSpan.FromSeconds(300));
                                driverMessenger.Navigate().GoToUrl(link);
                                Thread.Sleep(5000);


                                

                                IWebElement iframe = driverMessenger.FindElement(By.XPath("//iframe[@class='k4urcfbm jgljxmt5 a8c37x1j izx4hr6d humdl8nn bn081pho gcieejh5']"));

                                driverMessenger.SwitchTo().Frame(iframe);

                                messenger = driverMessenger.PageSource;


                                string[] id = messenger.Split(new String[] { "class=\"uiScrollableAreaWrap scrollable\"" }, StringSplitOptions.RemoveEmptyEntries);
                                topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                //on récupère la valeur Top de la scrollBar
                                var element = driverMessenger.FindElementsByXPath("//div[@class='uiScrollableAreaGripper']");

                                try
                                {
                                    foreach (string t in topScrollBar)
                                    {
                                        string tmp = t.Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                        if ((!t.Contains("top:") && !t.Contains("uiScrollableAreaWrap")) || t.StartsWith("<html"))
                                            continue;

                                        firstValueTopBar = tmp.Substring(tmp.IndexOf("top: ") + 4).Split(';')[0];
                                        hauteurScroll = tmp.Substring(tmp.IndexOf("height: ") + 8).Split(';')[0];
                                    }


                                }
                                catch
                                {

                                }


                                //on récupère l'id dynamique du composant

                                foreach (string idd in id)
                                {
                                    if (!idd.StartsWith("id") && !idd.Contains("Messages"))
                                        continue;


                                    idTmp = idd.Substring(idd.IndexOf("id=\"") + 4).Split('"')[0];
                                }

                                try
                                {
                                    imageDown = driverMessenger.FindElementById(idTmp);
                                    var test = driverMessenger.FindElements(By.ClassName("uiScrollableAreaGripper"));//uiScrollableAreaTrack hidden_elem
                                    //var test2 = driverMessenger.FindElements(By.CssSelector("uiScrollableAreaTrack hidden_elem"));
                                    int lastHeight = imageDown.Size.Height;


                                    int width = driverMessenger.Manage().Window.Size.Width;
                                    int height = driverMessenger.Manage().Window.Size.Height;


                                    int hauteurtotale = resolution.Height;
                                    resolutionEcran = resolution.Height;
                                    int scroll = 0;
                                    Int32.TryParse(firstValueTopBar.Replace(".", "").Replace("px", ""), out scroll);



                                    //ON SCROLL JUSQUAU DEBUT DE LA PAGE LE PLUS LOIN POSSIBLE

                                    //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollIntoView(true);", listeTimes[0 ]);
                                    //Thread.Sleep(500);

                                    if (firstValueTopBar != "")
                                    {
                                        try
                                        {
                                            while (top.Trim() != "0px")
                                            //while (newHauteurScroll != hauteurScroll)
                                            {
                                                //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + (0 - scroll) + ");", imageDown);
                                                //Thread.Sleep(2500);

                                                //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + (0 - (scroll * scroll)) + ");", imageDown);
                                                //Thread.Sleep(2500);


                                                ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0,0);", imageDown);
                                                Thread.Sleep(5000);



                                                //calcul du temps
                                                if (datumm.Year != 1900)
                                                {
                                                    IList<IWebElement> listeTimes = driver.FindElements(By.TagName("time"));
                                                    Thread.Sleep(2000);

                                                    string dernieredate = "";
                                                    string datum = "";

                                                    if (listeTimes[0].Text.ToLower().Contains("à"))
                                                    {
                                                        datum = listeTimes[0].Text.ToLower().Split('à')[0].Trim().Replace(" ", "/");
                                                        if (mois.ContainsKey(datum.Split('/')[1].ToLower()))
                                                        {
                                                            datum = datum.ToLower().Replace(datum.Split('/')[1].ToLower(), mois[datum.Split('/')[1].ToLower()]);
                                                        }

                                                    }
                                                    else
                                                        datum = listeTimes[0].Text.Split(' ')[0];

                                                    CultureInfo culture = new CultureInfo("fr-FR");
                                                    DateTime testDatumValable;
                                                    if (!DateTime.TryParse(datum, out testDatumValable))
                                                        continue;

                                                    DateTime firstDate = Convert.ToDateTime(datum, culture);// premiere date dans la liste
                                                    DateTime tempss;


                                                    tempss = Convert.ToDateTime(datum, culture);
                                                    DateTime date2 = new DateTime(datumm.Year, datumm.Month, datumm.Day);



                                                    try
                                                    {


                                                        foreach (IWebElement el in listeTimes)
                                                        {
                                                            if (DateTime.Compare(firstDate, date2) == 0)
                                                                break;

                                                            //DateTime firstDate;



                                                            datum = "";
                                                            if (listeTimes[0].Text.ToLower().Contains("à"))
                                                            {
                                                                datum = listeTimes[0].Text.ToLower().Split('à')[0].Trim().Replace(" ", "/");
                                                                if (mois.ContainsKey(datum.Split('/')[1].ToLower()))
                                                                {
                                                                    datum = datum.ToLower().Replace(datum.Split('/')[1].ToLower(), mois[datum.Split('/')[1].ToLower()]);
                                                                }

                                                            }
                                                            else
                                                                datum = listeTimes[0].Text.Split(' ')[0];


                                                            if (DateTime.TryParse(datum, out testDatumValable))
                                                                firstDate = Convert.ToDateTime(datum, culture);// premiere date dans la liste
                                                            else
                                                                continue;

                                                            datum = "";
                                                            if (el.Text.ToLower().Contains("à"))
                                                            {
                                                                datum = el.Text.ToLower().Split('à')[0].Trim().Replace(" ", "/");
                                                                if (mois.ContainsKey(datum.Split('/')[1].ToLower()))
                                                                {
                                                                    datum = datum.ToLower().Replace(datum.Split('/')[1].ToLower(), mois[datum.Split('/')[1].ToLower()]);

                                                                    if (Convert.ToInt32(datum.Split('/')[0]) < 10 && !datum.Split('/')[0].StartsWith("0"))
                                                                        datum = "0" + datum;
                                                                }

                                                            }
                                                            else
                                                                datum = el.Text.Split(' ')[0];

                                                            try
                                                            {
                                                                tempss = Convert.ToDateTime(datum, culture);
                                                            }
                                                            catch
                                                            {
                                                                continue;
                                                            }

                                                            int result = 0;
                                                            try
                                                            {


                                                                result = DateTime.Compare(tempss, date2);
                                                                string relationship;

                                                                if (result < 0)
                                                                {
                                                                    earlier.Add(el);
                                                                    relationship = "is earlier than";
                                                                }
                                                                else
                                                                if (result == 0)
                                                                {
                                                                    relationship = "is the same time as";
                                                                    sameTime.Add(tempss);

                                                                    if (firstDate != tempss)
                                                                    {
                                                                        //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollIntoView(true) + 1600;", el);
                                                                        //Thread.Sleep(500);
                                                                        STOP = true;
                                                                        top = "0px";
                                                                        fromdate = el;
                                                                        break;
                                                                    }


                                                                }
                                                                else
                                                                {
                                                                    relationship = "is later than";
                                                                }



                                                            }
                                                            catch
                                                            {

                                                            }


                                                        }

                                                        if (!STOP)
                                                        {
                                                            int result = DateTime.Compare(firstDate, date2);
                                                            if (result < 0)
                                                            {
                                                                STOP = true;
                                                                top = "0px";
                                                                fromdate = earlier[earlier.Count() - 1];

                                                            }
                                                        }

                                                    }
                                                    catch
                                                    {

                                                    }

                                                    if (STOP)
                                                        break;

                                                }//FIN DU IF DATE


                                                if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                                {

                                                    try
                                                    {
                                                        driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                                    }
                                                    catch
                                                    {

                                                    }
                                                }


                                                hauteur += 600;
                                                hauteurtotale += resolution.Height + (resolution.Height / 2);

                                                messenger = driverMessenger.PageSource;

                                                top = "";
                                                topScrollBar = messenger.Split(new String[] { "<div class=\"uiScrollableAreaGripper" }, StringSplitOptions.RemoveEmptyEntries);
                                                try
                                                {
                                                    foreach (string t in topScrollBar)
                                                    {
                                                        string tmp = t.Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                                        if (!tmp.Contains("top:") || tmp.Contains("hidden"))
                                                            continue;

                                                        int heightt = 0;
                                                        top = tmp.Substring(tmp.IndexOf("top: ") + 4).Split(';')[0];
                                                        newHauteurScroll = tmp.Substring(tmp.IndexOf("height: ") + 8).Split(';')[0];
                                                        Int32.TryParse(top.Trim().Replace(".", "").Replace("px", ""), out heightt);
                                                        scroll = scroll - hauteur;
                                                        break;
                                                    }

                                                    if (top.Trim() == "0px")
                                                    {
                                                        //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + (lastHeight - hauteur) + ");", imageDown);
                                                        //Thread.Sleep(2000);
                                                        ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0,0);", imageDown);
                                                        Thread.Sleep(5000);

                                                        ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0,0);", imageDown);
                                                        Thread.Sleep(5000);

                                                        ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0,0);", imageDown);
                                                        Thread.Sleep(5000);

                                                        hauteurScroll = newHauteurScroll;
                                                        //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + (0 - scroll * scroll) + ");", imageDown);
                                                        //Thread.Sleep(2500);

                                                        //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + (0 - scroll) + ");", imageDown);
                                                        // Thread.Sleep(2500);

                                                        //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + (lastHeight - 2 * hauteur) + ");", imageDown);
                                                        //Thread.Sleep(2000);

                                                        messenger = driverMessenger.PageSource;

                                                        top = "";
                                                        topScrollBar = messenger.Split(new String[] { "<div class=\"uiScrollableAreaGripper" }, StringSplitOptions.RemoveEmptyEntries);


                                                        try
                                                        {
                                                            foreach (string tt in topScrollBar)
                                                            {
                                                                string tmpp = tt.Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                                                if (!tmpp.Contains("top:") || tmpp.Contains("hidden"))
                                                                    continue;

                                                                top = tmpp.Substring(tmpp.IndexOf("top: ") + 4).Split(';')[0];
                                                                newHauteurScroll = tmpp.Substring(tmpp.IndexOf("height: ") + 8).Split(';')[0];
                                                                int heightt = 0;
                                                                Int32.TryParse(top.Trim().Replace(".", "").Replace("px", ""), out heightt);
                                                                scroll = scroll - hauteur;
                                                                break;
                                                            }


                                                        }
                                                        catch
                                                        {
                                                            top = "";
                                                        }

                                                        hauteur += 600;
                                                        hauteurtotale += resolution.Height + (resolution.Height / 2);
                                                    }


                                                }
                                                catch
                                                {

                                                }

                                                Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                                                int innerHeightt = 0;

                                                Int32.TryParse(innerHeight.ToString(), out innerHeightt);
                                                scroll -= innerHeightt;


                                                //i++;
                                            }
                                        }
                                        catch (Exception ex)
                                        {
                                            top = "0px";
                                        }
                                    }
                                    else
                                        if (isElementMessengerEndingPresent(driverMessenger))
                                    {
                                        ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0,0);", imageDown);
                                        Thread.Sleep(2000);



                                    }
                                    else
                                        if (!isElementMessengerEndingPresent(driverMessenger))
                                        while (!isElementMessengerEndingPresent(driverMessenger))
                                        {
                                            ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + (lastHeight - hauteur) + ");", imageDown);
                                            Thread.Sleep(2000);



                                            hauteur += 600;
                                            hauteurtotale += resolution.Height + (resolution.Height / 2);
                                            //i++;
                                        }
                                    else
                                        if (isElementMessengerEndingPresent(driverMessenger))
                                    {
                                        ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0,0);", imageDown);
                                        Thread.Sleep(2000);

                                    }



                                    hauteur = 0;


                                    top = "";
                                    try
                                    {
                                        foreach (string t in topScrollBar)
                                        {
                                            string tmp = t.Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                            if (!tmp.Contains("top:") || tmp.Contains("hidden"))
                                                continue;

                                            top = tmp.Substring(tmp.IndexOf("top: ") + 4).Split(';')[0];

                                            //top = tmp.Substring(tmp.IndexOf("top: ") + 4).Split(';')[0];
                                        }


                                    }
                                    catch (Exception ex)
                                    {
                                        top = "";
                                    }

                                    //ON DESCEND--------------------------------------------------------------------------------------
                                    if (top != "")
                                    {

                                        //Screenshot imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                        //imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();

                                        //Thread.Sleep(500);


                                        ////imageScreenshott.SaveAsFile(pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg", OpenQA.Selenium.ScreenshotImageFormat.Jpeg);
                                        //imageScreenshott.SaveAsFile(pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + 1 + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);

                                        //Thread.Sleep(500);

                                        string topPrec = "";
                                        textes = imageDown.Text;


                                        int j = 1;
                                        int hauteurfromdate = 0;
                                        string hauteurfromdateString = "";

                                        Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                                        long innerHeightt = (long)innerHeight;
                                        long scrolll = (long)innerHeight;
                                        long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                                        //on initialise

                                        IList<IWebElement> firstlisteVocauxx = null;
                                        IList<IWebElement> firstallDivElements = null;
                                        IList<IWebElement> firstallOthers = new List<IWebElement>();
                                        List<IWebElement> listeNotReadOnly = null;
                                        List<IWebElement> listeOthersNotReadOnly = new List<IWebElement>();
                                        List<IWebElement> listeVideoNotReadOnly = new List<IWebElement>();
                                        var toRemove = new HashSet<IWebElement>();
                                        var toRemoveOthers = new HashSet<IWebElement>();
                                        var toRemoveVideo = new HashSet<IWebElement>();

                                        IList<IWebElement> listeVocauxxOriginal;
                                        IList<IWebElement> allDivElementsOriginal = null;
                                        IList<IWebElement> allOthersOriginal = new List<IWebElement>();

                                        foreach (string classee in classesConnues)
                                        {
                                            if (classee.Contains("_1mj2 _2e-6") || classee.Contains("_1mj4 _2e-7"))//|| classe.Contains("_3058 _15gf")
                                            {

                                                firstlisteVocauxx = driverMessenger.FindElements(By.XPath("//div[@class='_1mj2 _2e-6']"));
                                                listeNotReadOnly = firstlisteVocauxx.ToList();

                                            }

                                            if (classee.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))//si classe contenant vidéo on télécharge d'abord la vidéo
                                            {

                                                firstallDivElements = driverMessenger.FindElementsByXPath(classee + "//video");//_ox1 _21y0}
                                                listeVideoNotReadOnly = firstallDivElements.ToList();
                                            }

                                            if (!classee.Contains("_1mj2 _2e-6") || !classee.Contains("_1mj4 _2e-7") || !classee.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))
                                            {

                                                foreach (IWebElement el in driverMessenger.FindElementsByXPath(classee))
                                                {
                                                    firstallOthers.Add(el);
                                                    listeOthersNotReadOnly.Add(el);
                                                }

                                                //firstallOthers = driverMessenger.FindElementsByXPath(classee);//_ox1 _21y0}
                                                //listeOthersNotReadOnly = firstallOthers.ToList();

                                            }


                                        }

                                        while (true)
                                        {

                                            if (fromdate != null)
                                            {
                                                //hauteurfromdate = fromdate.Location.Y + (Int32)scrolll;
                                                hauteurfromdate = fromdate.Location.Y;
                                                hauteurfromdateString = hauteurfromdate.ToString();

                                                ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollIntoView(true);", fromdate);
                                                Thread.Sleep(500);

                                                //hauteurfromdate = fromdate.Location.Y;
                                                fromdate = null;
                                                STOP = false;
                                                //hauteur += 600;

                                            }
                                            else
                                            {

                                                //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollBy(0,450);", imageDown);
                                                ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollBy(0," + hauteurr + ");", imageDown);

                                                Thread.Sleep(WAIT);
                                            }



                                            if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                            {

                                                try
                                                {
                                                    driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                                }
                                                catch
                                                {

                                                }
                                            }
                                            //int hei = imageDown.Size.Height;
                                            messenger = driverMessenger.PageSource;

                                            if (!FASTMESSENGER)
                                            {
                                                //foreach (string classe in classesConnues)
                                                //{

                                                //if (classe.Contains("_1mj2 _2e-6") || classe.Contains("_1mj4 _2e-7"))//|| classe.Contains("_3058 _15gf")
                                                //{


                                                //pour récupérer les a contenant la longueur du message vocal
                                                //IList<IWebElement> newlisteVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                //IList<IWebElement> listeVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                IList<IWebElement> listeVocauxx = firstlisteVocauxx;
                                                //listeVocauxxOriginal = driverMessenger.FindElements(By.XPath("//div[@class='_1mj2 _2e-6']"));//A TESTER

                                                //if (!listeVocauxxOriginal.SequenceEqual(firstlisteVocauxx))
                                                //{
                                                //    listeVocauxx = listeVocauxxOriginal;
                                                //    firstlisteVocauxx = listeVocauxxOriginal;
                                                //    listeNotReadOnly = listeVocauxx.ToList();

                                                //}//A TESTER ------------------------------------------------------------------------


                                                List<IWebElement> newListVocaux = listeNotReadOnly.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList();
                                                //List<IWebElement> newListVocaux = listeNotReadOnly.ToList();


                                                if (listeNotReadOnly.Count > 0)
                                                    foreach (IWebElement ell in newListVocaux)
                                                    {
                                                        //if (listeVocaux[0].Location.Y > 15 && listeVocaux[0].Location.Y < (resolutionEcran - 250))
                                                        //    break;
                                                        if (ell.Text == "")
                                                            continue;

                                                        string tentation = ell.ToString();
                                                        string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                        if (ell.Location.Y > 15 && ell.Location.Y < (resolutionEcran - 250))
                                                        {
                                                            //string tentation = ell.ToString();
                                                            //string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];


                                                            IList<IWebElement> els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs _5z-5']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                            string dateAudio = "";
                                                            string nomFichierAudio = "";

                                                            foreach (IWebElement el in els.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList())
                                                            {
                                                                if (el.GetAttribute("data-tooltip-content") != null)
                                                                {

                                                                    if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                    {
                                                                        var texte = el.GetAttribute("data-tooltip-content");
                                                                        var position = el.Location;
                                                                        dateAudio = texte.Replace(":", "-");
                                                                        nomFichierAudio = "From";
                                                                        toRemove.Add(ell);
                                                                        break;
                                                                    }



                                                                }
                                                            }
                                                            if (dateAudio == "")
                                                            {
                                                                els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                                dateAudio = "";
                                                                foreach (IWebElement el in els.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList())
                                                                {
                                                                    if (el.GetAttribute("data-tooltip-content") != null)
                                                                    {

                                                                        if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                        {
                                                                            var texte = el.GetAttribute("data-tooltip-content");
                                                                            var position = el.Location;
                                                                            dateAudio = texte.Replace(":", "-");
                                                                            nomFichierAudio = "To";
                                                                            break;
                                                                        }



                                                                    }
                                                                }
                                                            }

                                                            string duree = ell.Text.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries)[0];


                                                            if (duree.Length == 4)
                                                                duree = "00:0" + duree;

                                                            if (audioVisibles.ContainsKey(idd))
                                                            {
                                                                audioVisibless.Add(audioVisibles[idd]);
                                                                continue;
                                                            }

                                                            try
                                                            {
                                                                TimeSpan tempss;
                                                                TimeSpan.TryParse(duree, out tempss);
                                                                //DateTime temps;
                                                                //DateTime.TryParse(duree, out temps);
                                                                ell.Click();
                                                                StartRecord(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                                Stopwatch sw = new Stopwatch();
                                                                sw.Start();
                                                                //Thread.Sleep(500);
                                                                while (true)
                                                                {

                                                                    if (sw.ElapsedMilliseconds > tempss.TotalMilliseconds + (2000))
                                                                    {
                                                                        if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                                                        {

                                                                            try
                                                                            {
                                                                                driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                                                            }
                                                                            catch
                                                                            {

                                                                            }
                                                                        }
                                                                        break;
                                                                    }

                                                                    toRemove.Add(ell);
                                                                }

                                                                StopRecording();
                                                                Thread.Sleep(1000);

                                                                if (!audioVisibles.ContainsKey(idd))
                                                                {
                                                                    audioVisibles.Add(idd, pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                                    audioVisibless.Add(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");

                                                                    if (!classeTraitee.ContainsKey(idd))
                                                                    {
                                                                        classeTraitee.Add(idd, idd);
                                                                    }
                                                                }



                                                                j++;

                                                            }
                                                            catch (Exception exx)
                                                            {
                                                                //StopRecording();
                                                                //Thread.Sleep(5000);
                                                            }


                                                            //ell.Click();


                                                        }
                                                        else if (ell.Location.Y < 15)
                                                        {
                                                            toRemove.Add(ell);

                                                        }
                                                        else if (ell.Location.Y > (resolutionEcran - 250))
                                                        {
                                                            break;

                                                        }



                                                    }

                                                listeNotReadOnly.RemoveAll(toRemove.Contains);

                                                //pour cliquer sur le message vocal et jouer le son
                                                //driverMessenger.FindElementsByXPath(classe)[0].Click();

                                                //}


                                                //if (classe.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))//si classe contenant vidéo on télécharge d'abord la vidéo
                                                //{

                                                IList<IWebElement> listeVideos = firstallDivElements;
                                                allDivElementsOriginal = driverMessenger.FindElementsByXPath("//div[@class='_2poz _52mr _ui9 _2n8h _2n8i _5fk1']" + "//video");

                                                if (!allDivElementsOriginal.SequenceEqual(firstallDivElements))
                                                {
                                                    listeVideos = allDivElementsOriginal;
                                                    firstlisteVocauxx = allDivElementsOriginal;
                                                    listeVideoNotReadOnly = listeVideos.ToList();

                                                }


                                                List<IWebElement> newListVideos = listeVideoNotReadOnly.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList();



                                                //IList<IWebElement> allDivElements = driverMessenger.FindElementsByXPath(classe + "//video");//_ox1 _21y0
                                                if (listeVideoNotReadOnly.Count > 0)
                                                    for (int ii = newListVideos.Count() - 1; ii >= 0; ii--)
                                                    {
                                                        string tentation = newListVideos[ii].ToString();
                                                        string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                        if (classeTraitee.ContainsKey(idd))
                                                        {
                                                            continue;
                                                        }


                                                        if (listeVideoNotReadOnly[ii].GetAttribute("class") != null)
                                                        {
                                                            //here the print statement will print the value of each div tag element
                                                            var tmp = newListVideos[ii].GetAttribute("class");

                                                            if (tmp == "_ox1 _21y0")// si div avec vidéo
                                                            {
                                                                //var video = driver.FindElementsByClassName(tmp);
                                                                //IList<IWebElement> allDivElementss = driver.FindElementsByClassName(tmp);

                                                                try
                                                                {
                                                                    //var tmpp = allDivElementss[0].FindElement(By.XPath("video")).GetAttribute("src");
                                                                    var tmpp = newListVideos[ii].GetAttribute("src");

                                                                    //if (allDivElements[0].Location.Y > 15 && allDivElements[0].Location.Y < (resolutionEcran - 250))
                                                                    //    break;


                                                                    if (newListVideos[ii].Location.Y > 15 && newListVideos[ii].Location.Y < (resolutionEcran - 250))
                                                                    {


                                                                        if (!videosVisibles.ContainsKey(tmpp + ii))
                                                                        {
                                                                            videosVisibles.Add(tmpp + ii, tmpp);

                                                                            if (!classeTraitee.ContainsKey(idd))
                                                                            {
                                                                                classeTraitee.Add(idd, tmpp);
                                                                            }
                                                                        }

                                                                        toRemoveVideo.Add(newListVideos[ii]);
                                                                    }
                                                                    //break;



                                                                    //IWebElement oo = allDivElementss[0].FindElement(By.XPath("video"));


                                                                }
                                                                catch (Exception ex)
                                                                {

                                                                }

                                                            }
                                                        }

                                                        listeVideoNotReadOnly.RemoveAll(toRemoveVideo.Contains);

                                                    }




                                                //}

                                                //if (!classe.Contains("_1mj2 _2e-6") || !classe.Contains("_1mj4 _2e-7") || !classe.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))
                                                //{
                                                //    foreach (IWebElement el in driverMessenger.FindElementsByXPath(classe))
                                                //    {
                                                //        //firstallOthers.Add(el);
                                                //        //listeOthersNotReadOnly.Add(el);
                                                //        allOthersOriginal.Add(el);
                                                //    }




                                                //}




                                            }

                                            //}//FIN FOREACH CLASSES CONNUES


                                            IList<IWebElement> listeOthers = firstallOthers;
                                            //allOthersOriginal = driverMessenger.FindElements(By.XPath(classe));

                                            //if (!allOthersOriginal.SequenceEqual(firstallOthers))
                                            //{
                                            //    listeOthers = allOthersOriginal;
                                            //    firstallOthers = allOthersOriginal;
                                            //    listeOthersNotReadOnly = listeOthers.ToList();

                                            //}

                                            //List<IWebElement> newList = listeOthersNotReadOnly.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList();
                                            List<IWebElement> newList = listeOthersNotReadOnly.ToList();


                                            if (listeOthersNotReadOnly.Count > 0)

                                                //var messages = driverMessenger.FindElementsByXPath(classe);
                                                //object[] messagesToExtract = messages.ToArray();


                                                foreach (OpenQA.Selenium.Remote.RemoteWebElement o in newList)
                                                {

                                                    string tentation = o.ToString();
                                                    string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                    if (classeTraitee.ContainsKey(idd))
                                                        continue;

                                                    if (!dicoMessagesFrom.ContainsKey(idd))
                                                    {
                                                        dicoMessagesFrom.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                    }
                                                    //else
                                                    //    continue;


                                                    if (o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250))
                                                    {
                                                        if (!messagesVisibles.ContainsKey(idd) && o.Text != "" && !o.Text.Contains("Lire-4:01Paramètres"))
                                                        {
                                                            messagesVisibles.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));

                                                            if (!classeTraitee.ContainsKey(idd))
                                                            {
                                                                classeTraitee.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                            }
                                                        }

                                                        toRemoveOthers.Add(o);
                                                    }
                                                    else if (o.Location.Y < 15)
                                                    {
                                                        toRemoveOthers.Add(o);
                                                    }
                                                    else
                                                    if (o.Location.Y > (resolutionEcran - 250))
                                                        break;
                                                    //else
                                                    //    break;

                                                    //messagesToExtract.ToList().Remove(o);

                                                }

                                            listeOthersNotReadOnly.RemoveAll(toRemoveOthers.Contains);
                                            allOthersOriginal = new List<IWebElement>();
                                            toRemoveOthers = new HashSet<IWebElement>();



                                            //on récupère tous les messages ppur ensuite comparer avec messageFrom et messageTo
                                            //imageDown = driver.FindElementById(idTmp);
                                            //Thread.Sleep(200);

                                            //if (textes != imageDown.Text)
                                            //    textes = imageDown.Text + "\n";

                                            messenger = driverMessenger.PageSource;
                                            //topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                            //on récupère la valeur Top de la scrollBar

                                            topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                            //on récupère la valeur Top de la scrollBar

                                            top = "";
                                            try
                                            {
                                                foreach (string t in topScrollBar)
                                                {
                                                    string tmp = t.Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                                    if (!tmp.Contains("top:") || tmp.Contains("hidden"))
                                                        continue;

                                                    top = tmp.Substring(tmp.IndexOf("top: ") + 4).Split(';')[0];

                                                    //if ((!tmp.Contains("top:") && ! tmp.Contains("uiScrollableAreaWrap")) || tmp.StartsWith("<html"))
                                                    //    continue;

                                                    //top = t.Substring(t.IndexOf("top: ") + 4).Split(';')[0];
                                                }

                                                if (top == topPrec)
                                                    break;

                                                topPrec = top;
                                            }
                                            catch
                                            {

                                            }

                                            Screenshot imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                            //imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();

                                            Thread.Sleep(500);

                                            
                                            //imageScreenshott.SaveAsFile(pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg", OpenQA.Selenium.ScreenshotImageFormat.Jpeg);
                                            imageScreenshott.SaveAsFile(pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);


                                            Thread.Sleep(500);

                                            //string pathToFile = pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg";
                                            string pathToFile = pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png";
                                            //pathToFolder = pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString);
                                            pathToFolder = pathToSaveScreenshot;

                                            if (!FASTMESSENGER)
                                                foreach (string cle in messagesVisibles.Keys)
                                                {

                                                    if (!messagesVisiblesForFile.ContainsKey(cle))
                                                    {

                                                        string[] lignes = messagesVisibles[cle].Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);

                                                        string tmp = "";
                                                        foreach (string li in lignes)
                                                        {
                                                            tmp += li.Trim().Replace("\r", "").Replace(";", "");
                                                        }



                                                        messagesVisiblesForFile.Add(cle, tmp + ";" + pathToFile + "\n");
                                                    }

                                                    //messagesVisiblesWithScreenshots += valeur + ";" + pathToFile + "\n";
                                                }

                                            if (!FASTMESSENGER)
                                                if (videosVisibles.Count > 0)
                                                    foreach (string cle in videosVisibles.Keys)
                                                    {
                                                        //if (!videosVisiblesForFile.ContainsKey(cle))
                                                        //{

                                                        videosVisiblesForFile.Add(cle + ";" + pathToFile + "\n");
                                                        //}
                                                    }

                                            if (!FASTMESSENGER)
                                                if (audioVisibless.Count > 0)
                                                    foreach (string cle in audioVisibless)
                                                    {
                                                        //if (!videosVisiblesForFile.ContainsKey(cle))
                                                        //{
                                                        if (!audioVisiblesForFile.ContainsKey(cle))
                                                            audioVisiblesForFile.Add(cle, cle + ";" + pathToFile + "\n");
                                                        //}
                                                    }

                                            messagesVisibles = new Dictionary<string, string>();
                                            videosVisibles = new Dictionary<string, string>();
                                            //audioVisibles = new Dictionary<string, string>();
                                            hauteur += 600;
                                            hauteurr = 450;

                                            i++;
                                        }
                                        ForGrid forGrid = new ForGrid();
                                        forGrid.PathToFolder = pathToFolder;
                                        forGrid.Url = link;

                                        Analytics analy = new Analytics();
                                        analy.Category = "CHATMESSENGER";

                                        //analy.PathToPicture = userNameTag + "_" + idTag + "_" + numTag + i + ".png";
                                        try
                                        {
                                            analy.Username = dicoMessenger[link];
                                            analy.Url = forGrid.Url.Replace("messages/t/", "");
                                            analy.PathToPicture = "\\Messenger\\PicturesProfiles\\" + forGrid.Username + ".jpg";
                                            analy.PathToFolder = forGrid.PathToFolder;
                                        }
                                        catch
                                        {

                                        }


                                        if (!Analytics.ContainsKey(analy.Category + ";" + analy.Username + ";" + analy.Url))
                                            Analytics.Add(analy.Category + ";" + analy.Username + ";" + analy.Url, analy);




                                        imageDown = driverMessenger.FindElementById(idTmp);
                                        textes = imageDown.Text + "\n";


                                        backgroundWorkerGetMessenger.ReportProgress(-7, forGrid);
                                        //FillDataGridViewMessenger(pathToFolder, link);
                                    }
                                    else//Si pas de scrollbar alors seulement une page------------------------------------------------------------------------------------------
                                    {
                                        int j = 1;
                                        foreach (string classe in classesConnues)
                                        {


                                            if (classe.Contains("_1mj2 _2e-6") || classe.Contains("_1mj4 _2e-7"))//|| classe.Contains("_3058 _15gf")
                                            {


                                                //pour récupérer les a contenant la longueur du message vocal
                                                //IList<IWebElement> newlisteVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                //IList<IWebElement> listeVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                IList<IWebElement> listeVocauxx = driverMessenger.FindElements(By.XPath("//div[@class='_1mj2 _2e-6']"));

                                                foreach (IWebElement ell in listeVocauxx)
                                                {
                                                    //if (listeVocaux[0].Location.Y > 15 && listeVocaux[0].Location.Y < (resolutionEcran - 250))
                                                    //    break;
                                                    if (ell.Text == "")
                                                        continue;

                                                    string tentation = ell.ToString();
                                                    string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                    //IList<IWebElement> testt = ell.FindElements(By.TagName("a"));

                                                    //string tentation = ell.ToString();
                                                    //string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                    //if (audioVisibles.ContainsKey(idd))
                                                    //{
                                                    //    continue;
                                                    //}

                                                    if (ell.Location.Y > 15 && ell.Location.Y < (resolutionEcran - 250))
                                                    {
                                                        //string tentation = ell.ToString();
                                                        //string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];


                                                        IList<IWebElement> els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs _5z-5']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                        string dateAudio = "";
                                                        string nomFichierAudio = "";

                                                        foreach (IWebElement el in els)
                                                        {
                                                            if (el.GetAttribute("data-tooltip-content") != null)
                                                            {

                                                                if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                {
                                                                    var texte = el.GetAttribute("data-tooltip-content");
                                                                    var position = el.Location;
                                                                    dateAudio = texte.Replace(":", "-");
                                                                    nomFichierAudio = "From";
                                                                    break;
                                                                }



                                                            }
                                                        }
                                                        if (dateAudio == "")
                                                        {
                                                            els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                            dateAudio = "";
                                                            foreach (IWebElement el in els)
                                                            {
                                                                if (el.GetAttribute("data-tooltip-content") != null)
                                                                {

                                                                    if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                    {
                                                                        var texte = el.GetAttribute("data-tooltip-content");
                                                                        var position = el.Location;
                                                                        dateAudio = texte.Replace(":", "-");
                                                                        nomFichierAudio = "To";
                                                                        break;
                                                                    }



                                                                }
                                                            }
                                                        }

                                                        string duree = ell.Text.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                                        //if (classe.Contains("_1mj2 _2e-6"))
                                                        //    nomFichierAudio = "From";
                                                        //else
                                                        //    nomFichierAudio = "To";

                                                        if (duree.Length == 4)
                                                            duree = "00:0" + duree;

                                                        if (audioVisibles.ContainsKey(idd))
                                                        {
                                                            audioVisibless.Add(audioVisibles[idd]);
                                                            continue;
                                                        }

                                                        try
                                                        {
                                                            TimeSpan tempss;
                                                            TimeSpan.TryParse(duree, out tempss);
                                                            //DateTime temps;
                                                            //DateTime.TryParse(duree, out temps);
                                                            ell.Click();
                                                            StartRecord(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                            Stopwatch sw = new Stopwatch();
                                                            sw.Start();
                                                            //Thread.Sleep(500);
                                                            while (true)
                                                            {

                                                                if (sw.ElapsedMilliseconds > tempss.TotalMilliseconds + (2000))
                                                                {
                                                                    if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                                                    {

                                                                        try
                                                                        {
                                                                            driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                                                        }
                                                                        catch
                                                                        {

                                                                        }
                                                                    }
                                                                    break;
                                                                }

                                                            }

                                                            StopRecording();
                                                            Thread.Sleep(1000);

                                                            if (!audioVisibles.ContainsKey(idd))
                                                            {
                                                                audioVisibles.Add(idd, pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                                audioVisibless.Add(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");

                                                            }



                                                            j++;

                                                        }
                                                        catch (Exception exx)
                                                        {
                                                            //StopRecording();
                                                            //Thread.Sleep(5000);
                                                        }


                                                        //ell.Click();


                                                    }

                                                }

                                                //pour cliquer sur le message vocal et jouer le son
                                                //driverMessenger.FindElementsByXPath(classe)[0].Click();
                                            }







                                            if (classe.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))//si classe contenant vidéo on télécharge d'abord la vidéo
                                            {


                                                IList<IWebElement> allDivElements = driverMessenger.FindElementsByXPath(classe + "//video");//_ox1 _21y0
                                                for (int ii = 0; ii < allDivElements.Count(); ii++)
                                                {

                                                    if (allDivElements[ii].GetAttribute("class") != null)
                                                    {
                                                        //here the print statement will print the value of each div tag element
                                                        var tmp = allDivElements[ii].GetAttribute("class");

                                                        if (tmp == "_ox1 _21y0")// si div avec vidéo
                                                        {
                                                            //var video = driver.FindElementsByClassName(tmp);
                                                            //IList<IWebElement> allDivElementss = driver.FindElementsByClassName(tmp);

                                                            try
                                                            {
                                                                //var tmpp = allDivElementss[0].FindElement(By.XPath("video")).GetAttribute("src");
                                                                var tmpp = allDivElements[ii].GetAttribute("src");


                                                                if (allDivElements[ii].Location.Y > 15 && allDivElements[ii].Location.Y < (resolutionEcran - 250))
                                                                {
                                                                    if (!videosVisibles.ContainsKey(tmpp + ii))
                                                                    {
                                                                        videosVisibles.Add(tmpp + ii, tmpp);
                                                                    }
                                                                }
                                                                //break;



                                                                //IWebElement oo = allDivElementss[0].FindElement(By.XPath("video"));


                                                            }
                                                            catch (Exception ex)
                                                            {

                                                            }

                                                        }
                                                    }

                                                }




                                            }

                                            if (!classe.Contains("_1mj2 _2e-6") && !classe.Contains("_1mj4 _2e-7") && classe.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))
                                            {
                                                var messages = driverMessenger.FindElementsByXPath(classe);
                                                object[] messagesToExtract = messages.ToArray();



                                                foreach (OpenQA.Selenium.Remote.RemoteWebElement o in messagesToExtract)
                                                {

                                                    string tentation = o.ToString();
                                                    string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                    if (!dicoMessagesFrom.ContainsKey(idd))
                                                    {
                                                        dicoMessagesFrom.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                    }
                                                    //else
                                                    //    continue;

                                                    if (o.Location.Y + o.Size.Height > 15 && o.Location.Y < (resolutionEcran - 300))
                                                    {
                                                        if (!messagesVisibles.ContainsKey(idd) && o.Text != "")
                                                        {
                                                            messagesVisibles.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                        }
                                                    }

                                                }
                                            }


                                        }


                                        imageDown = driverMessenger.FindElementById(idTmp);
                                        textes = imageDown.Text + "\n";

                                        Screenshot imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                        imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                        //Save the screenshot
                                        //if (!Directory.Exists(pathToSave + "\\Messenger\\" + dicoMessenger[link]))
                                        //{
                                        //    //EraseDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link], true);  
                                        //    Directory.CreateDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link]);
                                        //}
                                        //else
                                        //if (dicoMessenger[link].ToLower().Contains("utilisateur de") || dicoMessenger[link].ToLower().Contains("user"))
                                        //{
                                        //    idFictif++;
                                        //    idFictifString = idFictif.ToString();
                                        //    Directory.CreateDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link] + i.ToString());
                                        //}



                                        imageScreenshott.SaveAsFile(pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                        Thread.Sleep(100);

                                        string pathToFile = pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png";
                                        pathToFolder = pathToSaveScreenshot;

                                        foreach (string cle in messagesVisibles.Keys)
                                        {

                                            if (!messagesVisiblesForFile.ContainsKey(cle))
                                            {

                                                string[] lignes = messagesVisibles[cle].Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);

                                                string tmp = "";
                                                foreach (string li in lignes)
                                                {
                                                    tmp += li.Trim().Replace("\r", "");
                                                }



                                                messagesVisiblesForFile.Add(cle, tmp + ";" + pathToFile + "\n");
                                            }

                                            //messagesVisiblesWithScreenshots += valeur + ";" + pathToFile + "\n";
                                        }

                                        if (videosVisibles.Count > 0)
                                            foreach (string cle in videosVisibles.Keys)
                                            {
                                                //if (!videosVisiblesForFile.ContainsKey(cle))
                                                //{

                                                videosVisiblesForFile.Add(cle + ";" + pathToFile + "\n");
                                                //}
                                            }

                                        if (audioVisibles.Count > 0)
                                            foreach (string cle in audioVisibles.Values)
                                            {
                                                //if (!videosVisiblesForFile.ContainsKey(cle))
                                                //{
                                                if (!audioVisibles.ContainsKey(cle))
                                                    audioVisiblesForFile.Add(cle + ";" + pathToFile + "\n", cle + ";" + pathToFile + "\n");
                                                //}
                                            }

                                        messagesVisibles = new Dictionary<string, string>();
                                        videosVisibles = new Dictionary<string, string>();
                                        //audioVisibles = new Dictionary<string, string>();

                                        ForGrid forGrid = new ForGrid();
                                        forGrid.PathToFolder = pathToFolder;
                                        forGrid.Url = link;

                                        Analytics analy = new Analytics();
                                        analy.Category = "CHATMESSENGER";

                                        //analy.PathToPicture = userNameTag + "_" + idTag + "_" + numTag + i + ".png";
                                        try
                                        {
                                            analy.Username = dicoMessenger[link];
                                            analy.Url = forGrid.Url.Replace("messages/t/", "");
                                            analy.PathToPicture = "\\Messenger\\PicturesProfiles\\" + forGrid.Username + ".jpg";
                                            analy.PathToFolder = forGrid.PathToFolder;
                                        }
                                        catch
                                        {

                                        }


                                        if (!Analytics.ContainsKey(analy.Category + ";" + analy.Username + ";" + analy.Url))
                                            Analytics.Add(analy.Category + ";" + analy.Username + ";" + analy.Url, analy);


                                        backgroundWorkerGetMessenger.ReportProgress(-7, forGrid);
                                        //FillDataGridViewMessenger(pathToFolder, link);
                                        //continue;
                                    }




                                }
                                catch (Exception ex)//SI TIMEOUT
                                {
                                    //MessageBox.Show("error dans Messenger : " + ex.Message);
                                    //((IJavaScriptExecutor)driverMessenger).ExecuteScript("return window.stop");
                                    driverMessenger.Navigate().Refresh();
                                    Thread.Sleep(1000);

                                    backgroundWorkerGetMessenger.ReportProgress(-666, link);

                                    continue;



                                    Screenshot imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                    imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();

                                    Thread.Sleep(500);


                                    //imageScreenshott.SaveAsFile(pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg", OpenQA.Selenium.ScreenshotImageFormat.Jpeg);
                                    imageScreenshott.SaveAsFile(pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + 1 + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);

                                    Thread.Sleep(500);

                                    string topPrec = "";
                                    textes = imageDown.Text;


                                    int j = 1;
                                    int hauteurfromdate = 0;
                                    string hauteurfromdateString = "";

                                    Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                                    long innerHeightt = (long)innerHeight;
                                    long scrolll = (long)innerHeight;
                                    long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                                    //on initialise

                                    IList<IWebElement> firstlisteVocauxx = null;
                                    IList<IWebElement> firstallDivElements = null;
                                    IList<IWebElement> firstallOthers = new List<IWebElement>();
                                    List<IWebElement> listeNotReadOnly = null;
                                    List<IWebElement> listeOthersNotReadOnly = new List<IWebElement>();
                                    List<IWebElement> listeVideoNotReadOnly = new List<IWebElement>();
                                    var toRemove = new HashSet<IWebElement>();
                                    var toRemoveOthers = new HashSet<IWebElement>();
                                    var toRemoveVideo = new HashSet<IWebElement>();

                                    IList<IWebElement> listeVocauxxOriginal;
                                    IList<IWebElement> allDivElementsOriginal = null;
                                    IList<IWebElement> allOthersOriginal = new List<IWebElement>();

                                    foreach (string classee in classesConnues)
                                    {
                                        if (classee.Contains("_1mj2 _2e-6") || classee.Contains("_1mj4 _2e-7"))//|| classe.Contains("_3058 _15gf")
                                        {

                                            firstlisteVocauxx = driverMessenger.FindElements(By.XPath("//div[@class='_1mj2 _2e-6']"));
                                            listeNotReadOnly = firstlisteVocauxx.ToList();

                                        }

                                        if (classee.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))//si classe contenant vidéo on télécharge d'abord la vidéo
                                        {

                                            firstallDivElements = driverMessenger.FindElementsByXPath(classee + "//video");//_ox1 _21y0}
                                            listeVideoNotReadOnly = firstallDivElements.ToList();
                                        }

                                        if (!classee.Contains("_1mj2 _2e-6") || !classee.Contains("_1mj4 _2e-7") || classee.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))
                                        {

                                            foreach (IWebElement el in driverMessenger.FindElementsByXPath(classee))
                                            {
                                                firstallOthers.Add(el);
                                                listeOthersNotReadOnly.Add(el);
                                            }

                                            //firstallOthers = driverMessenger.FindElementsByXPath(classee);//_ox1 _21y0}
                                            //listeOthersNotReadOnly = firstallOthers.ToList();

                                        }


                                    }


                                    //calcul du temps
                                    datumm = new DateTime(DateTime.Today.Day, DateTime.Today.Month, DateTime.Today.Year - 1);
                                    if (datumm.Year != 1900)
                                    {
                                        IList<IWebElement> listeTimes = driver.FindElements(By.TagName("time"));
                                        Thread.Sleep(2000);

                                        string dernieredate = "";
                                        string datum = "";

                                        if (listeTimes[0].Text.ToLower().Contains("à"))
                                        {
                                            datum = listeTimes[0].Text.ToLower().Split('à')[0].Trim().Replace(" ", "/");
                                            if (mois.ContainsKey(datum.Split('/')[1].ToLower()))
                                            {
                                                datum = datum.ToLower().Replace(datum.Split('/')[1].ToLower(), mois[datum.Split('/')[1].ToLower()]);
                                            }

                                        }
                                        else
                                            datum = listeTimes[0].Text.Split(' ')[0];

                                        CultureInfo culture = new CultureInfo("fr-FR");
                                        DateTime testDatumValable;
                                        if (!DateTime.TryParse(datum, out testDatumValable))
                                            continue;

                                        DateTime firstDate = Convert.ToDateTime(datum, culture);// premiere date dans la liste
                                        DateTime tempss;


                                        tempss = Convert.ToDateTime(datum, culture);
                                        DateTime date2 = new DateTime(datumm.Year, datumm.Month, datumm.Day);



                                        try
                                        {


                                            foreach (IWebElement el in listeTimes)
                                            {
                                                if (DateTime.Compare(firstDate, date2) == 0)
                                                    break;

                                                //DateTime firstDate;



                                                datum = "";
                                                if (listeTimes[0].Text.ToLower().Contains("à"))
                                                {
                                                    datum = listeTimes[0].Text.ToLower().Split('à')[0].Trim().Replace(" ", "/");
                                                    if (mois.ContainsKey(datum.Split('/')[1].ToLower()))
                                                    {
                                                        datum = datum.ToLower().Replace(datum.Split('/')[1].ToLower(), mois[datum.Split('/')[1].ToLower()]);
                                                    }

                                                }
                                                else
                                                    datum = listeTimes[0].Text.Split(' ')[0];


                                                if (DateTime.TryParse(datum, out testDatumValable))
                                                    firstDate = Convert.ToDateTime(datum, culture);// premiere date dans la liste
                                                else
                                                    continue;

                                                datum = "";
                                                if (el.Text.ToLower().Contains("à"))
                                                {
                                                    datum = el.Text.ToLower().Split('à')[0].Trim().Replace(" ", "/");
                                                    if (mois.ContainsKey(datum.Split('/')[1].ToLower()))
                                                    {
                                                        datum = datum.ToLower().Replace(datum.Split('/')[1].ToLower(), mois[datum.Split('/')[1].ToLower()]);

                                                        if (Convert.ToInt32(datum.Split('/')[0]) < 10 && !datum.Split('/')[0].StartsWith("0"))
                                                            datum = "0" + datum;
                                                    }

                                                }
                                                else
                                                    datum = el.Text.Split(' ')[0];

                                                try
                                                {
                                                    tempss = Convert.ToDateTime(datum, culture);
                                                }
                                                catch
                                                {
                                                    continue;
                                                }

                                                int result = 0;
                                                try
                                                {


                                                    result = DateTime.Compare(tempss, date2);
                                                    string relationship;

                                                    if (result < 0)
                                                    {
                                                        earlier.Add(el);
                                                        relationship = "is earlier than";
                                                    }
                                                    else
                                                    if (result == 0)
                                                    {
                                                        relationship = "is the same time as";
                                                        sameTime.Add(tempss);

                                                        if (firstDate != tempss)
                                                        {
                                                            //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollIntoView(true) + 1600;", el);
                                                            //Thread.Sleep(500);
                                                            STOP = true;
                                                            top = "0px";
                                                            fromdate = el;
                                                            break;
                                                        }


                                                    }
                                                    else
                                                    {
                                                        relationship = "is later than";
                                                    }



                                                }
                                                catch
                                                {

                                                }


                                            }

                                            if (!STOP)
                                            {
                                                int result = DateTime.Compare(firstDate, date2);
                                                if (result < 0)
                                                {
                                                    STOP = true;
                                                    top = "0px";
                                                    fromdate = earlier[earlier.Count() - 1];

                                                }
                                            }

                                        }
                                        catch
                                        {

                                        }


                                    }



                                    while (true)
                                    {

                                        if (fromdate != null)
                                        {
                                            //hauteurfromdate = fromdate.Location.Y + (Int32)scrolll;
                                            hauteurfromdate = fromdate.Location.Y;
                                            hauteurfromdateString = hauteurfromdate.ToString();

                                            ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollIntoView(true);", fromdate);
                                            Thread.Sleep(500);

                                            //hauteurfromdate = fromdate.Location.Y;
                                            fromdate = null;
                                            STOP = false;
                                            //hauteur += 600;

                                        }
                                        else
                                        {

                                            //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollBy(0,450);", imageDown);
                                            ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollBy(0," + hauteurr + ");", imageDown);

                                            Thread.Sleep(WAIT);
                                        }



                                        if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                        {

                                            try
                                            {
                                                driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                            }
                                            catch
                                            {

                                            }
                                        }
                                        //int hei = imageDown.Size.Height;
                                        messenger = driverMessenger.PageSource;

                                        if (!FASTMESSENGER)
                                            foreach (string classe in classesConnues)
                                            {

                                                if (classe.Contains("_1mj2 _2e-6") || classe.Contains("_1mj4 _2e-7"))//|| classe.Contains("_3058 _15gf")
                                                {


                                                    //pour récupérer les a contenant la longueur du message vocal
                                                    //IList<IWebElement> newlisteVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                    //IList<IWebElement> listeVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                    IList<IWebElement> listeVocauxx = firstlisteVocauxx;
                                                    listeVocauxxOriginal = driverMessenger.FindElements(By.XPath("//div[@class='_1mj2 _2e-6']"));

                                                    if (!listeVocauxxOriginal.SequenceEqual(firstlisteVocauxx))
                                                    {
                                                        listeVocauxx = listeVocauxxOriginal;
                                                        firstlisteVocauxx = listeVocauxxOriginal;
                                                        listeNotReadOnly = listeVocauxx.ToList();

                                                    }


                                                    List<IWebElement> newListVocaux = listeNotReadOnly.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList();


                                                    if (listeNotReadOnly.Count > 0)
                                                        foreach (IWebElement ell in newListVocaux)
                                                        {
                                                            //if (listeVocaux[0].Location.Y > 15 && listeVocaux[0].Location.Y < (resolutionEcran - 250))
                                                            //    break;
                                                            if (ell.Text == "")
                                                                continue;

                                                            string tentation = ell.ToString();
                                                            string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                            if (ell.Location.Y > 15 && ell.Location.Y < (resolutionEcran - 250))
                                                            {
                                                                //string tentation = ell.ToString();
                                                                //string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];


                                                                IList<IWebElement> els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs _5z-5']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                                string dateAudio = "";
                                                                string nomFichierAudio = "";

                                                                foreach (IWebElement el in els)
                                                                {
                                                                    if (el.GetAttribute("data-tooltip-content") != null)
                                                                    {

                                                                        if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                        {
                                                                            var texte = el.GetAttribute("data-tooltip-content");
                                                                            var position = el.Location;
                                                                            dateAudio = texte.Replace(":", "-");
                                                                            nomFichierAudio = "From";
                                                                            toRemove.Add(ell);
                                                                            break;
                                                                        }



                                                                    }
                                                                }
                                                                if (dateAudio == "")
                                                                {
                                                                    els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                                    dateAudio = "";
                                                                    foreach (IWebElement el in els)
                                                                    {
                                                                        if (el.GetAttribute("data-tooltip-content") != null)
                                                                        {

                                                                            if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                            {
                                                                                var texte = el.GetAttribute("data-tooltip-content");
                                                                                var position = el.Location;
                                                                                dateAudio = texte.Replace(":", "-");
                                                                                nomFichierAudio = "To";
                                                                                break;
                                                                            }



                                                                        }
                                                                    }
                                                                }

                                                                string duree = ell.Text.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries)[0];


                                                                if (duree.Length == 4)
                                                                    duree = "00:0" + duree;

                                                                if (audioVisibles.ContainsKey(idd))
                                                                {
                                                                    audioVisibless.Add(audioVisibles[idd]);
                                                                    continue;
                                                                }

                                                                try
                                                                {
                                                                    TimeSpan tempss;
                                                                    TimeSpan.TryParse(duree, out tempss);
                                                                    //DateTime temps;
                                                                    //DateTime.TryParse(duree, out temps);
                                                                    ell.Click();
                                                                    StartRecord(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                                    Stopwatch sw = new Stopwatch();
                                                                    sw.Start();
                                                                    //Thread.Sleep(500);
                                                                    while (true)
                                                                    {

                                                                        if (sw.ElapsedMilliseconds > tempss.TotalMilliseconds + (2000))
                                                                        {
                                                                            if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                                                            {

                                                                                try
                                                                                {
                                                                                    driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                                                                }
                                                                                catch
                                                                                {

                                                                                }
                                                                            }
                                                                            break;
                                                                        }

                                                                        toRemove.Add(ell);
                                                                    }

                                                                    StopRecording();
                                                                    Thread.Sleep(1000);

                                                                    if (!audioVisibles.ContainsKey(idd))
                                                                    {
                                                                        audioVisibles.Add(idd, pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                                        audioVisibless.Add(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");

                                                                        if (!classeTraitee.ContainsKey(idd))
                                                                        {
                                                                            classeTraitee.Add(idd, idd);
                                                                        }
                                                                    }



                                                                    j++;

                                                                }
                                                                catch (Exception exx)
                                                                {
                                                                    //StopRecording();
                                                                    //Thread.Sleep(5000);
                                                                }


                                                                //ell.Click();


                                                            }



                                                        }

                                                    listeNotReadOnly.RemoveAll(toRemove.Contains);

                                                    //pour cliquer sur le message vocal et jouer le son
                                                    //driverMessenger.FindElementsByXPath(classe)[0].Click();

                                                }


                                                if (classe.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))//si classe contenant vidéo on télécharge d'abord la vidéo
                                                {

                                                    IList<IWebElement> listeVideos = firstallDivElements;
                                                    allDivElementsOriginal = driverMessenger.FindElementsByXPath(classe + "//video");

                                                    if (!allDivElementsOriginal.SequenceEqual(firstallDivElements))
                                                    {
                                                        listeVideos = allDivElementsOriginal;
                                                        firstlisteVocauxx = allDivElementsOriginal;
                                                        listeVideoNotReadOnly = listeVideos.ToList();

                                                    }


                                                    List<IWebElement> newListVideos = listeVideoNotReadOnly.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList();



                                                    //IList<IWebElement> allDivElements = driverMessenger.FindElementsByXPath(classe + "//video");//_ox1 _21y0
                                                    if (listeVideoNotReadOnly.Count > 0)
                                                        for (int ii = newListVideos.Count() - 1; ii >= 0; ii--)
                                                        {
                                                            string tentation = newListVideos[ii].ToString();
                                                            string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                            if (classeTraitee.ContainsKey(idd))
                                                            {
                                                                continue;
                                                            }


                                                            if (listeVideoNotReadOnly[ii].GetAttribute("class") != null)
                                                            {
                                                                //here the print statement will print the value of each div tag element
                                                                var tmp = newListVideos[ii].GetAttribute("class");

                                                                if (tmp == "_ox1 _21y0")// si div avec vidéo
                                                                {
                                                                    //var video = driver.FindElementsByClassName(tmp);
                                                                    //IList<IWebElement> allDivElementss = driver.FindElementsByClassName(tmp);

                                                                    try
                                                                    {
                                                                        //var tmpp = allDivElementss[0].FindElement(By.XPath("video")).GetAttribute("src");
                                                                        var tmpp = newListVideos[ii].GetAttribute("src");

                                                                        //if (allDivElements[0].Location.Y > 15 && allDivElements[0].Location.Y < (resolutionEcran - 250))
                                                                        //    break;


                                                                        if (newListVideos[ii].Location.Y > 15 && newListVideos[ii].Location.Y < (resolutionEcran - 250))
                                                                        {


                                                                            if (!videosVisibles.ContainsKey(tmpp + ii))
                                                                            {
                                                                                videosVisibles.Add(tmpp + ii, tmpp);

                                                                                if (!classeTraitee.ContainsKey(idd))
                                                                                {
                                                                                    classeTraitee.Add(idd, tmpp);
                                                                                }
                                                                            }

                                                                            toRemoveVideo.Add(newListVideos[ii]);
                                                                        }
                                                                        //break;



                                                                        //IWebElement oo = allDivElementss[0].FindElement(By.XPath("video"));


                                                                    }
                                                                    catch (Exception exx)
                                                                    {

                                                                    }

                                                                }
                                                            }

                                                            listeVideoNotReadOnly.RemoveAll(toRemoveVideo.Contains);

                                                        }




                                                }

                                                if (!classe.Contains("_1mj2 _2e-6") || !classe.Contains("_1mj4 _2e-7") || !classe.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))
                                                {
                                                    foreach (IWebElement el in driverMessenger.FindElementsByXPath(classe))
                                                    {
                                                        //firstallOthers.Add(el);
                                                        //listeOthersNotReadOnly.Add(el);
                                                        allOthersOriginal.Add(el);
                                                    }




                                                }




                                            }//FIN FOREACH CLASSES CONNUES


                                        IList<IWebElement> listeOthers = firstallOthers;
                                        //allOthersOriginal = driverMessenger.FindElements(By.XPath(classe));

                                        if (!allOthersOriginal.SequenceEqual(firstallOthers))
                                        {
                                            listeOthers = allOthersOriginal;
                                            firstallOthers = allOthersOriginal;
                                            listeOthersNotReadOnly = listeOthers.ToList();

                                        }

                                        List<IWebElement> newList = listeOthersNotReadOnly.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList();


                                        if (listeOthersNotReadOnly.Count > 0)

                                            //var messages = driverMessenger.FindElementsByXPath(classe);
                                            //object[] messagesToExtract = messages.ToArray();


                                            foreach (OpenQA.Selenium.Remote.RemoteWebElement o in newList)
                                            {

                                                string tentation = o.ToString();
                                                string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                if (classeTraitee.ContainsKey(idd))
                                                    continue;

                                                if (!dicoMessagesFrom.ContainsKey(idd))
                                                {
                                                    dicoMessagesFrom.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                }
                                                //else
                                                //    continue;


                                                if (o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250))
                                                {
                                                    if (!messagesVisibles.ContainsKey(idd) && o.Text != "" && !o.Text.Contains("Lire-4:01Paramètres"))
                                                    {
                                                        messagesVisibles.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));

                                                        if (!classeTraitee.ContainsKey(idd))
                                                        {
                                                            classeTraitee.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                        }
                                                    }

                                                    toRemoveOthers.Add(o);
                                                }
                                                //else
                                                //    break;

                                                //messagesToExtract.ToList().Remove(o);

                                            }

                                        listeOthersNotReadOnly.RemoveAll(toRemoveOthers.Contains);
                                        allOthersOriginal = new List<IWebElement>();
                                        toRemoveOthers = new HashSet<IWebElement>();



                                        //on récupère tous les messages ppur ensuite comparer avec messageFrom et messageTo
                                        //imageDown = driver.FindElementById(idTmp);
                                        //Thread.Sleep(200);

                                        //if (textes != imageDown.Text)
                                        //    textes = imageDown.Text + "\n";

                                        messenger = driverMessenger.PageSource;
                                        //topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                        //on récupère la valeur Top de la scrollBar

                                        topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                        //on récupère la valeur Top de la scrollBar

                                        top = "";
                                        try
                                        {
                                            foreach (string t in topScrollBar)
                                            {
                                                string tmp = t.Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                                if (!tmp.Contains("top:") || tmp.Contains("hidden"))
                                                    continue;

                                                top = tmp.Substring(tmp.IndexOf("top: ") + 4).Split(';')[0];

                                                //if ((!tmp.Contains("top:") && ! tmp.Contains("uiScrollableAreaWrap")) || tmp.StartsWith("<html"))
                                                //    continue;

                                                //top = t.Substring(t.IndexOf("top: ") + 4).Split(';')[0];
                                            }

                                            if (top == topPrec)
                                                break;

                                            topPrec = top;
                                        }
                                        catch
                                        {

                                        }

                                        imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                        //imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();

                                        Thread.Sleep(500);


                                        //imageScreenshott.SaveAsFile(pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg", OpenQA.Selenium.ScreenshotImageFormat.Jpeg);
                                        imageScreenshott.SaveAsFile(pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);


                                        Thread.Sleep(500);

                                        //string pathToFile = pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg";
                                        string pathToFile = pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png";
                                        //pathToFolder = pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString);
                                        pathToFolder = pathToSaveScreenshot;

                                        if (!FASTMESSENGER)
                                            foreach (string cle in messagesVisibles.Keys)
                                            {

                                                if (!messagesVisiblesForFile.ContainsKey(cle))
                                                {

                                                    string[] lignes = messagesVisibles[cle].Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);

                                                    string tmp = "";
                                                    foreach (string li in lignes)
                                                    {
                                                        tmp += li.Trim().Replace("\r", "").Replace(";", "");
                                                    }



                                                    messagesVisiblesForFile.Add(cle, tmp + ";" + pathToFile + "\n");
                                                }

                                                //messagesVisiblesWithScreenshots += valeur + ";" + pathToFile + "\n";
                                            }

                                        if (!FASTMESSENGER)
                                            if (videosVisibles.Count > 0)
                                                foreach (string cle in videosVisibles.Keys)
                                                {
                                                    //if (!videosVisiblesForFile.ContainsKey(cle))
                                                    //{

                                                    videosVisiblesForFile.Add(cle + ";" + pathToFile + "\n");
                                                    //}
                                                }

                                        if (!FASTMESSENGER)
                                            if (audioVisibless.Count > 0)
                                                foreach (string cle in audioVisibless)
                                                {
                                                    //if (!videosVisiblesForFile.ContainsKey(cle))
                                                    //{
                                                    if (!audioVisiblesForFile.ContainsKey(cle))
                                                        audioVisiblesForFile.Add(cle, cle + ";" + pathToFile + "\n");
                                                    //}
                                                }

                                        messagesVisibles = new Dictionary<string, string>();
                                        videosVisibles = new Dictionary<string, string>();
                                        //audioVisibles = new Dictionary<string, string>();
                                        hauteur += 600;
                                        hauteurr = 450;


                                        i++;
                                    }
                                    ForGrid forGrid = new ForGrid();
                                    forGrid.PathToFolder = pathToFolder;
                                    forGrid.Url = link;

                                    imageDown = driverMessenger.FindElementById(idTmp);
                                    textes = imageDown.Text + "\n";


                                    backgroundWorkerGetMessenger.ReportProgress(-7, forGrid);



                                }


                            }
                            catch (Exception ex)//FIN TRY TIMEOUT-----------------------------------------------------------------------
                            {
                                //MessageBox.Show("error dans Messenger " + ex.Message);

                                Screenshot imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();

                                Thread.Sleep(500);


                                //imageScreenshott.SaveAsFile(pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg", OpenQA.Selenium.ScreenshotImageFormat.Jpeg);
                                imageScreenshott.SaveAsFile(pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + 1 + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);

                                Thread.Sleep(500);

                                string topPrec = "";
                                textes = imageDown.Text;


                                int j = 1;
                                int hauteurfromdate = 0;
                                string hauteurfromdateString = "";

                                Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                                long innerHeightt = (long)innerHeight;
                                long scrolll = (long)innerHeight;
                                long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                                //on initialise

                                IList<IWebElement> firstlisteVocauxx = null;
                                IList<IWebElement> firstallDivElements = null;
                                IList<IWebElement> firstallOthers = new List<IWebElement>();
                                List<IWebElement> listeNotReadOnly = null;
                                List<IWebElement> listeOthersNotReadOnly = new List<IWebElement>();
                                List<IWebElement> listeVideoNotReadOnly = new List<IWebElement>();
                                var toRemove = new HashSet<IWebElement>();
                                var toRemoveOthers = new HashSet<IWebElement>();
                                var toRemoveVideo = new HashSet<IWebElement>();

                                IList<IWebElement> listeVocauxxOriginal;
                                IList<IWebElement> allDivElementsOriginal = null;
                                IList<IWebElement> allOthersOriginal = new List<IWebElement>();

                                foreach (string classee in classesConnues)
                                {
                                    if (classee.Contains("_1mj2 _2e-6") || classee.Contains("_1mj4 _2e-7"))//|| classe.Contains("_3058 _15gf")
                                    {

                                        firstlisteVocauxx = driverMessenger.FindElements(By.XPath("//div[@class='_1mj2 _2e-6']"));
                                        listeNotReadOnly = firstlisteVocauxx.ToList();

                                    }

                                    if (classee.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))//si classe contenant vidéo on télécharge d'abord la vidéo
                                    {

                                        firstallDivElements = driverMessenger.FindElementsByXPath(classee + "//video");//_ox1 _21y0}
                                        listeVideoNotReadOnly = firstallDivElements.ToList();
                                    }

                                    if (!classee.Contains("_1mj2 _2e-6") || !classee.Contains("_1mj4 _2e-7") || classee.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))
                                    {

                                        foreach (IWebElement el in driverMessenger.FindElementsByXPath(classee))
                                        {
                                            firstallOthers.Add(el);
                                            listeOthersNotReadOnly.Add(el);
                                        }

                                        //firstallOthers = driverMessenger.FindElementsByXPath(classee);//_ox1 _21y0}
                                        //listeOthersNotReadOnly = firstallOthers.ToList();

                                    }


                                }

                                while (true)
                                {

                                    if (fromdate != null)
                                    {
                                        //hauteurfromdate = fromdate.Location.Y + (Int32)scrolll;
                                        hauteurfromdate = fromdate.Location.Y;
                                        hauteurfromdateString = hauteurfromdate.ToString();

                                        ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollIntoView(true);", fromdate);
                                        Thread.Sleep(500);

                                        //hauteurfromdate = fromdate.Location.Y;
                                        fromdate = null;
                                        STOP = false;
                                        //hauteur += 600;

                                    }
                                    else
                                    {

                                        //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollBy(0,450);", imageDown);
                                        ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollBy(0," + hauteurr + ");", imageDown);

                                        Thread.Sleep(WAIT);
                                    }



                                    if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                    {

                                        try
                                        {
                                            driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                        }
                                        catch
                                        {

                                        }
                                    }
                                    //int hei = imageDown.Size.Height;
                                    messenger = driverMessenger.PageSource;

                                    if (!FASTMESSENGER)
                                        foreach (string classe in classesConnues)
                                        {

                                            if (classe.Contains("_1mj2 _2e-6") || classe.Contains("_1mj4 _2e-7"))//|| classe.Contains("_3058 _15gf")
                                            {


                                                //pour récupérer les a contenant la longueur du message vocal
                                                //IList<IWebElement> newlisteVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                //IList<IWebElement> listeVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                IList<IWebElement> listeVocauxx = firstlisteVocauxx;
                                                listeVocauxxOriginal = driverMessenger.FindElements(By.XPath("//div[@class='_1mj2 _2e-6']"));

                                                if (!listeVocauxxOriginal.SequenceEqual(firstlisteVocauxx))
                                                {
                                                    listeVocauxx = listeVocauxxOriginal;
                                                    firstlisteVocauxx = listeVocauxxOriginal;
                                                    listeNotReadOnly = listeVocauxx.ToList();

                                                }


                                                List<IWebElement> newListVocaux = listeNotReadOnly.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList();


                                                if (listeNotReadOnly.Count > 0)
                                                    foreach (IWebElement ell in newListVocaux)
                                                    {
                                                        //if (listeVocaux[0].Location.Y > 15 && listeVocaux[0].Location.Y < (resolutionEcran - 250))
                                                        //    break;
                                                        if (ell.Text == "")
                                                            continue;

                                                        string tentation = ell.ToString();
                                                        string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                        if (ell.Location.Y > 15 && ell.Location.Y < (resolutionEcran - 250))
                                                        {
                                                            //string tentation = ell.ToString();
                                                            //string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];


                                                            IList<IWebElement> els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs _5z-5']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                            string dateAudio = "";
                                                            string nomFichierAudio = "";

                                                            foreach (IWebElement el in els)
                                                            {
                                                                if (el.GetAttribute("data-tooltip-content") != null)
                                                                {

                                                                    if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                    {
                                                                        var texte = el.GetAttribute("data-tooltip-content");
                                                                        var position = el.Location;
                                                                        dateAudio = texte.Replace(":", "-");
                                                                        nomFichierAudio = "From";
                                                                        toRemove.Add(ell);
                                                                        break;
                                                                    }



                                                                }
                                                            }
                                                            if (dateAudio == "")
                                                            {
                                                                els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                                dateAudio = "";
                                                                foreach (IWebElement el in els)
                                                                {
                                                                    if (el.GetAttribute("data-tooltip-content") != null)
                                                                    {

                                                                        if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                        {
                                                                            var texte = el.GetAttribute("data-tooltip-content");
                                                                            var position = el.Location;
                                                                            dateAudio = texte.Replace(":", "-");
                                                                            nomFichierAudio = "To";
                                                                            break;
                                                                        }



                                                                    }
                                                                }
                                                            }

                                                            string duree = ell.Text.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries)[0];


                                                            if (duree.Length == 4)
                                                                duree = "00:0" + duree;

                                                            if (audioVisibles.ContainsKey(idd))
                                                            {
                                                                audioVisibless.Add(audioVisibles[idd]);
                                                                continue;
                                                            }

                                                            try
                                                            {
                                                                TimeSpan tempss;
                                                                TimeSpan.TryParse(duree, out tempss);
                                                                //DateTime temps;
                                                                //DateTime.TryParse(duree, out temps);
                                                                ell.Click();
                                                                StartRecord(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                                Stopwatch sw = new Stopwatch();
                                                                sw.Start();
                                                                //Thread.Sleep(500);
                                                                while (true)
                                                                {

                                                                    if (sw.ElapsedMilliseconds > tempss.TotalMilliseconds + (2000))
                                                                    {
                                                                        if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                                                        {

                                                                            try
                                                                            {
                                                                                driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                                                            }
                                                                            catch
                                                                            {

                                                                            }
                                                                        }
                                                                        break;
                                                                    }

                                                                    toRemove.Add(ell);
                                                                }

                                                                StopRecording();
                                                                Thread.Sleep(1000);

                                                                if (!audioVisibles.ContainsKey(idd))
                                                                {
                                                                    audioVisibles.Add(idd, pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                                    audioVisibless.Add(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");

                                                                    if (!classeTraitee.ContainsKey(idd))
                                                                    {
                                                                        classeTraitee.Add(idd, idd);
                                                                    }
                                                                }



                                                                j++;

                                                            }
                                                            catch (Exception exx)
                                                            {
                                                                //StopRecording();
                                                                //Thread.Sleep(5000);
                                                            }


                                                            //ell.Click();


                                                        }



                                                    }

                                                listeNotReadOnly.RemoveAll(toRemove.Contains);

                                                //pour cliquer sur le message vocal et jouer le son
                                                //driverMessenger.FindElementsByXPath(classe)[0].Click();

                                            }


                                            if (classe.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))//si classe contenant vidéo on télécharge d'abord la vidéo
                                            {

                                                IList<IWebElement> listeVideos = firstallDivElements;
                                                allDivElementsOriginal = driverMessenger.FindElementsByXPath(classe + "//video");

                                                if (!allDivElementsOriginal.SequenceEqual(firstallDivElements))
                                                {
                                                    listeVideos = allDivElementsOriginal;
                                                    firstlisteVocauxx = allDivElementsOriginal;
                                                    listeVideoNotReadOnly = listeVideos.ToList();

                                                }


                                                List<IWebElement> newListVideos = listeVideoNotReadOnly.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList();



                                                //IList<IWebElement> allDivElements = driverMessenger.FindElementsByXPath(classe + "//video");//_ox1 _21y0
                                                if (listeVideoNotReadOnly.Count > 0)
                                                    for (int ii = newListVideos.Count() - 1; ii >= 0; ii--)
                                                    {
                                                        string tentation = newListVideos[ii].ToString();
                                                        string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                        if (classeTraitee.ContainsKey(idd))
                                                        {
                                                            continue;
                                                        }


                                                        if (listeVideoNotReadOnly[ii].GetAttribute("class") != null)
                                                        {
                                                            //here the print statement will print the value of each div tag element
                                                            var tmp = newListVideos[ii].GetAttribute("class");

                                                            if (tmp == "_ox1 _21y0")// si div avec vidéo
                                                            {
                                                                //var video = driver.FindElementsByClassName(tmp);
                                                                //IList<IWebElement> allDivElementss = driver.FindElementsByClassName(tmp);

                                                                try
                                                                {
                                                                    //var tmpp = allDivElementss[0].FindElement(By.XPath("video")).GetAttribute("src");
                                                                    var tmpp = newListVideos[ii].GetAttribute("src");

                                                                    //if (allDivElements[0].Location.Y > 15 && allDivElements[0].Location.Y < (resolutionEcran - 250))
                                                                    //    break;


                                                                    if (newListVideos[ii].Location.Y > 15 && newListVideos[ii].Location.Y < (resolutionEcran - 250))
                                                                    {


                                                                        if (!videosVisibles.ContainsKey(tmpp + ii))
                                                                        {
                                                                            videosVisibles.Add(tmpp + ii, tmpp);

                                                                            if (!classeTraitee.ContainsKey(idd))
                                                                            {
                                                                                classeTraitee.Add(idd, tmpp);
                                                                            }
                                                                        }

                                                                        toRemoveVideo.Add(newListVideos[ii]);
                                                                    }
                                                                    //break;



                                                                    //IWebElement oo = allDivElementss[0].FindElement(By.XPath("video"));


                                                                }
                                                                catch (Exception exx)
                                                                {

                                                                }

                                                            }
                                                        }

                                                        listeVideoNotReadOnly.RemoveAll(toRemoveVideo.Contains);

                                                    }




                                            }

                                            if (!classe.Contains("_1mj2 _2e-6") || !classe.Contains("_1mj4 _2e-7") || !classe.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))
                                            {
                                                foreach (IWebElement el in driverMessenger.FindElementsByXPath(classe))
                                                {
                                                    //firstallOthers.Add(el);
                                                    //listeOthersNotReadOnly.Add(el);
                                                    allOthersOriginal.Add(el);
                                                }




                                            }




                                        }//FIN FOREACH CLASSES CONNUES


                                    IList<IWebElement> listeOthers = firstallOthers;
                                    //allOthersOriginal = driverMessenger.FindElements(By.XPath(classe));

                                    if (!allOthersOriginal.SequenceEqual(firstallOthers))
                                    {
                                        listeOthers = allOthersOriginal;
                                        firstallOthers = allOthersOriginal;
                                        listeOthersNotReadOnly = listeOthers.ToList();

                                    }

                                    List<IWebElement> newList = listeOthersNotReadOnly.Where(o => o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250)).ToList();


                                    if (listeOthersNotReadOnly.Count > 0)

                                        //var messages = driverMessenger.FindElementsByXPath(classe);
                                        //object[] messagesToExtract = messages.ToArray();


                                        foreach (OpenQA.Selenium.Remote.RemoteWebElement o in newList)
                                        {

                                            string tentation = o.ToString();
                                            string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                            if (classeTraitee.ContainsKey(idd))
                                                continue;

                                            if (!dicoMessagesFrom.ContainsKey(idd))
                                            {
                                                dicoMessagesFrom.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                            }
                                            //else
                                            //    continue;


                                            if (o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250))
                                            {
                                                if (!messagesVisibles.ContainsKey(idd) && o.Text != "" && !o.Text.Contains("Lire-4:01Paramètres"))
                                                {
                                                    messagesVisibles.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));

                                                    if (!classeTraitee.ContainsKey(idd))
                                                    {
                                                        classeTraitee.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                    }
                                                }

                                                toRemoveOthers.Add(o);
                                            }
                                            //else
                                            //    break;

                                            //messagesToExtract.ToList().Remove(o);

                                        }

                                    listeOthersNotReadOnly.RemoveAll(toRemoveOthers.Contains);
                                    allOthersOriginal = new List<IWebElement>();
                                    toRemoveOthers = new HashSet<IWebElement>();



                                    //on récupère tous les messages ppur ensuite comparer avec messageFrom et messageTo
                                    //imageDown = driver.FindElementById(idTmp);
                                    //Thread.Sleep(200);

                                    //if (textes != imageDown.Text)
                                    //    textes = imageDown.Text + "\n";

                                    messenger = driverMessenger.PageSource;
                                    //topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                    //on récupère la valeur Top de la scrollBar

                                    topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                    //on récupère la valeur Top de la scrollBar

                                    top = "";
                                    try
                                    {
                                        foreach (string t in topScrollBar)
                                        {
                                            string tmp = t.Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                            if (!tmp.Contains("top:") || tmp.Contains("hidden"))
                                                continue;

                                            top = tmp.Substring(tmp.IndexOf("top: ") + 4).Split(';')[0];

                                            //if ((!tmp.Contains("top:") && ! tmp.Contains("uiScrollableAreaWrap")) || tmp.StartsWith("<html"))
                                            //    continue;

                                            //top = t.Substring(t.IndexOf("top: ") + 4).Split(';')[0];
                                        }

                                        if (top == topPrec)
                                            break;

                                        topPrec = top;
                                    }
                                    catch
                                    {

                                    }

                                    imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                    //imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();

                                    Thread.Sleep(500);


                                    //imageScreenshott.SaveAsFile(pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg", OpenQA.Selenium.ScreenshotImageFormat.Jpeg);
                                    imageScreenshott.SaveAsFile(pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);


                                    Thread.Sleep(500);

                                    //string pathToFile = pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg";
                                    string pathToFile = pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png";
                                    //pathToFolder = pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString);
                                    pathToFolder = pathToSaveScreenshot;

                                    if (!FASTMESSENGER)
                                        foreach (string cle in messagesVisibles.Keys)
                                        {

                                            if (!messagesVisiblesForFile.ContainsKey(cle))
                                            {

                                                string[] lignes = messagesVisibles[cle].Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);

                                                string tmp = "";
                                                foreach (string li in lignes)
                                                {
                                                    tmp += li.Trim().Replace("\r", "").Replace(";", "");
                                                }



                                                messagesVisiblesForFile.Add(cle, tmp + ";" + pathToFile + "\n");
                                            }

                                            //messagesVisiblesWithScreenshots += valeur + ";" + pathToFile + "\n";
                                        }

                                    if (!FASTMESSENGER)
                                        if (videosVisibles.Count > 0)
                                            foreach (string cle in videosVisibles.Keys)
                                            {
                                                //if (!videosVisiblesForFile.ContainsKey(cle))
                                                //{

                                                videosVisiblesForFile.Add(cle + ";" + pathToFile + "\n");
                                                //}
                                            }

                                    if (!FASTMESSENGER)
                                        if (audioVisibless.Count > 0)
                                            foreach (string cle in audioVisibless)
                                            {
                                                //if (!videosVisiblesForFile.ContainsKey(cle))
                                                //{
                                                if (!audioVisiblesForFile.ContainsKey(cle))
                                                    audioVisiblesForFile.Add(cle, cle + ";" + pathToFile + "\n");
                                                //}
                                            }

                                    messagesVisibles = new Dictionary<string, string>();
                                    videosVisibles = new Dictionary<string, string>();
                                    //audioVisibles = new Dictionary<string, string>();
                                    hauteur += 600;
                                    hauteurr = 450;


                                    i++;
                                }
                                ForGrid forGrid = new ForGrid();
                                forGrid.PathToFolder = pathToFolder;
                                forGrid.Url = link;

                                imageDown = driverMessenger.FindElementById(idTmp);
                                textes = imageDown.Text + "\n";


                                backgroundWorkerGetMessenger.ReportProgress(-7, forGrid);



                            }

                            string codePagee = driverMessenger.PageSource;

                            if (File.Exists(pathToSaveScreenshot + "\\Messenger_Messages.txt"))
                                File.Delete(pathToSaveScreenshot + "\\Messenger_Messages.txt");

                            //File.WriteAllText(dossierLocal + @"\friendsFromComments.txt", ligne);
                            File.WriteAllText(pathToSaveScreenshot + "\\Messenger_Messages.txt", textes);

                            //using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSaveScreenshot + "\\Messenger_Messages.txt", false))
                            //{
                            //    //if (File.Exists(saveFileDialog1.FileName))
                            //    //    File.Delete(saveFileDialog1.FileName);

                            //    file.Write(textes);
                            //}

                            //using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSaveScreenshot + "\\Messenger_Messages_Bis.txt", false))
                            //{
                            //    //if (File.Exists(saveFileDialog1.FileName))
                            //    //    File.Delete(saveFileDialog1.FileName);

                            //    textes = "";
                            //    foreach(string t in messagesVisibles.Values)
                            //    {
                            //        textes += t + "\n";
                            //    }


                            //    file.Write(textes);
                            //}

                            using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSaveScreenshot + "\\Messenger_Messages_With_Screenshots.txt", false))
                            {
                                textes = "";
                                foreach (string t in messagesVisiblesForFile.Values)
                                {
                                    textes += t;
                                }


                                file.Write(textes);
                                messagesVisiblesForFile = new Dictionary<string, string>();
                            }

                            using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSaveScreenshot + "\\Messenger_Videos_With_Screenshots.txt", false))
                            {
                                if (videosVisiblesForFile.Count > 0)
                                {
                                    textes = "";
                                    foreach (string t in videosVisiblesForFile)
                                    {
                                        textes += t;
                                    }


                                    file.Write(textes);

                                }



                            }

                            using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSaveScreenshot + "\\Messenger_Audio_With_Screenshots.txt", false))
                            {
                                if (audioVisiblesForFile.Count > 0)
                                {
                                    textes = "";
                                    foreach (string t in audioVisiblesForFile.Values)
                                    {
                                        textes += t;
                                    }


                                    file.Write(textes);

                                }



                            }

                            if (!Directory.Exists(pathToSaveScreenshot + "\\Videos\\"))
                            {
                                //EraseDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link], true);  
                                Directory.CreateDirectory(pathToSaveScreenshot + "\\Videos\\");
                            }

                            using (var client = new WebClient())
                            {

                                try

                                {
                                    Dictionary<string, string> dico = new Dictionary<string, string>();
                                    foreach (string t in videosVisiblesForFile)
                                    {
                                        //FileInfo fileinfo = new FileInfo(t);
                                        string keyy = t.Substring(t.LastIndexOf('/') + 1).Split('?')[0];

                                        if (!dico.ContainsKey(keyy))
                                        {
                                            dico.Add(keyy, t);
                                            string nomFichier = t.Substring(t.LastIndexOf('/') + 1).Split('?')[0];
                                            client.DownloadFile(t, pathToSaveScreenshot + "\\Videos\\" + nomFichier);
                                            Thread.Sleep(1000);
                                        }


                                    }

                                    videosVisiblesForFile = new List<string>();
                                }
                                catch (Exception ex)
                                {
                                    //MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT DES VIDEOS");
                                    //return;
                                }
                            }


                            //on essaie de récupérer les documents partagés
                            if (!FASTMESSENGER)
                                try
                                {
                                    IList<IWebElement> tmpp = driverMessenger.FindElements(By.ClassName("uiScrollableAreaContent"));
                                    foreach (IWebElement div in tmpp)
                                    {
                                        if (!div.Text.StartsWith("Information"))
                                            continue;

                                        IList<IWebElement> docPartagess = div.FindElements(By.TagName("a"));

                                        foreach (IWebElement elpart in docPartagess)
                                        {
                                            if (elpart.GetAttribute("href") != "")
                                            {
                                                docPartages.Add(elpart.GetAttribute("href"));
                                            }
                                        }
                                    }

                                }
                                catch
                                {

                                }

                            if (!FASTMESSENGER)
                                if (docPartages.Count > 0)
                                {
                                    if (!Directory.Exists(pathToSaveScreenshot + "\\Documents_Partages\\"))
                                    {
                                        //EraseDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link], true);  
                                        Directory.CreateDirectory(pathToSaveScreenshot + "\\Documents_Partages\\");
                                    }

                                    using (var client = new WebClient())
                                    {

                                        try

                                        {

                                            foreach (string t in docPartages)
                                            {
                                                try
                                                {
                                                    //FileInfo fichier = new FileInfo(t);
                                                    string urll = t;
                                                    string nomFichier = t.Split(new string[] { "%3F" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                                    urll = urll.Replace("%3A", ":").Replace("%3D", "=").Replace("%2F", "/").Replace("%3F", "?").Replace("%26", "&");

                                                    if (urll.Contains("https://l.facebook.com/l.php?u="))
                                                    {
                                                        nomFichier = nomFichier.Substring(nomFichier.LastIndexOf("%2F") + 3).Trim();
                                                        urll = urll.Substring(urll.IndexOf("https://l.facebook.com/l.php?u=") + 31);
                                                    }
                                                    //else
                                                    //    nomFichier = nomFichier.Split('?')[0].Substring(nomFichier.LastIndexOf("/") + 1).Trim();



                                                    client.DownloadFile(urll, pathToSaveScreenshot + "\\Documents_Partages\\" + nomFichier);
                                                    Thread.Sleep(1000);
                                                }

                                                catch
                                                {

                                                }

                                            }

                                            docPartages = new List<string>();
                                        }
                                        catch (Exception ex)
                                        {
                                            //MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT DES VIDEOS");
                                            //return;
                                        }
                                    }
                                }




                            Thread.Sleep(2500);

                            textes = "";
                            messagesVisiblesForFile = new Dictionary<string, string>();
                            messagesVisibles = new Dictionary<string, string>();
                            videosVisibles = new Dictionary<string, string>();
                            videosVisiblesForFile = new List<string>();
                            audioVisiblesForFile = new Dictionary<string, string>();
                            messagesVisibles = new Dictionary<string, string>();
                            videosVisibles = new Dictionary<string, string>();
                            audioVisibles = new Dictionary<string, string>();
                            audioVisibless = new List<string>();
                            //idFictif = 1;
                        }

                        textes = "";
                        messagesVisiblesForFile = new Dictionary<string, string>();
                        audioVisiblesForFile = new Dictionary<string, string>();
                        videosVisiblesForFile = new List<string>();
                        messagesVisibles = new Dictionary<string, string>();
                        videosVisibles = new Dictionary<string, string>();
                        audioVisibles = new Dictionary<string, string>();
                        audioVisibless = new List<string>();
                        classeTraitee = new Dictionary<string, string>();

                        idFictif = 1;
                    }


                }
                catch (Exception ex)
                {
                    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\ERROR_LOG.txt", false))
                    {

                        file.Write(ex.Message + "\n" + ex.StackTrace);
                    }

                }


                try
                {
                    Object lastHeight = ((IJavaScriptExecutor)driverMessenger).ExecuteScript("return document.body.scrollHeight");

                    while (true)
                    {
                        ((IJavaScriptExecutor)driverMessenger).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                        Thread.Sleep(2000);

                        Object newHeight = ((IJavaScriptExecutor)driverMessenger).ExecuteScript("return document.body.scrollHeight");
                        if (newHeight.Equals(lastHeight))
                        {
                            break;
                        }
                        lastHeight = newHeight;
                    }
                }
                catch
                {
                    //e.printStackTrace();
                }



            }
            catch
            {

                //driverMessenger.Quit();
            }




            //}
            //Thread.Sleep(2000);
            backgroundWorkerGetMessenger.ReportProgress(-105);
            Thread.Sleep(2000);
            //backgroundWorker1.CancelAsync();

            if (backgroundWorkerGetMessenger != null && backgroundWorkerGetMessenger.IsBusy)
                backgroundWorkerGetMessenger.CancelAsync();

            //labelanalyseencours.Visible = false;
            //pictureBoxwaiting.Visible = false;
            //pictureBoxlogofacebook.Visible = false;
        }
        private void MessengerForTesting(Dictionary<string, string> dicoMessenger, DateTime datumm)
        {


            if (driver == null)
            {
                InitializeDriver();
                driverMessenger.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }


                //while (!isElementPresentByID(driver, "email"))
                ////{
                //// 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driverMessenger.FindElementById("email");
                //// 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);
                ////}


                //// 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driverMessenger.FindElementById("pass");

                //// 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                //// 5. Find the search button (by Name) on the homepage
                driverMessenger.FindElementById("loginbutton").Click();
                ////searchButton.Click();
                Thread.Sleep(2500);
            }

            //string urlFriend = textBoxUSERNAMEFRIENDS.Text;
            //pour cacher fenetre DOS
            //var driverService = ChromeDriverService.CreateDefaultService();
            //driverService.HideCommandPromptWindow = true;

            //var driver = new ChromeDriver(driverService, new ChromeOptions());

            //System.Diagnostics.Process.Start(filepath);
            //ChromeOptions chromeOptions = new ChromeOptions();
            //chromeOptions.AddArguments("--disable-notifications");
            System.Random rnd = new System.Random();
            int nbreAnnee = 1;


            // 1. Maximize the browser
            //driver.Manage().Window.Maximize();
            //driverMessenger.Close();
            //driverMessenger = new ChromeDriver(driverService, chromeOptions);
            driverMessenger = driver;

            // 2. Go to the "Google" homepage
            //driverMessenger.Navigate().GoToUrl("https://facebook.com/login");


            //    //while (!isElementPresentByID(driver, "email"))
            //    ////{
            //    //// 3. Find the username textbox (by ID) on the homepage
            //    var userNameBox = driverMessenger.FindElementById("email");
            //    //// 4. Enter the text (to search for) in the textbox
            //    userNameBox.SendKeys(textBoxUSERNAME.Text);
            //    ////}


            //    //// 3. Find the username textbox (by ID) on the homepage
            //    var userpasswordBox = driverMessenger.FindElementById("pass");

            //    //// 4. Enter the text (to search for) in the textbox
            //    userpasswordBox.SendKeys(textBoxPASSWORD.Text);
            //    Thread.Sleep(5000);

            //    //// 5. Find the search button (by Name) on the homepage
            //    driverMessenger.FindElementById("loginbutton").Click();
            //    ////searchButton.Click();
            //    Thread.Sleep(2500);







            try
            {


                string targetName = textBoxops.Text;
                string textes = "";
                string messagesFromInString = "";
                string messagesVisiblesWithScreenshots = "";
                string pathToFolder = "";
                List<IWebElement> earlier = new List<IWebElement>();
                List<DateTime> sameTime = new List<DateTime>();
                int hauteurr = 450;
                //var imageDown = "";
                Dictionary<string, string> dicoMessagesFrom = new Dictionary<string, string>();
                Dictionary<string, string> dicoMessagesTo = new Dictionary<string, string>();
                Dictionary<string, string> dicoPictures = new Dictionary<string, string>();
                Dictionary<string, string> messagesVisibles = new Dictionary<string, string>();
                Dictionary<string, string> videosVisibles = new Dictionary<string, string>();
                Dictionary<string, string> messagesVisiblesForFile = new Dictionary<string, string>();
                List<string> videosVisiblesForFile = new List<string>();
                Dictionary<string, string> audioVisiblesForFile = new Dictionary<string, string>();
                Dictionary<string, string> audioVisibles = new Dictionary<string, string>();
                List<string> audioVisibless = new List<string>();
                List<string> audioVisiblessForFile = new List<string>();
                List<string> docPartages = new List<string>();
                Dictionary<string, string> mois = new Dictionary<string, string>();
                Dictionary<string, string> classeTraitee = new Dictionary<string, string>();
                int WAIT = 500;
                mois.Add("jan", "01");
                mois.Add("fév", "02");
                mois.Add("fev", "02");
                mois.Add("fèv", "02");
                mois.Add("mar", "03");
                mois.Add("avr", "04");
                mois.Add("mai", "05");
                mois.Add("jui", "06");
                mois.Add("juil", "07");
                mois.Add("janvier", "01");
                mois.Add("février", "02");
                mois.Add("mars", "03");
                mois.Add("avril", "04");
                mois.Add("juin", "06");
                mois.Add("juillet", "07");
                mois.Add("août", "08");
                mois.Add("septembre", "09");
                mois.Add("octobre", "10");
                mois.Add("novembre", "11");
                mois.Add("décembre", "12");



                List<string> classesConnues = new System.Collections.Generic.List<string>();
                classesConnues.Add("//div[@class='clearfix _o46 _3erg _29_7 _8lma direction_ltr text_align_ltr']");
                classesConnues.Add("//div[@class='clearfix _o46 _3erg _29_7 direction_ltr text_align_ltr']");
                classesConnues.Add("//div[@class='clearfix _o46 _3erg _29_7 _8lma direction_ltr text_align_ltr _ylc']");
                classesConnues.Add("//div[@class='clearfix _o46 _3erg _3i_m _nd_ _8lma direction_ltr text_align_ltr']");
                classesConnues.Add("//div[@class='clearfix _o46 _3erg _3i_m _nd_ _8lma direction_ltr text_align_ltr _ylc']");
                classesConnues.Add("//div[@class='_52mr _2poz _ui9 _4skb']");
                classesConnues.Add("//div[@class='clearfix _o46 _3erg _3i_m _nd_ direction_ltr text_align_ltr']");
                classesConnues.Add("//div[@class='clearfix _o46 _3erg _3i_m _nd_ _q4a _8lma direction_ltr text_align_ltr _ylc']");
                classesConnues.Add("//div[@class='_2poz _52mr _ui9 _2n8h _2n8i _5fk1']");//_2poz _52mr _ui9 _2n8h _2n8i _5fk1 Vidéo ?_ccq _4tsk _3o67 _52mr _1byr _4-od
                classesConnues.Add("//div[@class='_1mj2 _2e-6']");
                classesConnues.Add("//div[@class='_1mj4 _2e-7']");//_1mj4 _2e-7
                classesConnues.Add("//div[@class='_3058 _15gf']");//_3058 _15gf
                                                                  //_1mjb _454y _3czg _2poz _ui9
                                                                  //_1mjb _454y _3czg _2poz _ui9
                                                                  //_hh7 _6ybn _s1- _52mr _1fz8 _1nqp

                List<string> classesConnuess = new System.Collections.Generic.List<string>();
                classesConnuess.Add("clearfix _o46 _3erg _29_7 _8lma direction_ltr text_align_ltr");
                classesConnuess.Add("clearfix _o46 _3erg _29_7 direction_ltr text_align_ltr");
                classesConnuess.Add("clearfix _o46 _3erg _29_7 _8lma direction_ltr text_align_ltr _ylc");
                classesConnuess.Add("clearfix _o46 _3erg _3i_m _nd_ _8lma direction_ltr text_align_ltr");
                classesConnuess.Add("clearfix _o46 _3erg _3i_m _nd_ _8lma direction_ltr text_align_ltr _ylc");
                classesConnuess.Add("_52mr _2poz _ui9 _4skb");
                classesConnuess.Add("clearfix _o46 _3erg _3i_m _nd_ direction_ltr text_align_ltr");
                classesConnuess.Add("clearfix _o46 _3erg _3i_m _nd_ _q4a _8lma direction_ltr text_align_ltr _ylc");
                classesConnuess.Add("_2poz _52mr _ui9 _2n8h _2n8i _5fk1");//_2poz _52mr _ui9 _2n8h _2n8i _5fk1 Vidéo ?_ccq _4tsk _3o67 _52mr _1byr _4-od
                classesConnuess.Add("_1mj2 _2e-6");
                classesConnuess.Add("_1mj4 _2e-7");//_1mj4 _2e-7
                classesConnuess.Add("_3058 _15gf");

                //récupération des années 
                //var years = driver.FindElementByXPath("rightColWrap']").Text;
                //string codePagee = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)years).WrappedDriver).PageSource;
                //string[] liYears = years.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries);

                //if (!Directory.Exists(pathToSave + @"\Facebook_Friends\" + targetName.ToUpper()))
                //    Directory.CreateDirectory(pathToSave + @"\Facebook_Friends\" + targetName.ToUpper());

                //driver.Navigate().GoToUrl("https://www.facebook.com/messages/t");//https://www.facebook.com/messages/t/MOD.orga
                //Thread.Sleep(5000);



                try
                {

                    bool STOP = false;
                    string messenger = "";
                    int idFictif = 1;
                    string idFictifString = "";
                    IWebElement fromdate = null;

                    if (FASTMESSENGER)
                        WAIT = 500;
                    else
                        WAIT = 2000;

                    if (dicoMessenger.Count > 0)
                    {
                        foreach (string link in dicoMessenger.Keys)
                        {



                            string pathToSaveScreenshot = "";

                            if (!Directory.Exists(pathToSave + "\\Messenger\\" + dicoMessenger[link]))
                            {
                                //EraseDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link], true);  
                                Directory.CreateDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link]);
                                pathToSaveScreenshot = pathToSave + "\\Messenger\\" + dicoMessenger[link];
                            }
                            else
                            if (dicoMessenger[link].ToLower().Contains("utilisateur de") || dicoMessenger[link].ToLower().Contains("user"))
                            {
                                idFictif++;
                                idFictifString = idFictif.ToString();
                                Directory.CreateDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link] + idFictifString);
                                pathToSaveScreenshot = pathToSave + "\\Messenger\\" + dicoMessenger[link] + idFictifString;
                            }
                            else
                                pathToSaveScreenshot = pathToSave + "\\Messenger\\" + dicoMessenger[link];



                            if (!Directory.Exists(pathToSaveScreenshot + "\\Audio\\"))
                            {
                                //EraseDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link], true);  
                                Directory.CreateDirectory(pathToSaveScreenshot + "\\Audio\\");
                            }

                            var imageDown = driverMessenger.FindElement(By.Id("facebook"));
                            int hauteur = 400;
                            int resolutionEcran = resolution.Height;
                            string[] topScrollBar = null;
                            string firstValueTopBar = "";
                            string top = "";
                            string hauteurScroll = "";
                            string newHauteurScroll = "";
                            int i = 1;
                            string idTmp = "";
                            //DEPART TRY TIMEOUT------------------------------------------------------------------------------
                            try
                            {
                                driverMessenger.Manage().Timeouts().ImplicitWait.Add(System.TimeSpan.FromSeconds(300));
                                driverMessenger.Navigate().GoToUrl(link);
                                Thread.Sleep(5000);

                                messenger = driverMessenger.PageSource;





                                string[] id = messenger.Split(new String[] { "class=\"uiScrollableAreaWrap scrollable\"" }, StringSplitOptions.RemoveEmptyEntries);
                                topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                //on récupère la valeur Top de la scrollBar


                                try
                                {
                                    foreach (string t in topScrollBar)
                                    {
                                        string tmp = t.Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                        if ((!t.Contains("top:") && !t.Contains("uiScrollableAreaWrap")) || t.StartsWith("<html"))
                                            continue;

                                        firstValueTopBar = tmp.Substring(tmp.IndexOf("top: ") + 4).Split(';')[0];
                                        hauteurScroll = tmp.Substring(tmp.IndexOf("height: ") + 8).Split(';')[0];
                                    }


                                }
                                catch
                                {

                                }
                                //try
                                //{
                                //    foreach (string t in topScrollBar)
                                //    {
                                //        if (!t.Contains("top:"))
                                //            continue;

                                //        top = t.Substring(t.IndexOf("top: ") + 4).Split(';')[0];
                                //        firstValueTopBar = top;
                                //    }
                                //}
                                //catch
                                //{

                                //}

                                //on récupère l'id dynamique du composant

                                foreach (string idd in id)
                                {
                                    if (!idd.StartsWith("id") && !idd.Contains("Messages"))
                                        continue;


                                    idTmp = idd.Substring(idd.IndexOf("id=\"") + 4).Split('"')[0];
                                }

                                try
                                {
                                    imageDown = driverMessenger.FindElementById(idTmp);
                                    var test = driverMessenger.FindElements(By.ClassName("uiScrollableAreaGripper"));//uiScrollableAreaTrack hidden_elem
                                    //var test2 = driverMessenger.FindElements(By.CssSelector("uiScrollableAreaTrack hidden_elem"));
                                    int lastHeight = imageDown.Size.Height;





                                    int width = driverMessenger.Manage().Window.Size.Width;
                                    int height = driverMessenger.Manage().Window.Size.Height;


                                    int hauteurtotale = resolution.Height;
                                    resolutionEcran = resolution.Height;
                                    int scroll = 0;
                                    Int32.TryParse(firstValueTopBar.Replace(".", "").Replace("px", ""), out scroll);



                                    //ON SCROLL JUSQUAU DEBUT DE LA PAGE LE PLUS LOIN POSSIBLE

                                    //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollIntoView(true);", listeTimes[0 ]);
                                    //Thread.Sleep(500);

                                    if (firstValueTopBar != "")
                                    {
                                        try
                                        {
                                            
                                            //tout d'abord on s'assure d'etre en bas de page grace à l'élément time
                                            
                                            
                                            while (top.Trim() != "0px")
                                            //while (newHauteurScroll != hauteurScroll)
                                            {
                                                //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + (0 - scroll) + ");", imageDown);
                                                //Thread.Sleep(2500);

                                                //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + (0 - (scroll * scroll)) + ");", imageDown);
                                                //Thread.Sleep(2500);


                                                ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0,0);", imageDown);
                                                Thread.Sleep(5000);



                                                //calcul du temps
                                                if (datumm.Year != 1900)
                                                {
                                                    IList<IWebElement> listeTimes = driver.FindElements(By.TagName("time"));
                                                    Thread.Sleep(2000);

                                                    string dernieredate = "";
                                                    string datum = "";

                                                    if (listeTimes[0].Text.ToLower().Contains("à"))
                                                    {
                                                        datum = listeTimes[0].Text.ToLower().Split('à')[0].Trim().Replace(" ", "/");
                                                        if (mois.ContainsKey(datum.Split('/')[1].ToLower()))
                                                        {
                                                            datum = datum.ToLower().Replace(datum.Split('/')[1].ToLower(), mois[datum.Split('/')[1].ToLower()]);
                                                        }

                                                    }
                                                    else
                                                        datum = listeTimes[0].Text.Split(' ')[0];

                                                    CultureInfo culture = new CultureInfo("fr-FR");
                                                    DateTime testDatumValable;
                                                    if (!DateTime.TryParse(datum, out testDatumValable))
                                                        continue;

                                                    DateTime firstDate = Convert.ToDateTime(datum, culture);// premiere date dans la liste
                                                    DateTime tempss;


                                                    tempss = Convert.ToDateTime(datum, culture);
                                                    DateTime date2 = new DateTime(datumm.Year, datumm.Month, datumm.Day);



                                                    try
                                                    {


                                                        foreach (IWebElement el in listeTimes)
                                                        {
                                                            if (DateTime.Compare(firstDate, date2) == 0)
                                                                break;

                                                            //DateTime firstDate;



                                                            datum = "";
                                                            if (listeTimes[0].Text.ToLower().Contains("à"))
                                                            {
                                                                datum = listeTimes[0].Text.ToLower().Split('à')[0].Trim().Replace(" ", "/");
                                                                if (mois.ContainsKey(datum.Split('/')[1].ToLower()))
                                                                {
                                                                    datum = datum.ToLower().Replace(datum.Split('/')[1].ToLower(), mois[datum.Split('/')[1].ToLower()]);
                                                                }

                                                            }
                                                            else
                                                                datum = listeTimes[0].Text.Split(' ')[0];


                                                            if (DateTime.TryParse(datum, out testDatumValable))
                                                                firstDate = Convert.ToDateTime(datum, culture);// premiere date dans la liste
                                                            else
                                                                continue;

                                                            datum = "";
                                                            if (el.Text.ToLower().Contains("à"))
                                                            {
                                                                datum = el.Text.ToLower().Split('à')[0].Trim().Replace(" ", "/");
                                                                if (mois.ContainsKey(datum.Split('/')[1].ToLower()))
                                                                {
                                                                    datum = datum.ToLower().Replace(datum.Split('/')[1].ToLower(), mois[datum.Split('/')[1].ToLower()]);

                                                                    if (Convert.ToInt32(datum.Split('/')[0]) < 10 && !datum.Split('/')[0].StartsWith("0"))
                                                                        datum = "0" + datum;
                                                                }

                                                            }
                                                            else
                                                                datum = el.Text.Split(' ')[0];

                                                            try
                                                            {
                                                                tempss = Convert.ToDateTime(datum, culture);
                                                            }
                                                            catch
                                                            {
                                                                continue;
                                                            }

                                                            int result = 0;
                                                            try
                                                            {


                                                                result = DateTime.Compare(tempss, date2);
                                                                string relationship;

                                                                if (result < 0)
                                                                {
                                                                    earlier.Add(el);
                                                                    relationship = "is earlier than";
                                                                }
                                                                else
                                                                if (result == 0)
                                                                {
                                                                    relationship = "is the same time as";
                                                                    sameTime.Add(tempss);

                                                                    if (firstDate != tempss)
                                                                    {
                                                                        //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollIntoView(true) + 1600;", el);
                                                                        //Thread.Sleep(500);
                                                                        STOP = true;
                                                                        top = "0px";
                                                                        fromdate = el;
                                                                        break;
                                                                    }


                                                                }
                                                                else
                                                                {
                                                                    relationship = "is later than";
                                                                }



                                                            }
                                                            catch
                                                            {

                                                            }


                                                        }

                                                        if (!STOP)
                                                        {
                                                            int result = DateTime.Compare(firstDate, date2);
                                                            if (result < 0)
                                                            {
                                                                STOP = true;
                                                                top = "0px";
                                                                fromdate = earlier[earlier.Count() - 1];

                                                            }
                                                        }

                                                    }
                                                    catch
                                                    {

                                                    }

                                                    if (STOP)
                                                        break;

                                                }//FIN DU IF DATE


                                                if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                                {

                                                    try
                                                    {
                                                        driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                                    }
                                                    catch
                                                    {

                                                    }
                                                }


                                                hauteur += 600;
                                                hauteurtotale += resolution.Height + (resolution.Height / 2);

                                                messenger = driverMessenger.PageSource;

                                                top = "";
                                                topScrollBar = messenger.Split(new String[] { "<div class=\"uiScrollableAreaGripper" }, StringSplitOptions.RemoveEmptyEntries);
                                                try
                                                {
                                                    foreach (string t in topScrollBar)
                                                    {
                                                        string tmp = t.Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                                        if (!tmp.Contains("top:") || tmp.Contains("hidden"))
                                                            continue;

                                                        int heightt = 0;
                                                        top = tmp.Substring(tmp.IndexOf("top: ") + 4).Split(';')[0];
                                                        newHauteurScroll = tmp.Substring(tmp.IndexOf("height: ") + 8).Split(';')[0];
                                                        Int32.TryParse(top.Trim().Replace(".", "").Replace("px", ""), out heightt);
                                                        scroll = scroll - hauteur;
                                                        break;
                                                    }

                                                    if (top.Trim() == "0px")
                                                    {
                                                        //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + (lastHeight - hauteur) + ");", imageDown);
                                                        //Thread.Sleep(2000);
                                                        ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0,0);", imageDown);
                                                        Thread.Sleep(5000);

                                                        ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0,0);", imageDown);
                                                        Thread.Sleep(5000);

                                                        ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0,0);", imageDown);
                                                        Thread.Sleep(5000);

                                                        hauteurScroll = newHauteurScroll;
                                                        //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + (0 - scroll * scroll) + ");", imageDown);
                                                        //Thread.Sleep(2500);

                                                        //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + (0 - scroll) + ");", imageDown);
                                                        // Thread.Sleep(2500);

                                                        //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + (lastHeight - 2 * hauteur) + ");", imageDown);
                                                        //Thread.Sleep(2000);

                                                        messenger = driverMessenger.PageSource;

                                                        top = "";
                                                        topScrollBar = messenger.Split(new String[] { "<div class=\"uiScrollableAreaGripper" }, StringSplitOptions.RemoveEmptyEntries);


                                                        try
                                                        {
                                                            foreach (string tt in topScrollBar)
                                                            {
                                                                string tmpp = tt.Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                                                if (!tmpp.Contains("top:") || tmpp.Contains("hidden"))
                                                                    continue;

                                                                top = tmpp.Substring(tmpp.IndexOf("top: ") + 4).Split(';')[0];
                                                                newHauteurScroll = tmpp.Substring(tmpp.IndexOf("height: ") + 8).Split(';')[0];
                                                                int heightt = 0;
                                                                Int32.TryParse(top.Trim().Replace(".", "").Replace("px", ""), out heightt);
                                                                scroll = scroll - hauteur;
                                                                break;
                                                            }


                                                        }
                                                        catch
                                                        {
                                                            top = "";
                                                        }

                                                        hauteur += 600;
                                                        hauteurtotale += resolution.Height + (resolution.Height / 2);
                                                    }


                                                }
                                                catch
                                                {

                                                }

                                                Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                                                int innerHeightt = 0;

                                                Int32.TryParse(innerHeight.ToString(), out innerHeightt);
                                                scroll -= innerHeightt;


                                                //i++;
                                            }
                                        }
                                        catch (Exception ex)
                                        {
                                            top = "0px";
                                        }
                                    }
                                    else
                                        if (isElementMessengerEndingPresent(driverMessenger))
                                    {
                                        ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0,0);", imageDown);
                                        Thread.Sleep(2000);



                                    }
                                    else
                                        if (!isElementMessengerEndingPresent(driverMessenger))
                                        while (!isElementMessengerEndingPresent(driverMessenger))
                                        {
                                            ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + (lastHeight - hauteur) + ");", imageDown);
                                            Thread.Sleep(2000);



                                            hauteur += 600;
                                            hauteurtotale += resolution.Height + (resolution.Height / 2);
                                            //i++;
                                        }
                                    else
                                        if (isElementMessengerEndingPresent(driverMessenger))
                                    {
                                        ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0,0);", imageDown);
                                        Thread.Sleep(2000);

                                    }



                                    hauteur = 0;


                                    top = "";
                                    try
                                    {
                                        foreach (string t in topScrollBar)
                                        {
                                            string tmp = t.Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                            if (!tmp.Contains("top:") || tmp.Contains("hidden"))
                                                continue;

                                            top = tmp.Substring(tmp.IndexOf("top: ") + 4).Split(';')[0];

                                            //top = tmp.Substring(tmp.IndexOf("top: ") + 4).Split(';')[0];
                                        }


                                    }
                                    catch (Exception ex)
                                    {
                                        top = "";
                                    }

                                    //ON DESCEND--------------------------------------------------------------------------------------
                                    if (top != "")
                                    {
                                        string topPrec = "";
                                        textes = imageDown.Text;


                                        int j = 1;
                                        int hauteurfromdate = 0;
                                        string hauteurfromdateString = "";

                                        Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                                        long innerHeightt = (long)innerHeight;
                                        long scrolll = (long)innerHeight;
                                        long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                                        while (true)
                                        {

                                            if (fromdate != null)
                                            {
                                                //hauteurfromdate = fromdate.Location.Y + (Int32)scrolll;
                                                hauteurfromdate = fromdate.Location.Y;
                                                hauteurfromdateString = hauteurfromdate.ToString();

                                                ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollIntoView(true);", fromdate);
                                                Thread.Sleep(500);

                                                //hauteurfromdate = fromdate.Location.Y;
                                                fromdate = null;
                                                STOP = false;
                                                //hauteur += 600;

                                            }
                                            else
                                            {

                                                //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollBy(0,450);", imageDown);
                                                ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollBy(0," + hauteurr + ");", imageDown);

                                                Thread.Sleep(WAIT);
                                            }



                                            if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                            {

                                                try
                                                {
                                                    driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                                }
                                                catch
                                                {

                                                }
                                            }
                                            //int hei = imageDown.Size.Height;
                                            messenger = driverMessenger.PageSource;

                                            //TEST 
                                            var messagesTesting = driverMessenger.FindElementsByTagName("div");
                                            object[] messagesToExtractTesting = messagesTesting.ToArray();

                                            //QUE LES TEXTES
                                            foreach (OpenQA.Selenium.Remote.RemoteWebElement o in messagesToExtractTesting)
                                            {

                                                string tentation = o.ToString();
                                                string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                if (o.GetAttribute("class").Contains("_1mj2 _2e-6") || o.GetAttribute("class").Contains("_1mj4 _2e-7"))//|| classe.Contains("_3058 _15gf")
                                                    {


                                                        //pour récupérer les a contenant la longueur du message vocal
                                                        //IList<IWebElement> newlisteVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                        //IList<IWebElement> listeVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                        IList<IWebElement> listeVocauxx = driverMessenger.FindElements(By.XPath("//div[@class='_1mj2 _2e-6']"));

                                                        foreach (IWebElement ell in listeVocauxx)
                                                        {
                                                            //if (listeVocaux[0].Location.Y > 15 && listeVocaux[0].Location.Y < (resolutionEcran - 250))
                                                            //    break;
                                                            if (ell.Text == "")
                                                                continue;

                                                            tentation = ell.ToString();
                                                            idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                            //IList<IWebElement> testt = ell.FindElements(By.TagName("a"));

                                                            //string tentation = ell.ToString();
                                                            //string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                            //if (audioVisibles.ContainsKey(idd))
                                                            //{
                                                            //    continue;
                                                            //}

                                                            if (ell.Location.Y > 15 && ell.Location.Y < (resolutionEcran - 250))
                                                            {
                                                                //string tentation = ell.ToString();
                                                                //string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];


                                                                IList<IWebElement> els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs _5z-5']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                                string dateAudio = "";
                                                                string nomFichierAudio = "";

                                                                foreach (IWebElement el in els)
                                                                {
                                                                    if (el.GetAttribute("data-tooltip-content") != null)
                                                                    {

                                                                        if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                        {
                                                                            var texte = el.GetAttribute("data-tooltip-content");
                                                                            var position = el.Location;
                                                                            dateAudio = texte.Replace(":", "-");
                                                                            nomFichierAudio = "From";
                                                                            break;
                                                                        }



                                                                    }
                                                                }
                                                                if (dateAudio == "")
                                                                {
                                                                    els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                                    dateAudio = "";
                                                                    foreach (IWebElement el in els)
                                                                    {
                                                                        if (el.GetAttribute("data-tooltip-content") != null)
                                                                        {

                                                                            if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                            {
                                                                                var texte = el.GetAttribute("data-tooltip-content");
                                                                                var position = el.Location;
                                                                                dateAudio = texte.Replace(":", "-");
                                                                                nomFichierAudio = "To";
                                                                                break;
                                                                            }



                                                                        }
                                                                    }
                                                                }

                                                                string duree = ell.Text.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                                                //if (classe.Contains("_1mj2 _2e-6"))
                                                                //    nomFichierAudio = "From";
                                                                //else
                                                                //    nomFichierAudio = "To";

                                                                if (duree.Length == 4)
                                                                    duree = "00:0" + duree;

                                                                if (audioVisibles.ContainsKey(idd))
                                                                {
                                                                    audioVisibless.Add(audioVisibles[idd]);
                                                                    continue;
                                                                }

                                                                try
                                                                {
                                                                    TimeSpan tempss;
                                                                    TimeSpan.TryParse(duree, out tempss);
                                                                    //DateTime temps;
                                                                    //DateTime.TryParse(duree, out temps);
                                                                    ell.Click();
                                                                    StartRecord(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                                    Stopwatch sw = new Stopwatch();
                                                                    sw.Start();
                                                                    //Thread.Sleep(500);
                                                                    while (true)
                                                                    {

                                                                        if (sw.ElapsedMilliseconds > tempss.TotalMilliseconds + (2000))
                                                                        {
                                                                            if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                                                            {

                                                                                try
                                                                                {
                                                                                    driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                                                                }
                                                                                catch
                                                                                {

                                                                                }
                                                                            }
                                                                            break;
                                                                        }

                                                                    }

                                                                    StopRecording();
                                                                    Thread.Sleep(1000);

                                                                    if (!audioVisibles.ContainsKey(idd))
                                                                    {
                                                                        audioVisibles.Add(idd, pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                                        audioVisibless.Add(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");

                                                                        if (!classeTraitee.ContainsKey(idd))
                                                                        {
                                                                            classeTraitee.Add(idd, idd);
                                                                        }
                                                                    }



                                                                    j++;

                                                                }
                                                                catch (Exception exx)
                                                                {
                                                                    //StopRecording();
                                                                    //Thread.Sleep(5000);
                                                                }


                                                                //ell.Click();


                                                            }

                                                        }

                                                        //pour cliquer sur le message vocal et jouer le son
                                                        //driverMessenger.FindElementsByXPath(classe)[0].Click();

                                                    }


                                                    if (o.GetAttribute("class").Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))//si classe contenant vidéo on télécharge d'abord la vidéo
                                                    {

                                                        IList<IWebElement> allDivElements = driverMessenger.FindElementsByXPath("//div[@class='_2poz _52mr _ui9 _2n8h _2n8i _5fk1']" + "//video");//_ox1 _21y0
                                                        for (int ii = 0; ii < allDivElements.Count(); ii++)
                                                        {
                                                            tentation = allDivElements[ii].ToString();
                                                            idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                            if (classeTraitee.ContainsKey(idd))
                                                            {
                                                                continue;
                                                            }


                                                            if (allDivElements[ii].GetAttribute("class") != null)
                                                            {
                                                                //here the print statement will print the value of each div tag element
                                                                var tmp = allDivElements[ii].GetAttribute("class");

                                                                if (tmp == "_ox1 _21y0")// si div avec vidéo
                                                                {
                                                                    //var video = driver.FindElementsByClassName(tmp);
                                                                    //IList<IWebElement> allDivElementss = driver.FindElementsByClassName(tmp);

                                                                    try
                                                                    {
                                                                        //var tmpp = allDivElementss[0].FindElement(By.XPath("video")).GetAttribute("src");
                                                                        var tmpp = allDivElements[ii].GetAttribute("src");

                                                                        //if (allDivElements[0].Location.Y > 15 && allDivElements[0].Location.Y < (resolutionEcran - 250))
                                                                        //    break;


                                                                        if (allDivElements[ii].Location.Y > 15 && allDivElements[ii].Location.Y < (resolutionEcran - 250))
                                                                        {


                                                                            if (!videosVisibles.ContainsKey(tmpp + ii))
                                                                            {
                                                                                videosVisibles.Add(tmpp + ii, tmpp);

                                                                                if (!classeTraitee.ContainsKey(idd))
                                                                                {
                                                                                    classeTraitee.Add(idd, tmpp);
                                                                                }
                                                                            }
                                                                        }
                                                                        //break;



                                                                        //IWebElement oo = allDivElementss[0].FindElement(By.XPath("video"));


                                                                    }
                                                                    catch (Exception ex)
                                                                    {

                                                                    }

                                                                }
                                                            }

                                                        }




                                                    }
                                                                                              
                                                
                                                
                                                //if (!classesConnuess.Contains(o.GetAttribute("class")))
                                                //    continue;

                                                //if (o.GetAttribute("class").Contains("_1mj2 _2e-6") || o.GetAttribute("class").Contains("_1mj4 _2e-7"))
                                                //    continue;

                                                //if (o.GetAttribute("class").Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))
                                                //    continue;

                                                //string tentation = o.ToString();
                                                //string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                if(o.Text != "")
                                                {
                                                    int numeroScreenshot = o.LocationOnScreenOnceScrolledIntoView.Y / (resolutionEcran - 265);
                                                    messagesVisibles.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", "") + "_Screenshot_" + numeroScreenshot);
                                                }

                                            }

                                            string texteTesting = "";
                                            foreach(string msg in messagesVisibles.Values)
                                            {
                                                texteTesting += msg + "\n";
                                            }
                                            using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSaveScreenshot + "\\Div_Screenshots.txt", false))
                                            {
                                               

                                                file.Write(texteTesting);
                                            }


                                            //FIN TEST----------------------------

                                            if (!FASTMESSENGER)
                                                foreach (string classe in classesConnues)
                                                {



                                                    //if (classe.Contains("_1mj2 _2e-6") || classe.Contains("_1mj4 _2e-7"))//|| classe.Contains("_3058 _15gf")
                                                    //{


                                                    //    //pour récupérer les a contenant la longueur du message vocal
                                                    //    //IList<IWebElement> newlisteVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                    //    //IList<IWebElement> listeVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                    //    IList<IWebElement> listeVocauxx = driverMessenger.FindElements(By.XPath("_1mj2 _2e-6']"));

                                                    //    foreach (IWebElement ell in listeVocauxx)
                                                    //    {
                                                    //        //if (listeVocaux[0].Location.Y > 15 && listeVocaux[0].Location.Y < (resolutionEcran - 250))
                                                    //        //    break;
                                                    //        if (ell.Text == "")
                                                    //            continue;

                                                    //        string tentation = ell.ToString();
                                                    //        string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                    //        //IList<IWebElement> testt = ell.FindElements(By.TagName("a"));

                                                    //        //string tentation = ell.ToString();
                                                    //        //string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                    //        //if (audioVisibles.ContainsKey(idd))
                                                    //        //{
                                                    //        //    continue;
                                                    //        //}

                                                    //        if (ell.Location.Y > 15 && ell.Location.Y < (resolutionEcran - 250))
                                                    //        {
                                                    //            //string tentation = ell.ToString();
                                                    //            //string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];


                                                    //            IList<IWebElement> els = driverMessenger.FindElements(By.XPath("_3zvs _5z-5']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                    //            string dateAudio = "";
                                                    //            string nomFichierAudio = "";

                                                    //            foreach (IWebElement el in els)
                                                    //            {
                                                    //                if (el.GetAttribute("data-tooltip-content") != null)
                                                    //                {

                                                    //                    if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                    //                    {
                                                    //                        var texte = el.GetAttribute("data-tooltip-content");
                                                    //                        var position = el.Location;
                                                    //                        dateAudio = texte.Replace(":", "-");
                                                    //                        nomFichierAudio = "From";
                                                    //                        break;
                                                    //                    }



                                                    //                }
                                                    //            }
                                                    //            if (dateAudio == "")
                                                    //            {
                                                    //                els = driverMessenger.FindElements(By.XPath("_3zvs']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                    //                dateAudio = "";
                                                    //                foreach (IWebElement el in els)
                                                    //                {
                                                    //                    if (el.GetAttribute("data-tooltip-content") != null)
                                                    //                    {

                                                    //                        if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                    //                        {
                                                    //                            var texte = el.GetAttribute("data-tooltip-content");
                                                    //                            var position = el.Location;
                                                    //                            dateAudio = texte.Replace(":", "-");
                                                    //                            nomFichierAudio = "To";
                                                    //                            break;
                                                    //                        }



                                                    //                    }
                                                    //                }
                                                    //            }

                                                    //            string duree = ell.Text.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                                    //            //if (classe.Contains("_1mj2 _2e-6"))
                                                    //            //    nomFichierAudio = "From";
                                                    //            //else
                                                    //            //    nomFichierAudio = "To";

                                                    //            if (duree.Length == 4)
                                                    //                duree = "00:0" + duree;

                                                    //            if (audioVisibles.ContainsKey(idd))
                                                    //            {
                                                    //                audioVisibless.Add(audioVisibles[idd]);
                                                    //                continue;
                                                    //            }

                                                    //            try
                                                    //            {
                                                    //                TimeSpan tempss;
                                                    //                TimeSpan.TryParse(duree, out tempss);
                                                    //                //DateTime temps;
                                                    //                //DateTime.TryParse(duree, out temps);
                                                    //                ell.Click();
                                                    //                StartRecord(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                    //                Stopwatch sw = new Stopwatch();
                                                    //                sw.Start();
                                                    //                //Thread.Sleep(500);
                                                    //                while (true)
                                                    //                {

                                                    //                    if (sw.ElapsedMilliseconds > tempss.TotalMilliseconds + (2000))
                                                    //                    {
                                                    //                        if (isElementPresent(driver, "_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                                    //                        {

                                                    //                            try
                                                    //                            {
                                                    //                                driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                                    //                            }
                                                    //                            catch
                                                    //                            {

                                                    //                            }
                                                    //                        }
                                                    //                        break;
                                                    //                    }

                                                    //                }

                                                    //                StopRecording();
                                                    //                Thread.Sleep(1000);

                                                    //                if (!audioVisibles.ContainsKey(idd))
                                                    //                {
                                                    //                    audioVisibles.Add(idd, pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                    //                    audioVisibless.Add(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");

                                                    //                    if (!classeTraitee.ContainsKey(idd))
                                                    //                    {
                                                    //                        classeTraitee.Add(idd, idd);
                                                    //                    }
                                                    //                }



                                                    //                j++;

                                                    //            }
                                                    //            catch (Exception exx)
                                                    //            {
                                                    //                //StopRecording();
                                                    //                //Thread.Sleep(5000);
                                                    //            }


                                                    //            //ell.Click();


                                                    //        }

                                                    //    }

                                                    //    //pour cliquer sur le message vocal et jouer le son
                                                    //    //driverMessenger.FindElementsByXPath(classe)[0].Click();

                                                    //}


                                                    //if (classe.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))//si classe contenant vidéo on télécharge d'abord la vidéo
                                                    //{

                                                    //    IList<IWebElement> allDivElements = driverMessenger.FindElementsByXPath(classe + "//video");//_ox1 _21y0
                                                    //    for (int ii = 0; ii < allDivElements.Count(); ii++)
                                                    //    {
                                                    //        string tentation = allDivElements[ii].ToString();
                                                    //        string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                    //        if (classeTraitee.ContainsKey(idd))
                                                    //        {
                                                    //            continue;
                                                    //        }


                                                    //        if (allDivElements[ii].GetAttribute("class") != null)
                                                    //        {
                                                    //            //here the print statement will print the value of each div tag element
                                                    //            var tmp = allDivElements[ii].GetAttribute("class");

                                                    //            if (tmp == "_ox1 _21y0")// si div avec vidéo
                                                    //            {
                                                    //                //var video = driver.FindElementsByClassName(tmp);
                                                    //                //IList<IWebElement> allDivElementss = driver.FindElementsByClassName(tmp);

                                                    //                try
                                                    //                {
                                                    //                    //var tmpp = allDivElementss[0].FindElement(By.XPath("video")).GetAttribute("src");
                                                    //                    var tmpp = allDivElements[ii].GetAttribute("src");

                                                    //                    //if (allDivElements[0].Location.Y > 15 && allDivElements[0].Location.Y < (resolutionEcran - 250))
                                                    //                    //    break;


                                                    //                    if (allDivElements[ii].Location.Y > 15 && allDivElements[ii].Location.Y < (resolutionEcran - 250))
                                                    //                    {


                                                    //                        if (!videosVisibles.ContainsKey(tmpp + ii))
                                                    //                        {
                                                    //                            videosVisibles.Add(tmpp + ii, tmpp);

                                                    //                            if (!classeTraitee.ContainsKey(idd))
                                                    //                            {
                                                    //                                classeTraitee.Add(idd, tmpp);
                                                    //                            }
                                                    //                        }
                                                    //                    }
                                                    //                    //break;



                                                    //                    //IWebElement oo = allDivElementss[0].FindElement(By.XPath("video"));


                                                    //                }
                                                    //                catch (Exception ex)
                                                    //                {

                                                    //                }

                                                    //            }
                                                    //        }

                                                    //    }




                                                    //}


                                                    var messages = driverMessenger.FindElementsByXPath(classe);
                                                    object[] messagesToExtract = messages.ToArray();


                                                    //foreach (OpenQA.Selenium.Remote.RemoteWebElement o in messagesToExtract)
                                                    //{

                                                    //    string tentation = o.ToString();
                                                    //    string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                    //    if (classeTraitee.ContainsKey(idd))
                                                    //        continue;

                                                    //    if (!dicoMessagesFrom.ContainsKey(idd))
                                                    //    {
                                                    //        dicoMessagesFrom.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                    //    }
                                                    //    //else
                                                    //    //    continue;


                                                    //    if (o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250))
                                                    //    {
                                                    //        if (!messagesVisibles.ContainsKey(idd) && o.Text != "" && !o.Text.Contains("Lire-4:01Paramètres"))
                                                    //        {
                                                    //            messagesVisibles.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));

                                                    //            if (!classeTraitee.ContainsKey(idd))
                                                    //            {
                                                    //                classeTraitee.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                    //            }
                                                    //        }

                                                    //    }
                                                    //    //else
                                                    //    //    break;


                                                    //}


                                                }

                                            //on récupère tous les messages ppur ensuite comparer avec messageFrom et messageTo
                                            //imageDown = driver.FindElementById(idTmp);
                                            //Thread.Sleep(200);

                                            //if (textes != imageDown.Text)
                                            //    textes = imageDown.Text + "\n";

                                            messenger = driverMessenger.PageSource;
                                            //topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                            //on récupère la valeur Top de la scrollBar

                                            topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                            //on récupère la valeur Top de la scrollBar

                                            top = "";
                                            try
                                            {
                                                foreach (string t in topScrollBar)
                                                {
                                                    string tmp = t.Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                                    if (!tmp.Contains("top:") || tmp.Contains("hidden"))
                                                        continue;

                                                    top = tmp.Substring(tmp.IndexOf("top: ") + 4).Split(';')[0];

                                                    //if ((!tmp.Contains("top:") && ! tmp.Contains("uiScrollableAreaWrap")) || tmp.StartsWith("<html"))
                                                    //    continue;

                                                    //top = t.Substring(t.IndexOf("top: ") + 4).Split(';')[0];
                                                }

                                                if (top == topPrec)
                                                    break;

                                                topPrec = top;
                                            }
                                            catch
                                            {

                                            }

                                            Screenshot imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                            imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();


                                            //imageScreenshott.SaveAsFile(pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg", OpenQA.Selenium.ScreenshotImageFormat.Jpeg);
                                            imageScreenshott.SaveAsFile(pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);


                                            Thread.Sleep(100);

                                            //string pathToFile = pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg";
                                            string pathToFile = pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png";
                                            //pathToFolder = pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString);
                                            pathToFolder = pathToSaveScreenshot;

                                            if (!FASTMESSENGER)
                                                foreach (string cle in messagesVisibles.Keys)
                                                {

                                                    if (!messagesVisiblesForFile.ContainsKey(cle))
                                                    {

                                                        string[] lignes = messagesVisibles[cle].Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);

                                                        string tmp = "";
                                                        foreach (string li in lignes)
                                                        {
                                                            tmp += li.Trim().Replace("\r", "").Replace(";", "");
                                                        }



                                                        messagesVisiblesForFile.Add(cle, tmp + ";" + pathToFile + "\n");
                                                    }

                                                    //messagesVisiblesWithScreenshots += valeur + ";" + pathToFile + "\n";
                                                }

                                            if (!FASTMESSENGER)
                                                if (videosVisibles.Count > 0)
                                                    foreach (string cle in videosVisibles.Keys)
                                                    {
                                                        //if (!videosVisiblesForFile.ContainsKey(cle))
                                                        //{

                                                        videosVisiblesForFile.Add(cle + ";" + pathToFile + "\n");
                                                        //}
                                                    }

                                            if (!FASTMESSENGER)
                                                if (audioVisibless.Count > 0)
                                                    foreach (string cle in audioVisibless)
                                                    {
                                                        //if (!videosVisiblesForFile.ContainsKey(cle))
                                                        //{
                                                        if (!audioVisiblesForFile.ContainsKey(cle))
                                                            audioVisiblesForFile.Add(cle, cle + ";" + pathToFile + "\n");
                                                        //}
                                                    }

                                            messagesVisibles = new Dictionary<string, string>();
                                            videosVisibles = new Dictionary<string, string>();
                                            //audioVisibles = new Dictionary<string, string>();
                                            hauteur += 600;


                                            i++;
                                        }
                                        ForGrid forGrid = new ForGrid();
                                        forGrid.PathToFolder = pathToFolder;
                                        forGrid.Url = link;

                                        imageDown = driverMessenger.FindElementById(idTmp);
                                        textes = imageDown.Text + "\n";

                                        backgroundWorkerGetMessenger.ReportProgress(-7, forGrid);
                                        //FillDataGridViewMessenger(pathToFolder, link);
                                    }
                                    else//Si pas de scrollbar alors seulement une page------------------------------------------------------------------------------------------
                                    {
                                        int j = 1;
                                        foreach (string classe in classesConnues)
                                        {


                                            if (classe.Contains("_1mj2 _2e-6") || classe.Contains("_1mj4 _2e-7"))//|| classe.Contains("_3058 _15gf")
                                            {


                                                //pour récupérer les a contenant la longueur du message vocal
                                                //IList<IWebElement> newlisteVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                //IList<IWebElement> listeVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                IList<IWebElement> listeVocauxx = driverMessenger.FindElements(By.XPath("//div[@class='_1mj2 _2e-6']"));

                                                foreach (IWebElement ell in listeVocauxx)
                                                {
                                                    //if (listeVocaux[0].Location.Y > 15 && listeVocaux[0].Location.Y < (resolutionEcran - 250))
                                                    //    break;
                                                    if (ell.Text == "")
                                                        continue;

                                                    string tentation = ell.ToString();
                                                    string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                    //IList<IWebElement> testt = ell.FindElements(By.TagName("a"));

                                                    //string tentation = ell.ToString();
                                                    //string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                    //if (audioVisibles.ContainsKey(idd))
                                                    //{
                                                    //    continue;
                                                    //}

                                                    if (ell.Location.Y > 15 && ell.Location.Y < (resolutionEcran - 250))
                                                    {
                                                        //string tentation = ell.ToString();
                                                        //string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];


                                                        IList<IWebElement> els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs _5z-5']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                        string dateAudio = "";
                                                        string nomFichierAudio = "";

                                                        foreach (IWebElement el in els)
                                                        {
                                                            if (el.GetAttribute("data-tooltip-content") != null)
                                                            {

                                                                if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                {
                                                                    var texte = el.GetAttribute("data-tooltip-content");
                                                                    var position = el.Location;
                                                                    dateAudio = texte.Replace(":", "-");
                                                                    nomFichierAudio = "From";
                                                                    break;
                                                                }



                                                            }
                                                        }
                                                        if (dateAudio == "")
                                                        {
                                                            els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                            dateAudio = "";
                                                            foreach (IWebElement el in els)
                                                            {
                                                                if (el.GetAttribute("data-tooltip-content") != null)
                                                                {

                                                                    if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                    {
                                                                        var texte = el.GetAttribute("data-tooltip-content");
                                                                        var position = el.Location;
                                                                        dateAudio = texte.Replace(":", "-");
                                                                        nomFichierAudio = "To";
                                                                        break;
                                                                    }



                                                                }
                                                            }
                                                        }

                                                        string duree = ell.Text.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                                        //if (classe.Contains("_1mj2 _2e-6"))
                                                        //    nomFichierAudio = "From";
                                                        //else
                                                        //    nomFichierAudio = "To";

                                                        if (duree.Length == 4)
                                                            duree = "00:0" + duree;

                                                        if (audioVisibles.ContainsKey(idd))
                                                        {
                                                            audioVisibless.Add(audioVisibles[idd]);
                                                            continue;
                                                        }

                                                        try
                                                        {
                                                            TimeSpan tempss;
                                                            TimeSpan.TryParse(duree, out tempss);
                                                            //DateTime temps;
                                                            //DateTime.TryParse(duree, out temps);
                                                            ell.Click();
                                                            StartRecord(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                            Stopwatch sw = new Stopwatch();
                                                            sw.Start();
                                                            //Thread.Sleep(500);
                                                            while (true)
                                                            {

                                                                if (sw.ElapsedMilliseconds > tempss.TotalMilliseconds + (2000))
                                                                {
                                                                    if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                                                    {

                                                                        try
                                                                        {
                                                                            driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                                                        }
                                                                        catch
                                                                        {

                                                                        }
                                                                    }
                                                                    break;
                                                                }

                                                            }

                                                            StopRecording();
                                                            Thread.Sleep(1000);

                                                            if (!audioVisibles.ContainsKey(idd))
                                                            {
                                                                audioVisibles.Add(idd, pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                                audioVisibless.Add(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");

                                                            }



                                                            j++;

                                                        }
                                                        catch (Exception exx)
                                                        {
                                                            //StopRecording();
                                                            //Thread.Sleep(5000);
                                                        }


                                                        //ell.Click();


                                                    }

                                                }

                                                //pour cliquer sur le message vocal et jouer le son
                                                //driverMessenger.FindElementsByXPath(classe)[0].Click();
                                            }







                                            if (classe.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))//si classe contenant vidéo on télécharge d'abord la vidéo
                                            {


                                                IList<IWebElement> allDivElements = driverMessenger.FindElementsByXPath(classe + "//video");//_ox1 _21y0
                                                for (int ii = 0; ii < allDivElements.Count(); ii++)
                                                {

                                                    if (allDivElements[ii].GetAttribute("class") != null)
                                                    {
                                                        //here the print statement will print the value of each div tag element
                                                        var tmp = allDivElements[ii].GetAttribute("class");

                                                        if (tmp == "_ox1 _21y0")// si div avec vidéo
                                                        {
                                                            //var video = driver.FindElementsByClassName(tmp);
                                                            //IList<IWebElement> allDivElementss = driver.FindElementsByClassName(tmp);

                                                            try
                                                            {
                                                                //var tmpp = allDivElementss[0].FindElement(By.XPath("video")).GetAttribute("src");
                                                                var tmpp = allDivElements[ii].GetAttribute("src");


                                                                if (allDivElements[ii].Location.Y > 15 && allDivElements[ii].Location.Y < (resolutionEcran - 250))
                                                                {
                                                                    if (!videosVisibles.ContainsKey(tmpp + ii))
                                                                    {
                                                                        videosVisibles.Add(tmpp + ii, tmpp);
                                                                    }
                                                                }
                                                                //break;



                                                                //IWebElement oo = allDivElementss[0].FindElement(By.XPath("video"));


                                                            }
                                                            catch (Exception ex)
                                                            {

                                                            }

                                                        }
                                                    }

                                                }




                                            }



                                            var messages = driverMessenger.FindElementsByXPath(classe);
                                            object[] messagesToExtract = messages.ToArray();



                                            foreach (OpenQA.Selenium.Remote.RemoteWebElement o in messagesToExtract)
                                            {

                                                string tentation = o.ToString();
                                                string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                if (!dicoMessagesFrom.ContainsKey(idd))
                                                {
                                                    dicoMessagesFrom.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                }
                                                //else
                                                //    continue;

                                                if (o.Location.Y + o.Size.Height > 15 && o.Location.Y < (resolutionEcran - 300))
                                                {
                                                    if (!messagesVisibles.ContainsKey(idd) && o.Text != "")
                                                    {
                                                        messagesVisibles.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                    }
                                                }

                                            }
                                        }


                                        imageDown = driverMessenger.FindElementById(idTmp);
                                        textes = imageDown.Text + "\n";

                                        Screenshot imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                        imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                        //Save the screenshot
                                        //if (!Directory.Exists(pathToSave + "\\Messenger\\" + dicoMessenger[link]))
                                        //{
                                        //    //EraseDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link], true);  
                                        //    Directory.CreateDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link]);
                                        //}
                                        //else
                                        //if (dicoMessenger[link].ToLower().Contains("utilisateur de") || dicoMessenger[link].ToLower().Contains("user"))
                                        //{
                                        //    idFictif++;
                                        //    idFictifString = idFictif.ToString();
                                        //    Directory.CreateDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link] + i.ToString());
                                        //}



                                        imageScreenshott.SaveAsFile(pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                                        Thread.Sleep(100);

                                        string pathToFile = pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png";
                                        pathToFolder = pathToSaveScreenshot;

                                        foreach (string cle in messagesVisibles.Keys)
                                        {

                                            if (!messagesVisiblesForFile.ContainsKey(cle))
                                            {

                                                string[] lignes = messagesVisibles[cle].Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);

                                                string tmp = "";
                                                foreach (string li in lignes)
                                                {
                                                    tmp += li.Trim().Replace("\r", "");
                                                }



                                                messagesVisiblesForFile.Add(cle, tmp + ";" + pathToFile + "\n");
                                            }

                                            //messagesVisiblesWithScreenshots += valeur + ";" + pathToFile + "\n";
                                        }

                                        if (videosVisibles.Count > 0)
                                            foreach (string cle in videosVisibles.Keys)
                                            {
                                                //if (!videosVisiblesForFile.ContainsKey(cle))
                                                //{

                                                videosVisiblesForFile.Add(cle + ";" + pathToFile + "\n");
                                                //}
                                            }

                                        if (audioVisibles.Count > 0)
                                            foreach (string cle in audioVisibles.Values)
                                            {
                                                //if (!videosVisiblesForFile.ContainsKey(cle))
                                                //{
                                                if (!audioVisibles.ContainsKey(cle))
                                                    audioVisiblesForFile.Add(cle + ";" + pathToFile + "\n", cle + ";" + pathToFile + "\n");
                                                //}
                                            }

                                        messagesVisibles = new Dictionary<string, string>();
                                        videosVisibles = new Dictionary<string, string>();
                                        //audioVisibles = new Dictionary<string, string>();

                                        ForGrid forGrid = new ForGrid();
                                        forGrid.PathToFolder = pathToFolder;
                                        forGrid.Url = link;

                                        backgroundWorkerGetMessenger.ReportProgress(-7, forGrid);
                                        //FillDataGridViewMessenger(pathToFolder, link);
                                        //continue;
                                    }




                                }
                                catch (Exception ex)//SI TIMEOUT
                                {
                                    MessageBox.Show("error dans Messenger : " + ex.Message);
                                    ((IJavaScriptExecutor)driverMessenger).ExecuteScript("return window.stop");
                                    Thread.Sleep(1000);

                                    string topPrec = "";
                                    textes = imageDown.Text;

                                    //Dictionary<string, string> classeTraitee = new Dictionary<string, string>();
                                    int j = 1;
                                    int hauteurfromdate = 0;
                                    string hauteurfromdateString = "";

                                    Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                                    long innerHeightt = (long)innerHeight;
                                    long scrolll = (long)innerHeight;
                                    long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                                    while (true)
                                    {
                                        if (fromdate != null)
                                        {
                                            //hauteurfromdate = fromdate.Location.Y + (Int32)scrolll;
                                            hauteurfromdate = fromdate.Location.Y;
                                            hauteurfromdateString = hauteurfromdate.ToString();

                                            ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollIntoView(true);", fromdate);
                                            Thread.Sleep(500);

                                            //hauteurfromdate = fromdate.Location.Y;
                                            fromdate = null;
                                            //hauteur += 600;

                                        }
                                        else
                                        {

                                            //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollBy(0,450);", imageDown);
                                            ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + hauteur + ");", imageDown);

                                            Thread.Sleep(2000);
                                        }



                                        if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                        {

                                            try
                                            {
                                                driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                            }
                                            catch
                                            {

                                            }
                                        }
                                        //int hei = imageDown.Size.Height;
                                        messenger = driverMessenger.PageSource;

                                        if (!FASTMESSENGER)
                                            foreach (string classe in classesConnues)
                                            {

                                                if (classe.Contains("_1mj2 _2e-6") || classe.Contains("_1mj4 _2e-7"))//|| classe.Contains("_3058 _15gf")
                                                {


                                                    //pour récupérer les a contenant la longueur du message vocal
                                                    //IList<IWebElement> newlisteVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                    //IList<IWebElement> listeVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                    IList<IWebElement> listeVocauxx = driverMessenger.FindElements(By.XPath("//div[@class='_1mj2 _2e-6']"));

                                                    foreach (IWebElement ell in listeVocauxx)
                                                    {
                                                        //if (listeVocaux[0].Location.Y > 15 && listeVocaux[0].Location.Y < (resolutionEcran - 250))
                                                        //    break;
                                                        if (ell.Text == "")
                                                            continue;

                                                        string tentation = ell.ToString();
                                                        string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                        //IList<IWebElement> testt = ell.FindElements(By.TagName("a"));

                                                        //string tentation = ell.ToString();
                                                        //string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                        //if (audioVisibles.ContainsKey(idd))
                                                        //{
                                                        //    continue;
                                                        //}

                                                        if (ell.Location.Y > 15 && ell.Location.Y < (resolutionEcran - 250))
                                                        {
                                                            //string tentation = ell.ToString();
                                                            //string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];


                                                            IList<IWebElement> els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs _5z-5']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                            string dateAudio = "";
                                                            string nomFichierAudio = "";

                                                            foreach (IWebElement el in els)
                                                            {
                                                                if (el.GetAttribute("data-tooltip-content") != null)
                                                                {

                                                                    if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                    {
                                                                        var texte = el.GetAttribute("data-tooltip-content");
                                                                        var position = el.Location;
                                                                        dateAudio = texte.Replace(":", "-");
                                                                        nomFichierAudio = "From";
                                                                        break;
                                                                    }



                                                                }
                                                            }
                                                            if (dateAudio == "")
                                                            {
                                                                els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                                dateAudio = "";
                                                                foreach (IWebElement el in els)
                                                                {
                                                                    if (el.GetAttribute("data-tooltip-content") != null)
                                                                    {

                                                                        if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                        {
                                                                            var texte = el.GetAttribute("data-tooltip-content");
                                                                            var position = el.Location;
                                                                            dateAudio = texte.Replace(":", "-");
                                                                            nomFichierAudio = "To";
                                                                            break;
                                                                        }



                                                                    }
                                                                }
                                                            }

                                                            string duree = ell.Text.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                                            //if (classe.Contains("_1mj2 _2e-6"))
                                                            //    nomFichierAudio = "From";
                                                            //else
                                                            //    nomFichierAudio = "To";

                                                            if (duree.Length == 4)
                                                                duree = "00:0" + duree;

                                                            if (audioVisibles.ContainsKey(idd))
                                                            {
                                                                audioVisibless.Add(audioVisibles[idd]);
                                                                continue;
                                                            }

                                                            try
                                                            {
                                                                TimeSpan tempss;
                                                                TimeSpan.TryParse(duree, out tempss);
                                                                //DateTime temps;
                                                                //DateTime.TryParse(duree, out temps);
                                                                ell.Click();
                                                                StartRecord(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                                Stopwatch sw = new Stopwatch();
                                                                sw.Start();
                                                                //Thread.Sleep(500);
                                                                while (true)
                                                                {

                                                                    if (sw.ElapsedMilliseconds > tempss.TotalMilliseconds + (2000))
                                                                    {
                                                                        if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                                                        {

                                                                            try
                                                                            {
                                                                                driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                                                            }
                                                                            catch
                                                                            {

                                                                            }
                                                                        }
                                                                        break;
                                                                    }

                                                                }

                                                                StopRecording();
                                                                Thread.Sleep(1000);

                                                                if (!audioVisibles.ContainsKey(idd))
                                                                {
                                                                    audioVisibles.Add(idd, pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                                    audioVisibless.Add(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");

                                                                }



                                                                j++;

                                                            }
                                                            catch (Exception exx)
                                                            {
                                                                //StopRecording();
                                                                //Thread.Sleep(5000);
                                                            }


                                                            //ell.Click();


                                                        }

                                                    }

                                                    //pour cliquer sur le message vocal et jouer le son
                                                    //driverMessenger.FindElementsByXPath(classe)[0].Click();
                                                }


                                                if (classe.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))//si classe contenant vidéo on télécharge d'abord la vidéo
                                                {


                                                    IList<IWebElement> allDivElements = driverMessenger.FindElementsByXPath(classe + "//video");//_ox1 _21y0
                                                    for (int ii = 0; ii < allDivElements.Count(); ii++)
                                                    {

                                                        if (allDivElements[ii].GetAttribute("class") != null)
                                                        {
                                                            //here the print statement will print the value of each div tag element
                                                            var tmp = allDivElements[ii].GetAttribute("class");

                                                            if (tmp == "_ox1 _21y0")// si div avec vidéo
                                                            {
                                                                //var video = driver.FindElementsByClassName(tmp);
                                                                //IList<IWebElement> allDivElementss = driver.FindElementsByClassName(tmp);

                                                                try
                                                                {
                                                                    //var tmpp = allDivElementss[0].FindElement(By.XPath("video")).GetAttribute("src");
                                                                    var tmpp = allDivElements[ii].GetAttribute("src");

                                                                    //if (allDivElements[0].Location.Y > 15 && allDivElements[0].Location.Y < (resolutionEcran - 250))
                                                                    //    break;


                                                                    if (allDivElements[ii].Location.Y > 15 && allDivElements[ii].Location.Y < (resolutionEcran - 250))
                                                                    {
                                                                        if (!videosVisibles.ContainsKey(tmpp + ii))
                                                                        {
                                                                            videosVisibles.Add(tmpp + ii, tmpp);
                                                                        }
                                                                    }
                                                                    //break;



                                                                    //IWebElement oo = allDivElementss[0].FindElement(By.XPath("video"));


                                                                }
                                                                catch
                                                                {

                                                                }

                                                            }
                                                        }

                                                    }




                                                }


                                                var messages = driverMessenger.FindElementsByXPath(classe);
                                                object[] messagesToExtract = messages.ToArray();


                                                foreach (OpenQA.Selenium.Remote.RemoteWebElement o in messagesToExtract)
                                                {

                                                    string tentation = o.ToString();
                                                    string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                    //if (classeTraitee.ContainsKey(idd))
                                                    //    continue;

                                                    if (!dicoMessagesFrom.ContainsKey(idd))
                                                    {
                                                        dicoMessagesFrom.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                    }
                                                    //else
                                                    //    continue;


                                                    if (o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250))
                                                    {
                                                        if (!messagesVisibles.ContainsKey(idd) && o.Text != "" && !o.Text.Contains("Lire-4:01Paramètres"))
                                                        {
                                                            messagesVisibles.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));

                                                            //if (!classeTraitee.ContainsKey(idd))
                                                            //{
                                                            //    classeTraitee.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                            //}
                                                        }

                                                    }
                                                    //else
                                                    //    break;


                                                }


                                            }

                                        //on récupère tous les messages ppur ensuite comparer avec messageFrom et messageTo
                                        //imageDown = driver.FindElementById(idTmp);
                                        //Thread.Sleep(200);

                                        //if (textes != imageDown.Text)
                                        //    textes = imageDown.Text + "\n";

                                        messenger = driverMessenger.PageSource;
                                        //topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                        //on récupère la valeur Top de la scrollBar

                                        topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                        //on récupère la valeur Top de la scrollBar

                                        top = "";
                                        try
                                        {
                                            foreach (string t in topScrollBar)
                                            {
                                                string tmp = t.Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                                if (!tmp.Contains("top:") || tmp.Contains("hidden"))
                                                    continue;

                                                top = tmp.Substring(tmp.IndexOf("top: ") + 4).Split(';')[0];

                                                //if ((!tmp.Contains("top:") && ! tmp.Contains("uiScrollableAreaWrap")) || tmp.StartsWith("<html"))
                                                //    continue;

                                                //top = t.Substring(t.IndexOf("top: ") + 4).Split(';')[0];
                                            }

                                            if (top == topPrec)
                                                break;

                                            topPrec = top;
                                        }
                                        catch
                                        {

                                        }

                                        Screenshot imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                        imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();


                                        //imageScreenshott.SaveAsFile(pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg", OpenQA.Selenium.ScreenshotImageFormat.Jpeg);
                                        imageScreenshott.SaveAsFile(pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);


                                        Thread.Sleep(100);

                                        //string pathToFile = pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg";
                                        string pathToFile = pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png";
                                        //pathToFolder = pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString);
                                        pathToFolder = pathToSaveScreenshot;

                                        if (!FASTMESSENGER)
                                            foreach (string cle in messagesVisibles.Keys)
                                            {

                                                if (!messagesVisiblesForFile.ContainsKey(cle))
                                                {

                                                    string[] lignes = messagesVisibles[cle].Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);

                                                    string tmp = "";
                                                    foreach (string li in lignes)
                                                    {
                                                        tmp += li.Trim().Replace("\r", "").Replace(";", "");
                                                    }



                                                    messagesVisiblesForFile.Add(cle, tmp + ";" + pathToFile + "\n");
                                                }

                                                //messagesVisiblesWithScreenshots += valeur + ";" + pathToFile + "\n";
                                            }

                                        if (!FASTMESSENGER)
                                            if (videosVisibles.Count > 0)
                                                foreach (string cle in videosVisibles.Keys)
                                                {
                                                    //if (!videosVisiblesForFile.ContainsKey(cle))
                                                    //{

                                                    videosVisiblesForFile.Add(cle + ";" + pathToFile + "\n");
                                                    //}
                                                }

                                        if (!FASTMESSENGER)
                                            if (audioVisibless.Count > 0)
                                                foreach (string cle in audioVisibless)
                                                {
                                                    //if (!videosVisiblesForFile.ContainsKey(cle))
                                                    //{
                                                    if (!audioVisiblesForFile.ContainsKey(cle))
                                                        audioVisiblesForFile.Add(cle, cle + ";" + pathToFile + "\n");
                                                    //}
                                                }

                                        messagesVisibles = new Dictionary<string, string>();
                                        videosVisibles = new Dictionary<string, string>();
                                        //audioVisibles = new Dictionary<string, string>();
                                        hauteur += 600;


                                        i++;
                                    }
                                    ForGrid forGrid = new ForGrid();
                                    forGrid.PathToFolder = pathToFolder;
                                    forGrid.Url = link;

                                    imageDown = driverMessenger.FindElementById(idTmp);
                                    textes = imageDown.Text + "\n";

                                    backgroundWorkerGetMessenger.ReportProgress(-7, forGrid);
                                    //FillDataGridViewMessenger(pathToFolder, link);



                                }


                            }
                            catch (Exception ex)//FIN TRY TIMEOUT-----------------------------------------------------------------------
                            {
                                //MessageBox.Show("error dans Messenger " + ex.Message);


                                string topPrec = "";
                                textes = imageDown.Text;

                                //Dictionary<string, string> classeTraitee = new Dictionary<string, string>();
                                int j = 1;
                                int hauteurfromdate = 0;
                                string hauteurfromdateString = "";

                                Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                                long innerHeightt = (long)innerHeight;
                                long scrolll = (long)innerHeight;
                                long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                                while (true)
                                {
                                    if (fromdate != null)
                                    {
                                        //hauteurfromdate = fromdate.Location.Y + (Int32)scrolll;
                                        hauteurfromdate = fromdate.Location.Y;
                                        hauteurfromdateString = hauteurfromdate.ToString();

                                        ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollIntoView(true);", fromdate);
                                        Thread.Sleep(500);

                                        //hauteurfromdate = fromdate.Location.Y;
                                        fromdate = null;
                                        //hauteur += 600;

                                    }
                                    else
                                    {

                                        //((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollBy(0,450);", imageDown);
                                        ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + hauteur + ");", imageDown);

                                        Thread.Sleep(2000);
                                    }



                                    if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                    {

                                        try
                                        {
                                            driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                        }
                                        catch
                                        {

                                        }
                                    }
                                    //int hei = imageDown.Size.Height;
                                    messenger = driverMessenger.PageSource;

                                    if (!FASTMESSENGER)
                                        foreach (string classe in classesConnues)
                                        {

                                            if (classe.Contains("_1mj2 _2e-6") || classe.Contains("_1mj4 _2e-7"))//|| classe.Contains("_3058 _15gf")
                                            {


                                                //pour récupérer les a contenant la longueur du message vocal
                                                //IList<IWebElement> newlisteVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                //IList<IWebElement> listeVocaux = driverMessenger.FindElementsByXPath(classe + "//a");
                                                IList<IWebElement> listeVocauxx = driverMessenger.FindElements(By.XPath("//div[@class='_1mj2 _2e-6']"));

                                                foreach (IWebElement ell in listeVocauxx)
                                                {
                                                    //if (listeVocaux[0].Location.Y > 15 && listeVocaux[0].Location.Y < (resolutionEcran - 250))
                                                    //    break;
                                                    if (ell.Text == "")
                                                        continue;

                                                    string tentation = ell.ToString();
                                                    string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                    //IList<IWebElement> testt = ell.FindElements(By.TagName("a"));

                                                    //string tentation = ell.ToString();
                                                    //string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                    //if (audioVisibles.ContainsKey(idd))
                                                    //{
                                                    //    continue;
                                                    //}

                                                    if (ell.Location.Y > 15 && ell.Location.Y < (resolutionEcran - 250))
                                                    {
                                                        //string tentation = ell.ToString();
                                                        //string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];


                                                        IList<IWebElement> els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs _5z-5']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                        string dateAudio = "";
                                                        string nomFichierAudio = "";

                                                        foreach (IWebElement el in els)
                                                        {
                                                            if (el.GetAttribute("data-tooltip-content") != null)
                                                            {

                                                                if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                {
                                                                    var texte = el.GetAttribute("data-tooltip-content");
                                                                    var position = el.Location;
                                                                    dateAudio = texte.Replace(":", "-");
                                                                    nomFichierAudio = "From";
                                                                    break;
                                                                }



                                                            }
                                                        }
                                                        if (dateAudio == "")
                                                        {
                                                            els = driverMessenger.FindElements(By.XPath("//div[@class='_3zvs']"));//driverMessenger.FindElements(By.XPath("_3zvs']"))[2].GetAttribute("data-tooltip-content")

                                                            dateAudio = "";
                                                            foreach (IWebElement el in els)
                                                            {
                                                                if (el.GetAttribute("data-tooltip-content") != null)
                                                                {

                                                                    if ((ell.Location.Y - el.Location.Y) > 0 && (ell.Location.Y - el.Location.Y) < 5)
                                                                    {
                                                                        var texte = el.GetAttribute("data-tooltip-content");
                                                                        var position = el.Location;
                                                                        dateAudio = texte.Replace(":", "-");
                                                                        nomFichierAudio = "To";
                                                                        break;
                                                                    }



                                                                }
                                                            }
                                                        }

                                                        string duree = ell.Text.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                                        //if (classe.Contains("_1mj2 _2e-6"))
                                                        //    nomFichierAudio = "From";
                                                        //else
                                                        //    nomFichierAudio = "To";

                                                        if (duree.Length == 4)
                                                            duree = "00:0" + duree;

                                                        if (audioVisibles.ContainsKey(idd))
                                                        {
                                                            audioVisibless.Add(audioVisibles[idd]);
                                                            continue;
                                                        }

                                                        try
                                                        {
                                                            TimeSpan tempss;
                                                            TimeSpan.TryParse(duree, out tempss);
                                                            //DateTime temps;
                                                            //DateTime.TryParse(duree, out temps);
                                                            ell.Click();
                                                            StartRecord(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                            Stopwatch sw = new Stopwatch();
                                                            sw.Start();
                                                            //Thread.Sleep(500);
                                                            while (true)
                                                            {

                                                                if (sw.ElapsedMilliseconds > tempss.TotalMilliseconds + (2000))
                                                                {
                                                                    if (isElementPresent(driver, "//div[@class='_10 uiLayer _4-hy _3qw']"))//driver.FindElement(By.XPath("_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click()
                                                                    {

                                                                        try
                                                                        {
                                                                            driver.FindElement(By.XPath("//div[@class='_10 uiLayer _4-hy _3qw']")).FindElement(By.TagName("a")).Click();


                                                                        }
                                                                        catch
                                                                        {

                                                                        }
                                                                    }
                                                                    break;
                                                                }

                                                            }

                                                            StopRecording();
                                                            Thread.Sleep(1000);

                                                            if (!audioVisibles.ContainsKey(idd))
                                                            {
                                                                audioVisibles.Add(idd, pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");
                                                                audioVisibless.Add(pathToSaveScreenshot + "\\Audio\\" + nomFichierAudio + "_" + dateAudio + "_duree_" + duree.Replace(":", "-") + "_" + j + ".wav");

                                                            }



                                                            j++;

                                                        }
                                                        catch (Exception exx)
                                                        {
                                                            //StopRecording();
                                                            //Thread.Sleep(5000);
                                                        }


                                                        //ell.Click();


                                                    }

                                                }

                                                //pour cliquer sur le message vocal et jouer le son
                                                //driverMessenger.FindElementsByXPath(classe)[0].Click();
                                            }


                                            if (classe.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))//si classe contenant vidéo on télécharge d'abord la vidéo
                                            {


                                                IList<IWebElement> allDivElements = driverMessenger.FindElementsByXPath(classe + "//video");//_ox1 _21y0
                                                for (int ii = 0; ii < allDivElements.Count(); ii++)
                                                {

                                                    if (allDivElements[ii].GetAttribute("class") != null)
                                                    {
                                                        //here the print statement will print the value of each div tag element
                                                        var tmp = allDivElements[ii].GetAttribute("class");

                                                        if (tmp == "_ox1 _21y0")// si div avec vidéo
                                                        {
                                                            //var video = driver.FindElementsByClassName(tmp);
                                                            //IList<IWebElement> allDivElementss = driver.FindElementsByClassName(tmp);

                                                            try
                                                            {
                                                                //var tmpp = allDivElementss[0].FindElement(By.XPath("video")).GetAttribute("src");
                                                                var tmpp = allDivElements[ii].GetAttribute("src");

                                                                //if (allDivElements[0].Location.Y > 15 && allDivElements[0].Location.Y < (resolutionEcran - 250))
                                                                //    break;


                                                                if (allDivElements[ii].Location.Y > 15 && allDivElements[ii].Location.Y < (resolutionEcran - 250))
                                                                {
                                                                    if (!videosVisibles.ContainsKey(tmpp + ii))
                                                                    {
                                                                        videosVisibles.Add(tmpp + ii, tmpp);
                                                                    }
                                                                }
                                                                //break;



                                                                //IWebElement oo = allDivElementss[0].FindElement(By.XPath("video"));


                                                            }
                                                            catch
                                                            {

                                                            }

                                                        }
                                                    }

                                                }




                                            }


                                            var messages = driverMessenger.FindElementsByXPath(classe);
                                            object[] messagesToExtract = messages.ToArray();


                                            foreach (OpenQA.Selenium.Remote.RemoteWebElement o in messagesToExtract)
                                            {

                                                string tentation = o.ToString();
                                                string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                //if (classeTraitee.ContainsKey(idd))
                                                //    continue;

                                                if (!dicoMessagesFrom.ContainsKey(idd))
                                                {
                                                    dicoMessagesFrom.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                }
                                                //else
                                                //    continue;


                                                if (o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250))
                                                {
                                                    if (!messagesVisibles.ContainsKey(idd) && o.Text != "" && !o.Text.Contains("Lire-4:01Paramètres"))
                                                    {
                                                        messagesVisibles.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));

                                                        //if (!classeTraitee.ContainsKey(idd))
                                                        //{
                                                        //    classeTraitee.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                        //}
                                                    }

                                                }
                                                //else
                                                //    break;


                                            }


                                        }

                                    //on récupère tous les messages ppur ensuite comparer avec messageFrom et messageTo
                                    //imageDown = driver.FindElementById(idTmp);
                                    //Thread.Sleep(200);

                                    //if (textes != imageDown.Text)
                                    //    textes = imageDown.Text + "\n";

                                    messenger = driverMessenger.PageSource;
                                    //topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                    //on récupère la valeur Top de la scrollBar

                                    topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                    //on récupère la valeur Top de la scrollBar

                                    top = "";
                                    try
                                    {
                                        foreach (string t in topScrollBar)
                                        {
                                            string tmp = t.Split(new string[] { "</div>" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                            if (!tmp.Contains("top:") || tmp.Contains("hidden"))
                                                continue;

                                            top = tmp.Substring(tmp.IndexOf("top: ") + 4).Split(';')[0];

                                            //if ((!tmp.Contains("top:") && ! tmp.Contains("uiScrollableAreaWrap")) || tmp.StartsWith("<html"))
                                            //    continue;

                                            //top = t.Substring(t.IndexOf("top: ") + 4).Split(';')[0];
                                        }

                                        if (top == topPrec)
                                            break;

                                        topPrec = top;
                                    }
                                    catch
                                    {

                                    }

                                    Screenshot imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                    imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();


                                    //imageScreenshott.SaveAsFile(pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg", OpenQA.Selenium.ScreenshotImageFormat.Jpeg);
                                    imageScreenshott.SaveAsFile(pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);


                                    Thread.Sleep(100);

                                    //string pathToFile = pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg";
                                    string pathToFile = pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".png";
                                    //pathToFolder = pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString);
                                    pathToFolder = pathToSaveScreenshot;

                                    if (!FASTMESSENGER)
                                        foreach (string cle in messagesVisibles.Keys)
                                        {

                                            if (!messagesVisiblesForFile.ContainsKey(cle))
                                            {

                                                string[] lignes = messagesVisibles[cle].Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);

                                                string tmp = "";
                                                foreach (string li in lignes)
                                                {
                                                    tmp += li.Trim().Replace("\r", "").Replace(";", "");
                                                }



                                                messagesVisiblesForFile.Add(cle, tmp + ";" + pathToFile + "\n");
                                            }

                                            //messagesVisiblesWithScreenshots += valeur + ";" + pathToFile + "\n";
                                        }
                                    if (!FASTMESSENGER)
                                        if (videosVisibles.Count > 0)
                                            foreach (string cle in videosVisibles.Keys)
                                            {
                                                //if (!videosVisiblesForFile.ContainsKey(cle))
                                                //{

                                                videosVisiblesForFile.Add(cle + ";" + pathToFile + "\n");
                                                //}
                                            }
                                    if (!FASTMESSENGER)
                                        if (audioVisibless.Count > 0)
                                            foreach (string cle in audioVisibless)
                                            {
                                                //if (!videosVisiblesForFile.ContainsKey(cle))
                                                //{
                                                if (!audioVisiblesForFile.ContainsKey(cle))
                                                    audioVisiblesForFile.Add(cle, cle + ";" + pathToFile + "\n");
                                                //}
                                            }

                                    messagesVisibles = new Dictionary<string, string>();
                                    videosVisibles = new Dictionary<string, string>();
                                    //audioVisibles = new Dictionary<string, string>();
                                    hauteur += 600;


                                    i++;
                                }
                                ForGrid forGrid = new ForGrid();
                                forGrid.PathToFolder = pathToFolder;
                                forGrid.Url = link;

                                imageDown = driverMessenger.FindElementById(idTmp);
                                textes = imageDown.Text + "\n";

                                backgroundWorkerGetMessenger.ReportProgress(-7, forGrid);
                                //FillDataGridViewMessenger(pathToFolder, link);


                            }

                            string codePagee = driverMessenger.PageSource;

                            using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSaveScreenshot + "\\Messenger_Messages.txt", false))
                            {
                                //if (File.Exists(saveFileDialog1.FileName))
                                //    File.Delete(saveFileDialog1.FileName);

                                file.Write(textes);
                            }

                            //using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSaveScreenshot + "\\Messenger_Messages_Bis.txt", false))
                            //{
                            //    //if (File.Exists(saveFileDialog1.FileName))
                            //    //    File.Delete(saveFileDialog1.FileName);

                            //    textes = "";
                            //    foreach(string t in messagesVisibles.Values)
                            //    {
                            //        textes += t + "\n";
                            //    }


                            //    file.Write(textes);
                            //}

                            using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSaveScreenshot + "\\Messenger_Messages_With_Screenshots.txt", false))
                            {
                                textes = "";
                                foreach (string t in messagesVisiblesForFile.Values)
                                {
                                    textes += t;
                                }


                                file.Write(textes);
                                messagesVisiblesForFile = new Dictionary<string, string>();
                            }

                            using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSaveScreenshot + "\\Messenger_Videos_With_Screenshots.txt", false))
                            {
                                if (videosVisiblesForFile.Count > 0)
                                {
                                    textes = "";
                                    foreach (string t in videosVisiblesForFile)
                                    {
                                        textes += t;
                                    }


                                    file.Write(textes);

                                }



                            }

                            using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSaveScreenshot + "\\Messenger_Audio_With_Screenshots.txt", false))
                            {
                                if (audioVisiblesForFile.Count > 0)
                                {
                                    textes = "";
                                    foreach (string t in audioVisiblesForFile.Values)
                                    {
                                        textes += t;
                                    }


                                    file.Write(textes);

                                }



                            }

                            if (!Directory.Exists(pathToSaveScreenshot + "\\Videos\\"))
                            {
                                //EraseDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link], true);  
                                Directory.CreateDirectory(pathToSaveScreenshot + "\\Videos\\");
                            }

                            using (var client = new WebClient())
                            {

                                try

                                {
                                    Dictionary<string, string> dico = new Dictionary<string, string>();
                                    foreach (string t in videosVisiblesForFile)
                                    {
                                        //FileInfo fileinfo = new FileInfo(t);
                                        string keyy = t.Substring(t.LastIndexOf('/') + 1).Split('?')[0];

                                        if (!dico.ContainsKey(keyy))
                                        {
                                            dico.Add(keyy, t);
                                            string nomFichier = t.Substring(t.LastIndexOf('/') + 1).Split('?')[0];
                                            client.DownloadFile(t, pathToSaveScreenshot + "\\Videos\\" + nomFichier);
                                            Thread.Sleep(1000);
                                        }


                                    }

                                    videosVisiblesForFile = new List<string>();
                                }
                                catch (Exception ex)
                                {
                                    //MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT DES VIDEOS");
                                    //return;
                                }
                            }


                            //on essaie de récupérer les documents partagés
                            if (!FASTMESSENGER)
                                try
                                {
                                    IList<IWebElement> tmpp = driverMessenger.FindElements(By.ClassName("uiScrollableAreaContent"));
                                    foreach (IWebElement div in tmpp)
                                    {
                                        if (!div.Text.StartsWith("Information"))
                                            continue;

                                        IList<IWebElement> docPartagess = div.FindElements(By.TagName("a"));

                                        foreach (IWebElement elpart in docPartagess)
                                        {
                                            if (elpart.GetAttribute("href") != "")
                                            {
                                                docPartages.Add(elpart.GetAttribute("href"));
                                            }
                                        }
                                    }

                                }
                                catch
                                {

                                }

                            if (!FASTMESSENGER)
                                if (docPartages.Count > 0)
                                {
                                    if (!Directory.Exists(pathToSaveScreenshot + "\\Documents_Partages\\"))
                                    {
                                        //EraseDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link], true);  
                                        Directory.CreateDirectory(pathToSaveScreenshot + "\\Documents_Partages\\");
                                    }

                                    using (var client = new WebClient())
                                    {

                                        try

                                        {

                                            foreach (string t in docPartages)
                                            {
                                                try
                                                {
                                                    //FileInfo fichier = new FileInfo(t);
                                                    string urll = t;
                                                    string nomFichier = t.Split(new string[] { "%3F" }, StringSplitOptions.RemoveEmptyEntries)[0];

                                                    urll = urll.Replace("%3A", ":").Replace("%3D", "=").Replace("%2F", "/").Replace("%3F", "?").Replace("%26", "&");

                                                    if (urll.Contains("https://l.facebook.com/l.php?u="))
                                                    {
                                                        nomFichier = nomFichier.Substring(nomFichier.LastIndexOf("%2F") + 3).Trim();
                                                        urll = urll.Substring(urll.IndexOf("https://l.facebook.com/l.php?u=") + 31);
                                                    }
                                                    //else
                                                    //    nomFichier = nomFichier.Split('?')[0].Substring(nomFichier.LastIndexOf("/") + 1).Trim();



                                                    client.DownloadFile(urll, pathToSaveScreenshot + "\\Documents_Partages\\" + nomFichier);
                                                    Thread.Sleep(1000);
                                                }

                                                catch
                                                {

                                                }

                                            }

                                            docPartages = new List<string>();
                                        }
                                        catch (Exception ex)
                                        {
                                            //MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT DES VIDEOS");
                                            //return;
                                        }
                                    }
                                }




                            Thread.Sleep(2500);

                            textes = "";
                            messagesVisiblesForFile = new Dictionary<string, string>();
                            messagesVisibles = new Dictionary<string, string>();
                            videosVisibles = new Dictionary<string, string>();
                            videosVisiblesForFile = new List<string>();
                            audioVisiblesForFile = new Dictionary<string, string>();
                            messagesVisibles = new Dictionary<string, string>();
                            videosVisibles = new Dictionary<string, string>();
                            audioVisibles = new Dictionary<string, string>();
                            audioVisibless = new List<string>();
                            //idFictif = 1;
                        }

                        textes = "";
                        messagesVisiblesForFile = new Dictionary<string, string>();
                        audioVisiblesForFile = new Dictionary<string, string>();
                        videosVisiblesForFile = new List<string>();
                        messagesVisibles = new Dictionary<string, string>();
                        videosVisibles = new Dictionary<string, string>();
                        audioVisibles = new Dictionary<string, string>();
                        audioVisibless = new List<string>();
                        classeTraitee = new Dictionary<string, string>();

                        idFictif = 1;
                    }


                }
                catch
                {

                }


                try
                {
                    Object lastHeight = ((IJavaScriptExecutor)driverMessenger).ExecuteScript("return document.body.scrollHeight");

                    while (true)
                    {
                        ((IJavaScriptExecutor)driverMessenger).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                        Thread.Sleep(2000);

                        Object newHeight = ((IJavaScriptExecutor)driverMessenger).ExecuteScript("return document.body.scrollHeight");
                        if (newHeight.Equals(lastHeight))
                        {
                            break;
                        }
                        lastHeight = newHeight;
                    }
                }
                catch
                {
                    //e.printStackTrace();
                }



            }
            catch
            {

                //driverMessenger.Quit();
            }




            //}
            //Thread.Sleep(2000);
            //backgroundWorker1.ReportProgress(-3);
            Thread.Sleep(2000);
            //backgroundWorker1.CancelAsync();

            if (backgroundWorkerGetMessenger != null && backgroundWorkerGetMessenger.IsBusy)
                backgroundWorkerGetMessenger.CancelAsync();

            //labelanalyseencours.Visible = false;
            //pictureBoxwaiting.Visible = false;
            //pictureBoxlogofacebook.Visible = false;
        }


        private void SetDefaultLanguage()
        {
            if (driver == null)
            {
                InitializeDriver();
                driverMessenger = driver;

                // 2. Go to the "Google" homepage
                driverMessenger.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }

                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driverMessenger.FindElementById("email");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driverMessenger.FindElementById("pass");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driverMessenger.FindElementById("loginbutton").Click();
                //searchButton.Click();
                Thread.Sleep(2500);
            }

            try
            {
                //on essai de remettre langue par defaut
                driverMessenger.Navigate().GoToUrl("https://www.facebook.com/settings?tab=language");
                Thread.Sleep(5000);

                IWebElement combo = driverMessenger.FindElement(By.XPath("//span[@class='fbSettingsListItemContent fcg']"));
                driverMessenger.FindElement(By.XPath("//span[@class='fbSettingsListItemEditText']")).Click();
                Thread.Sleep(500);

                SelectElement comboo = new SelectElement(driver.FindElement(By.TagName("select")));
                IWebElement item = comboo.SelectedOption;

                if (item.GetAttribute("value") == "fr_FR")
                {
                    comboo.SelectByValue(LANGUAGESELECTED);
                    Thread.Sleep(1500);

                    //submit uiButton uiButtonConfirm
                    driverMessenger.FindElement(By.XPath("//label[@class='submit uiButton uiButtonConfirm']")).Click();
                    Thread.Sleep(2500);
                }


            }
            catch (NoSuchElementException ex)
            {

            }
        }
        private void SetFrenchLanguage()
        {
            if (driver == null)
            {
                InitializeDriver();
                driverMessenger = driver;

                // 2. Go to the "Google" homepage
                driverMessenger.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }

                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driverMessenger.FindElementById("email");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driverMessenger.FindElementById("pass");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driverMessenger.FindElementById("loginbutton").Click();
                //searchButton.Click();
                Thread.Sleep(2500);
            }

            try
            {
                //on essai de remettre langue par defaut
                driverMessenger.Navigate().GoToUrl("https://www.facebook.com/settings?tab=language");
                Thread.Sleep(5000);

                IWebElement combo = driverMessenger.FindElement(By.XPath("//span[@class='fbSettingsListItemContent fcg']"));
                driverMessenger.FindElement(By.XPath("//span[@class='fbSettingsListItemEditText']")).Click();
                Thread.Sleep(1500);

                SelectElement comboo = new SelectElement(driver.FindElement(By.TagName("select")));
                IWebElement item = comboo.SelectedOption;
                LANGUAGESELECTED = item.GetAttribute("value");

                try
                {
                    Screenshot imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                    imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();

                    Thread.Sleep(1000);


                    //imageScreenshott.SaveAsFile(pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg", OpenQA.Selenium.ScreenshotImageFormat.Jpeg);
                    imageScreenshott.SaveAsFile(pathToSave + "\\Messenger\\DefaultLanguage.png", OpenQA.Selenium.ScreenshotImageFormat.Png);


                    Thread.Sleep(1000);
                }
                catch
                {

                }
               

                if (item.GetAttribute("value") != "fr_FR")
                {
                    comboo.SelectByValue("fr_FR");
                    Thread.Sleep(1500);

                    //submit uiButton uiButtonConfirm
                    driverMessenger.FindElement(By.XPath("//label[@class='submit uiButton uiButtonConfirm']")).Click();
                    Thread.Sleep(2500);
                }


            }
            catch (NoSuchElementException ex)
            {

            }
        }
        private void SetFrenchLanguageForNew()
        {
            if (driver == null)
            {
                InitializeDriver();
                //driver = driver;

                // 2. Go to the "Google" homepage
                driver.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }

                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driverMessenger.FindElementById("email");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driver.FindElementById("pass");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driver.FindElementById("loginbutton").Click();
                //searchButton.Click();
                Thread.Sleep(2500);
            }

            try
            {
                //on essai de remettre langue par defaut
                driver.Navigate().GoToUrl("https://www.facebook.com/settings?tab=language");
                Thread.Sleep(5000);

                IWebElement combo = driver.FindElement(By.XPath("//span[@class='fbSettingsListItemContent fcg']"));
                driver.FindElement(By.XPath("//span[@class='fbSettingsListItemEditText']")).Click();
                Thread.Sleep(1500);

                SelectElement comboo = new SelectElement(driver.FindElement(By.TagName("select")));
                IWebElement item = comboo.SelectedOption;
                LANGUAGESELECTED = item.GetAttribute("value");

                try
                {
                    Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                    imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                    Thread.Sleep(1000);


                    //imageScreenshott.SaveAsFile(pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg", OpenQA.Selenium.ScreenshotImageFormat.Jpeg);
                    imageScreenshott.SaveAsFile(pathToSave + "\\Messenger\\DefaultLanguage.png", OpenQA.Selenium.ScreenshotImageFormat.Png);


                    Thread.Sleep(1000);
                }
                catch
                {

                }


                if (item.GetAttribute("value") != "fr_FR")
                {
                    comboo.SelectByValue("fr_FR");
                    Thread.Sleep(1500);

                    //submit uiButton uiButtonConfirm
                    driver.FindElement(By.XPath("//label[@class='submit uiButton uiButtonConfirm']")).Click();
                    Thread.Sleep(2500);
                }


            }
            catch (NoSuchElementException ex)
            {

            }
        }
        private void MessengerFromDate(Dictionary<string, string> dicoMessenger, string datum)
        {
            //getMessenger = true;
            
            pictureBoxlogofacebook.Visible = true;
            pictureBoxwaiting.Visible = true;
            pictureBoxwaiting.Refresh();
            pictureBoxlogofacebook.Visible = true;
            pictureBoxlogofacebook.BringToFront();
            pictureBoxwaiting.Refresh();
            pictureBoxlogofacebook.Refresh();


            //string urlFriend = textBoxUSERNAMEFRIENDS.Text;
            //pour cacher fenetre DOS
            var driverService = ChromeDriverService.CreateDefaultService();
            driverService.HideCommandPromptWindow = true;

            //var driver = new ChromeDriver(driverService, new ChromeOptions());

            //System.Diagnostics.Process.Start(filepath);
            ChromeOptions chromeOptions = new ChromeOptions();
            chromeOptions.AddArguments("--disable-notifications");
            System.Random rnd = new System.Random();
            int nbreAnnee = 1;

            try
            {
                if (driverMessenger.WindowHandles.Count == 0)
                {


                    // 1. Maximize the browser
                    //driver.Manage().Window.Maximize();
                    driverMessenger.Close();
                    driverMessenger = new ChromeDriver(driverService, chromeOptions);

                    // 2. Go to the "Google" homepage
                    driverMessenger.Navigate().GoToUrl("https://facebook.com/login");
                    Thread.Sleep(500);

                    if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                    {
                        driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                        Thread.Sleep(2000);
                    }


                    //while (!isElementPresentByID(driver, "email"))
                    //{
                    // 3. Find the username textbox (by ID) on the homepage
                    var userNameBox = driver.FindElementById("email");
                    // 4. Enter the text (to search for) in the textbox
                    userNameBox.SendKeys(textBoxUSERNAME.Text);
                    //}


                    // 3. Find the username textbox (by ID) on the homepage
                    var userpasswordBox = driver.FindElementById("pass");

                    // 4. Enter the text (to search for) in the textbox
                    userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                    Thread.Sleep(5000);

                    // 5. Find the search button (by Name) on the homepage
                    driver.FindElementById("loginbutton").Click();
                    //searchButton.Click();
                    Thread.Sleep(2500);
                }

            }

            catch
            {
                // 1. Maximize the browser
                //driver.Manage().Window.Maximize();
                //driverMessenger.Close();
                driverMessenger = new ChromeDriver(driverService, chromeOptions);

                // 2. Go to the "Google" homepage
                driverMessenger.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }


                //while (!isElementPresentByID(driver, "email"))
                //{
                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driverMessenger.FindElementById("email");
                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);
                //}


                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driverMessenger.FindElementById("pass");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driverMessenger.FindElementById("loginbutton").Click();
                //searchButton.Click();
                Thread.Sleep(2500);

            }


            //using (var driver = new ChromeDriver(driverService, chromeOptions))
            //{

            //// 1. Maximize the browser
            ////driver.Manage().Window.Maximize();



            //// 2. Go to the "Google" homepage
            //driverMessenger.Navigate().GoToUrl("https://facebook.com/login");


            ////while (!isElementPresentByID(driver, "email"))
            ////{
            //    // 3. Find the username textbox (by ID) on the homepage
            //    var userNameBox = driver.FindElementById("email");
            //    // 4. Enter the text (to search for) in the textbox
            //    userNameBox.SendKeys(textBoxUSERNAME.Text);
            ////}


            //// 3. Find the username textbox (by ID) on the homepage
            //var userpasswordBox = driver.FindElementById("pass");

            //// 4. Enter the text (to search for) in the textbox
            //userpasswordBox.SendKeys(textBoxPASSWORD.Text);
            //Thread.Sleep(5000);

            //// 5. Find the search button (by Name) on the homepage
            //driver.FindElementById("loginbutton").Click();
            ////searchButton.Click();
            //Thread.Sleep(2500);


            try
            {


                string targetName = textBoxops.Text;
                string textes = "";
                string messagesFromInString = "";
                string messagesVisiblesWithScreenshots = "";
                string pathToFolder = "";
                //var imageDown = "";
                Dictionary<string, string> dicoMessagesFrom = new Dictionary<string, string>();
                Dictionary<string, string> dicoMessagesTo = new Dictionary<string, string>();
                Dictionary<string, string> dicoPictures = new Dictionary<string, string>();
                Dictionary<string, string> messagesVisibles = new Dictionary<string, string>();
                Dictionary<string, string> videosVisibles = new Dictionary<string, string>();
                Dictionary<string, string> messagesVisiblesForFile = new Dictionary<string, string>();
                List<string> videosVisiblesForFile = new List<string>();

                List<string> classesConnues = new System.Collections.Generic.List<string>();
                classesConnues.Add("clearfix _o46 _3erg _29_7 _8lma direction_ltr text_align_ltr']");
                classesConnues.Add("clearfix _o46 _3erg _29_7 direction_ltr text_align_ltr']");
                classesConnues.Add("clearfix _o46 _3erg _29_7 _8lma direction_ltr text_align_ltr _ylc']");
                classesConnues.Add("clearfix _o46 _3erg _3i_m _nd_ _8lma direction_ltr text_align_ltr']");
                classesConnues.Add("clearfix _o46 _3erg _3i_m _nd_ _8lma direction_ltr text_align_ltr _ylc']");
                classesConnues.Add("_52mr _2poz _ui9 _4skb']");
                classesConnues.Add("clearfix _o46 _3erg _3i_m _nd_ direction_ltr text_align_ltr']");
                classesConnues.Add("clearfix _o46 _3erg _3i_m _nd_ _q4a _8lma direction_ltr text_align_ltr _ylc']");
                classesConnues.Add("_2poz _52mr _ui9 _2n8h _2n8i _5fk1']");//_2poz _52mr _ui9 _2n8h _2n8i _5fk1 Vidéo ?_ccq _4tsk _3o67 _52mr _1byr _4-od
                                                                                         //classesConnues.Add("_2n8h _2n8i _5fk1']");




                //récupération des années 
                //var years = driver.FindElementByXPath("rightColWrap']").Text;
                //string codePagee = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)years).WrappedDriver).PageSource;
                //string[] liYears = years.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries);

                //if (!Directory.Exists(pathToSave + @"\Facebook_Friends\" + targetName.ToUpper()))
                //    Directory.CreateDirectory(pathToSave + @"\Facebook_Friends\" + targetName.ToUpper());

                //driver.Navigate().GoToUrl("https://www.facebook.com/messages/t");//https://www.facebook.com/messages/t/MOD.orga
                //Thread.Sleep(5000);



                try
                {


                    string messenger = "";
                    int idFictif = 1;
                    string idFictifString = "";
                    Dictionary<string, string> dicoDATTUM = new Dictionary<string, string>();
                    if (dicoMessenger.Count > 0)
                    {
                        foreach (string link in dicoMessenger.Keys)
                        {

                            string pathToSaveScreenshot = "";

                            if (!Directory.Exists(pathToSave + "\\Messenger\\" + dicoMessenger[link]))
                            {
                                //EraseDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link], true);  
                                Directory.CreateDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link]);
                                pathToSaveScreenshot = pathToSave + "\\Messenger\\" + dicoMessenger[link];
                            }
                            else
                            if (dicoMessenger[link].ToLower().Contains("utilisateur de") || dicoMessenger[link].ToLower().Contains("user"))
                            {
                                idFictif++;
                                idFictifString = idFictif.ToString();
                                Directory.CreateDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link] + idFictifString);
                                pathToSaveScreenshot = pathToSave + "\\Messenger\\" + dicoMessenger[link] + idFictifString;
                            }






                            try
                            {
                                driverMessenger.Navigate().GoToUrl(link);
                                Thread.Sleep(5000);

                                messenger = driverMessenger.PageSource;



                                string[] id = messenger.Split(new String[] { "class=\"uiScrollableAreaWrap scrollable\"" }, StringSplitOptions.RemoveEmptyEntries);
                                string[] topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                //on récupère la valeur Top de la scrollBar

                                string top = "";
                                try
                                {
                                    foreach (string t in topScrollBar)
                                    {
                                        if (!t.Contains("top:"))
                                            continue;

                                        top = t.Substring(t.IndexOf("top: ") + 4).Split(';')[0];
                                    }
                                }
                                catch
                                {

                                }

                                //on récupère l'id dynamique du composant
                                string idTmp = "";
                                foreach (string idd in id)
                                {
                                    if (!idd.StartsWith("id") && !idd.Contains("Messages"))
                                        continue;


                                    idTmp = idd.Substring(idd.IndexOf("id=\"") + 4).Split('"')[0];
                                }

                                try
                                {
                                    var imageDown = driverMessenger.FindElementById(idTmp);
                                    int lastHeight = imageDown.Size.Height;


                                    int hauteur = 100;
                                    int i = 1;

                                    int width = driverMessenger.Manage().Window.Size.Width;
                                    int height = driverMessenger.Manage().Window.Size.Height;



                                    Rectangle resolution = Screen.FromControl(this).WorkingArea;
                                    int hauteurtotale = resolution.Height;
                                    int resolutionEcran = resolution.Height;

                                    if (isElementMessengerEndingPresent(driverMessenger))
                                    {
                                        ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0,0);", imageDown);
                                        Thread.Sleep(2000);

                                        

                                    }
                                    else
                                        while (!isElementMessengerEndingPresent(driverMessenger))
                                        {
                                            ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + (lastHeight - hauteur) + ");", imageDown);
                                            Thread.Sleep(2000);

                                            IList<IWebElement> datums = driverMessenger.FindElementsById(idTmp);

                                            foreach (IWebElement el in datums)
                                            {
                                                el.FindElements(By.TagName("time"));
                                                string dattum = el.Text;
                                                string tentation = el.ToString();
                                                string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                if (dattum.Contains("/"))
                                                {
                                                                                                  
                                                    
                                                    if (!dicoDATTUM.ContainsKey(idd))
                                                    {
                                                        dicoDATTUM.Add(idd, dattum.Substring(0, 9));
                                                    }

                                                }
                                                else
                                                {

                                                }

                                            }


                                            hauteur += 600;
                                            hauteurtotale += resolution.Height + (resolution.Height / 2);
                                            //i++;
                                        }

                                    if (isElementMessengerEndingPresent(driverMessenger))
                                    {
                                        ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0,0);", imageDown);
                                        Thread.Sleep(2000);

                                    }



                                    hauteur = 0;

                                    


                                    try
                                    {
                                        messenger = driverMessenger.PageSource;
                                        topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);
                                        top = topScrollBar[1].Substring(topScrollBar[1].IndexOf("top: ") + 4).Split(';')[0];
                                    }
                                    catch
                                    {
                                        top = "";
                                    }


                                    if (top != "")
                                    {
                                        string topPrec = "";
                                        textes = imageDown.Text;

                                        Dictionary<string, string> classeTraitee = new Dictionary<string, string>();
                                        while (true)
                                        {
                                            ((IJavaScriptExecutor)driverMessenger).ExecuteScript("arguments[0].scrollTo(0," + hauteur + ");", imageDown);
                                            Thread.Sleep(2000);


                                            //int hei = imageDown.Size.Height;
                                            messenger = driverMessenger.PageSource;


                                            foreach (string classe in classesConnues)
                                            {
                                                if (classe.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))//si classe contenant vidéo on télécharge d'abord la vidéo
                                                {


                                                    IList<IWebElement> allDivElements = driverMessenger.FindElementsByXPath(classe + "//video");//_ox1 _21y0
                                                    for (int ii = 0; ii < allDivElements.Count(); ii++)
                                                    {

                                                        if (allDivElements[ii].GetAttribute("class") != null)
                                                        {
                                                            //here the print statement will print the value of each div tag element
                                                            var tmp = allDivElements[ii].GetAttribute("class");

                                                            if (tmp == "_ox1 _21y0")// si div avec vidéo
                                                            {
                                                                //var video = driver.FindElementsByClassName(tmp);
                                                                //IList<IWebElement> allDivElementss = driver.FindElementsByClassName(tmp);

                                                                try
                                                                {
                                                                    //var tmpp = allDivElementss[0].FindElement(By.XPath("video")).GetAttribute("src");
                                                                    var tmpp = allDivElements[ii].GetAttribute("src");


                                                                    if (allDivElements[ii].Location.Y > 15 && allDivElements[ii].Location.Y < (resolutionEcran - 250))
                                                                    {
                                                                        if (!videosVisibles.ContainsKey(tmpp + ii))
                                                                        {
                                                                            videosVisibles.Add(tmpp + ii, tmpp);
                                                                        }
                                                                    }
                                                                    //break;



                                                                    //IWebElement oo = allDivElementss[0].FindElement(By.XPath("video"));


                                                                }
                                                                catch (Exception ex)
                                                                {

                                                                }

                                                            }
                                                        }

                                                    }




                                                }


                                                var messages = driverMessenger.FindElementsByXPath(classe);
                                                object[] messagesToExtract = messages.ToArray();


                                                foreach (OpenQA.Selenium.Remote.RemoteWebElement o in messagesToExtract)
                                                {

                                                    string tentation = o.ToString();
                                                    string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                    //if (classeTraitee.ContainsKey(idd))
                                                    //    continue;

                                                    if (!dicoMessagesFrom.ContainsKey(idd))
                                                    {
                                                        dicoMessagesFrom.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                    }
                                                    //else
                                                    //    continue;


                                                    if (o.Location.Y > 15 && o.Location.Y < (resolutionEcran - 250))
                                                    {
                                                        if (!messagesVisibles.ContainsKey(idd) && o.Text != "" && !o.Text.Contains("Lire-4:01Paramètres"))
                                                        {
                                                            messagesVisibles.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));

                                                            //if (!classeTraitee.ContainsKey(idd))
                                                            //{
                                                            //    classeTraitee.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                            //}
                                                        }

                                                    }
                                                    //else
                                                    //    break;


                                                }


                                            }

                                            //on récupère tous les messages ppur ensuite comparer avec messageFrom et messageTo
                                            //imageDown = driver.FindElementById(idTmp);
                                            //Thread.Sleep(200);

                                            //if (textes != imageDown.Text)
                                            //    textes = imageDown.Text + "\n";

                                            messenger = driverMessenger.PageSource;
                                            topScrollBar = messenger.Split(new String[] { "class=\"uiScrollableAreaGripper\"" }, StringSplitOptions.RemoveEmptyEntries);

                                            //on récupère la valeur Top de la scrollBar

                                            top = "";
                                            try
                                            {


                                                top = topScrollBar[1].Substring(topScrollBar[1].IndexOf("top: ") + 4).Split(';')[0];

                                                if (top == topPrec)
                                                    break;

                                                topPrec = top;
                                            }
                                            catch
                                            {
                                                MessageBox.Show("erreur avec la scrollbar");
                                            }



                                            Screenshot imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                            imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();


                                            //if (!Directory.Exists(pathToSave + "\\Messenger\\" + dicoMessenger[link]))
                                            //{
                                            //    //EraseDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link], true);  
                                            //    Directory.CreateDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link]);
                                            //}
                                            //else
                                            //{
                                            //    idFictif++;
                                            //    idFictifString = idFictif.ToString();
                                            //    Directory.CreateDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link] + i.ToString());
                                            //}

                                            //imageScreenshott.SaveAsFile(pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg", OpenQA.Selenium.ScreenshotImageFormat.Jpeg);
                                            imageScreenshott.SaveAsFile(pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg", OpenQA.Selenium.ScreenshotImageFormat.Jpeg);


                                            Thread.Sleep(100);

                                            //string pathToFile = pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString) + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg";
                                            string pathToFile = pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg";
                                            //pathToFolder = pathToSave + "\\Messenger\\" + dicoMessenger[link] + (idFictifString == "1" ? "" : idFictifString);
                                            pathToFolder = pathToSaveScreenshot;

                                            foreach (string cle in messagesVisibles.Keys)
                                            {

                                                if (!messagesVisiblesForFile.ContainsKey(cle))
                                                {

                                                    string[] lignes = messagesVisibles[cle].Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);

                                                    string tmp = "";
                                                    foreach (string li in lignes)
                                                    {
                                                        tmp += li.Trim().Replace("\r", "").Replace(";", "");
                                                    }



                                                    messagesVisiblesForFile.Add(cle, tmp + ";" + pathToFile + "\n");
                                                }

                                                //messagesVisiblesWithScreenshots += valeur + ";" + pathToFile + "\n";
                                            }

                                            if (videosVisibles.Count > 0)
                                                foreach (string cle in videosVisibles.Keys)
                                                {
                                                    //if (!videosVisiblesForFile.ContainsKey(cle))
                                                    //{

                                                    videosVisiblesForFile.Add(cle + ";" + pathToFile + "\n");
                                                    //}
                                                }

                                            messagesVisibles = new Dictionary<string, string>();
                                            videosVisibles = new Dictionary<string, string>();
                                            hauteur += 400;


                                            i++;
                                        }

                                        FillDataGridViewMessenger(pathToFolder, link);
                                    }
                                    else//Si pas de scrollbar alors seulement une page------------------------------------------------------------------------------------------
                                    {

                                        foreach (string classe in classesConnues)
                                        {
                                            if (classe.Contains("_2poz _52mr _ui9 _2n8h _2n8i _5fk1"))//si classe contenant vidéo on télécharge d'abord la vidéo
                                            {


                                                IList<IWebElement> allDivElements = driverMessenger.FindElementsByXPath(classe + "//video");//_ox1 _21y0
                                                for (int ii = 0; ii < allDivElements.Count(); ii++)
                                                {

                                                    if (allDivElements[ii].GetAttribute("class") != null)
                                                    {
                                                        //here the print statement will print the value of each div tag element
                                                        var tmp = allDivElements[ii].GetAttribute("class");

                                                        if (tmp == "_ox1 _21y0")// si div avec vidéo
                                                        {
                                                            //var video = driver.FindElementsByClassName(tmp);
                                                            //IList<IWebElement> allDivElementss = driver.FindElementsByClassName(tmp);

                                                            try
                                                            {
                                                                //var tmpp = allDivElementss[0].FindElement(By.XPath("video")).GetAttribute("src");
                                                                var tmpp = allDivElements[ii].GetAttribute("src");


                                                                if (allDivElements[ii].Location.Y > 15 && allDivElements[ii].Location.Y < (resolutionEcran - 250))
                                                                {
                                                                    if (!videosVisibles.ContainsKey(tmpp + ii))
                                                                    {
                                                                        videosVisibles.Add(tmpp + ii, tmpp);
                                                                    }
                                                                }
                                                                //break;



                                                                //IWebElement oo = allDivElementss[0].FindElement(By.XPath("video"));


                                                            }
                                                            catch (Exception ex)
                                                            {

                                                            }

                                                        }
                                                    }

                                                }




                                            }



                                            var messages = driverMessenger.FindElementsByXPath(classe);
                                            object[] messagesToExtract = messages.ToArray();



                                            foreach (OpenQA.Selenium.Remote.RemoteWebElement o in messagesToExtract)
                                            {

                                                string tentation = o.ToString();
                                                string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                                if (!dicoMessagesFrom.ContainsKey(idd))
                                                {
                                                    dicoMessagesFrom.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                }
                                                //else
                                                //    continue;

                                                if (o.Location.Y + o.Size.Height > 15 && o.Location.Y < (resolutionEcran - 300))
                                                {
                                                    if (!messagesVisibles.ContainsKey(idd) && o.Text != "")
                                                    {
                                                        messagesVisibles.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                                    }
                                                }

                                            }
                                        }


                                        imageDown = driverMessenger.FindElementById(idTmp);
                                        textes = imageDown.Text + "\n";

                                        Screenshot imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                        imageScreenshott = ((ITakesScreenshot)driverMessenger).GetScreenshot();
                                        //Save the screenshot
                                        //if (!Directory.Exists(pathToSave + "\\Messenger\\" + dicoMessenger[link]))
                                        //{
                                        //    //EraseDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link], true);  
                                        //    Directory.CreateDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link]);
                                        //}
                                        //else
                                        //if (dicoMessenger[link].ToLower().Contains("utilisateur de") || dicoMessenger[link].ToLower().Contains("user"))
                                        //{
                                        //    idFictif++;
                                        //    idFictifString = idFictif.ToString();
                                        //    Directory.CreateDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link] + i.ToString());
                                        //}



                                        imageScreenshott.SaveAsFile(pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg", OpenQA.Selenium.ScreenshotImageFormat.Jpeg);
                                        Thread.Sleep(100);

                                        string pathToFile = pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + "_" + i + ".jpg";
                                        pathToFolder = pathToSaveScreenshot;

                                        foreach (string cle in messagesVisibles.Keys)
                                        {

                                            if (!messagesVisiblesForFile.ContainsKey(cle))
                                            {

                                                string[] lignes = messagesVisibles[cle].Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);

                                                string tmp = "";
                                                foreach (string li in lignes)
                                                {
                                                    tmp += li.Trim().Replace("\r", "");
                                                }



                                                messagesVisiblesForFile.Add(cle, tmp + ";" + pathToFile + "\n");
                                            }

                                            //messagesVisiblesWithScreenshots += valeur + ";" + pathToFile + "\n";
                                        }

                                        if (videosVisibles.Count > 0)
                                            foreach (string cle in videosVisibles.Keys)
                                            {
                                                //if (!videosVisiblesForFile.ContainsKey(cle))
                                                //{

                                                videosVisiblesForFile.Add(cle + ";" + pathToFile + "\n");
                                                //}
                                            }

                                        messagesVisibles = new Dictionary<string, string>();
                                        videosVisibles = new Dictionary<string, string>();

                                        FillDataGridViewMessenger(pathToFolder, link);
                                        //continue;
                                    }




                                }
                                catch (Exception ex)
                                {
                                    MessageBox.Show("error dans Messenger : " + ex.Message);
                                }


                            }
                            catch (Exception ex)
                            {
                                MessageBox.Show("error dans Messenger " + ex.Message);
                            }

                            string codePagee = driverMessenger.PageSource;

                            using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSaveScreenshot + "\\Messenger_" + dicoMessenger[link] + ".txt", false))
                            {
                                //if (File.Exists(saveFileDialog1.FileName))
                                //    File.Delete(saveFileDialog1.FileName);

                                file.Write(textes);
                            }

                            using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSaveScreenshot + "\\Messenger_Messages.txt", false))
                            {
                                //if (File.Exists(saveFileDialog1.FileName))
                                //    File.Delete(saveFileDialog1.FileName);

                                textes = "";
                                foreach (string t in messagesVisibles.Values)
                                {
                                    textes += t + "\n";
                                }


                                file.Write(textes);
                            }

                            using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSaveScreenshot + "\\Messenger_Messages_With_Screenshots.txt", false))
                            {
                                textes = "";
                                foreach (string t in messagesVisiblesForFile.Values)
                                {
                                    textes += t;
                                }


                                file.Write(textes);
                                messagesVisiblesForFile = new Dictionary<string, string>();
                            }

                            using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSaveScreenshot + "\\Messenger_Videos_With_Screenshots.txt", false))
                            {
                                if (videosVisiblesForFile.Count > 0)
                                {
                                    textes = "";
                                    foreach (string t in videosVisiblesForFile)
                                    {
                                        textes += t;
                                    }


                                    file.Write(textes);

                                }



                            }

                            if (!Directory.Exists(pathToSaveScreenshot + "\\Videos\\"))
                            {
                                //EraseDirectory(pathToSave + "\\Messenger\\" + dicoMessenger[link], true);  
                                Directory.CreateDirectory(pathToSaveScreenshot + "\\Videos\\");
                            }

                            using (var client = new WebClient())
                            {

                                try

                                {
                                    Dictionary<string, string> dico = new Dictionary<string, string>();
                                    foreach (string t in videosVisiblesForFile)
                                    {
                                        //FileInfo fileinfo = new FileInfo(t);
                                        string keyy = t.Substring(t.LastIndexOf('/') + 1).Split('?')[0];

                                        if (!dico.ContainsKey(keyy))
                                        {
                                            dico.Add(keyy, t);
                                            string nomFichier = t.Substring(t.LastIndexOf('/') + 1).Split('?')[0];
                                            client.DownloadFile(t, pathToSaveScreenshot + "\\Videos\\" + nomFichier);
                                            Thread.Sleep(100);
                                        }


                                    }

                                    videosVisiblesForFile = new List<string>();
                                }
                                catch (Exception ex)
                                {
                                    MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT DES VIDEOS");
                                    //return;
                                }
                            }


                            Thread.Sleep(2500);

                            textes = "";
                            messagesVisiblesForFile = new Dictionary<string, string>();
                            messagesVisibles = new Dictionary<string, string>();
                            videosVisibles = new Dictionary<string, string>();
                            videosVisiblesForFile = new List<string>();
                            
                            
                            //idFictif = 1;
                        }

                        textes = "";
                        messagesVisiblesForFile = new Dictionary<string, string>();
                        messagesVisibles = new Dictionary<string, string>();
                        videosVisibles = new Dictionary<string, string>();
                        idFictif = 1;
                    }


                }
                catch
                {

                }


                try
                {
                    Object lastHeight = ((IJavaScriptExecutor)driverMessenger).ExecuteScript("return document.body.scrollHeight");

                    while (true)
                    {
                        ((IJavaScriptExecutor)driverMessenger).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                        Thread.Sleep(2000);

                        Object newHeight = ((IJavaScriptExecutor)driverMessenger).ExecuteScript("return document.body.scrollHeight");
                        if (newHeight.Equals(lastHeight))
                        {
                            break;
                        }
                        lastHeight = newHeight;
                    }
                }
                catch
                {
                    //e.printStackTrace();
                }



                //string codePage = driverMessenger.PageSource;

                //using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\timeline_" + ".html", false))
                //{


                //    file.Write(codePage);
                //}


                Thread.Sleep(2500);
                //nbreAnnee++;






                driverMessenger.Quit();



                //progressBar1.Maximum = lignes.Count() - 1;



            }
            catch (OpenQA.Selenium.NoSuchElementException ex)
            {

                driverMessenger.Quit();
            }


            //}
            //Thread.Sleep(2000);
            //backgroundWorker1.ReportProgress(-3);
            Thread.Sleep(2000);
            //backgroundWorker1.CancelAsync();

            if (backgroundWorkerMessenger != null && backgroundWorkerMessenger.IsBusy)
                backgroundWorkerMessenger.CancelAsync();

            
            pictureBoxwaiting.Visible = false;
            pictureBoxlogofacebook.Visible = false;
        }

        private void GetContactsMessenger()
        {

            

            if (driver == null)
            {
                InitializeDriver();
                driverMessenger = driver;

                // 2. Go to the "Google" homepage
                driverMessenger.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }

                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driverMessenger.FindElementById("email");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driverMessenger.FindElementById("pass");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driverMessenger.FindElementById("loginbutton").Click();
                //searchButton.Click();
                Thread.Sleep(2500);
            }

            string urlFriend = textBoxUSERNAMEFRIENDS.Text;           
            System.Random rnd = new System.Random();
            

            if (!profilIsSet)
                GetProfileInformations(backgroundWorkerMessenger);
                        

            driverMessenger = driver;


            try
                {


                    string targetName = textBoxops.Text;

                    //récupération des années 
                    //var years = driver.FindElementByXPath("rightColWrap']").Text;
                    //string codePagee = ((OpenQA.Selenium.Remote.RemoteWebDriver)((OpenQA.Selenium.Remote.RemoteWebElement)years).WrappedDriver).PageSource;
                    //string[] liYears = years.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries);

                    if (!Directory.Exists(pathToSave))
                        Directory.CreateDirectory(pathToSave);


                if (checkBoxFrench.Checked)
                    SetFrenchLanguage();
                //try 
                //{
                //    //on essai d'identifier la langue utilisée pour Facebook
                //    driverMessenger.Navigate().GoToUrl("https://www.facebook.com/settings?tab=language");
                //    Thread.Sleep(5000);

                //    IWebElement combo = driverMessenger.FindElement(By.XPath("//span[@class='fbSettingsListItemContent fcg']"));
                //    driverMessenger.FindElement(By.XPath("//span[@class='fbSettingsListItemEditText']")).Click();
                //    Thread.Sleep(500);

                //    SelectElement comboo = new SelectElement(driver.FindElement(By.TagName("select")));
                //    IWebElement item = comboo.SelectedOption;
                //    LANGUAGESELECTED = item.GetAttribute("value");
                //    if(item.GetAttribute("value") != "fr_FR")
                //    {
                //        comboo.SelectByValue("fr_FR");
                //        Thread.Sleep(1500);

                //        //submit uiButton uiButtonConfirm
                //        driverMessenger.FindElement(By.XPath("//label[@class='submit uiButton uiButtonConfirm']")).Click();
                //        Thread.Sleep(2500);
                //    }
                    

                //}
                //catch (NoSuchElementException ex)
                //{

                //}





                driverMessenger.Navigate().GoToUrl("https://www.facebook.com/messages/t");//https://www.facebook.com/messages/t/MOD.orga
                    Thread.Sleep(5000);


                    try
                    {
                        var imageDown = driverMessenger.FindElementByXPath("//div[@class='uiScrollableAreaWrap scrollable']");
                        Object lastHeight = ((IJavaScriptExecutor)driverMessenger).ExecuteScript("return document.getElementsByClassName('uiScrollableAreaWrap scrollable')[0].scrollHeight");

                        while (true)
                        {
                            //driver.execute_script('document.getElementById("viewport").scrollTop += 100')

                            ((IJavaScriptExecutor)driverMessenger).ExecuteScript("document.getElementsByClassName('uiScrollableAreaWrap scrollable')[0].scrollTo(0, document.getElementsByClassName('uiScrollableAreaWrap scrollable')[0].scrollHeight)");
                            Thread.Sleep(2000);

                            Object newHeight = ((IJavaScriptExecutor)driverMessenger).ExecuteScript("return document.getElementsByClassName('uiScrollableAreaWrap scrollable')[0].scrollHeight");
                            if (newHeight.Equals(lastHeight))
                            {
                                break;
                            }
                            lastHeight = newHeight;
                        }
                    }
                    catch (Exception ex)
                    {

                    }

                    try
                    {
                    //IWebElement liste = driver.FindElement(By.ClassName("uiScrollableAreaContent"));

                    string[] id = driverMessenger.PageSource.Split(new String[] { "aria-label=\"Conversations\"" }, StringSplitOptions.RemoveEmptyEntries);
                    string idTmp = "";

                    //on récupère l'id dynamique du composant

                    foreach (string idd in id)
                    {
                        if ( idd.StartsWith("<html"))
                            continue;


                        idTmp = idd.Substring(idd.IndexOf("id=\"") + 4).Split('"')[0];
                    }


                    IWebElement liste = driver.FindElement(By.Id(idTmp));

                    IList <IWebElement> ell = liste.FindElements(By.TagName("li"));

                    //IWebElement liste = driver.FindElement(By.ClassName("uiScrollableAreaContent"));
                    //IList<IWebElement> ell = driver.FindElements(By.XPath("//li[@class='_5l-3 _1ht1 _6zk9']"));
                    List <ForGrid> listeUtilisateurs = new List<ForGrid>();

                    //string urlContactMessenger = "";
                    //string userNameMessenger = "";
                    //string urlImageMessenger = "";

                    //listeUtilisateurs.Add(forGrid);


                    if (ell.Count > 0)
                    {
                        foreach(IWebElement el in ell)
                        {
                            ForGrid forGrid = new ForGrid();
                            string urlContactMessenger = "";
                            string userNameMessenger = "";
                            string urlImageMessenger = "";

                            string innerHTML = el.GetAttribute("innerHTML");

                            if (innerHTML.Contains("data-href=\"https://www.facebook.com/messages/t"))
                            {
                                urlContactMessenger = innerHTML.Substring(innerHTML.IndexOf("data-href=\"") + 11).Split('"')[0];
                                if (urlContactMessenger.Contains("#"))
                                    continue;
                            }

                            if (innerHTML.Contains("data-tooltip-content=\""))
                            {
                                userNameMessenger = innerHTML.Substring(innerHTML.IndexOf("data-tooltip-content=\"") + 22).Split('"')[0];
                            }

                            if (innerHTML.Contains("background-image: url(&quot;"))
                            {
                                urlImageMessenger = innerHTML.Substring(innerHTML.IndexOf("background-image: url(&quot;") + 28).Split('"')[0];
                            }
                            else
                            if (innerHTML.Contains("img class") || innerHTML.Contains("img alt"))
                            {
                                urlImageMessenger = innerHTML.Substring(innerHTML.IndexOf("src=\"") + 5).Split('"')[0];
                            }
                            else
                            {
                                urlImageMessenger = pathConfig + "\\anonymous.jpg";

                            }
                          
                            string tmp = userNameMessenger.Replace("&amp;", "&").Replace("&quot;", "'");
                            if(tmp.Length > 25)
                            {
                                tmp = tmp.Substring(0, 25);// + "...";
                            }
                            forGrid.Url = urlContactMessenger;
                            forGrid.Username = tmp.Replace(":","").Replace("'","").Replace("/","").Replace("\\","").Replace("\"","").Replace("|","").Replace("<","").Replace(">","").Replace("*","").Replace("?","").Replace("&nbsp;","");
                            forGrid.PathToPicture = urlImageMessenger.Replace("&amp;", "&"); 



                            //if (el.GetAttribute("data-href") != null  || el.GetAttribute("data-href") != "")
                            //{
                            //    string linkk = el.GetAttribute("data-href");
                            //    forGrid.Url = linkk;

                            //    string usernamee = "";
                            //    string picture = "";
                            //    if(el.FindElements(By.TagName("span"))[0].Text != "")
                            //    //if (el.FindElements(By.TagName("div"))[0].FindElement(By.TagName("div")).GetAttribute("data-tooltip-content") == null)
                            //    {
                            //        usernamee = el.FindElements(By.TagName("span"))[0].Text;
                            //        forGrid.Username = usernamee;

                            //    }
                            //    //else
                            //    //{
                            //    //    usernamee = el.FindElements(By.TagName("div"))[0].FindElement(By.TagName("div")).GetAttribute("data-tooltip-content");
                            //    //    forGrid.Username = usernamee;
                            //    //}
                                   

                            //    picture = el.FindElement(By.TagName("img")).GetAttribute("src");
                            //    forGrid.PathToPicture = picture;
                            //}

                            listeUtilisateurs.Add(forGrid);
                        }
                    }

                    if (!Directory.Exists(pathToSave + "\\Messenger\\PicturesProfiles"))
                        Directory.CreateDirectory(pathToSave + "\\Messenger\\PicturesProfiles");

                    int ii = 1;
                    string texteForContactsMessenger = "";
                    foreach (ForGrid forGr in listeUtilisateurs)
                    {
                        if (!dicoMessenger.Keys.Contains(forGr.Url))
                        {
                            dicoMessenger.Add(forGr.Url, forGr.Username);
                        }

                        string linkkk = "";
                        string usernameee = "";
                        
                        backgroundWorkerMessenger.ReportProgress(-1, listeUtilisateurs.Count());

                        try

                        {
                            backgroundWorkerMessenger.ReportProgress(ii);

                            using (var client = new WebClient())
                            {
                                if (!File.Exists(pathToSave + "\\Messenger\\PicturesProfiles\\" + forGr.Username + ".jpg"))
                                {
                                    client.DownloadFile(forGr.PathToPicture, pathToSave + "\\Messenger\\PicturesProfiles\\" + forGr.Username + ".jpg");
                                }


                                Thread.Sleep(500);

                            }

                            //backgroundWorkerMessenger.ReportProgress(-5, pathToSave + "\\Messenger\\PicturesProfiles\\" + username + ".jpg");

                            //Image image = Image.FromFile(pathToSave + "\\Messenger\\PicturesProfiles\\" + username + ".jpg");
                            string pathToFolder = pathToSave + "\\Messenger\\PicturesProfiles\\" + forGr.Username + ".jpg";
                            //Bitmap pic = new Bitmap(50, 50);
                            //pic = (Bitmap)Image.FromFile(pathToSave + "\\Messenger\\PicturesProfiles\\" + username + ".jpg");
                            //image.Image = image;
                            //image.Size = new Size(50, 50);
                            ForGrid forGridd = new ForGrid();
                            forGridd.Username =forGr.Username;
                            forGridd.PathToFolder = pathToFolder;
                            forGridd.Url = forGr.Url;
                            forGridd.PathToPicture = pathToSave + "\\Messenger\\PicturesProfiles\\" + forGr.Username + ".jpg";

                            texteForContactsMessenger += forGr.Username + ";" + pathToFolder + ";" + forGr.Url + ";" + forGridd.PathToPicture + "\n";
                            backgroundWorkerMessenger.ReportProgress(-6, forGridd);
                            ii++;


                        }
                        catch (Exception ex)
                        {
                            MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT DE LA PHOTO DE PROFIL MESSENGER " + ex.Message);
                            //return;
                        }

                    }

                    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\Messenger\\ContactsForGrid.txt", false))
                    {
                   

                        file.Write(texteForContactsMessenger);
                    }
                    //    string messenger = driverMessenger.PageSource;

                    //    string debut = messenger.Substring(messenger.IndexOf("aria-label=\"Conversations\""));
                    //    string[] destinataires = debut.Split(new String[] { "data-href=\"" }, StringSplitOptions.RemoveEmptyEntries);
                    //    //string[] profilePictures = debut.Split(new string[] { "<img class=\"_87v3 img\"" }, StringSplitOptions.RemoveEmptyEntries);//_6zkb _7t1l _6zkc
                    //    string[] profilePictures = debut.Split(new string[] { "<div class=\"_6zkb _7t1l _6zkc\">" }, StringSplitOptions.RemoveEmptyEntries);
                    //    // on récupère les destinataires

                    //    foreach (string dest in destinataires)
                    //    {
                    //        if (!dest.StartsWith("https://www.facebook.com/messages/t/"))
                    //            continue;

                    //        string linkk = dest.Split(new String[] { "\"" }, StringSplitOptions.RemoveEmptyEntries)[0];

                    //        if (linkk.Contains("#"))
                    //            continue;

                    //        string usernamee = dest.Substring(dest.IndexOf("data-tooltip-content=\"") + 21).Split(new String[] { "\"" }, StringSplitOptions.RemoveEmptyEntries)[0];

                    //        if (!dicoMessenger.Keys.Contains(linkk))
                    //        {
                    //            dicoMessenger.Add(linkk, usernamee);
                    //        }
                    //    }

                    //    // on récupère les photos de profils

                    //    string link = "";
                    //    string username = "";
                    //    int i = 0;
                    //backgroundWorkerMessenger.ReportProgress(-1, profilePictures.Count());

                    //if (!Directory.Exists(pathToSave + "\\Messenger\\PicturesProfiles"))
                    //    Directory.CreateDirectory(pathToSave + "\\Messenger\\PicturesProfiles");

                    //foreach (string imagee in profilePictures)
                    //{
                    //        if (!imagee.StartsWith("<div data-tooltip-root-class=") && !imagee.StartsWith("<div data-tooltip-content="))
                    //            continue;

                    //        if(imagee.StartsWith("<div data-tooltip-root-class="))
                    //        {
                    //            link = imagee.Substring(imagee.IndexOf("src=\"") + 5).Split(new String[] { "\"" }, StringSplitOptions.RemoveEmptyEntries)[0].Replace("&amp;", "&");
                    //            username = imagee.Substring(imagee.IndexOf("data-tooltip-content=\"") + 22).Split(new String[] { "\"" }, StringSplitOptions.RemoveEmptyEntries)[0];

                    //        }
                    //        else
                    //        if (imagee.StartsWith("<div data-tooltip-content"))
                    //        {
                    //            link = imagee.Substring(imagee.IndexOf("background-image: url") + 28).Split(new String[] { "&quot;);" }, StringSplitOptions.RemoveEmptyEntries)[0].Replace("&amp;", "&");//&quot;);
                    //            username = imagee.Substring(imagee.IndexOf("data-tooltip-content=\"") + 22).Split(new String[] { "\"" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    //        }

                    //        //if (!Directory.Exists(pathToSave + "\\Messenger\\PicturesProfiles" ))
                    //        //    Directory.CreateDirectory(pathToSave + "\\Messenger\\PicturesProfiles");

                    //    backgroundWorkerMessenger.ReportProgress(i+1);

                    //        try

                    //        {
                    //            using (var client = new WebClient())
                    //            {
                    //                if (!File.Exists(pathToSave + "\\Messenger\\PicturesProfiles\\"+ username + ".jpg"))
                    //                {
                    //                    client.DownloadFile(link, pathToSave + "\\Messenger\\PicturesProfiles\\"+ username + ".jpg");
                    //                }


                    //                Thread.Sleep(500);

                    //            }

                    //            //backgroundWorkerMessenger.ReportProgress(-5, pathToSave + "\\Messenger\\PicturesProfiles\\" + username + ".jpg");

                    //            //Image image = Image.FromFile(pathToSave + "\\Messenger\\PicturesProfiles\\" + username + ".jpg");
                    //            string pathToFolder = pathToSave + "\\Messenger\\PicturesProfiles\\" + username + ".jpg";
                    //            //Bitmap pic = new Bitmap(50, 50);
                    //            //pic = (Bitmap)Image.FromFile(pathToSave + "\\Messenger\\PicturesProfiles\\" + username + ".jpg");
                    //            //image.Image = image;
                    //            //image.Size = new Size(50, 50);
                    //            ForGrid forGrid = new ForGrid();
                    //            forGrid.Username = username;
                    //            forGrid.PathToFolder = pathToFolder;
                    //            forGrid.Url = dicoMessenger.ElementAt(i).Key;
                    //            forGrid.PathToPicture = pathToSave + "\\Messenger\\PicturesProfiles\\" + username + ".jpg";


                    //        backgroundWorkerMessenger.ReportProgress(-6, forGrid);
                    //            i++;


                    //        }
                    //        catch(Exception ex)
                    //        {
                    //            MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT DE LA PHOTO DE PROFIL MESSENGER " + ex.Message);
                    //            //return;
                    //        }

                    //    }




                }
                    catch
                    {

                    }
                                   




                    //driver.Close();



                    //progressBar1.Maximum = lignes.Count() - 1;



                }
                catch (OpenQA.Selenium.NoSuchElementException ex)//si pas d'acces à la page on essaie les annees manuellement
                {
                ;

                }


            //}
            //Thread.Sleep(2000);
            //backgroundWorker1.ReportProgress(-3);
            Thread.Sleep(2000);
            //backgroundWorker1.CancelAsync();
            //labelanalyseencours.Visible = false;
            //pictureBoxwaiting.Visible = false;
            //pictureBoxlogofacebook.Visible = false;
        }
        private void GetContactsMessengerForNewLook()
        {



            if (driver == null)
            {
                InitializeDriver();
                driverMessenger = driver;

                // 2. Go to the "Google" homepage
                driverMessenger.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }

                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driverMessenger.FindElementById("email");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driverMessenger.FindElementById("pass");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driverMessenger.FindElementById("loginbutton").Click();
                //searchButton.Click();
                Thread.Sleep(2500);
            }

            string urlFriend = textBoxUSERNAMEFRIENDS.Text;
            System.Random rnd = new System.Random();
            Thread.Sleep(1000);

            if (!profilIsSet)
                GetProfileInformations(backgroundWorkerMessenger);

            if (checkBoxFrench.Checked)
                SetFrenchLanguage();

            driverMessenger = driver;

            //on essaie de désactiver les alerts

            if (isElementPresent(driver, "//div[@class='oajrlxb2 tdjehn4e qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 j83agx80 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl l9j0dhe7 abiwlrkh p8dawk7l bp9cbjyn s45kfl79 emlxlaya bkmhp75w spb7xbtv rt8b4zig n8ej3o3l agehan2d sk4xxmp2 taijpn5t qypqp5cg q676j6op']"))
            {
                IList<IWebElement> tmp = driver.FindElementsByXPath("//div[@class='oajrlxb2 tdjehn4e qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 j83agx80 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl l9j0dhe7 abiwlrkh p8dawk7l bp9cbjyn s45kfl79 emlxlaya bkmhp75w spb7xbtv rt8b4zig n8ej3o3l agehan2d sk4xxmp2 taijpn5t qypqp5cg q676j6op']");

                try
                {
                    foreach (IWebElement t in tmp)
                    {
                        if (t.GetAttribute("aria-label") == "Messenger")
                        {
                            t.Click();
                            Thread.Sleep(2500);
                            break;
                        }
                            
                    }
                }
                catch
                {

                }
                
                
                
                Thread.Sleep(500);
            }

            if (isElementPresent(driver, "//div[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 j83agx80 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl l9j0dhe7 abiwlrkh p8dawk7l bp9cbjyn s45kfl79 emlxlaya bkmhp75w spb7xbtv rt8b4zig n8ej3o3l agehan2d sk4xxmp2 taijpn5t k7cz35w2 bsnbvmp4']"))
            {
                IList<IWebElement> tmp = driver.FindElementsByXPath("//div[@class='oajrlxb2 g5ia77u1 qu0x051f esr5mh6w e9989ue4 r7d6kgcz rq0escxv nhd2j8a9 j83agx80 p7hjln8o kvgmc6g5 cxmmr5t8 oygrvhab hcukyx3x jb3vyjys rz4wbd8a qt6c0cv9 a8nywdso i1ao9s8h esuyzwwr f1sip0of lzcic4wl l9j0dhe7 abiwlrkh p8dawk7l bp9cbjyn s45kfl79 emlxlaya bkmhp75w spb7xbtv rt8b4zig n8ej3o3l agehan2d sk4xxmp2 taijpn5t k7cz35w2 bsnbvmp4']");
                try
                {
                    foreach (IWebElement t in tmp)
                    {
                        if (t.GetAttribute("aria-label") == "Options")
                        {
                            t.Click();
                            Thread.Sleep(2500);
                            break;
                        }

                    }
                }
                catch
                {

                }


                
            }

            if (isElementPresent(driver, "//span[@class='d2edcug0 hpfvmrgz qv66sw1b c1et5uql rrkovp55 a8c37x1j keod5gw0 nxhoafnm aigsh9s9 d3f4x2em fe6kdd0r mau55g9w c8b282yb iv3no6db jq4qci2q a3bd9o3v ekzkrbhg oo9gr5id hzawbc8m']"))
            {

                IList<IWebElement> tmp = driver.FindElementsByXPath("//span[@class='d2edcug0 hpfvmrgz qv66sw1b c1et5uql rrkovp55 a8c37x1j keod5gw0 nxhoafnm aigsh9s9 d3f4x2em fe6kdd0r mau55g9w c8b282yb iv3no6db jq4qci2q a3bd9o3v ekzkrbhg oo9gr5id hzawbc8m']");

                try
                {
                    foreach (IWebElement t in tmp)
                    {
                        if (t.Text.ToLower().Contains("désacti"))
                        {
                            t.Click();
                            Thread.Sleep(2500);
                            break;
                        }

                    }
                }
                catch
                {

                }

                try
                {
                    //k4urcfbm l82x9zwi uo3d90p7 pw54ja7n ue3kfks5 izx4hr6d humdl8nn bn081pho gcieejh5
                    IWebElement iframe = driver.FindElement(By.XPath("//iframe[@class='k4urcfbm l82x9zwi uo3d90p7 pw54ja7n ue3kfks5 izx4hr6d humdl8nn bn081pho gcieejh5']"));

                    driver.SwitchTo().Frame(iframe);

                    driver.FindElementByXPath("//div[@class='pbm offlineSection unselected']").FindElement(By.TagName("input")).Click();
                    Thread.Sleep(500);


                    driver.FindElementByXPath("//button[@class='_42ft _42fu layerConfirm uiOverlayButton selected _42g- _42gy']").Click();
                    Thread.Sleep(1000);
                }
                catch
                {

                }
            } 


            try
            {


                string targetName = textBoxops.Text;

                

                if (!Directory.Exists(pathToSave))
                    Directory.CreateDirectory(pathToSave);


                
                

                driverMessenger.Navigate().GoToUrl("https://www.facebook.com/messages/t");//https://www.facebook.com/messages/t/MOD.orga
                Thread.Sleep(5000);


                

                try
                {
                    IWebElement iframe = driverMessenger.FindElement(By.XPath("//iframe[@class='k4urcfbm jgljxmt5 a8c37x1j izx4hr6d humdl8nn bn081pho gcieejh5']"));

                    driverMessenger.SwitchTo().Frame(iframe);



                    var imageDown = driverMessenger.FindElementByXPath("//div[@class='uiScrollableAreaWrap scrollable']");//k4urcfbm jgljxmt5 a8c37x1j izx4hr6d humdl8nn bn081pho gcieejh5
                    Object lastHeight = ((IJavaScriptExecutor)driverMessenger).ExecuteScript("return document.getElementsByClassName('uiScrollableAreaWrap scrollable')[0].scrollHeight");

                    while (true)
                    {
                        //driver.execute_script('document.getElementById("viewport").scrollTop += 100')

                        ((IJavaScriptExecutor)driverMessenger).ExecuteScript("document.getElementsByClassName('uiScrollableAreaWrap scrollable')[0].scrollTo(0, document.getElementsByClassName('uiScrollableAreaWrap scrollable')[0].scrollHeight)");
                        Thread.Sleep(2000);

                        Object newHeight = ((IJavaScriptExecutor)driverMessenger).ExecuteScript("return document.getElementsByClassName('uiScrollableAreaWrap scrollable')[0].scrollHeight");
                        if (newHeight.Equals(lastHeight))
                        {
                            break;
                        }
                        lastHeight = newHeight;
                    }
                }
                catch (Exception ex)
                {

                }

                try
                {
                    IWebElement liste = driver.FindElement(By.ClassName("uiScrollableAreaContent"));

                    string[] id = driverMessenger.PageSource.Split(new String[] { "aria-label=\"Conversations\"" }, StringSplitOptions.RemoveEmptyEntries);
                    string idTmp = "";

                    //on récupère l'id dynamique du composant

                    foreach (string idd in id)
                    {
                        if (idd.StartsWith("<html"))
                            continue;


                        idTmp = idd.Substring(idd.IndexOf("id=\"") + 4).Split('"')[0];
                    }


                    //IWebElement liste = driver.FindElement(By.Id(idTmp));

                    IList<IWebElement> ell = liste.FindElements(By.TagName("li"));

                    //IWebElement liste = driver.FindElement(By.ClassName("uiScrollableAreaContent"));
                    //IList<IWebElement> ell = driver.FindElements(By.XPath("//li[@class='_5l-3 _1ht1 _6zk9']"));
                    List<ForGrid> listeUtilisateurs = new List<ForGrid>();

                    


                    if (ell.Count > 0)
                    {
                        foreach (IWebElement el in ell)
                        {
                            ForGrid forGrid = new ForGrid();
                            string urlContactMessenger = "";
                            string userNameMessenger = "";
                            string urlImageMessenger = "";

                            string innerHTML = el.GetAttribute("innerHTML");

                            if (innerHTML.Contains("data-href=\"https://www.facebook.com/messages/t"))
                            {
                                urlContactMessenger = innerHTML.Substring(innerHTML.IndexOf("data-href=\"") + 11).Split('"')[0];
                                if (urlContactMessenger.Contains("#"))
                                    continue;
                            }

                            if (innerHTML.Contains("data-tooltip-content=\""))
                            {
                                userNameMessenger = innerHTML.Substring(innerHTML.IndexOf("data-tooltip-content=\"") + 22).Split('"')[0];
                            }

                            if (innerHTML.Contains("background-image: url(&quot;"))
                            {
                                urlImageMessenger = innerHTML.Substring(innerHTML.IndexOf("background-image: url(&quot;") + 28).Split('"')[0];
                            }
                            else
                            if (innerHTML.Contains("img class") || innerHTML.Contains("img alt"))
                            {
                                urlImageMessenger = innerHTML.Substring(innerHTML.IndexOf("src=\"") + 5).Split('"')[0];
                            }
                            else
                            {
                                urlImageMessenger = pathConfig + "\\anonymous.jpg";

                            }

                            string tmp = userNameMessenger.Replace("&amp;", "&").Replace("&quot;", "'");
                            if (tmp.Length > 25)
                            {
                                tmp = tmp.Substring(0, 25).Split(new string[] { "/u" },StringSplitOptions.RemoveEmptyEntries)[0];// + "...";
                            }

                            if (urlContactMessenger.Contains("profile.php?id="))
                                urlContactMessenger = urlContactMessenger.Split('&')[0];
                            else
                                urlContactMessenger = urlContactMessenger.Split('?')[0];

                            forGrid.Url = urlContactMessenger;
                            forGrid.Username = tmp.Replace(":", "").Replace("'", "").Replace("/", "").Replace("\\", "").Replace("\"", "").Replace("|", "").Replace("<", "").Replace(">", "").Replace("*", "").Replace("?", "").Replace("&nbsp;", "");
                            forGrid.PathToPicture = urlImageMessenger.Replace("&amp;", "&");                  
                            

                            listeUtilisateurs.Add(forGrid);

                            Analytics analy = new Analytics();
                            analy.Category = "MESSENGER";

                            //analy.PathToPicture = userNameTag + "_" + idTag + "_" + numTag + i + ".png";
                            try
                            {
                                analy.Username = forGrid.Username;
                                analy.Url = forGrid.Url.Replace("messages/t/","");
                                analy.PathToPicture = "\\Messenger\\PicturesProfiles\\" + forGrid.Username + ".jpg";
                            }
                            catch
                            {

                            }


                            if (!Analytics.ContainsKey(analy.Category + ";" + analy.Username + ";" + analy.Url))
                                Analytics.Add(analy.Category + ";" + analy.Username + ";" + analy.Url, analy);


                            //https://www.facebook.com/messages/t/Natacha.Pattinson
                        }
                    }

                    if (!Directory.Exists(pathToSave + "\\Messenger\\PicturesProfiles"))
                        Directory.CreateDirectory(pathToSave + "\\Messenger\\PicturesProfiles");

                    int ii = 1;
                    string texteForContactsMessenger = "";
                    foreach (ForGrid forGr in listeUtilisateurs)
                    {
                        if (!dicoMessenger.Keys.Contains(forGr.Url))
                        {
                            dicoMessenger.Add(forGr.Url, forGr.Username);
                        }

                        string linkkk = "";
                        string usernameee = "";

                        backgroundWorkerMessenger.ReportProgress(-1, listeUtilisateurs.Count());

                        try

                        {
                            backgroundWorkerMessenger.ReportProgress(ii);

                            using (var client = new WebClient())
                            {
                                if (!File.Exists(pathToSave + "\\Messenger\\PicturesProfiles\\" + forGr.Username + ".jpg"))
                                {
                                    client.DownloadFile(forGr.PathToPicture, pathToSave + "\\Messenger\\PicturesProfiles\\" + forGr.Username + ".jpg");
                                }


                                Thread.Sleep(500);

                            }

                            //backgroundWorkerMessenger.ReportProgress(-5, pathToSave + "\\Messenger\\PicturesProfiles\\" + username + ".jpg");

                            //Image image = Image.FromFile(pathToSave + "\\Messenger\\PicturesProfiles\\" + username + ".jpg");
                            string pathToFolder = pathToSave + "\\Messenger\\PicturesProfiles\\" + forGr.Username + ".jpg";
                            //Bitmap pic = new Bitmap(50, 50);
                            //pic = (Bitmap)Image.FromFile(pathToSave + "\\Messenger\\PicturesProfiles\\" + username + ".jpg");
                            //image.Image = image;
                            //image.Size = new Size(50, 50);
                            ForGrid forGridd = new ForGrid();
                            forGridd.Username = forGr.Username;
                            forGridd.PathToFolder = pathToFolder;
                            forGridd.Url = forGr.Url;
                            forGridd.PathToPicture = pathToSave + "\\Messenger\\PicturesProfiles\\" + forGr.Username + ".jpg";

                            texteForContactsMessenger += forGr.Username + ";" + pathToFolder + ";" + forGr.Url.Split('?')[0] + ";" + forGridd.PathToPicture + "\n";
                            backgroundWorkerMessenger.ReportProgress(-6, forGridd);
                            ii++;


                        }
                        catch (Exception ex)
                        {
                            MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT DE LA PHOTO DE PROFIL MESSENGER " + ex.Message);
                            //return;
                        }

                    }

                    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\Messenger\\ContactsForMessenger.txt", false))
                    {


                        file.Write(texteForContactsMessenger);
                    }
                    
                   


                }
                catch
                {

                }







            }
            catch (OpenQA.Selenium.NoSuchElementException ex)//si pas d'acces à la page on essaie les annees manuellement
            {
                ;

            }


            //}
            //Thread.Sleep(2000);
            //backgroundWorker1.ReportProgress(-3);
            Thread.Sleep(2000);
            //backgroundWorker1.CancelAsync();
            //labelanalyseencours.Visible = false;
            //pictureBoxwaiting.Visible = false;
            //pictureBoxlogofacebook.Visible = false;
        }

        private void FillDataGridViewMessenger(Image image, string username, string link, string pathToPictureProfile)
        {
            try
            {
                dataGridViewMessenger.Rows.Add(image, username, link, false, "", pathToPictureProfile);
                dataGridViewMessenger.ClearSelection();
                //dataGridViewPictures.Rows[rowIndex].Selected = true;
                dataGridViewMessenger.FirstDisplayedScrollingRowIndex = dataGridViewMessenger.Rows.Count - 1;
                //dataGridViewMessenger.Refresh();
            }
            catch
            {

            }
            
        }

        private void FillDataGridViewMessenger(string pathToFolder, string link)
        {
            
            foreach(DataGridViewRow row in dataGridViewMessenger.Rows)
            {
                if(row.Cells[2].Value.ToString() == link)
                {
                    row.Cells[3].Value = false;
                    row.Cells[4].Value = pathToFolder;
                    row.DefaultCellStyle.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(66)))), ((int)(((byte)(103)))), ((int)(((byte)(178)))));
                    row.DefaultCellStyle.ForeColor = Color.White;

                    dataGridViewMessenger.ClearSelection();
                    //dataGridViewPictures.Rows[rowIndex].Selected = true;
                    dataGridViewMessenger.FirstDisplayedScrollingRowIndex = row.Index;
                    

                    dataGridViewMessenger.Focus();

                    break;
                }
            }

            dataGridViewMessenger.Refresh();


        }

        private void label2_Click(object sender, EventArgs e)
        {

        }

        private void pictureBoxwaiting_Click(object sender, EventArgs e)
        {
            //panelAbout.Visible = false;
        }

        private void InitializeDatagridViewMessenger()
        {
            getMessenger = true;
            
            pictureBoxlogofacebook.Visible = true;
            pictureBoxwaiting.Visible = true;
            pictureBoxwaiting.Refresh();
            pictureBoxlogofacebook.Visible = true;
            pictureBoxlogofacebook.BringToFront();
            pictureBoxwaiting.Refresh();
            pictureBoxlogofacebook.Refresh();
            dataGridViewMessenger.Rows.Clear();
            dataGridViewPictures.Rows.Clear();
            //progressBarContactMessenger.Visible = true;
            progressBarContactMessenger.Maximum = 0;
            progressBarContactMessenger.Value = 0;
            
        }

        private void dataGridViewMessenger_CellClick(object sender, DataGridViewCellEventArgs e)
        {
            if (e.RowIndex >= 0 && e.ColumnIndex == 3)
            {
                //Reference the GridView Row.
                DataGridViewRow row = dataGridViewMessenger.Rows[e.RowIndex];



                row.Cells[3].Value = !(bool)row.Cells[3].Value;



            }
        }

        private void button3_Click(object sender, EventArgs e)
        {
            selected = !selected;
            
            foreach (DataGridViewRow row in dataGridViewMessenger.Rows)
            {
                
                if (selected)
                {
                    row.Cells[3].Value = false;
                }

                if (!selected)
                {
                    row.Cells[3].Value = true;
                }
            }

            
        }

        private void pictureBox4_Click(object sender, EventArgs e)
        {

            if (textBoxops.Text == "")
            {
                textBoxops.BackColor = Color.Red;
                MessageBox.Show("Veuillez remplir le champ OPS");
                return;
            }
            else
                textBoxops.BackColor = Color.White;
            

            Dictionary<string, string> dicoDestinatairesFromGrid = new Dictionary<string, string>();

            if(dataGridViewMessenger.Rows.Count > 0)
            {
                dataGridViewPictures.Rows.Clear();
                dicoResultsIndexSearch = new Dictionary<int, int>();
                flowLayoutPanel2.Controls.Clear();

                foreach (DataGridViewRow row in dataGridViewMessenger.Rows)
                {
                    bool isSelected = Convert.ToBoolean(row.Cells[3].Value);
                    if (isSelected)
                    {
                       if(!dicoDestinatairesFromGrid.ContainsKey(row.Cells[2].Value.ToString())) 
                        dicoDestinatairesFromGrid.Add(row.Cells[2].Value.ToString(), row.Cells[1].Value.ToString());                        
                        
                    }
                    
                }

            }

            if(dicoDestinatairesFromGrid.Count > 0)
            {
                //MessengerFromDate(dicoDestinatairesFromGrid,"");

                dataGridViewMessenger.ClearSelection();
                dataGridViewMessenger.FirstDisplayedScrollingRowIndex = 0;
                dataGridViewMessenger.Focus();
                pictureBoxlogofacebook.Visible = true;
                pictureBoxwaiting.Visible = true;
                pictureBoxwaiting.Refresh();
                pictureBoxlogofacebook.Visible = true;
                pictureBoxlogofacebook.BringToFront();
                pictureBoxwaiting.Refresh();
                pictureBoxlogofacebook.Refresh();

                if (!backgroundWorkerGetMessenger.IsBusy)
                    backgroundWorkerGetMessenger.RunWorkerAsync(dicoDestinatairesFromGrid);
            }
                
        }

        private void dataGridViewMessenger_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {

            if (dataGridViewMessenger.Rows.Count > 0)//&& ((bool)dataGridViewMessenger.Rows[e.RowIndex].Cells[3].Value))
            {

                string test = dataGridViewMessenger.Rows[e.RowIndex].Cells[4].Value.ToString();

                if (test == "")
                    return;

                panel7.Visible = false;
                flowLayoutPanel2.Controls.Clear();
                panelNext.Visible = false;

                if (sortedListForSearching != null || sortedListForSearching.Count > 0)
                    sortedListForSearching.Clear();


                videos = new Dictionary<string, string>();
                audios = new Dictionary<string, string>();
                
                dataGridViewPictures.Rows.Clear();
                var sorted = Directory.GetFiles(test, "*.png").Select(fn => new FileInfo(fn)).OrderBy(f => f.LastWriteTime);
                fichiers = sorted.ToArray();

                Rectangle rect = GetResolutionScreen();
                int hauteurGrid = dataGridView2.Size.Height;
                int hauteurForm = MESSENGERR.Size.Height;
                int indexPage = 0;


                foreach (FileInfo fichier in fichiers)
                {

                    if (indexPage == STEPP)
                        break;
                    Image tmp = Image.FromFile(fichier.FullName);
                    int differentiel = tmp.Width - tmp.Height;
                    Image imgg = (Image)(new Bitmap(Image.FromFile(fichier.FullName), new Size(hauteurForm - (120 - differentiel), hauteurForm - 120)));

                    //Image img = (Image)(new Bitmap(Image.FromFile(fichier.FullName), new Size(hauteurForm-84, hauteurForm - 85)));
                    dataGridViewPictures.Rows.Add(imgg, fichier.Name);


                    indexPage++;
                }

                NextMessenger = STEPP;

                //deA.Text = "_________0/xx________".Replace("/xx", "/" + (0 + STEPP - 1).ToString());
                labelNbreMessenger.Text = "_____0/xx_____".Replace("/xx", "/" + (fichiers.Length - 1).ToString());

                //string test = @"C:\Users\frank\Documents\Facebook_Friends\Messenger\Stephane Hendrycks";
                if (File.Exists(test + "\\Messenger_Videos_With_Screenshots.txt"))
                {
                    string[] lignes = File.ReadAllLines(test + "\\Messenger_Videos_With_Screenshots.txt");


                    foreach (string li in lignes)
                    {
                        if (li == "")
                            continue;

                        string numeroLigne = (li.Split(';')[1]).Substring(li.Split(';')[1].LastIndexOf("_") + 1).Split(new string[] { ".png" }, StringSplitOptions.RemoveEmptyEntries)[0];


                        int indexx = 0;
                        Int32.TryParse(numeroLigne, out indexx);


                        if (!videos.ContainsKey(((indexx).ToString())))
                        {
                            //dataGridViewPictures.Rows[indexx - 1].DefaultCellStyle.BackColor = Color.LightBlue;
                            videos.Add(((indexx).ToString()), ((indexx).ToString()));
                            //videos.Add(((indexx - 1).ToString(), ((indexx - 1).ToString()));
                        }



                    }
                }

                if (videos.Count > 0)
                {
                    if (videos.ContainsKey((dataGridViewPictures.FirstDisplayedScrollingRowIndex).ToString()))
                    {
                        pictureBox4.Visible = true;
                        panel7.Visible = true;
                    }

                    else
                    {
                        pictureBox4.Visible = false;
                        panel7.Visible = false;
                    }

                }

                if (File.Exists(test + "\\Messenger_Audio_With_Screenshots.txt"))
                {
                    string[] lignes = File.ReadAllLines(test + "\\Messenger_Audio_With_Screenshots.txt");


                    foreach (string li in lignes)
                    {
                        if (li == "")
                            continue;

                        string numeroLigne = (li.Split(';')[1]).Substring(li.Split(';')[1].LastIndexOf("_") + 1).Split(new string[] { ".png" }, StringSplitOptions.RemoveEmptyEntries)[0];


                        int indexx = 0;
                        Int32.TryParse(numeroLigne, out indexx);


                        if (!audios.ContainsKey(((indexx).ToString())))
                        {
                            //dataGridViewPictures.Rows[indexx - 1].DefaultCellStyle.BackColor = Color.LightBlue;
                            audios.Add(((indexx).ToString()), ((indexx).ToString()));
                            //videos.Add(((indexx - 1).ToString(), ((indexx - 1).ToString()));
                        }



                    }
                }

                if (audios.Count > 0)
                {
                    if (audios.ContainsKey((dataGridViewPictures.FirstDisplayedScrollingRowIndex).ToString()))
                    {
                        pictureBox4.Visible = true;
                        pictureBox10.Visible = true;
                        panel7.Visible = true;
                    }

                    else
                    {
                        pictureBox4.Visible = false;
                        pictureBox10.Visible = false;
                        panel7.Visible = false;
                    }

                }

            }

        }
        //{

        //    if (dataGridViewMessenger.Rows.Count > 0 )//&& ((bool)dataGridViewMessenger.Rows[e.RowIndex].Cells[3].Value))
        //    {
        //        panel7.Visible = false;

        //        if (sortedListForSearching != null || sortedListForSearching.Count > 0)
        //            sortedListForSearching.Clear();


        //        //videos = new Dictionary<string, string>();
        //        string test = dataGridViewMessenger.Rows[e.RowIndex].Cells[4].Value.ToString();
        //        dataGridViewPictures.Rows.Clear();
        //        var sorted = Directory.GetFiles(test, "*.png").Select(fn => new FileInfo(fn)).OrderBy(f => f.CreationTime);
        //        FileInfo[] fichiers = sorted.ToArray();

        //        Rectangle rect = GetResolutionScreen();
        //        int hauteurGrid = dataGridView2.Size.Height;
        //        int hauteurForm = MESSENGERR.Size.Height;

        //        foreach (FileInfo fichier in fichiers)
        //        {

        //            Image img = (Image)(new Bitmap(Image.FromFile(fichier.FullName), new Size(hauteurForm, hauteurForm - 1)));
        //            dataGridViewPictures.Rows.Add(img);

        //        }

        //        if (File.Exists(test + "\\Messenger_Videos_With_Screenshots.txt"))
        //        {
        //            string[] lignes = File.ReadAllLines(test + "\\Messenger_Videos_With_Screenshots.txt");


        //            foreach (string li in lignes)
        //            {
        //                if (li == "")
        //                    continue;

        //                string numeroLigne = (li.Split(';')[1]).Substring(li.Split(';')[1].LastIndexOf("_") + 1).Split(new string[] { ".jpg" }, StringSplitOptions.RemoveEmptyEntries)[0];
        //                int indexx = 0;
        //                Int32.TryParse(numeroLigne, out indexx);

        //                if (!videos.ContainsKey((indexx - 1).ToString()))
        //                {
        //                    //dataGridViewPictures.Rows[indexx - 1].DefaultCellStyle.BackColor = Color.LightBlue;
        //                    videos.Add(((indexx - 1).ToString()), ((indexx - 1).ToString()));
        //                }



        //            }
        //        }


        //    }

        //}

        //private void tabPage1_Click(object sender, EventArgs e)
        //{

        //}

        //private void button4_Click(object sender, EventArgs e)
        //{

        //    //string test = dataGridViewMessenger.Rows[e.RowIndex].Cells[4].Value.ToString();
        //    string test = @"C:\Users\frank\Documents\Facebook_Friends\Messenger\Henri Dewyse";
        //    dataGridViewPictures.Rows.Clear();
        //    var sorted = Directory.GetFiles(test, "*.jpg").Select(fn => new FileInfo(fn)).OrderBy(f => f.CreationTime);
        //    FileInfo[] fichiers = sorted.ToArray();

        //    Rectangle rect = GetResolutionScreen();
        //    int hauteurGrid = dataGridView2.Size.Height + 15;
        //    int hauteurForm = MESSENGERR.Size.Height;

        //    foreach (FileInfo fichier in fichiers)
        //    {
        //        //PictureBox imageViewer = new PictureBox();
        //        //imageViewer.Image = Image.FromFile(fichier.FullName);
        //        //imageViewer.SizeMode = PictureBoxSizeMode.Normal;
        //        //imageViewer.Dock = DockStyle.Bottom;
        //        //imageViewer.Height = 1250;
        //        //imageViewer.Width = 1250;
        //        Image img = (Image)(new Bitmap(Image.FromFile(fichier.FullName), new Size(hauteurForm, hauteurForm - 1)));
        //        dataGridViewPictures.Rows.Add(img);
        //        //flowLayoutPanel1.Controls.Add(imageViewer);
        //    }
        //}

        private Rectangle GetResolutionScreen()
        {
            
            Rectangle resolution = Screen.PrimaryScreen.WorkingArea;

            //pour connaitre la taille de l'écran actuel
            Screen scrn = Screen.FromControl(this);

            return scrn.WorkingArea;

            
            //foreach (Screen screen in Screen.AllScreens)
            //{
            //    DEVMODE dm = new DEVMODE();
            //    dm.dmSize = (short)Marshal.SizeOf(typeof(DEVMODE));
            //    EnumDisplaySettings(screen.DeviceName, ENUM_CURRENT_SETTINGS, ref dm);

            //    Console.WriteLine($"Device: {screen.DeviceName}");
            //    Console.WriteLine($"Real Resolution: {dm.dmPelsWidth}x{dm.dmPelsHeight}");
            //    Console.WriteLine($"Virtual Resolution: {screen.Bounds.Width}x{screen.Bounds.Height}");
            //    Console.WriteLine();
            //}
        }

        private void FillJournalView()
        {
            if (!Directory.Exists(pathToSave  + "\\HOMEPAGE"))
                return;

            var sorted = Directory.GetFiles(pathToSave + "\\HOMEPAGE", "*.png").Select(fn => new FileInfo(fn)).OrderBy(f => f.LastWriteTime);
            fichiersJournal = sorted.ToArray();

            if (sortedListForSearching != null || sortedListForSearching.Count > 0)
                sortedListForSearching.Clear();

            foreach (DataGridViewRow row in dataGridViewJournal.Rows)
            {
                Image img = (Image)row.Cells[0].Value;
                img.Dispose();

               
            }
            GC.Collect();

            dataGridViewJournal.Rows.Clear();


            Rectangle rect = GetResolutionScreen();
            int hauteurGrid = dataGridViewJournal.Size.Height;
            int hauteurForm = JOURNAL.Size.Height;

            int indexPage = 0;
            Previous = 0;

            foreach (FileInfo fichier in fichiersJournal)
            {

                if (indexPage == STEPP)
                    break;
                Image tmp = Image.FromFile(fichier.FullName);
                int differentiel = tmp.Width - tmp.Height;
                Image imgg = (Image)(new Bitmap(Image.FromFile(fichier.FullName), new Size(hauteurForm - (120 - differentiel), hauteurForm - 120)));
                //Image img = CreateThumbnail(fichier.FullName, hauteurForm - 79, hauteurForm - 120);

                dataGridViewJournal.Rows.Add(imgg);


                indexPage++;
            }

            Next = STEPP;
            nbreScreenshots.Text = fichiersJournal.Length + " screenshots";
            //deA.Text = "_________0/xx________".Replace("/xx", "/" + (0 + STEPP - 1).ToString());
            deA.Text = "_____0/xx_____".Replace("/xx", "/" + (fichiersJournal.Length - 1).ToString());





        }
        private void FillJournalViewForBusiness()
        {
            if (!Directory.Exists(pathToSave + "\\HOMEPAGE"))
                return;

            var sorted = Directory.GetFiles(pathToSave + "\\HOMEPAGE", "*.png").Select(fn => new FileInfo(fn)).Where(f => f.Name.StartsWith("Element")).OrderBy(f => f.LastWriteTime);
            fichiersJournal = sorted.ToArray();

            if (sortedListForSearching != null || sortedListForSearching.Count > 0)
                sortedListForSearching.Clear();



            dataGridViewJournal.Rows.Clear();

            Rectangle rect = GetResolutionScreen();
            int hauteurGrid = dataGridViewJournal.Size.Height;
            int hauteurForm = JOURNAL.Size.Height;

            int indexPage = 0;
            Previous = 0;

            foreach (FileInfo fichier in fichiersJournal)
            {

                if (indexPage == STEPP)
                    break;
                Image tmp = Image.FromFile(fichier.FullName);
                int differentiel = tmp.Width - tmp.Height;
                Image imgg = (Image)(new Bitmap(Image.FromFile(fichier.FullName), new Size(tmp.Width-119, hauteurForm - 120)));
                //Image img = CreateThumbnail(fichier.FullName, hauteurForm - 79, hauteurForm - 120);

                dataGridViewJournal.Rows.Add(imgg);


                indexPage++;
            }

            Next = STEPP;
            nbreScreenshots.Text = fichiersJournal.Length + " screenshots";
            //deA.Text = "_________0/xx________".Replace("/xx", "/" + (0 + STEPP - 1).ToString());
            deA.Text = "_____0/xx_____".Replace("/xx", "/" + (fichiersJournal.Length - 1).ToString());





        }
        private void FillJournalViewImport(string pathToSave)
        {
            if (!Directory.Exists(pathToSave +  "\\HOMEPAGE"))
                return;

            var sorted = Directory.GetFiles(pathToSave +  "\\HOMEPAGE", "*.png").Select(fn => new FileInfo(fn)).OrderBy(f => f.LastWriteTime);
            fichiersJournal = sorted.ToArray();

            if (sortedListForSearching != null || sortedListForSearching.Count > 0)
                sortedListForSearching.Clear();

            foreach (DataGridViewRow row in dataGridViewJournal.Rows)
            {
                Image img = (Image)row.Cells[0].Value;
                img.Dispose();


            }
            GC.Collect();

            dataGridViewJournal.Rows.Clear();

            Rectangle rect = GetResolutionScreen();
            int hauteurGrid = dataGridViewJournal.Size.Height;
            int hauteurForm = JOURNAL.Size.Height;

            int indexPage = 0;
            Previous = 0;

            if(fichiersJournal.Count() > 0)
            {
                foreach (FileInfo fichier in fichiersJournal)
                {

                    if (indexPage == STEPP)
                        break;
                    Image tmp = Image.FromFile(fichier.FullName);
                    int differentiel = tmp.Width - tmp.Height;
                    Image imgg = (Image)(new Bitmap(Image.FromFile(fichier.FullName), new Size(hauteurForm - (120 - differentiel), hauteurForm - 120)));
                    //Image img = CreateThumbnail(fichier.FullName, hauteurForm - 79, hauteurForm - 120);

                    dataGridViewJournal.Rows.Add(imgg);


                    indexPage++;
                }

                Next = STEPP;
                nbreScreenshots.Text = fichiersJournal.Length + " screenshots";
                //deA.Text = "_________0/xx________".Replace("/xx", "/" + (0 + STEPP - 1).ToString());
                deA.Text = "_____0/xx_____".Replace("/xx", "/" + (fichiersJournal.Length - 1).ToString());

                pictureBoxJournal.Visible = true;
            }
           





        }


        private void button4_Click_1(object sender, EventArgs e)
        {
            if (textBox1.Text == "")
            {
                flowLayoutPanel2.Controls.Clear();
                panelNext.Visible = false;

                return;
            }

            SearchKeywords(textBox1.Text);
        }

        private void SearchKeywords(string keyword)
        {
            if (dataGridViewMessenger.Rows.Count > 0 && dataGridViewMessenger.SelectedRows.Count > 0 && dataGridViewPictures.Rows.Count > 0)
            {
                dicoResultsIndexSearch = new Dictionary<int, int>();
                flowLayoutPanel2.Controls.Clear();


                string test = dataGridViewMessenger.SelectedRows[0].Cells[4].Value.ToString();//C:\Users\frank\Documents\Facebook_Friends\Messenger\Stephane Hendrycks
                //string test = @"C:\Users\frank\Documents\Facebook_Friends\Messenger\Stephane Hendrycks";
                if (File.Exists(test + "\\Messenger_Messages_With_Screenshots.txt"))
                {
                    string[] lignes = File.ReadAllLines(test + "\\Messenger_Messages_With_Screenshots.txt");

                    if (sortedListForSearching.Count == 0)
                    {
                        foreach (string li in lignes)
                        {
                            if (li == "")
                                continue;

                            string numeroLigne = (li.Split(';')[1]).Substring(li.Split(';')[1].LastIndexOf("_") + 1).Split(new string[] { ".png" }, StringSplitOptions.RemoveEmptyEntries)[0];
                            sortedListForSearching.Add(li.ToLower());


                        }

                        try
                        {

                            List<string> resultatsRecherche = sortedListForSearching.FindAll(x => x.Contains(keyword));

                            foreach (string r in resultatsRecherche)
                            {
                                string numeroLigne = (r.Split(';')[1]).Substring(r.Split(';')[1].LastIndexOf("_") + 1).Split(new string[] { ".png" }, StringSplitOptions.RemoveEmptyEntries)[0];
                                int indexx = Int32.Parse(numeroLigne) - 1;
                                string arechercher = r.Split(';')[0];

                                if (!arechercher.ToLower().Contains(keyword.ToLower()))
                                    continue;

                                if (!dicoResultsIndexSearch.ContainsKey(indexx))
                                {
                                    dicoResultsIndexSearch.Add(indexx, indexx);
                                    LinkLabel link = new LinkLabel();
                                    link.Text = (Int32.Parse(numeroLigne) - 1).ToString();
                                    link.AutoSize = true;
                                    link.Font = new System.Drawing.Font("Microsoft Sans Serif", 12F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
                                    link.Name = "linkLabel" + (indexx - 1);
                                    link.Size = new System.Drawing.Size(18, 20);
                                    link.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.linkLabel1_LinkClicked);
                                    flowLayoutPanel2.Controls.Add(link);
                                    //labelResultsSearch.Text += indexx.ToString() + " ";
                                }

                                labelResultsSearch.Text = "Résultat : " + dicoResultsIndexSearch.Count + " trouvé(s)";


                            }



                            //int index = sortedListForSearching.FindIndex(x => x.Contains(keyword));

                            //if (index == -1)
                            //    return;

                            //string numeroLigne = (sortedListForSearching[index].Split(';')[1]).Substring(sortedListForSearching[index].Split(';')[1].LastIndexOf("_") + 1).Split(new string[] { ".jpg" }, StringSplitOptions.RemoveEmptyEntries)[0];

                            //int indexx = Int32.Parse(numeroLigne) - 1;

                            if (dicoResultsIndexSearch.Count > 0)
                            {
                                //dataGridViewPictures.ClearSelection();
                                dataGridViewPictures.FirstDisplayedScrollingRowIndex = dicoResultsIndexSearch.ElementAt(0).Value;
                                dataGridViewPictures.Focus();
                                flowLayoutPanel2.Visible = true;
                                panelNext.Visible = true;

                            }

                        }
                        catch (ArgumentNullException ex)
                        {
                            return;
                        }

                    }
                    else
                    {
                        try
                        {
                            List<string> resultatsRecherche = sortedListForSearching.FindAll(x => x.Contains(keyword));

                            foreach (string r in resultatsRecherche)
                            {
                                string numeroLigne = (r.Split(';')[1]).Substring(r.Split(';')[1].LastIndexOf("_") + 1).Split(new string[] { ".png" }, StringSplitOptions.RemoveEmptyEntries)[0];
                                int indexx = Int32.Parse(numeroLigne) - 1;

                                string arechercher = r.Split(';')[0];

                                if (!arechercher.ToLower().Contains(keyword.ToLower()))
                                    continue;

                                if (!dicoResultsIndexSearch.ContainsKey(indexx))
                                {
                                    dicoResultsIndexSearch.Add(indexx, indexx);
                                    LinkLabel link = new LinkLabel();
                                    link.Text = numeroLigne;
                                    link.AutoSize = true;
                                    link.Font = new System.Drawing.Font("Microsoft Sans Serif", 12F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
                                    link.Name = "linkLabel" + indexx;
                                    link.Size = new System.Drawing.Size(18, 20);
                                    link.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.linkLabel1_LinkClicked);
                                    flowLayoutPanel2.Controls.Add(link);
                                    //labelResultsSearch.Text += indexx.ToString() + " ";
                                }

                                labelResultsSearch.Text = "Résultat : " + dicoResultsIndexSearch.Count + " trouvé(s)";


                            }

                            if (dicoResultsIndexSearch.Count > 0)
                            {
                                //dataGridViewPictures.ClearSelection();
                                dataGridViewPictures.FirstDisplayedScrollingRowIndex = dicoResultsIndexSearch.ElementAt(0).Value;
                                dataGridViewPictures.Focus();

                                flowLayoutPanel2.Visible = true;
                                panelNext.Visible = true;
                            }
                        }
                        catch (ArgumentNullException ex)
                        {
                            return;
                        }
                    }


                }
            }
        }

        private void dataGridViewPictures_Scroll(object sender, ScrollEventArgs e)
        {


            foreach (Form f in Application.OpenForms)
            {

                if (f.Name == "FormVideos")
                {
                    
                    f.Close();                    
                    break;
                }

            }


            if (videos.Count > 0)
            {

                string nomPng = dataGridViewPictures.Rows[dataGridViewPictures.FirstDisplayedScrollingRowIndex].Cells[1].Value.ToString();
                string numeroVideo = nomPng.Substring(nomPng.LastIndexOf("_") + 1).Split('.')[0];

                if (videos.ContainsKey(numeroVideo))
                {
                    pictureBox4.Visible = true;
                    panel7.Visible = true;
                }

                else
                {
                    pictureBox4.Visible = false;
                    panel7.Visible = false;
                }

            }

            if (audios.Count > 0)
            {

                string nomPng = dataGridViewPictures.Rows[dataGridViewPictures.FirstDisplayedScrollingRowIndex].Cells[1].Value.ToString();
                string numeroVideo = nomPng.Substring(nomPng.LastIndexOf("_") + 1).Split('.')[0];

                if (audios.ContainsKey(numeroVideo))
                {
                    //pictureBox4.Visible = true;
                    pictureBox7.Visible = true;
                    panel7.Visible = true;
                }

                else
                {
                    //pictureBox4.Visible = false;
                    pictureBox7.Visible = false;
                    //panel5.Visible = false;
                }

            }

            string texteAGarder = labelNbreMessenger.Text.Split('/')[1];
            string numero = labelNbreMessenger.Text.Split('/')[0].Replace("_____", "");
            Int32.Parse(numero);
            int step = dataGridViewPictures.FirstDisplayedScrollingRowIndex == 0 ? 0 : dataGridViewPictures.FirstDisplayedScrollingRowIndex;


            labelNbreMessenger.Text = "_____" + (step + (NextMessenger - STEPP)) + "/" + texteAGarder;
        }


        //private void SearchKeywords(string keyword)
        //{
        //    if(dataGridViewMessenger.Rows.Count > 0 && dataGridViewMessenger.SelectedRows.Count > 0 && dataGridViewPictures.Rows.Count > 0)
        //    {
        //        dicoResultsIndexSearch = new Dictionary<int, int>();
        //        flowLayoutPanel2.Controls.Clear();


        //        string test = dataGridViewMessenger.SelectedRows[0].Cells[4].Value.ToString();//C:\Users\frank\Documents\Facebook_Friends\Messenger\Stephane Hendrycks
        //        //string test = @"C:\Users\frank\Documents\Facebook_Friends\Messenger\Stephane Hendrycks";
        //        if (File.Exists(test + "\\Messenger_Messages_With_Screenshots.txt"))
        //        {
        //            string[] lignes = File.ReadAllLines(test + "\\Messenger_Messages_With_Screenshots.txt");

        //            if(sortedListForSearching.Count == 0)
        //            {
        //                foreach (string li in lignes)
        //                {
        //                    if (li == "")
        //                        continue;

        //                    string numeroLigne = (li.Split(';')[1]).Substring(li.Split(';')[1].LastIndexOf("_") + 1).Split(new string[] { ".jpg" }, StringSplitOptions.RemoveEmptyEntries)[0];
        //                    sortedListForSearching.Add(li.ToLower());


        //                }

        //                try
        //                {

        //                    List<string> resultatsRecherche = sortedListForSearching.FindAll(x => x.Contains(keyword));

        //                    foreach(string r in resultatsRecherche)
        //                    {
        //                        string numeroLigne = (r.Split(';')[1]).Substring(r.Split(';')[1].LastIndexOf("_") + 1).Split(new string[] { ".jpg" }, StringSplitOptions.RemoveEmptyEntries)[0];
        //                        int indexx = Int32.Parse(numeroLigne) - 1;
        //                        string arechercher = r.Split(';')[0];

        //                        if (!arechercher.ToLower().Contains(keyword.ToLower()))
        //                            continue;

        //                        if (!dicoResultsIndexSearch.ContainsKey(indexx))
        //                        {
        //                            dicoResultsIndexSearch.Add(indexx, indexx);
        //                            LinkLabel link = new LinkLabel();
        //                            link.Text = numeroLigne;
        //                            link.AutoSize = true;
        //                            link.Font = new System.Drawing.Font("Microsoft Sans Serif", 12F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
        //                            link.Name = "linkLabel" + indexx;
        //                            link.Size = new System.Drawing.Size(18, 20);
        //                            link.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.linkLabel1_LinkClicked);
        //                            flowLayoutPanel2.Controls.Add(link);
        //                            //labelResultsSearch.Text += indexx.ToString() + " ";
        //                        }

        //                        labelResultsSearch.Text = "Résultat : " + dicoResultsIndexSearch.Count + " trouvé(s)";


        //                    }



        //                    //int index = sortedListForSearching.FindIndex(x => x.Contains(keyword));

        //                    //if (index == -1)
        //                    //    return;

        //                    //string numeroLigne = (sortedListForSearching[index].Split(';')[1]).Substring(sortedListForSearching[index].Split(';')[1].LastIndexOf("_") + 1).Split(new string[] { ".jpg" }, StringSplitOptions.RemoveEmptyEntries)[0];

        //                    //int indexx = Int32.Parse(numeroLigne) - 1;

        //                    if(dicoResultsIndexSearch.Count > 0)
        //                    {
        //                        dataGridViewPictures.ClearSelection();
        //                        dataGridViewPictures.FirstDisplayedScrollingRowIndex = dicoResultsIndexSearch.ElementAt(0).Value;
        //                        dataGridViewPictures.Focus();
        //                    }

        //                }
        //                catch (ArgumentNullException ex)
        //                {
        //                    return;
        //                }

        //            }
        //            else
        //            {
        //                try
        //                {
        //                    List<string> resultatsRecherche = sortedListForSearching.FindAll(x => x.Contains(keyword));

        //                    foreach (string r in resultatsRecherche)
        //                    {
        //                        string numeroLigne = (r.Split(';')[1]).Substring(r.Split(';')[1].LastIndexOf("_") + 1).Split(new string[] { ".jpg" }, StringSplitOptions.RemoveEmptyEntries)[0];
        //                        int indexx = Int32.Parse(numeroLigne) - 1;

        //                        if (!dicoResultsIndexSearch.ContainsKey(indexx))
        //                        {
        //                            dicoResultsIndexSearch.Add(indexx, indexx);
        //                            LinkLabel link = new LinkLabel();
        //                            link.Text = numeroLigne;
        //                            link.AutoSize = true;
        //                            link.Font = new System.Drawing.Font("Microsoft Sans Serif", 12F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
        //                            link.Name = "linkLabel" + indexx;
        //                            link.Size = new System.Drawing.Size(18, 20);
        //                            link.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.linkLabel1_LinkClicked);
        //                            flowLayoutPanel2.Controls.Add(link);
        //                            //labelResultsSearch.Text += indexx.ToString() + " ";
        //                        }

        //                        labelResultsSearch.Text = "Résultat : " + dicoResultsIndexSearch.Count + " trouvé(s)";


        //                    }

        //                    if (dicoResultsIndexSearch.Count > 0)
        //                    {
        //                        dataGridViewPictures.ClearSelection();
        //                        dataGridViewPictures.FirstDisplayedScrollingRowIndex = dicoResultsIndexSearch.ElementAt(0).Value;
        //                        dataGridViewPictures.Focus();
        //                    }
        //                }
        //                catch (ArgumentNullException ex)
        //                {
        //                    return;
        //                }
        //            }

        //            //foreach(string li in lignes)
        //            //{
        //            //    if (li == "")
        //            //        continue;

        //            //    if (li.ToLower().Contains(keyword.ToLower()))
        //            //    {

        //            //        try
        //            //        {
        //            //            string numeroLigne = (li.Split(';')[1]).Substring(li.Split(';')[1].LastIndexOf("_") + 1).Split(new string[] { ".jpg" }, StringSplitOptions.RemoveEmptyEntries)[0];

        //            //            int index = Int32.Parse(numeroLigne) - 1;

        //            //            dataGridViewPictures.ClearSelection();
        //            //            //dataGridViewPictures.Rows[rowIndex].Selected = true;
        //            //            dataGridViewPictures.FirstDisplayedScrollingRowIndex = index;

        //            //            dataGridViewPictures.Focus();


        //            //        }
        //            //        catch
        //            //        {

        //            //        }

        //            //    }
        //            //}
        //        }
        //    }
        //}

        public static bool EraseDirectory(string folderPath, bool recursive)
        {
            //Safety check for directory existence.
            if (!Directory.Exists(folderPath))
                return false;

            foreach (string file in Directory.GetFiles(folderPath))
            {
                try
                {
                    File.Delete(file);
                }
                catch
                {
                    FileInfo filee = new FileInfo(file);
                    
                    Process pro = new Process();
                    pro.StartInfo.UseShellExecute = false;
                    pro.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;
                    pro.StartInfo.CreateNoWindow = true;
                    pro.StartInfo.RedirectStandardOutput = true;
                    pro.StartInfo.FileName = "cmd.exe";
                    pro.StartInfo.Arguments = "/C del /S \"" + filee.FullName + "\"" ;
                    pro.Start();
                    //Console.WriteLine(Process.StandardOutput.ReadToEnd());
                    pro.WaitForExit();
                    pro.Close();
                }
                
                
            }

            //Iterate to sub directory only if required.
            if (recursive)
            {
                foreach (string dir in Directory.GetDirectories(folderPath))
                {
                    EraseDirectory(dir, recursive);
                }
            }
            //Delete the parent directory before leaving

            try
            {
                Directory.Delete(folderPath);
                return true;
            }
            catch
            {
                return true;
            }
            
        }

        private static void DirectoryCopy(string sourceDirName, string destDirName,
                                       bool copySubDirs)
        {
            // Get the subdirectories for the specified directory.
            DirectoryInfo dir = new DirectoryInfo(sourceDirName);

            if (!dir.Exists)
            {
                throw new DirectoryNotFoundException(
                    "Source directory does not exist or could not be found: "
                    + sourceDirName);
            }

            DirectoryInfo[] dirs = dir.GetDirectories();
            // If the destination directory doesn't exist, create it.
            if (!Directory.Exists(destDirName))
            {
                Directory.CreateDirectory(destDirName);
            }

            // Get the files in the directory and copy them to the new location.
            FileInfo[] files = dir.GetFiles();
            foreach (FileInfo file in files)
            {
                string temppath = Path.Combine(destDirName, file.Name);

                try
                {
                    file.CopyTo(temppath, true);
                }
                catch
                {
                    Process pro = new Process();
                    pro.StartInfo.UseShellExecute = false;
                    pro.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;
                    pro.StartInfo.CreateNoWindow = true;
                    pro.StartInfo.RedirectStandardOutput = true;
                    pro.StartInfo.FileName = "cmd.exe";
                    pro.StartInfo.Arguments = "/C copy \"" + file.FullName + "\" \"" + temppath + "\"";
                    pro.Start();
                    //Console.WriteLine(Process.StandardOutput.ReadToEnd());
                    pro.WaitForExit();
                    pro.Close();
                    
                }
            }

            // If copying subdirectories, copy them and their contents to new location.
            if (copySubDirs)
            {
                foreach (DirectoryInfo subdir in dirs)
                {
                    string temppath = Path.Combine(destDirName, subdir.Name);
                    DirectoryCopy(subdir.FullName, temppath, copySubDirs);
                }
            }
        }

        private void button4_Click_2(object sender, EventArgs e)
        {

        }

        private void pictureBox5_Click(object sender, EventArgs e)
        {

            if (dataGridViewMessenger.Rows.Count > 0 && dataGridViewMessenger.SelectedRows.Count > 0)
            {
                string test = dataGridViewMessenger.SelectedRows[0].Cells[4].Value.ToString();//C:\Users\frank\Documents\Facebook_Friends\Messenger\Stephane Hendrycks
                //string test = @"C:\Users\frank\Documents\Facebook_Friends\Messenger\Stephane Hendrycks";
                //if (File.Exists(test + "\\Messenger_" + test.Substring(test.LastIndexOf("\\") + 1) + ".txt"))
                //{
                //    Messages msg = new Messages();
                //    msg.SetRichTextBox(File.ReadAllText(test + "\\Messenger_" + test.Substring(test.LastIndexOf("\\") + 1) + ".txt"));
                //    msg.Show();

                //}

                if (File.Exists(test + "\\Messenger_Messages.txt"))
                {
                    Messages msg = new Messages();
                    msg.SetRichTextBox(File.ReadAllText(test + "\\Messenger_Messages.txt"));
                    msg.Show();

                }




            }
        }

        private void button18_Click(object sender, EventArgs e)
        {
            
            SaveCase();
            profilIsSet = false;
        }

        private void SaveCase()
        {


            //if (dataGridViewMessenger.Rows.Count > 0 || dataGridView2.Rows.Count > 0)
            //{


            if (folderBrowserDialog1.ShowDialog() == DialogResult.OK)
            {

                if (!Directory.Exists(folderBrowserDialog1.SelectedPath + "\\" + textBoxops.Text.ToUpper()))
                    Directory.CreateDirectory(folderBrowserDialog1.SelectedPath + "\\" + textBoxops.Text.ToUpper());
                else
                {

                    if (MessageBox.Show("Ce dossier existe déjà. Voulez-vous le supprimer ? ", "", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                    {
                        EraseDirectory(folderBrowserDialog1.SelectedPath + "\\" + textBoxops.Text.ToUpper(), true);
                    }


                }


                CopyData(pathToSave, folderBrowserDialog1.SelectedPath, textBoxops.Text);

                string ligne = "<Case>\n";

                if (INSTAGRAM)
                {
                    string username = textBoxUSERNAMEInstagram.Text;
                    string password = textBoxPASSWORDInstagram.Text;

                    //Données dans les champs
                    if (!SavepasswordInsta.Checked)
                    {
                        username = "";
                        password = "";
                    }


                    ligne += textBoxURLInstagram.Text + ";" + username + ";" + password + ";" + textBoxops.Text.ToUpper() + ";" + "..\\" + textBoxops.Text + ";" + textBoxURLInstagram.Text + "\n";
                    ligne += "</Case>\n";

                }
                else
                {
                    //Données dans les champs

                    string username = textBoxUSERNAME.Text;
                    string password = textBoxPASSWORD.Text;

                    //Données dans les champs
                    if (!checkBoxSavepassword.Checked)
                    {
                        username = "";
                        password = "";
                    }


                    ligne += textBoxUSERNAMEFRIENDS.Text + ";" + username + ";" + password + ";" + textBoxops.Text.ToUpper() + ";" + "..\\" + textBoxops.Text + ";" + labelID.Text + "\n";
                    ligne += "</Case>\n";

                }

                //pictureProfile
                if (labelpathPictureProfile.Text != "")
                {
                    ligne += "<PictureProfile>\n" + labelpathPictureProfile.Text.Replace(pathToSave, ".") + "\n</PictureProfile>\n";
                }
                //DataGridViewMessenger
                ligne += "<DataGridViewMessenger>\n";
                foreach (DataGridViewRow row in dataGridViewMessenger.Rows)
                {
                    if (Directory.Exists(row.Cells[4].Value.ToString()) && Directory.GetFiles(row.Cells[4].Value.ToString()).Count() > 0)
                        ligne += row.Cells[5].Value.ToString().Replace(pathToSave, ".") + "; " + row.Cells[1].Value + ";" + row.Cells[2].Value + ";" + row.Cells[3].Value + ";" + row.Cells[4].Value.ToString().Replace(pathToSave + textBoxops.Text.ToUpper(), ".\\") + ";" + row.Cells[5].Value.ToString().Replace(pathToSave + textBoxops.Text.ToUpper(), ".\\") + "\n";
                }
                ligne += "</DataGridViewMessenger>\n";


                //DataGridViewPictures
                ligne += "<DataGridViewFriends>\n";
                foreach (DataGridViewRow row in dataGridView2.Rows)
                {
                    ligne += row.Cells[4].Value.ToString().Replace(pathToSave, ".") + ";" + row.Cells[1].Value + ";" + row.Cells[2].Value + ";" + row.Cells[3].Value + "\n";
                }
                ligne += "</DataGridViewFriends>\n";

                //DataGridViewFollowers
                ligne += "<DataGridViewFollowers>\n";
                foreach (DataGridViewRow row in dataGridView1.Rows)
                {
                    ligne += row.Cells[4].Value.ToString().Replace(pathToSave, ".") + ";" + row.Cells[1].Value + ";" + row.Cells[2].Value + ";" + row.Cells[3].Value + "\n";
                }
                ligne += "</DataGridViewFollowers>\n";

                //DataGridViewLikes
                ligne += "<DataGridViewLikes>\n";
                foreach (DataGridViewRow row in dataGridViewLikes.Rows)
                {
                    ligne += row.Cells[4].Value.ToString().Replace(pathToSave, ".") + ";" + row.Cells[1].Value + ";" + row.Cells[2].Value + ";" + row.Cells[3].Value + "\n";
                }
                ligne += "</DataGridViewLikes>\n";

                try
                {
                    using (System.IO.StreamWriter file = new System.IO.StreamWriter(folderBrowserDialog1.SelectedPath + "\\" + textBoxops.Text.ToUpper() + "\\" + textBoxops.Text.ToUpper() + "_CASE.fbv", false))
                    {
                        file.Write(ligne);
                    }

                    MessageBox.Show("Votre ECASE a été sauvegardé.");
                }
                catch
                {

                }
                
            }
        }
        private void SaveCaseForBatching()
        {


            //if (dataGridViewMessenger.Rows.Count > 0 || dataGridView2.Rows.Count > 0)
            //{



                //if (!Directory.Exists(BATCHDIRNAME + textBoxops.Text.ToUpper() + BATCHFOLDERNAME))
                //    Directory.CreateDirectory(BATCHDIRNAME + textBoxops.Text.ToUpper() + BATCHFOLDERNAME);
                //else
                //{

                    
                //        EraseDirectory(BATCHDIRNAME +  textBoxops.Text.ToUpper() + BATCHFOLDERNAME, true);
                   


                //}


                CopyDataForBatching(pathToSave, BATCHDIRNAME , textBoxops.Text + BATCHFOLDERNAME);

                string ligne = "<Case>\n";

               
                    //Données dans les champs

                    string username = textBoxUSERNAME.Text;
                    string password = textBoxPASSWORD.Text;

                    //Données dans les champs
                    if (!checkBoxSavepassword.Checked)
                    {
                        username = "";
                        password = "";
                    }


                    ligne += textBoxUSERNAMEFRIENDS.Text + ";" + username + ";" + password + ";" + BATCHFOLDERNAME.Replace("\\","") + ";" + "..\\" + BATCHFOLDERNAME + ";" + labelID.Text + "\n";
                    ligne += "</Case>\n";

               

                //pictureProfile
                if (labelpathPictureProfile.Text != "")
                {
                    ligne += "<PictureProfile>\n" + labelpathPictureProfile.Text.Replace(pathToSave + textBoxops.Text.ToUpper(), "..") + "\n</PictureProfile>\n";
                }
                //DataGridViewMessenger
                ligne += "<DataGridViewMessenger>\n";
                foreach (DataGridViewRow row in dataGridViewMessenger.Rows)
                {
                    if (Directory.Exists(row.Cells[4].Value.ToString()) && Directory.GetFiles(row.Cells[4].Value.ToString()).Count() > 0)
                        ligne += row.Cells[5].Value.ToString().Replace(pathToSave + textBoxops.Text.ToUpper(), ".") + "; " + row.Cells[1].Value + ";" + row.Cells[2].Value + ";" + row.Cells[3].Value + ";" + row.Cells[4].Value.ToString().Replace(pathToSave + textBoxops.Text.ToUpper(), ".\\") + ";" + row.Cells[5].Value.ToString().Replace(pathToSave + textBoxops.Text.ToUpper(), ".\\") + "\n";
                }
                ligne += "</DataGridViewMessenger>\n";


                //DataGridViewPictures
                ligne += "<DataGridViewFriends>\n";
                foreach (DataGridViewRow row in dataGridView2.Rows)
                {
                    ligne += row.Cells[4].Value.ToString().Replace(pathToSave + textBoxops.Text.ToUpper(), ".") + ";" + row.Cells[1].Value + ";" + row.Cells[2].Value + ";" + row.Cells[3].Value + "\n";
                }
                ligne += "</DataGridViewFriends>\n";

                //DataGridViewFollowers
                ligne += "<DataGridViewFollowers>\n";
                foreach (DataGridViewRow row in dataGridView1.Rows)
                {
                    ligne += row.Cells[4].Value.ToString().Replace(pathToSave + textBoxops.Text.ToUpper(), ".") + ";" + row.Cells[1].Value + ";" + row.Cells[2].Value + ";" + row.Cells[3].Value + "\n";
                }
                ligne += "</DataGridViewFollowers>\n";

                //DataGridViewLikes
                ligne += "<DataGridViewLikes>\n";
                foreach (DataGridViewRow row in dataGridViewLikes.Rows)
                {
                    ligne += row.Cells[4].Value.ToString().Replace(pathToSave + textBoxops.Text.ToUpper(), ".") + ";" + row.Cells[1].Value + ";" + row.Cells[2].Value + ";" + row.Cells[3].Value + "\n";
                }
                ligne += "</DataGridViewLikes>\n";

                try
                {
                    using (System.IO.StreamWriter file = new System.IO.StreamWriter(BATCHDIRNAME + "\\" + textBoxops.Text.ToUpper() + BATCHFOLDERNAME + BATCHFOLDERNAME +"_CASE.fbv", false))
                    {
                        file.Write(ligne);
                    }

                    //MessageBox.Show("Votre ECASE a été sauvegardé.");
                }
                catch
                {

                }

            
        }



        //}
        //else
        //    CopyData(pathToSave + textBoxops.Text.ToUpper(), folderBrowserDialog1.SelectedPath, textBoxops.Text);


        private void SaveCaseClosingForm()
        {


            //if (dataGridViewMessenger.Rows.Count > 0 || dataGridView2.Rows.Count > 0)
            //{


            if (textBoxops.Text == "")
                return;


                //Données dans les champs
                string ligne = "<Case>\n";
                ligne += textBoxUSERNAMEFRIENDS.Text + ";" + textBoxUSERNAME.Text + ";" + textBoxPASSWORD.Text + ";" + textBoxops.Text.ToUpper() + ";" + "..\\" + textBoxops.Text + ";" + labelID.Text + "\n";
                ligne += "</Case>\n";

                //pictureProfile
                if (labelpathPictureProfile.Text != "")
                {
                    ligne += "<PictureProfile>\n" + labelpathPictureProfile.Text.Replace(pathToSave, ".") + "\n</PictureProfile>\n";
                }
                //DataGridViewMessenger
                ligne += "<DataGridViewMessenger>\n";
                foreach (DataGridViewRow row in dataGridViewMessenger.Rows)
                {
                    if (Directory.Exists(row.Cells[4].Value.ToString()) && Directory.GetFiles(row.Cells[4].Value.ToString()).Count() > 0)
                        ligne += row.Cells[5].Value.ToString().Replace(pathToSave, ".") + "; " + row.Cells[1].Value + ";" + row.Cells[2].Value + ";" + row.Cells[3].Value + ";" + row.Cells[4].Value.ToString().Replace(pathToSave + textBoxops.Text.ToUpper(), ".\\") + ";" + row.Cells[5].Value.ToString().Replace(pathToSave + textBoxops.Text.ToUpper(), ".\\") + "\n";
                }
                ligne += "</DataGridViewMessenger>\n";


                //DataGridViewPictures
                ligne += "<DataGridViewFriends>\n";
                foreach (DataGridViewRow row in dataGridView2.Rows)
                {
                    ligne += row.Cells[4].Value.ToString().Replace(pathToSave, ".") + ";" + row.Cells[1].Value + ";" + row.Cells[2].Value + ";" + row.Cells[3].Value + "\n";
                }
                ligne += "</DataGridViewFriends>\n";

                //DataGridViewFollowers
                ligne += "<DataGridViewFollowers>\n";
                foreach (DataGridViewRow row in dataGridView1.Rows)
                {
                    ligne += row.Cells[4].Value.ToString().Replace(pathToSave, ".") + ";" + row.Cells[1].Value + ";" + row.Cells[2].Value + ";" + row.Cells[3].Value + "\n";
                }
                ligne += "</DataGridViewFollowers>\n";

                if (!Directory.Exists(pathToSave + "\\" + textBoxops.Text))
                    Directory.CreateDirectory(pathToSave + "\\" + textBoxops.Text);

                if(!BATCHING)
                using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\" + textBoxops.Text + "_CASE.fbv", true))
                {
                    file.Write(ligne);
                }
                else
                if (BATCHING)
                    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\" + BATCHFOLDERNAME + "\\" + BATCHFOLDERNAME + "_CASE.fbv", true))
                    {
                        file.Write(ligne);
                    }

            if (Analytics.Count > 0)
            {
                if (!Directory.Exists(pathToSave + "\\TXT"))
                    Directory.CreateDirectory(pathToSave + "\\TXT");

                using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\TXT\\ForAnalytics.txt", true))
                {
                    string textes = "";
                    foreach (Analytics a in Analytics.Values)
                    {
                        textes += a.Category.Trim() + ";Key=" + a.Username + "@" + a.Url + "@;" + a.Username + ";" + a.Url + ";" + a.PathToPicture.Replace("\r\n", " ").Replace("\n", " ") + ";" + a.PathToFolder + "\n";
                    }

                    file.Write(textes);

                }

                Analytics = new Dictionary<string, Analytics>();
            }
            

        }

        private void CheckDocumentDirectory()
        {
            if(Directory.Exists(pathToSave))
            {

            }
        }

        private void CopyData(string path, string dest, string ops)
        {
            
            if(!Directory.Exists(pathToSaveBAK + ops))
            {
                MessageBox.Show("Aucune donnée à copier");
                return;
            }
                
            
            
            //if(MessageBox.Show("Etes-vous certain d'effacer " + "repertoire dest : " + dest + "\\" + ops) == DialogResult.OK)
            //{
                if (!Directory.Exists(dest + "\\" + ops))
                    Directory.CreateDirectory(dest + "\\" + ops);
            //else
            //{

            //}
            //    EraseDirectory(dest + "\\" + ops, true);

            foreach (string dir in Directory.GetDirectories(pathToSaveBAK + ops))
                {
                    DirectoryInfo dirr = new DirectoryInfo(dir);

                    if (!Directory.Exists(dest + "\\" + ops + "\\" + dirr.Name))
                        Directory.CreateDirectory(dest + "\\" + ops + "\\" + dirr.Name);

                    DirectoryCopy(dir, dest + "\\" + ops + "\\" + dirr.Name, true);


                }

                foreach (string fichierinRoot in Directory.GetFiles(pathToSaveBAK + ops))
                {
                    FileInfo fich = new FileInfo(fichierinRoot);
                try
                {
                    fich.CopyTo(dest + "\\" + ops + "\\" + fich.Name, true);
                }
                catch
                {
                    Process pro = new Process();
                    pro.StartInfo.UseShellExecute = false;
                    pro.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;
                    pro.StartInfo.CreateNoWindow = true;
                    pro.StartInfo.RedirectStandardOutput = true;
                    pro.StartInfo.FileName = "cmd.exe";
                    pro.StartInfo.Arguments = "/C copy \"" + fich.FullName + "\" \"" + dest + "\\" + ops + "\\" + fich.Name + "\"";
                    pro.Start();
                    //Console.WriteLine(Process.StandardOutput.ReadToEnd());
                    pro.WaitForExit();
                    pro.Close();
                }
                    
                }

            //on copie le reader

            //if (File.Exists(pathConfig.Replace("\\FacebookAnalyzer\\FacebookAnalyzer\\", "\\FacebookAnalyzer\\Viewer\\") + "Viewer.exe"))
            //{
            //    File.Copy(pathConfig.Replace("\\FacebookAnalyzer\\FacebookAnalyzer\\", "\\FacebookAnalyzer\\Viewer\\") + "Viewer.exe", dest + "\\" + ops + "\\Viewer.exe",true);
            //    Directory.CreateDirectory(dest + "\\" + ops + "\\Resources");
            //    File.Copy(pathConfig.Replace("\\FacebookAnalyzer\\FacebookAnalyzer\\bin\\Debug\\", "\\FacebookAnalyzer\\Viewer\\") + "Resources\\PV_Template.docx", dest + "\\" + ops + "\\Resources\\PV_Template.docx", true);
            //}

            if (!BUSINESSMODE)
            {
                if (File.Exists(AppDomain.CurrentDomain.BaseDirectory + "\\Viewers\\Viewer.exe"))
                {
                    File.Copy(AppDomain.CurrentDomain.BaseDirectory + "\\Viewers\\Viewer.exe", dest + "\\" + ops + "\\Viewer.exe", true);
                    Directory.CreateDirectory(dest + "\\" + ops + "\\Resources");
                    File.Copy(AppDomain.CurrentDomain.BaseDirectory + "Resources\\PV_Template.docx", dest + "\\" + ops + "\\Resources\\PV_Template.docx", true);
                    File.Copy(AppDomain.CurrentDomain.BaseDirectory + "Resources\\FACEBOOK_VIEWER_MANUEL_UTILISATION.pdf", dest + "\\" + ops + "\\FACEBOOK_VIEWER_MANUEL_UTILISATION.pdf", true);//FACEBOOK VIEWER MANUEL UTILISATION.pdf
                }

                if (File.Exists(AppDomain.CurrentDomain.BaseDirectory + "FacebookAnalytics.exe"))
                {
                    File.Copy(AppDomain.CurrentDomain.BaseDirectory + "FacebookAnalytics.exe", dest + "\\" + ops + "\\FacebookAnalytics.exe", true);

                }
            }            
            else
            if (File.Exists(AppDomain.CurrentDomain.BaseDirectory + "\\Viewers\\ViewerForBusiness.exe"))
                {
                 File.Copy(AppDomain.CurrentDomain.BaseDirectory + "\\Viewers\\ViewerForBusiness.exe", dest + "\\" + ops + "\\ViewerForBusiness.exe", true);
                 Directory.CreateDirectory(dest + "\\" + ops + "\\Resources");
                 File.Copy(AppDomain.CurrentDomain.BaseDirectory + "Resources\\PV_Template.docx", dest + "\\" + ops + "\\Resources\\PV_Template.docx", true);
                
            }
            //}


        }
        private void CopyDataForBatching(string path, string dest, string ops)
        {

            if (!Directory.Exists(pathToSaveBAK + ops))
            {
                MessageBox.Show("Aucune donnée à copier");
                return;
            }



            //if(MessageBox.Show("Etes-vous certain d'effacer " + "repertoire dest : " + dest + "\\" + ops) == DialogResult.OK)
            //{
            if (!Directory.Exists(dest + "\\" + ops))
                Directory.CreateDirectory(dest + "\\" + ops);
            //else
            //{

            //}
            //    EraseDirectory(dest + "\\" + ops, true);

            foreach (string dir in Directory.GetDirectories(pathToSaveBAK + ops))
            {
                DirectoryInfo dirr = new DirectoryInfo(dir);

                if (!Directory.Exists(dest + "\\" + ops + "\\" + dirr.Name))
                    Directory.CreateDirectory(dest + "\\" + ops + "\\" + dirr.Name);

                DirectoryCopy(dir, dest + "\\" + ops + "\\" + dirr.Name, true);


            }

            foreach (string fichierinRoot in Directory.GetFiles(pathToSaveBAK + ops))
            {
                FileInfo fich = new FileInfo(fichierinRoot);
                try
                {
                    fich.CopyTo(dest + "\\" + ops + "\\" + fich.Name, true);
                }
                catch
                {
                    Process pro = new Process();
                    pro.StartInfo.UseShellExecute = false;
                    pro.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;
                    pro.StartInfo.CreateNoWindow = true;
                    pro.StartInfo.RedirectStandardOutput = true;
                    pro.StartInfo.FileName = "cmd.exe";
                    pro.StartInfo.Arguments = "/C copy \"" + fich.FullName + "\" \"" + dest + "\\" + ops + "\\" + fich.Name + "\"";
                    pro.Start();
                    //Console.WriteLine(Process.StandardOutput.ReadToEnd());
                    pro.WaitForExit();
                    pro.Close();
                }

            }

            //on copie le reader

            //if (File.Exists(pathConfig.Replace("\\FacebookAnalyzer\\FacebookAnalyzer\\", "\\FacebookAnalyzer\\Viewer\\") + "Viewer.exe"))
            //{
            //    File.Copy(pathConfig.Replace("\\FacebookAnalyzer\\FacebookAnalyzer\\", "\\FacebookAnalyzer\\Viewer\\") + "Viewer.exe", dest + "\\" + ops + "\\Viewer.exe",true);
            //    Directory.CreateDirectory(dest + "\\" + ops + "\\Resources");
            //    File.Copy(pathConfig.Replace("\\FacebookAnalyzer\\FacebookAnalyzer\\bin\\Debug\\", "\\FacebookAnalyzer\\Viewer\\") + "Resources\\PV_Template.docx", dest + "\\" + ops + "\\Resources\\PV_Template.docx", true);
            //}

            if (!BUSINESSMODE)
            {
                if (File.Exists(AppDomain.CurrentDomain.BaseDirectory + "\\Viewers\\Viewer.exe"))
                {
                    File.Copy(AppDomain.CurrentDomain.BaseDirectory + "\\Viewers\\Viewer.exe", dest + "\\" + ops + "\\Viewer.exe", true);
                    Directory.CreateDirectory(dest + "\\" + ops + "\\Resources");
                    File.Copy(AppDomain.CurrentDomain.BaseDirectory + "Resources\\PV_Template.docx", dest + "\\" + ops + "\\Resources\\PV_Template.docx", true);
                    File.Copy(AppDomain.CurrentDomain.BaseDirectory + "Resources\\FACEBOOK_VIEWER_MANUEL_UTILISATION.pdf", dest + "\\" + ops + "\\FACEBOOK_VIEWER_MANUEL_UTILISATION.pdf", true);//FACEBOOK VIEWER MANUEL UTILISATION.pdf
                }

                if (File.Exists(AppDomain.CurrentDomain.BaseDirectory + "FacebookAnalytics.exe"))
                {
                    File.Copy(AppDomain.CurrentDomain.BaseDirectory + "FacebookAnalytics.exe", dest + "\\" + ops + "\\FacebookAnalytics.exe", true);

                }
            }
            else
            if (File.Exists(AppDomain.CurrentDomain.BaseDirectory + "\\Viewers\\ViewerForBusiness.exe"))
            {
                File.Copy(AppDomain.CurrentDomain.BaseDirectory + "\\Viewers\\ViewerForBusiness.exe", dest + "\\" + ops + "\\ViewerForBusiness.exe", true);
                Directory.CreateDirectory(dest + "\\" + ops + "\\Resources");
                File.Copy(AppDomain.CurrentDomain.BaseDirectory + "Resources\\PV_Template.docx", dest + "\\" + ops + "\\Resources\\PV_Template.docx", true);

            }
            //}


        }

        private void GetParameters()
        {
            backgroundWorker1.ReportProgress(-90);
            //SettingsPage_Content
            //https://www.facebook.com/settings
            if (driver == null)
            {
                InitializeDriver();
                // 2. Go to the "Google" homepage
                driver.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }

                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driver.FindElementById("email");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driver.FindElementById("pass");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driver.FindElementById("loginbutton").Click();
                //searchButton.Click();
                Thread.Sleep(2500);
            }

            string urlFriend = textBoxUSERNAMEFRIENDS.Text;
            string targetName = textBoxops.Text;

            if (!profilIsSet)
                GetProfileInformations(backgroundWorker1);

            if (!Directory.Exists(pathToSave + @"\PARAMETERS\"))
                Directory.CreateDirectory(pathToSave + @"\PARAMETERS\");


            driver.Navigate().GoToUrl("https://www.facebook.com/settings");
            Thread.Sleep(5000);

            IWebElement element = driver.FindElement(By.Id("SettingsPage_Content"));
            string parametres = element.Text.ToLower().Replace("modifier", "");
            string[] parametress = parametres.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries);

            int i = 0;
            string attribut = "";
            foreach(string ligne in parametress)
            {
                if (i + 1 > parametress.Count() - 1)
                    break;
                if (parametress[i].ToLower().Contains("param") || parametress[i + 1].ToLower().Contains("param"))
                    break;

                attribut += parametress[i] + ";" + parametress[i + 1] + "\n";

                i+=2;
            }

            using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\PARAMETERS\\Parametres.txt", false))
            {
                
                file.Write(attribut);
            }

            Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
            imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

            //Save the screenshot
            imageScreenshott.SaveAsFile(pathToSave + @"\PARAMETERS\" + "Screenshot_1.png", OpenQA.Selenium.ScreenshotImageFormat.Png);
            Thread.Sleep(100);



            driver.Navigate().GoToUrl("https://www.facebook.com/settings?tab=security&section=sessions&view");
            Thread.Sleep(5000);//https://www.facebook.com/settings?tab=security&section=sessions&view


            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top

            Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
            long innerHeightt = (long)innerHeight;
            long scroll = (long)innerHeight;
            long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

            scrollHeight = scrollHeight + scroll;
            int hauteur = 450;

            try
            {
                Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                i = 1;
                while (scrollHeight >= innerHeightt)
                {
                    //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                    //Thread.Sleep(1000);

                    imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                    //imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                    //Save the screenshot
                    imageScreenshott.SaveAsFile(pathToSave + @"\PARAMETERS\Connexion" + "_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                    Thread.Sleep(100);


                    ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                    if ((scrollHeight - innerHeightt) < 200)
                    {
                        Thread.Sleep(5000);
                    }
                    else
                        Thread.Sleep(2500);


                    scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
                    Thread.Sleep(2000);


                    if (scrollHeight <= innerHeightt)
                    {
                        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                        Thread.Sleep(2000);
                        scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                    }

                    scrollHeight = scrollHeight + scroll;
                    innerHeightt = innerHeightt + hauteur;
                    i++;
                }
            }
            catch
            {
                //e.printStackTrace();
            }

            try
            {
                element = driver.FindElement(By.Id("SettingsPage_Content"));

                using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\PARAMETERS\\Connexions.txt", false))
                {

                    file.Write(element.Text);
                }
            }
            catch
            {

            }

            if (urlFriend.Contains("id="))
            {
                driver.Navigate().GoToUrl(urlFriend + "&sk=allactivity&category_key=activesessions&privacy_source=access_hub&entry_point=ayi_hub");
                Thread.Sleep(5000);
            }
            else
            {
                driver.Navigate().GoToUrl(urlFriend + "/allactivity?category_key=activesessions&privacy_source=access_hub&entry_point=ayi_hub");
                Thread.Sleep(5000);
            }

            

            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top

            innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
            innerHeightt = (long)innerHeight;
            scroll = (long)innerHeight;
            scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

            scrollHeight = scrollHeight + scroll;
            hauteur = 450;

            try
            {
                Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                i = 1;
                while (scrollHeight >= innerHeightt)
                {
                    //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                    //Thread.Sleep(1000);

                    imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                    imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                    //Save the screenshot
                    imageScreenshott.SaveAsFile(pathToSave + @"\PARAMETERS\Sessions" + "_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                    Thread.Sleep(100);


                    ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                    if ((scrollHeight - innerHeightt) < 200)
                    {
                        Thread.Sleep(5000);
                    }
                    else
                        Thread.Sleep(2500);


                    scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
                    Thread.Sleep(2000);


                    if (scrollHeight <= innerHeightt)
                    {
                        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                        Thread.Sleep(2000);
                        scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                    }

                    scrollHeight = scrollHeight + scroll;
                    innerHeightt = innerHeightt + hauteur;
                    i++;
                }
            }
            catch
            {
                //e.printStackTrace();
            }

            try
            {
                element = driver.FindElement(By.Id("fbTimelineLogBody"));

                using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\PARAMETERS\\SessionsActives.txt", false))
                {

                    file.Write(element.Text);
                }
            }
            catch
            {

            }

            if (urlFriend.Contains("id="))//&sk=allactivity&category_key=loginslogouts&privacy_source=access_hub&entry_point=ayi_hub
            {
                driver.Navigate().GoToUrl(urlFriend + "&sk=allactivity&category_key=loginslogouts&privacy_source=access_hub&entry_point=ayi_hub");
                Thread.Sleep(5000);
            }
            else
            {
                driver.Navigate().GoToUrl(urlFriend + "/allactivity?category_key=loginslogouts&privacy_source=access_hub&entry_point=ayi_hub");
                Thread.Sleep(5000);
            }



            

            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top

            innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
            innerHeightt = (long)innerHeight;
            scroll = (long)innerHeight;
            scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

            scrollHeight = scrollHeight + scroll;
            hauteur = 450;

            try
            {
                Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                i = 1;
                while (scrollHeight >= innerHeightt)
                {
                    //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                    //Thread.Sleep(1000);

                    imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                    imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                    //Save the screenshot
                    imageScreenshott.SaveAsFile(pathToSave + @"\PARAMETERS\ConnexionsDeconnexions" + "_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                    Thread.Sleep(100);


                    ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                    if ((scrollHeight - innerHeightt) < 200)
                    {
                        Thread.Sleep(5000);
                    }
                    else
                        Thread.Sleep(2500);


                    scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
                    Thread.Sleep(2000);


                    if (scrollHeight <= innerHeightt)
                    {
                        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                        Thread.Sleep(2000);
                        scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                    }

                    scrollHeight = scrollHeight + scroll;
                    innerHeightt = innerHeightt + hauteur;
                    i++;
                }
            }
            catch
            {
                //e.printStackTrace();
            }

            try
            {
                element = driver.FindElement(By.Id("fbTimelineLogBody"));

                using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\PARAMETERS\\ConnexionsDeconnexions.txt", false))
                {

                    file.Write(element.Text);
                }
            }
            catch
            {

            }

            if (urlFriend.Contains("id="))//&sk=allactivity&category_key=search&privacy_source=access_hub&entry_point=ayi_hub
            {
                driver.Navigate().GoToUrl(urlFriend + "&sk=allactivity&category_key=search&privacy_source=access_hub&entry_point=ayi_hub");
                Thread.Sleep(5000);
            }
            else
            {
                driver.Navigate().GoToUrl(urlFriend + "/allactivity?category_key=search&privacy_source=access_hub&entry_point=ayi_hub");
                Thread.Sleep(5000);
            }

           

            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top

            innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
            innerHeightt = (long)innerHeight;
            scroll = (long)innerHeight;
            scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

            scrollHeight = scrollHeight + scroll;
            hauteur = 450;

            try
            {
                Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                i = 1;
                while (scrollHeight >= innerHeightt)
                {
                    //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                    //Thread.Sleep(1000);

                    imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                    imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                    //Save the screenshot
                    imageScreenshott.SaveAsFile(pathToSave + @"\PARAMETERS\Recherches" + "_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                    Thread.Sleep(100);


                    ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                    if ((scrollHeight - innerHeightt) < 200)
                    {
                        Thread.Sleep(5000);
                    }
                    else
                        Thread.Sleep(2500);


                    scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
                    Thread.Sleep(2000);


                    if (scrollHeight <= innerHeightt)
                    {
                        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                        Thread.Sleep(2000);
                        scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                    }

                    scrollHeight = scrollHeight + scroll;
                    innerHeightt = innerHeightt + hauteur;
                    i++;
                }
            }
            catch
            {
                //e.printStackTrace();
            }

            try
            {
                element = driver.FindElement(By.Id("fbTimelineLogBody"));

                using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\PARAMETERS\\Recherches.txt", false))
                {

                    file.Write(element.Text.Replace("Modifier",""));
                }
            }
            catch
            {

            }
            //https://www.facebook.com/hohofeduj/allactivity?category_key=search&privacy_source=access_hub&entry_point=ayi_hub

            backgroundWorker1.ReportProgress(-103);
            Thread.Sleep(2000);

            backgroundWorker1.CancelAsync();
        }

        private void GetParametersForNewLook()
        {
            backgroundWorker1.ReportProgress(-90);
            backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " début du scraping des paramètres");

            //SettingsPage_Content
            //https://www.facebook.com/settings
            if (driver == null)
            {
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " initialisation du driver");

                InitializeDriver();
                // 2. Go to the "Google" homepage
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture de la page facebook login");

                driver.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }

                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driver.FindElementById("email");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driver.FindElementById("pass");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driver.FindElementById("loginbutton").Click();
                //searchButton.Click();
                Thread.Sleep(2500);
            }

            string urlFriend = textBoxUSERNAMEFRIENDS.Text;
            string targetName = textBoxops.Text;

            if (!profilIsSet)
                GetProfileInformations(backgroundWorker1);

            if (!Directory.Exists(pathToSave + @"\PARAMETERS\"))
                Directory.CreateDirectory(pathToSave + @"\PARAMETERS\");

            backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture de la page des paramètres");

            driver.Navigate().GoToUrl("https://www.facebook.com/settings");
            Thread.Sleep(5000);
            int i = 0;

            try
            {
                if(isElementPresent(driver, "//iframe[@class='k4urcfbm jgljxmt5 a8c37x1j izx4hr6d humdl8nn bn081pho gcieejh5']"))
                {
                    IWebElement iframe = driver.FindElement(By.XPath("//iframe[@class='k4urcfbm jgljxmt5 a8c37x1j izx4hr6d humdl8nn bn081pho gcieejh5']"));
                    driver.SwitchTo().Frame(iframe);
                    //do your stuff
                }

                if (isElementPresent(driver, "//iframe[@class='k4urcfbm jgljxmt5 a8c37x1j izx4hr6d humdl8nn bn081pho gcieejh5 esnais5j']"))
                {
                    IWebElement iframe = driver.FindElement(By.XPath("//iframe[@class='k4urcfbm jgljxmt5 a8c37x1j izx4hr6d humdl8nn bn081pho gcieejh5 esnais5j']"));
                    driver.SwitchTo().Frame(iframe);
                    //do your stuff
                }

                IWebElement element = driver.FindElement(By.Id("SettingsPage_Content"));



                string parametres = element.Text.ToLower().Replace("modifier", "");
                string[] parametress = parametres.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries);

                
                string attribut = "";
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " récupération des paramètres : " + parametress.Count());

                foreach (string ligne in parametress)
                {
                    if (i + 1 > parametress.Count() - 1)
                        break;
                    if (parametress[i].ToLower().Contains("param") || parametress[i + 1].ToLower().Contains("param"))
                        break;

                    attribut += parametress[i] + ";" + parametress[i + 1] + "\n";

                    i += 2;
                }

                using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\PARAMETERS\\Parametres.txt", false))
                {
                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " écriture du fichier " + pathToSave + "\\PARAMETERS\\Parametres.txt");

                    file.Write(attribut);
                }

                Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                //Save the screenshot
                imageScreenshott.SaveAsFile(pathToSave + @"\PARAMETERS\" + "Screenshot_1.png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                Thread.Sleep(100);

            }
            catch
            {
                return;

            }



            //driver.SwitchTo().DefaultContent();
            backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture de la page des connexions");

            driver.Navigate().GoToUrl("https://www.facebook.com/settings?tab=security&section=sessions&view");
            Thread.Sleep(5000);//https://www.facebook.com/settings?tab=security&section=sessions&view

            if (isElementPresent(driver, "//iframe[@class='k4urcfbm jgljxmt5 a8c37x1j izx4hr6d humdl8nn bn081pho gcieejh5']"))
            {
                IWebElement iframe = driver.FindElement(By.XPath("//iframe[@class='k4urcfbm jgljxmt5 a8c37x1j izx4hr6d humdl8nn bn081pho gcieejh5']"));
                driver.SwitchTo().Frame(iframe);
                //do your stuff
            }

            if (isElementPresent(driver, "//iframe[@class='k4urcfbm jgljxmt5 a8c37x1j izx4hr6d humdl8nn bn081pho gcieejh5 esnais5j']"))
            {
                IWebElement iframe = driver.FindElement(By.XPath("//iframe[@class='k4urcfbm jgljxmt5 a8c37x1j izx4hr6d humdl8nn bn081pho gcieejh5 esnais5j']"));
                driver.SwitchTo().Frame(iframe);
                //do your stuff
            }

            //try
            //{
            //    IWebElement iframe = driver.FindElement(By.XPath("//iframe[@class='k4urcfbm jgljxmt5 a8c37x1j izx4hr6d humdl8nn bn081pho gcieejh5']"));
            //    driver.SwitchTo().Frame(iframe);
            //    //do your stuff

            //}
            //catch
            //{

            //}

            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top

            Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
            long innerHeightt = (long)innerHeight;
            long scroll = (long)innerHeight;
            long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

            scrollHeight = scrollHeight + scroll;
            int hauteur = 450;

            try
            {
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " scrolling de la page des connexions");


                Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
                i = 1;
                while (scrollHeight >= innerHeightt)
                {
                    //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
                    //Thread.Sleep(1000);

                    Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                    //imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                    //Save the screenshot
                    imageScreenshott.SaveAsFile(pathToSave + @"\PARAMETERS\Connexion" + "_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                    Thread.Sleep(100);


                    ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                    if ((scrollHeight - innerHeightt) < 200)
                    {
                        Thread.Sleep(5000);
                    }
                    else
                        Thread.Sleep(2500);


                    scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
                    Thread.Sleep(2000);


                    if (scrollHeight <= innerHeightt)
                    {
                        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                        Thread.Sleep(2000);
                        scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                    }

                    scrollHeight = scrollHeight + scroll;
                    innerHeightt = innerHeightt + hauteur;
                    i++;
                }
            }
            catch
            {
                //e.printStackTrace();
            }

            try
            {
                //iframe = driver.FindElement(By.XPath("//iframe[@class='k4urcfbm jgljxmt5 a8c37x1j izx4hr6d humdl8nn bn081pho gcieejh5']"));

                //driver.SwitchTo().Frame(iframe);

                IWebElement element = driver.FindElement(By.Id("SettingsPage_Content"));

                using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\PARAMETERS\\Connexions.txt", false))
                {
                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " création du fichier " + pathToSave + "\\PARAMETERS\\Connexions.txt");

                    file.Write(element.Text);
                }
            }
            catch
            {

            }

            backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture de la page des connexions actives");


            if (urlFriend.Contains("id="))
            {
                driver.Navigate().GoToUrl(urlFriend + "&sk=allactivity&category_key=activesessions&privacy_source=access_hub&entry_point=ayi_hub");
                Thread.Sleep(5000);
            }
            else
            {
                driver.Navigate().GoToUrl(urlFriend + "/allactivity?category_key=activesessions&privacy_source=access_hub&entry_point=ayi_hub");
                Thread.Sleep(5000);
            }


            if (isElementPresent(driver, "//iframe[@class='k4urcfbm jgljxmt5 a8c37x1j izx4hr6d humdl8nn bn081pho gcieejh5']"))
            {
                IWebElement iframe = driver.FindElement(By.XPath("//iframe[@class='k4urcfbm jgljxmt5 a8c37x1j izx4hr6d humdl8nn bn081pho gcieejh5']"));
                driver.SwitchTo().Frame(iframe);
                //do your stuff
            }

            if (isElementPresent(driver, "//iframe[@class='k4urcfbm jgljxmt5 a8c37x1j izx4hr6d humdl8nn bn081pho gcieejh5 esnais5j']"))
            {
                IWebElement iframe = driver.FindElement(By.XPath("//iframe[@class='k4urcfbm jgljxmt5 a8c37x1j izx4hr6d humdl8nn bn081pho gcieejh5 esnais5j']"));
                driver.SwitchTo().Frame(iframe);
                //do your stuff
            }

            //try
            //{
            //    IWebElement iframe = driver.FindElement(By.XPath("//iframe[@class='k4urcfbm jgljxmt5 a8c37x1j izx4hr6d humdl8nn bn081pho gcieejh5']"));
            //    driver.SwitchTo().Frame(iframe);
            //    //do your stuff

            //}
            //catch
            //{

            //}


            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top

            innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
            innerHeightt = (long)innerHeight;
            scroll = (long)innerHeight;
            scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

            scrollHeight = scrollHeight + scroll;
            hauteur = 450;

            try
            {
                var imageDown = driver.FindElementByXPath("//div[@class='j83agx80 cbu4d94t buofh1pr l9j0dhe7']");
                //Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('j83agx80 cbu4d94t buofh1pr')[1].scrollHeight");

                ReadOnlyCollection<IWebElement> resultats = (ReadOnlyCollection<IWebElement>)((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')");

                Object lastHeight = null;
                int y = 0;
                foreach (IWebElement el in resultats)
                {
                    lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight");
                    if (lastHeight != null && lastHeight.ToString() != "0")
                        break;
                    y++;
                }

                //Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[1].scrollHeight");
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " scrolling de la page des connexions actives");


                while (true)
                {
                    //driver.execute_script('document.getElementById("viewport").scrollTop += 100')

                    ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollTo(0, document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight)");
                    Thread.Sleep(2500);

                    ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollTo(0, document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight)");
                    Thread.Sleep(2500);


                    ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollTo(0, document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight)");
                    Thread.Sleep(2500);


                    ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollTo(0, document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight)");
                    Thread.Sleep(2500);


                    Object newHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight");
                    if (newHeight.Equals(lastHeight))
                    {
                        break;
                    }
                    lastHeight = newHeight;
                }
            }
            catch (Exception ex)
            {

            }

            //try
            //{
            //    var imageDown = driver.FindElementByXPath("//div[@class='j83agx80 cbu4d94t buofh1pr']");
            //    //Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('j83agx80 cbu4d94t buofh1pr')[1].scrollHeight");
            //    Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[1].scrollHeight");

            //    while (true)
            //    {
            //        //driver.execute_script('document.getElementById("viewport").scrollTop += 100')

            //        ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[1].scrollTo(0, document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[1].scrollHeight)");
            //        Thread.Sleep(2000);

            //        Object newHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[1].scrollHeight");
            //        if (newHeight.Equals(lastHeight))
            //        {
            //            break;
            //        }
            //        lastHeight = newHeight;
            //    }
            //}
            //catch (Exception ex)
            //{

            //}

            //try
            //{
            //    var imageDown = driver.FindElementsByXPath("//div[@class='j83agx80 cbu4d94t buofh1pr']")[1];
            //    Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('j83agx80 cbu4d94t buofh1pr')[0].scrollHeight");

            //    while (true)
            //    {
            //        //driver.execute_script('document.getElementById("viewport").scrollTop += 100')

            //        ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('j83agx80 cbu4d94t buofh1pr')[1].scrollTo(0, document.getElementsByClassName('j83agx80 cbu4d94t buofh1pr')[0].scrollHeight)");
            //        Thread.Sleep(2000);

            //        Object newHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('j83agx80 cbu4d94t buofh1pr')[0].scrollHeight");
            //        if (newHeight.Equals(lastHeight))
            //        {
            //            break;
            //        }
            //        lastHeight = newHeight;
            //    }
            //}
            //catch (Exception ex)
            //{

            //}





            //try
            //{
            //    Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
            //    i = 1;
            //    while (scrollHeight >= innerHeightt)
            //    {
            //        //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
            //        //Thread.Sleep(1000);

            //        imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
            //        imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

            //        //Save the screenshot
            //        imageScreenshott.SaveAsFile(pathToSave + @"\PARAMETERS\Sessions" + "_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
            //        Thread.Sleep(100);


            //        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
            //        if ((scrollHeight - innerHeightt) < 200)
            //        {
            //            Thread.Sleep(5000);
            //        }
            //        else
            //            Thread.Sleep(2500);


            //        scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
            //        Thread.Sleep(2000);


            //        if (scrollHeight <= innerHeightt)
            //        {
            //            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
            //            Thread.Sleep(2000);
            //            scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

            //        }

            //        scrollHeight = scrollHeight + scroll;
            //        innerHeightt = innerHeightt + hauteur;
            //        i++;
            //    }
            //}
            //catch
            //{
            //    //e.printStackTrace();
            //}

            try
            {
                //iframe = driver.FindElement(By.XPath("//iframe[@class='k4urcfbm jgljxmt5 a8c37x1j izx4hr6d humdl8nn bn081pho gcieejh5']"));

                //driver.SwitchTo().Frame(iframe);

                //IList <IWebElement> elements = driver.FindElements(By.XPath("//div[@class='l9j0dhe7']"));//l9j0dhe7
                IList<IWebElement> elementsTests = driver.FindElements(By.XPath("//div[@class='kvgmc6g5']"));//l9j0dhe7
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " scraping des connexions actives : " + elementsTests.Count());


                string tmp = "";
                foreach(IWebElement ell in elementsTests)
                {
                    tmp += ell.Text + "\n";
                }

                using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\PARAMETERS\\SessionsActives.txt", false))
                {
                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " écriture du fichier " + "\\PARAMETERS\\SessionsActives.txt");


                    file.Write(tmp);
                }
            }
            catch
            {

            }

            if (urlFriend.Contains("id="))//&sk=allactivity&category_key=loginslogouts&privacy_source=access_hub&entry_point=ayi_hub
            {
                driver.Navigate().GoToUrl(urlFriend + "&sk=allactivity&category_key=loginslogouts&privacy_source=access_hub&entry_point=ayi_hub");
                Thread.Sleep(5000);
            }
            else
            {
                driver.Navigate().GoToUrl(urlFriend + "/allactivity?category_key=loginslogouts&privacy_source=access_hub&entry_point=ayi_hub");
                Thread.Sleep(5000);
            }

            backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture de la page des connexions/déconnexions");

            //try
            //{
            //    IWebElement iframe = driver.FindElement(By.XPath("//iframe[@class='k4urcfbm jgljxmt5 a8c37x1j izx4hr6d humdl8nn bn081pho gcieejh5']"));
            //    driver.SwitchTo().Frame(iframe);
            //    //do your stuff

            //}
            //catch
            //{

            //}


            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top

            try
            {
                var imageDown = driver.FindElementByXPath("//div[@class='j83agx80 cbu4d94t buofh1pr l9j0dhe7']");
                //Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('j83agx80 cbu4d94t buofh1pr')[1].scrollHeight");

                ReadOnlyCollection <IWebElement> resultats = (ReadOnlyCollection<IWebElement>)((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')");

                Object lastHeight = null;
                int y = 0;
                foreach (IWebElement el in resultats)
                {
                    lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y +"].scrollHeight");
                    if (lastHeight != null && lastHeight.ToString() != "0")
                        break;
                    y++;
                }

                //Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[1].scrollHeight");
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " scrolling de la page des connexions/déconnexions");

                while (true)
                {
                    //driver.execute_script('document.getElementById("viewport").scrollTop += 100')

                    ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y +"].scrollTo(0, document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y +"].scrollHeight)");
                    Thread.Sleep(2500);

                    ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollTo(0, document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight)");
                    Thread.Sleep(2500);

                    ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollTo(0, document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight)");
                    Thread.Sleep(2500);

                    ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollTo(0, document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight)");
                    Thread.Sleep(2500);

                    Object newHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y +"].scrollHeight");
                    if (newHeight.Equals(lastHeight))
                    {
                        break;
                    }
                    lastHeight = newHeight;
                }
            }
            catch (Exception ex)
            {

            }


            try
            {
                //iframe = driver.FindElement(By.XPath("//iframe[@class='k4urcfbm jgljxmt5 a8c37x1j izx4hr6d humdl8nn bn081pho gcieejh5']"));

                //driver.SwitchTo().Frame(iframe);

                //IList<IWebElement> elements = driver.FindElements(By.XPath("//div[@class='l9j0dhe7']"));//l9j0dhe7
                IList<IWebElement> elementsTests = driver.FindElements(By.XPath("//div[@class='kvgmc6g5']"));//l9j0dhe7
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " scraping des connexions/déconnexions: " + elementsTests.Count());


                string tmp = "";
                foreach (IWebElement ell in elementsTests)
                {
                    tmp += ell.Text + "\n";
                }

                using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\PARAMETERS\\ConnexionsDeconnexions.txt", false))
                {
                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " écriture du fichier " + "\\PARAMETERS\\ConnexionsDeconnexions.txt");

                    file.Write(tmp);
                }
            }
            catch
            {

            }


            //innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
            //innerHeightt = (long)innerHeight;
            //scroll = (long)innerHeight;
            //scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

            //scrollHeight = scrollHeight + scroll;
            //hauteur = 450;

            //try
            //{
            //    Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
            //    i = 1;
            //    while (scrollHeight >= innerHeightt)
            //    {
            //        //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
            //        //Thread.Sleep(1000);

            //        imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
            //        imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

            //        //Save the screenshot
            //        imageScreenshott.SaveAsFile(pathToSave + @"\PARAMETERS\ConnexionsDeconnexions" + "_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
            //        Thread.Sleep(100);


            //        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
            //        if ((scrollHeight - innerHeightt) < 200)
            //        {
            //            Thread.Sleep(5000);
            //        }
            //        else
            //            Thread.Sleep(2500);


            //        scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
            //        Thread.Sleep(2000);


            //        if (scrollHeight <= innerHeightt)
            //        {
            //            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
            //            Thread.Sleep(2000);
            //            scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

            //        }

            //        scrollHeight = scrollHeight + scroll;
            //        innerHeightt = innerHeightt + hauteur;
            //        i++;
            //    }
            //}
            //catch
            //{
            //    //e.printStackTrace();
            //}

            //try
            //{
            //    iframe = driver.FindElement(By.XPath("//iframe[@class='k4urcfbm jgljxmt5 a8c37x1j izx4hr6d humdl8nn bn081pho gcieejh5']"));

            //    driver.SwitchTo().Frame(iframe);

            //    element = driver.FindElement(By.Id("fbTimelineLogBody"));

            //    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\PARAMETERS\\ConnexionsDeconnexions.txt", false))
            //    {

            //        file.Write(element.Text);
            //    }
            //}
            //catch
            //{

            //}

            if (urlFriend.Contains("id="))//&sk=allactivity&category_key=search&privacy_source=access_hub&entry_point=ayi_hub
            {
                driver.Navigate().GoToUrl(urlFriend + "&sk=allactivity&category_key=search&privacy_source=access_hub&entry_point=ayi_hub");
                Thread.Sleep(5000);
            }
            else
            {
                driver.Navigate().GoToUrl(urlFriend + "/allactivity?category_key=search&privacy_source=access_hub&entry_point=ayi_hub");
                Thread.Sleep(5000);
            }

            backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " ouverture de la page des recherches facebook");

            try
            {
                IWebElement iframe = driver.FindElement(By.XPath("//iframe[@class='k4urcfbm jgljxmt5 a8c37x1j izx4hr6d humdl8nn bn081pho gcieejh5']"));
                driver.SwitchTo().Frame(iframe);
                //do your stuff

            }
            catch
            {

            }

            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top


            try
            {
                var imageDown = driver.FindElementByXPath("//div[@class='j83agx80 cbu4d94t buofh1pr l9j0dhe7']");
                //Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('j83agx80 cbu4d94t buofh1pr')[1].scrollHeight");

                ReadOnlyCollection<IWebElement> resultats = (ReadOnlyCollection<IWebElement>)((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')");

                Object lastHeight = null;
                int y = 0;
                foreach (IWebElement el in resultats)
                {
                    lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight");
                    if (lastHeight != null && lastHeight.ToString() != "0")
                        break;
                    y++;
                }

                //Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[1].scrollHeight");
                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " scrolling de la page des recherches facebook");

                while (true)
                {
                    //driver.execute_script('document.getElementById("viewport").scrollTop += 100')

                    ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollTo(0, document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight)");
                    Thread.Sleep(2500);

                    ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollTo(0, document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight)");
                    Thread.Sleep(2500);

                    ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollTo(0, document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight)");
                    Thread.Sleep(2500);

                    ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollTo(0, document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight)");
                    Thread.Sleep(2500);


                    Object newHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('q5bimw55 rpm2j7zs k7i0oixp gvuykj2m j83agx80 cbu4d94t ni8dbmo4 eg9m0zos l9j0dhe7 du4w35lb ofs802cu pohlnb88 dkue75c7 mb9wzai9 d8ncny3e buofh1pr g5gj957u tgvbjcpo l56l04vs r57mb794 kh7kg01d c3g1iek1 k4xni2cv')[" + y + "].scrollHeight");
                    
                    
                    
                    if (newHeight.Equals(lastHeight))
                    {
                        break;
                    }
                    lastHeight = newHeight;
                }
            }
            catch (Exception ex)
            {

            }

            //try
            //{
            //    var imageDown = driver.FindElementByXPath("//div[@class='j83agx80 cbu4d94t buofh1pr']");
            //    Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('j83agx80 cbu4d94t buofh1pr')[1].scrollHeight");

            //    while (true)
            //    {
            //        //driver.execute_script('document.getElementById("viewport").scrollTop += 100')

            //        ((IJavaScriptExecutor)driver).ExecuteScript("document.getElementsByClassName('j83agx80 cbu4d94t buofh1pr')[1].scrollTo(0, document.getElementsByClassName('j83agx80 cbu4d94t buofh1pr')[1].scrollHeight)");
            //        Thread.Sleep(2000);

            //        Object newHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.getElementsByClassName('j83agx80 cbu4d94t buofh1pr')[1].scrollHeight");
            //        if (newHeight.Equals(lastHeight))
            //        {
            //            break;
            //        }
            //        lastHeight = newHeight;
            //    }
            //}
            //catch (Exception ex)
            //{

            //}


            try
            {
                //iframe = driver.FindElement(By.XPath("//iframe[@class='k4urcfbm jgljxmt5 a8c37x1j izx4hr6d humdl8nn bn081pho gcieejh5']"));

                //driver.SwitchTo().Frame(iframe);

                IList<IWebElement> elements = driver.FindElements(By.XPath("//div[@class='l9j0dhe7']"));//l9j0dhe7
                IList<IWebElement> elementsTests = driver.FindElements(By.XPath("//div[@class='kvgmc6g5']"));//l9j0dhe7

                backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " scraping des recherches facebook : " + elementsTests.Count());

                string tmp = "";
                foreach (IWebElement ell in elementsTests)
                {
                    tmp += ell.Text + "\n";
                }

                using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\PARAMETERS\\Recherches.txt", false))
                {
                    backgroundWorker1.ReportProgress(-99999, DateTime.Now.ToString("HH:mm:ss") + " écriture du fichier " +  "\\PARAMETERS\\Recherches.txt");

                    file.Write(tmp);
                }
            }
            catch
            {

            }


            //innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
            //innerHeightt = (long)innerHeight;
            //scroll = (long)innerHeight;
            //scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

            //scrollHeight = scrollHeight + scroll;
            //hauteur = 450;

            //try
            //{
            //    Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");
            //    i = 1;
            //    while (scrollHeight >= innerHeightt)
            //    {
            //        //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight);");
            //        //Thread.Sleep(1000);

            //        imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
            //        imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

            //        //Save the screenshot
            //        imageScreenshott.SaveAsFile(pathToSave + @"\PARAMETERS\Recherches" + "_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
            //        Thread.Sleep(100);


            //        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
            //        if ((scrollHeight - innerHeightt) < 200)
            //        {
            //            Thread.Sleep(5000);
            //        }
            //        else
            //            Thread.Sleep(2500);


            //        scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
            //        Thread.Sleep(2000);


            //        if (scrollHeight <= innerHeightt)
            //        {
            //            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
            //            Thread.Sleep(2000);
            //            scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

            //        }

            //        scrollHeight = scrollHeight + scroll;
            //        innerHeightt = innerHeightt + hauteur;
            //        i++;
            //    }
            //}
            //catch
            //{
            //    //e.printStackTrace();
            //}

            //try
            //{
            //    iframe = driver.FindElement(By.XPath("//iframe[@class='k4urcfbm jgljxmt5 a8c37x1j izx4hr6d humdl8nn bn081pho gcieejh5']"));

            //    driver.SwitchTo().Frame(iframe);

            //    element = driver.FindElement(By.Id("fbTimelineLogBody"));

            //    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\PARAMETERS\\Recherches.txt", false))
            //    {

            //        file.Write(element.Text.Replace("Modifier", ""));
            //    }
            //}
            //catch
            //{

            //}
            //https://www.facebook.com/hohofeduj/allactivity?category_key=search&privacy_source=access_hub&entry_point=ayi_hub

            backgroundWorker1.ReportProgress(-103);
            Thread.Sleep(2000);

            backgroundWorker1.CancelAsync();
        }

        private void buttonImport_Click(object sender, EventArgs e)
        {
            string currentDir = "";
            using (OpenFileDialog ofd = new OpenFileDialog() { ValidateNames = true, Multiselect = false, Filter = "fbv|*.fbv" })
            {
                if (ofd.ShowDialog() == DialogResult.OK)
                {
                    currentDir = ofd.FileName.Substring(0, ofd.FileName.LastIndexOf("\\")) + "\\";
                    pathToSave = currentDir;

                    string sauvegarde = File.ReadAllText(ofd.FileName);

                    string[] ecase = sauvegarde.Substring(sauvegarde.IndexOf("<Case>\n") + 7, (sauvegarde.IndexOf("</Case>\n") - (sauvegarde.IndexOf("<Case>\n") + 7))).Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries)[0].Split(';');
                    //string[] datagridviewmessenger = sauvegarde.Substring(sauvegarde.IndexOf("<DataGridViewMessenger>\n") + 24).Split(new string[] { "</DataGridViewMessenger>\n" }, StringSplitOptions.RemoveEmptyEntries);
                    string[] datagridviewmessenger = sauvegarde.Substring(sauvegarde.IndexOf("<DataGridViewMessenger>\n") + 24, (sauvegarde.IndexOf("</DataGridViewMessenger>\n") - (sauvegarde.IndexOf("<DataGridViewMessenger>\n") + 24))).Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);
                    string[] datagridviewFriends = sauvegarde.Substring(sauvegarde.IndexOf("<DataGridViewFriends>\n") + 21, (sauvegarde.IndexOf("</DataGridViewFriends>\n") - (sauvegarde.IndexOf("<DataGridViewFriends>\n") + 21))).Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);
                    string[] pictureProfile = sauvegarde.Substring(sauvegarde.IndexOf("<PictureProfile>\n") + 17, (sauvegarde.IndexOf("</PictureProfile>\n") - (sauvegarde.IndexOf("<PictureProfile>\n") + 17))).Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);

                    textBoxUSERNAMEFRIENDS.Text = ecase[0];
                    textBoxUSERNAME.Text = ecase[1];
                    textBoxPASSWORD.Text = ecase[2];
                    textBoxops.Text = ecase[3];
                    labelID.Text = ecase[5];

                    if (labelID.Text != "")
                        labelID.Visible = true;

                    if (pictureProfile[0] != "label3")
                    {
                        try
                        {
                            oval.Image = Image.FromFile(pictureProfile[0].Replace(".\\", currentDir)) ;
                            oval.BringToFront();
                            oval.Refresh();
                        }
                        catch (Exception ex)
                        {

                        }

                    }

                    dataGridViewMessenger.Rows.Clear();
                    foreach (string li in datagridviewmessenger)
                    {
                        string[] champ = li.Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);

                        foreach (string lii in champ)
                        {
                            string[] champp = lii.Split(new string[] { ";" }, StringSplitOptions.RemoveEmptyEntries);
                            Image img = Image.FromFile(champp[0].Replace(".\\",currentDir));
                            //dataGridViewMessenger.Rows.Add(img, champp[1], champp[2], Boolean.Parse(champp[3].ToString()), champp[4].Replace(".\\", currentDir), champp[5]);
                        }

                    }

                    dataGridView2.Rows.Clear();
                    foreach (string li in datagridviewFriends)
                    {
                        string[] champ = li.Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);

                        foreach (string lii in champ)
                        {
                            string[] champp = lii.Split(new string[] { ";" }, StringSplitOptions.RemoveEmptyEntries);

                            if(champp[0] == "anonymous")
                            {
                                Image img = global::FacebookAnalyzer.Properties.Resources.anonymous;
                                dataGridView2.Rows.Add(img, champp[1], champp[2], champp[3]);
                            }
                            else
                            {
                                Image img = Image.FromFile(champp[0].Replace(".\\", currentDir));
                                dataGridView2.Rows.Add(img, champp[1], champp[2], champp[3]);
                            }
                            
                        }

                    }



                    FillIdentifiantsImport(currentDir);
                    FillParametersImport(currentDir);
                    FillJournalViewImport(currentDir);
                    FillPicturesViewImport(currentDir);

                }

                
            }
        }

        private void dataGridView2_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            Process.Start(dataGridView2.Rows[e.RowIndex].Cells[1].Value.ToString());
        }

        private void dataGridViewPictures_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            if (dataGridViewMessenger.Rows.Count > 0 && dataGridViewMessenger.SelectedRows.Count > 0 && dataGridViewPictures.Rows.Count > 0)
            {

                string test = dataGridViewMessenger.SelectedRows[0].Cells[4].Value.ToString();//C:\Users\frank\Documents\Facebook_Friends\Messenger\Stephane Hendrycks
                Dictionary<string, string> videos = new Dictionary<string, string>();

                //string test = @"C:\Users\frank\Documents\Facebook_Friends\Messenger\Stephane Hendrycks";
                if (File.Exists(test + "\\Messenger_Videos_With_Screenshots.txt"))
                {
                    string[] lignes = File.ReadAllLines(test + "\\Messenger_Videos_With_Screenshots.txt");

                    
                        foreach (string li in lignes)
                        {
                            if (li == "")
                                continue;

                            string numeroLigne = (li.Split(';')[1]).Substring(li.Split(';')[1].LastIndexOf("_") + 1).Split(new string[] { ".jpg" }, StringSplitOptions.RemoveEmptyEntries)[0];

                        if(numeroLigne == (e.RowIndex + 1).ToString())
                        {
                            string fichier = li.Split(';')[0];
                            string nomFichier = fichier.Substring(fichier.LastIndexOf('/') + 1).Split('?')[0];

                            if(Directory.Exists(dataGridViewMessenger.SelectedRows[0].Cells[4].Value.ToString() + "\\Videos\\"))
                            {
                                string repertoire = dataGridViewMessenger.SelectedRows[0].Cells[4].Value.ToString() + "\\Videos\\";

                                if(File.Exists(dataGridViewMessenger.SelectedRows[0].Cells[4].Value.ToString() + "\\Videos\\" + nomFichier))
                                {
                                    string fichierr = dataGridViewMessenger.SelectedRows[0].Cells[4].Value.ToString() + "\\Videos\\" + nomFichier;

                                    if (!videos.ContainsKey(fichierr))
                                        videos.Add(fichierr, fichierr);

                                    //Process.Start(dataGridViewMessenger.SelectedRows[0].Cells[4].Value.ToString() + "\\Videos\\" + nomFichier);
                                }
                            }
                            
                        }
                           


                        }

                        if(videos.Count() > 1)
                        {
                        Form videoss = new FormVideos();
                        

                        //FlowLayoutPanel panel = new FlowLayoutPanel();
                        //panel.FlowDirection = FlowDirection.LeftToRight;
                        //panel.AutoScroll = true;
                        //panel.Dock = DockStyle.Fill;

                        int i = 0;
                        foreach (string fichier in videos.Values)
                        {
                            //PictureBox box = new PictureBox();
                            //box.Size = new Size(400, 400);
                            //box.BorderStyle = BorderStyle.FixedSingle;
                            //box.SizeMode = System.Windows.Forms.PictureBoxSizeMode.Zoom;
                            //box.Image = global::FacebookAnalyzer.Properties.Resources.target2;

                            //panel.Controls.Add(box)
                            using (Process myProcess = new Process())
                            {
                               // myProcess.StartInfo.UseShellExecute = false;
                                // You can start any process, HelloWorld is a do-nothing example.
                                myProcess.StartInfo.FileName = videos.ElementAt(i).Value;
                                //myProcess.StartInfo.CreateNoWindow = true;
                                myProcess.Start();
                                // This code assumes the process you are starting will terminate itself.
                                // Given that is is started without a window so you cannot terminate it
                                // on the desktop, it must terminate itself or you can do it programmatically
                                // from this application using the Kill method.
                            }

                            //Process.Start(videos.ElementAt(i).Value);
                            //Thread.Sleep(2000);

                            i++;

                        }

                        //videoss.Controls.Add(panel);
                        //videoss.Show();

                        

                        }
                        else
                        if(videos.Count == 1)
                        {
                            Process.Start(videos.ElementAt(0).Value);
                        }

                       

                    

                    
                }
            }
        }

        private void linkLabel1_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
        {
            dataGridViewPictures.ClearSelection();
            dataGridViewPictures.FirstDisplayedScrollingRowIndex = Int32.Parse(((LinkLabel)sender).Text);
            dataGridViewPictures.Focus();

            ((LinkLabel)sender).ForeColor = Color.Red;
        }

        //private void dataGridViewPictures_Scroll(object sender, ScrollEventArgs e)
        //{
        //    if (videos.Count > 0)
        //    {
        //        if (videos.ContainsKey((dataGridViewPictures.FirstDisplayedScrollingRowIndex + 1).ToString()))
        //        {
        //            pictureBox7.Visible = true;
        //            panel7.Visible = true;

        //        }

        //        else
        //        {
        //            pictureBox7.Visible = false;
        //            panel7.Visible = false;
        //        }

        //    }
        //}

        private void backgroundWorker2_DoWork(object sender, DoWorkEventArgs e)
        {
                      
            
            try
            {
                if (checkBoxNewLook.Checked)
                {
                    GetContactsMessengerForNewLook();
                }
                else
                    GetContactsMessenger();
            }
            catch(Exception ex)
            {
                if (backgroundWorkerMessenger.IsBusy)
                    backgroundWorkerMessenger.CancelAsync();
            }
           
        }

        private void backgroundWorker2_ProgressChanged(object sender, ProgressChangedEventArgs e)
        {
            if (e.ProgressPercentage == -1)
            {
                progressBarContactMessenger.Visible = true;
                progressBarContactMessenger.Maximum = Convert.ToInt32(e.UserState);
            }
                
            else
                 if (e.ProgressPercentage > 0)
                try
                {
                    progressBarContactMessenger.Value = e.ProgressPercentage;
                    
                }
                catch
                {

                }

            if (e.ProgressPercentage == -2)
            {
                string id = ((string)e.UserState);
                if (id != "")
                {
                    labelID.Text = id;
                    labelID.Visible = true;
                    int pos = (panel23.Width - labelID.Size.Width) / 2;
                    labelID.Visible = true;
                    labelID.Location = new Point(pos, labelID.Location.Y);
                    labelID.Refresh();
                }

            }
            if (e.ProgressPercentage == -5)
            {
                string path = ((string)e.UserState);
                oval.SizeMode = PictureBoxSizeMode.StretchImage;

                // Sets up an image object to be displayed.
                if (MyImage != null)
                {
                    MyImage.Dispose();
                }

                MyImage = new Bitmap(path);
                //pictureBox1.ClientSize = new Size(xSize, ySize);
                oval.Image = (Image)MyImage;
                oval.BringToFront();
                oval.Refresh();
                labelpathPictureProfile.Text = path;
                Thread.Sleep(2000);
            }

            if (e.ProgressPercentage == -6)
            {
                ForGrid forGrid = ((ForGrid)e.UserState);
                Image image = Image.FromFile(forGrid.PathToPicture);
                FillDataGridViewMessenger(image, forGrid.Username, forGrid.Url, forGrid.PathToFolder);
            }
        }

        private void backgroundWorker2_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)
        {
            
            pictureBoxwaiting.Visible = false;
            pictureBoxlogofacebook.Visible = false;
            progressBarContactMessenger.Visible = false;

            if (backgroundWorkerMessenger.IsBusy)
                backgroundWorkerMessenger.CancelAsync();

            //StopProcess();
        }

        private void backgroundWorkerGetMessenger_DoWork(object sender, DoWorkEventArgs e)
        {
            try
            {
                DateTime datum = new DateTime(1900,1,1);
                //pictureBoxlogofacebook.Visible = true;
                //pictureBoxwaiting.Visible = true;
                //pictureBoxwaiting.Refresh();
                //pictureBoxlogofacebook.Visible = true;
                //pictureBoxlogofacebook.BringToFront();
                //pictureBoxwaiting.Refresh();
                //pictureBoxlogofacebook.Refresh();


                //MessengerFromDate(((Dictionary<string, string>)e.Argument),"");
                if (checkBox7.Checked)
                    datum = dateTimePicker3.Value;

                if (checkBoxNewLook.Checked)
                    MessengerFASTForNewLook(((Dictionary<string, string>)e.Argument), datum);
                else
                    MessengerFAST(((Dictionary<string, string>)e.Argument), datum);
                //MessengerForTesting(((Dictionary<string, string>)e.Argument), datum);
            }
            catch (Exception ex)
            {
                if (backgroundWorkerGetMessenger.IsBusy)
                    backgroundWorkerGetMessenger.CancelAsync();
            }

        }

        private void backgroundWorkerGetMessenger_ProgressChanged(object sender, ProgressChangedEventArgs e)
        {
            if(e.ProgressPercentage == -7)
            {
                ForGrid forGrid = ((ForGrid)e.UserState);
                
                FillDataGridViewMessenger(forGrid.PathToFolder, forGrid.Url);
            }

            if(e.ProgressPercentage == -666)
            {

                string link = ((string)e.UserState);
                foreach (DataGridViewRow row in dataGridViewMessenger.Rows)
                {
                    if (row.Cells[2].Value.ToString() == link)
                    {
                        
                        row.DefaultCellStyle.BackColor = Color.Crimson;
                        row.DefaultCellStyle.ForeColor = Color.White;

                        dataGridViewMessenger.ClearSelection();
                        //dataGridViewPictures.Rows[rowIndex].Selected = true;
                        dataGridViewMessenger.FirstDisplayedScrollingRowIndex = row.Index;


                        dataGridViewMessenger.Focus();

                        break;
                    }
                }

                dataGridViewMessenger.Refresh();                

            }

            if (e.ProgressPercentage == -2)
            {
                string id = ((string)e.UserState);
                if (id != "")
                {
                    labelID.Text = id;
                    labelID.Visible = true;
                    int pos = (panel23.Width - labelID.Size.Width) / 2;
                    labelID.Visible = true;
                    labelID.Location = new Point(pos, labelID.Location.Y);
                    labelID.Refresh();
                   
                }

            }
            if (e.ProgressPercentage == -5)
            {
                string path = ((string)e.UserState);
                oval.SizeMode = PictureBoxSizeMode.StretchImage;

                // Sets up an image object to be displayed.
                if (MyImage != null)
                {
                    MyImage.Dispose();
                }

                MyImage = new Bitmap(path);
                //pictureBox1.ClientSize = new Size(xSize, ySize);
                oval.Image = (Image)MyImage;
                oval.Refresh();
                labelpathPictureProfile.Text = path;
                Thread.Sleep(2000);
            }
            //Messenger

            if (e.ProgressPercentage == -105)
            {
                int nbreMessengerDownloaded = 0;
                foreach (DataGridViewRow row in dataGridViewMessenger.Rows)
                {

                    if (Directory.Exists(row.Cells[4].Value.ToString()) && Directory.GetFiles(row.Cells[4].Value.ToString()).Count() > 0)
                        nbreMessengerDownloaded++;
                }

                labelMessenger.Text = "MESSENGER :" + nbreMessengerDownloaded;
            }
        }

        private void backgroundWorkerGetMessenger_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)
        {
            if (backgroundWorkerGetMessenger.IsBusy)
                backgroundWorkerGetMessenger.CancelAsync();

            //StopProcess();

            
            pictureBoxwaiting.Visible = false;
            pictureBoxlogofacebook.Visible = false;
        }

        private void backgroundWorkerFriends_DoWork(object sender, DoWorkEventArgs e)
        {
            

            
        }

        private void backgroundWorkerFriends_ProgressChanged(object sender, ProgressChangedEventArgs e)
        {
            string fichier = "";

            if (e.ProgressPercentage == -1)
                progressBarfriends.Maximum = Convert.ToInt32(e.UserState);
            else
                if(e.ProgressPercentage > 0)
                try
                {
                    progressBarfriends.Value = e.ProgressPercentage;
                }
                catch
                {

                }

            if(e.ProgressPercentage == -2)
            {
                string id = ((string)e.UserState);
                if(id != "")
                {
                    labelID.Text = id;
                    labelID.Visible = true;
                    labelID.Refresh();
                }
                
            }
            if (e.ProgressPercentage == -5)
            {
                string path = ((string)e.UserState);
                oval.SizeMode = PictureBoxSizeMode.StretchImage;

                // Sets up an image object to be displayed.
                if (MyImage != null)
                {
                    MyImage.Dispose();
                }

                MyImage = new Bitmap(path);
                //pictureBox1.ClientSize = new Size(xSize, ySize);
                oval.Image = (Image)MyImage;
                oval.Refresh();
                labelpathPictureProfile.Text = path;
                Thread.Sleep(2000);
            }

            if (e.ProgressPercentage == -6)
            {
                ForGrid forG = ((ForGrid)e.UserState);
                Bitmap imgg = FacebookAnalyzer.Properties.Resources.anonymous;
                dataGridView2.Rows.Add(imgg, forG.Url, forG.Label, forG.Id, "");

                if (dataGridView2.Rows.Count != 0)
                {

                    
                    string targetName = textBoxops.Text;

                    if(File.Exists(pathToSave + "\\PicturesProfiles\\" + forG.Label + "_" + forG.Id + ".jpg"))
                    {
                        Image img = Image.FromFile(pathToSave + "\\PicturesProfiles\\" + forG.Label + "_" + forG.Id + ".jpg");
                        dataGridView2.Rows[dataGridView2.Rows.Count -1].Cells[0].Value = img;
                        dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[4].Value = pathToSave + "\\PicturesProfiles\\" + forG.Label + "_" + forG.Id + ".jpg";
                        fichier += dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[1].Value.ToString() + ";" + dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[2].Value.ToString() + ";" + dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[3].Value.ToString() + "\r\n";  
                    }
                    else
                    {
                        Image img = FacebookAnalyzer.Properties.Resources.anonymous;
                        dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[0].Value = img;
                        dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[4].Value = "anonymous";
                        fichier += dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[1].Value.ToString() + ";" + dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[2].Value.ToString() + ";" + dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[3].Value.ToString() + "\r\n";


                    }

                    //foreach (DataGridViewRow row in dataGridView2.Rows)
                    //{
                    //    string idd = row.Cells[3].Value.ToString();
                    //    string iddd = "";

                    //    foreach (string fich in Directory.GetFiles(pathToSave + "\\PicturesProfiles\\", "*.jpg"))
                    //    {
                    //        string tmp = fich.Substring(fich.LastIndexOf("_") + 1).Split('.')[0];
                    //        if (tmp == row.Cells[3].Value.ToString())
                    //        {
                    //            iddd = fich;
                    //            break;
                    //        }
                    //    }

                    //    if (iddd == "")
                    //    {
                    //        imgg = FacebookAnalyzer.Properties.Resources.anonymous;
                    //        row.Cells[0].Value = imgg;//pathToSave + "\\PicturesProfiles\\Anonymous";
                    //        row.Cells[4].Value = "anonymous";
                    //    }
                    //    else
                    //    {
                    //        Image img = Image.FromFile(iddd);
                    //        row.Cells[0].Value = img;
                    //        row.Cells[4].Value = iddd;
                    //    }


                    //    fichier += row.Cells[1].Value.ToString() + ";" + row.Cells[2].Value.ToString() + ";" + row.Cells[3].Value.ToString() + "\r\n";
                    //}

                    if (!Directory.Exists(pathToSave + "\\TXT"))
                        Directory.CreateDirectory(pathToSave + "\\TXT");

                    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\TXT\\friends.txt", true))
                    {
                        //if (File.Exists(saveFileDialog1.FileName))
                        //    File.Delete(saveFileDialog1.FileName);

                        file.Write(fichier);
                    }


                }

            }  

            if(e.ProgressPercentage == -7)
            {

                try
                {

                    
                    Bitmap imgg = FacebookAnalyzer.Properties.Resources.anonymous;
                    ForGrid forG = ((ForGrid)e.UserState);

                    dataGridView2.Rows.Add(imgg, forG.Url, forG.Label, forG.Id);

                    if (dataGridView2.Rows.Count != 0)
                    {


                        string targetName = textBoxops.Text;

                        if (File.Exists(pathToSave + "\\PicturesProfiles\\" + forG.Label + "_" + forG.Id + ".jpg"))
                        {
                            Image img = Image.FromFile(pathToSave + "\\PicturesProfiles\\" + forG.Label + "_" + forG.Id + ".jpg");
                            dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[0].Value = img;
                            dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[4].Value = pathToSave + "\\PicturesProfiles\\" + forG.Label + "_" + forG.Id + ".jpg";
                            fichier += dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[1].Value.ToString() + ";" + dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[2].Value.ToString() + ";" + dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[3].Value.ToString() + "\r\n";
                        }
                        else
                        {
                            Image img = FacebookAnalyzer.Properties.Resources.anonymous;
                            dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[0].Value = img;
                            dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[4].Value = "anonymous";
                            fichier += dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[1].Value.ToString() + ";" + dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[2].Value.ToString() + ";" + dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[3].Value.ToString() + "\r\n";


                        }
                    }
                }

                catch (Exception ex)//si trop d'image de profile, pas d'image
                {
                    string targetName = textBoxops.Text;

                    dataGridView2.Rows.Clear();
                    ForGrid forG = ((ForGrid)e.UserState);

                    dataGridView2.Rows.Add(null, forG.Url, forG.Label, forG.Id);

                    dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[0].Value = null;
                    dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[4].Value = pathToSave + "\\PicturesProfiles\\" + forG.Label + "_" + forG.Id + ".jpg";
                    fichier += dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[1].Value.ToString() + ";" + dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[2].Value.ToString() + ";" + dataGridView2.Rows[dataGridView2.Rows.Count - 1].Cells[3].Value.ToString() + "\r\n";



                }
                finally
                {
                    string targetName = textBoxops.Text;
                    if (!Directory.Exists(pathToSave + "\\TXT"))
                        Directory.CreateDirectory(pathToSave + "\\TXT");

                    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\TXT\\friends.txt", true))
                    {
                        file.Write(fichier);
                    }
                }
                    


                
            }
        }

        private void backgroundWorkerFriends_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)
        {
            if (!backgroundWorkerFriends.IsBusy)
                backgroundWorkerFriends.CancelAsync();

                
                
                pictureBoxlogofacebook.Visible = false;
                pictureBoxwaiting.Visible = false;
                progressBarfriends.Value = 0;
                progressBarfriends.Maximum = 0;
                progressBarfriends.Visible = false;
                pictureBoxfriends.Visible = true;
                labelAMIS.Visible = true;
                labelAMIS.Text = "AMIS : " + dataGridView2.Rows.Count;

            //StopProcess();
        }

        private void backgroundWorkerJournal_DoWork(object sender, DoWorkEventArgs e)
        {
           
                
        }

        private void backgroundWorkerJournal_ProgressChanged(object sender, ProgressChangedEventArgs e)
        {
            if (e.ProgressPercentage == -2)
            {
                string id = ((string)e.UserState);
                if (id != "")
                {
                    labelID.Text = id;
                    labelID.Visible = true;
                    labelID.Refresh();
                }

            }
            if (e.ProgressPercentage == -5)
            {
                string path = ((string)e.UserState);
                pictureBoxtango.SizeMode = PictureBoxSizeMode.StretchImage;

                // Sets up an image object to be displayed.
                if (MyImage != null)
                {
                    MyImage.Dispose();
                }

                MyImage = new Bitmap(path);
                //pictureBox1.ClientSize = new Size(xSize, ySize);
                pictureBoxtango.Image = (Image)MyImage;
                pictureBoxtango.Refresh();
                labelpathPictureProfile.Text = path;
                Thread.Sleep(2000);
            }
        }

        private void backgroundWorkerJournal_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)
        {
            if (!backgroundWorkerJournal.IsBusy)
                backgroundWorkerJournal.CancelAsync();

            
            pictureBoxwaiting.Visible = false;
            pictureBoxlogofacebook.Visible = false;
            pictureBoxJournal.Visible = true;
            labelJournal.Visible = true;
            labelJournal.Text = "JOURNAL : " + Directory.GetFiles(pathToSave + @"\FacebookAnalyzer\" + textBoxops.Text.ToUpper() + @"\HOMEPAGE\",".png").Count();
        }

        private void backgroundWorkerPictures_DoWork(object sender, DoWorkEventArgs e)
        {
            FindAllPicturesFromFacebook(textBoxUSERNAMEFRIENDS.Text);
        }

        private void backgroundWorkerPictures_ProgressChanged(object sender, ProgressChangedEventArgs e)
        {
            if(e.ProgressPercentage == -1)
            {
                if (MyImage != null)
                {
                    MyImage.Dispose();
                }

                string path = (string)e.UserState;
                pictureBoxtango.SizeMode = PictureBoxSizeMode.StretchImage;
                MyImage = new Bitmap(Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments) + path);
                //pictureBox1.ClientSize = new Size(xSize, ySize);
                pictureBoxtango.Image = (Image)MyImage;
                pictureBoxtango.Refresh();
            }
            if (e.ProgressPercentage == -6)
            {
                string id = ((string)e.UserState);
                if (id != "")
                {
                    labelID.Text = id;
                    labelID.Visible = true;
                    labelID.Refresh();
                }

            }
            if (e.ProgressPercentage == -2)
            {
                pictureBoxpictures.Image = global::FacebookAnalyzer.Properties.Resources.ko;
            }

            if (progressBarpictures.Visible && allimages)
            {
                if (e.ProgressPercentage == -3)
                    progressBarpictures.Maximum = Convert.ToInt32(e.UserState);
                else
                    if(e.ProgressPercentage > 0)
                    try
                    {
                        progressBarpictures.Value = e.ProgressPercentage;
                    }
                    catch
                    {

                    }
                

            }
        }

        private void backgroundWorkerPictures_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)
        {
            
            pictureBoxwaiting.Visible = false;
            pictureBoxlogofacebook.Visible = false;
            progressBarpictures.Value = 0;
            progressBarpictures.Maximum = 0;
            progressBarpictures.Visible = false;
            pictureBoxpictures.Visible = true;
            labelIMAGES.Visible = true;
            labelIMAGES.Text = "IMAGES : " + Directory.GetFiles(pathToSave + @"\FacebookAnalyzer\" + textBoxops.Text.ToUpper() + @"\PICTURES\", ".png").Count();
          
        }

        private void backgroundWorkerComments_DoWork(object sender, DoWorkEventArgs e)
        {
            GetAllComments(0, 0);
        }

        private void backgroundWorkerComments_ProgressChanged(object sender, ProgressChangedEventArgs e)
        {
            if (progressBarcomments.Visible && comments)
            {
                if (e.ProgressPercentage == -1)
                    progressBarcomments.Maximum = Convert.ToInt32(e.UserState);
                else
                    try
                    {
                        progressBarcomments.Value = e.ProgressPercentage;
                    }
                    catch
                    {

                    }

                if (e.ProgressPercentage == -3)
                {
                    progressBarcomments.Visible = false;
                    pictureBoxcomments.Visible = true;


                }

            }
        }

        private void backgroundWorkerComments_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)
        {
            
            pictureBoxwaiting.Visible = false;
            pictureBoxlogofacebook.Visible = false;
        }

        private void pictureBoxtango_Validated(object sender, EventArgs e)
        {
            if(oval.Image != global::FacebookAnalyzer.Properties.Resources.target2)
            {
                profilIsSet = true;
            }
        }

        private void pictureBoxtango_Validating(object sender, CancelEventArgs e)
        {
            if (oval.Image != global::FacebookAnalyzer.Properties.Resources.target2)
            {
                return;
            }
        }

        private void pictureBoxtango_BackgroundImageChanged(object sender, EventArgs e)
        {
            if (pictureBoxtango.Image != global::FacebookAnalyzer.Properties.Resources.target2)
            {
                return;
            }
        }

        private void button4_Click_3(object sender, EventArgs e)
        {
            textBoxops.Text = "";
            textBoxUSERNAME.Text = "";
            textBoxPASSWORD.Text = "";
            textBoxUSERNAMEFRIENDS.Text = "";
            profilIsSet = false;
            oval.Image = global::FacebookAnalyzer.Properties.Resources.target2;
            labelID.Text = "";
            pictureBoxfriends.Visible = false;
            pictureBoxJournal.Visible = false;
            pictureBoxcomments.Visible = false;
            pictureBoxpictures.Visible = false;

            foreach(Control c in panelchoices.Controls)
            {
                if (c.GetType() == typeof(RadioButton))
                    ((RadioButton)c).Checked = false;
                    
            }
        }

        private void backgroundWorkerParameters_DoWork(object sender, DoWorkEventArgs e)
        {
            try
            {

                GetParameters();
            }
            catch (Exception ex)
            {
                if (backgroundWorkerParameters.IsBusy)
                    backgroundWorkerParameters.CancelAsync();
            }
        }

        private void backgroundWorkerParameters_ProgressChanged(object sender, ProgressChangedEventArgs e)
        {
            if (e.ProgressPercentage == -2)
            {
                string id = ((string)e.UserState);
                if (id != "")
                {
                    labelID.Text = id;
                    labelID.Visible = true;
                    labelID.Refresh();
                }

            }
            if (e.ProgressPercentage == -5)
            {
                string path = ((string)e.UserState);
                pictureBoxtango.SizeMode = PictureBoxSizeMode.StretchImage;

                // Sets up an image object to be displayed.
                if (MyImage != null)
                {
                    MyImage.Dispose();
                }

                MyImage = new Bitmap(path);
                //pictureBox1.ClientSize = new Size(xSize, ySize);
                pictureBoxtango.Image = (Image)MyImage;
                pictureBoxtango.Refresh();
                labelpathPictureProfile.Text = path;
                Thread.Sleep(2000);
            }
        }

        private void backgroundWorkerParameters_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)
        {
            if (!backgroundWorkerFriends.IsBusy)
                backgroundWorkerParameters.CancelAsync();


            
            pictureBoxlogofacebook.Visible = false;
            pictureBoxwaiting.Visible = false;
            
            pictureBoxParam.Visible = true;
            labelParam.Visible = true;
            labelParam.Text = "PARAMETRES : " + Directory.GetFiles(pathToSave + @"\FacebookAnalyzer\" + textBoxops.Text.ToUpper() + @"\PARAMETERS\", ".txt").Count();
        }

        private void buttonanalyze_DragEnter(object sender, DragEventArgs e)
        {

        }
        
        private bool StartRecord(string path)
        {
            //    throw new NotImplementedException();
            //mciSendString("record recsound", null, 0, IntPtr.Zero);
            //button2.Click += new EventHandler(this.button2_Click);

            // Define the output wav file of the recorded audio
            string outputFilePath = path;
            bool ok = false;

            // Redefine the capturer instance with a new instance of the LoopbackCapture class
            this.CaptureInstance = new WasapiLoopbackCapture();

            // Redefine the audio writer instance with the given configuration
            this.RecordedAudioWriter = new WaveFileWriter(outputFilePath, CaptureInstance.WaveFormat);

            // When the capturer receives audio, start writing the buffer into the mentioned file
            this.CaptureInstance.DataAvailable += (s, a) =>
            {
                this.RecordedAudioWriter.Write(a.Buffer, 0, a.BytesRecorded);
            };

            //When the Capturer Stops
            this.CaptureInstance.RecordingStopped += (s, a) =>
            {
                this.RecordedAudioWriter.Dispose();
                this.RecordedAudioWriter = null;
                CaptureInstance.Dispose();
                ok = true;
            };



            // Start recording !
            this.CaptureInstance.StartRecording();
            return ok;

        }

        private void StopRecording()
        {
            this.CaptureInstance.StopRecording();
        }

        private void pictureBoxtango_Paint(object sender, PaintEventArgs e)
        {
            panel22.SendToBack();
        }

        private void AddFolder(string path)
        {

            this.flowLayoutImagesActives.Controls.Clear();
            m_Controller.AddFolder(path);


        }
        private void FillPicturesView()
        {
            if (!Directory.Exists(pathToSave + "\\PICTURES"))
                return;

            dataGridViewForPictures.Sort(this.dataGridViewForPictures.Columns["dataGridViewTextBoxColumn23"], ListSortDirection.Ascending);
            AddFolder(pathToSave + "\\PICTURES");


            if (File.Exists(pathToSave + "\\TXT\\friendsFromComments.txt"))
            {
                string[] lines = File.ReadAllLines(pathToSave + "\\TXT\\friendsFromComments.txt");

                string ID = "";
                string URL = "";
                string user = "";

                foreach (string l in lines)
                {
                    string[] parameters = l.Split(';');

                    if (parameters[0].Contains("profile.php?"))
                        URL = parameters[0].Split('&')[0];
                    else
                        URL = parameters[0].Split('?')[0];

                    user = parameters[1];
                    ID = parameters[2].Replace(";", "");

                    dataGridViewForPictures.Rows.Add(URL, user, ID);

                }
            }



            
        }
        //private void FillPicturesView()
        //{
        //    if (!Directory.Exists(pathToSave + @"\PICTURES\"))
        //        return;

        //    dataGridViewForPictures.Sort(this.dataGridViewForPictures.Columns["dataGridViewTextBoxColumn23"], ListSortDirection.Ascending);

        //    var sorted = Directory.GetFiles(pathToSave  + @"\PICTURES\", "*.jpg").Select(fn => new FileInfo(fn)).OrderBy(f => f.Name);
        //    fichiersImages = sorted.ToArray();

        //    foreach (FileInfo fichier in fichiersImages)
        //    {


        //        Image img = (Image)(new Bitmap(Image.FromFile(fichier.FullName)));
        //        PictureBox box = new PictureBox();
        //        box.Size = new Size(100, 100);
        //        box.Image = img;
        //        box.Cursor = Cursors.Hand;
        //        box.Name = fichier.Name;
        //        box.SizeMode = System.Windows.Forms.PictureBoxSizeMode.Zoom;
        //        box.DoubleClick += new EventHandler(this.pictureBoxPicture_Doubleclick);
        //        box.ContextMenuStrip = contextMenuStrip4;

        //        flowLayoutPictures.Controls.Add(box);
        //    }

        //    if (File.Exists(pathToSave  + @"\TXT\\friendsFromComments.txt"))
        //    {
        //        string[] lines = File.ReadAllLines(pathToSave  + @"\TXT\\friendsFromComments.txt");

        //        string ID = "";
        //        string URL = "";
        //        string user = "";

        //        foreach (string l in lines)
        //        {
        //            string[] parameters = l.Split(';');

        //            if (parameters[0].Contains("profile.php?"))
        //                URL = parameters[0].Split('&')[0];
        //            else
        //                URL = parameters[0].Split('?')[0];

        //            user = parameters[1];
        //            ID = parameters[2].Replace(";", "");

        //            dataGridViewForPictures.Rows.Add(URL, user, ID);

        //        }
        //    }
        //}
        private void FillPicturesViewImport(string pathToSave)
        {
            if (!Directory.Exists(pathToSave + @"\PICTURES\"))
                return;

            dataGridViewForPictures.Sort(this.dataGridViewForPictures.Columns["dataGridViewTextBoxColumn23"], ListSortDirection.Ascending);

            var sorted = Directory.GetFiles(pathToSave + @"\PICTURES\", "*.jpg").Select(fn => new FileInfo(fn)).OrderBy(f => f.Name);
            fichiersImages = sorted.ToArray();

            if(fichiersImages.Count() > 0)
            {
                foreach (FileInfo fichier in fichiersImages)
                {


                    Image img = (Image)(new Bitmap(Image.FromFile(fichier.FullName)));
                    PictureBox box = new PictureBox();
                    box.Size = new Size(100, 100);
                    box.Image = img;
                    box.Cursor = Cursors.Hand;
                    box.Name = fichier.Name;
                    box.SizeMode = System.Windows.Forms.PictureBoxSizeMode.Zoom;
                    box.DoubleClick += new EventHandler(this.pictureBoxPicture_Doubleclick);
                    box.ContextMenuStrip = contextMenuStrip4;

                    flowLayoutPictures.Controls.Add(box);
                }

                pictureBoxpictures.Visible = true;
            }
            

            if (File.Exists(pathToSave +  @"\TXT\\friendsFromComments.txt"))
            {
                string[] lines = File.ReadAllLines(pathToSave + @"\TXT\\friendsFromComments.txt");

                string ID = "";
                string URL = "";
                string user = "";

                foreach (string l in lines)
                {
                    string[] parameters = l.Split(';');

                    if (parameters[0].Contains("profile.php?"))
                        URL = parameters[0].Split('&')[0];
                    else
                        URL = parameters[0].Split('?')[0];

                    user = parameters[1];
                    ID = parameters[2].Replace(";", "");

                    dataGridViewForPictures.Rows.Add(URL, user, ID);

                }
            }
        }

        private void pictureBoxPicture_Doubleclick(object sender, EventArgs e)
        {
            Process.Start(pathToSave + @"\PICTURES\" + ((PictureBox)sender).Name);
        }

        private void contextMenuStrip1_ItemClicked(object sender, ToolStripItemClickedEventArgs e)
        {
            ContextMenuStrip menu = sender as ContextMenuStrip;
            Control sourceControl = menu.SourceControl;
            //PictureBox destination = ((PictureBox)sender);

            PictureBox box = new PictureBox();
            box.Size = new Size(500, 500);
            box.Image = (Image)((DataGridView)sourceControl).SelectedRows[0].Cells[0].Value;
            //box.BorderStyle = BorderStyle.FixedSingle;
            box.Cursor = Cursors.Hand;
            box.SizeMode = System.Windows.Forms.PictureBoxSizeMode.Zoom;
            box.ContextMenuStrip = contextMenuStrip2;
            box.Name = "\\HOMEPAGE\\Screenshot_" + (((DataGridView)sourceControl).SelectedRows[0].Index + 1).ToString();

            flowLayoutPanelAnnexe.Controls.Add(box);
        }

        private void contextMenuStrip2_ItemClicked(object sender, ToolStripItemClickedEventArgs e)
        {
            ContextMenuStrip menu = sender as ContextMenuStrip;
            Control sourceControl = menu.SourceControl;
            PictureBox destination = ((PictureBox)sourceControl);
            flowLayoutPanelAnnexe.Controls.Remove(destination);
        }
        private void contextMenuStrip4_ItemClicked(object sender, ToolStripItemClickedEventArgs e)
        {
            ContextMenuStrip menu = sender as ContextMenuStrip;
            Control sourceControl = menu.SourceControl;
            //PictureBox destination = ((PictureBox)sender);
            PictureBox destination = ((PictureBox)sourceControl);
            PictureBox box = new PictureBox();
            box.Size = new Size(500, 500);
            box.Image = destination.Image;
            //box.BorderStyle = BorderStyle.FixedSingle;
            box.Cursor = Cursors.Hand;
            box.SizeMode = System.Windows.Forms.PictureBoxSizeMode.Zoom;
            box.ContextMenuStrip = contextMenuStrip2;
            box.Name = "\\PICTURES\\" + destination.Name;

            flowLayoutPanelAnnexe.Controls.Add(box);
        }

        private void contextMenuStrip1_Opening(object sender, CancelEventArgs e)
        {

        }

        private void button7_Click(object sender, EventArgs e)
        {
            Microsoft.Office.Interop.Word.Application WordApp = new Microsoft.Office.Interop.Word.Application();
            Microsoft.Office.Interop.Word.Document doc = WordApp.Documents.Open(AppDomain.CurrentDomain.BaseDirectory + "\\Resources\\PV_Template.docx");
            doc.Sections[1].Headers[Microsoft.Office.Interop.Word.WdHeaderFooterIndex.wdHeaderFooterPrimary].Range.Text = "Annexe " + textBoxNumeroAnnexe.Text + " au PV " + textBoxPV.Text;


            for (int i = flowLayoutPanelAnnexe.Controls.Count - 1; i >= 0; i--)
            {
                if (((PictureBox)flowLayoutPanelAnnexe.Controls[i]).Name.StartsWith("\\HOMEPAGE\\Screenshot_"))
                {
                    string keyy = ((PictureBox)flowLayoutPanelAnnexe.Controls[i]).Name.Substring(((PictureBox)flowLayoutPanelAnnexe.Controls[i]).Name.IndexOf("\\HOMEPAGE\\Screenshot_") + 21);
                    if (keyy.StartsWith("0"))
                        keyy = keyy.Replace("0", "");

                    string path = pathToSave + "\\HOMEPAGE\\Screenshot_" + keyy + ".png";
                    if (File.Exists(path))
                    {

                        //doc.InlineShapes.AddPicture(CreateBigPictures(path, false), Type.Missing, Type.Missing, Type.Missing);
                        doc.InlineShapes.AddPicture(path, Type.Missing, Type.Missing, Type.Missing);
                        //File.Delete(AppDomain.CurrentDomain.BaseDirectory + "\\image.jpg");


                    }
                }

                if (((PictureBox)flowLayoutPanelAnnexe.Controls[i]).Name.StartsWith("\\\\Messenger\\"))
                {
                    string keyy = ((PictureBox)flowLayoutPanelAnnexe.Controls[i]).Name.Substring(((PictureBox)flowLayoutPanelAnnexe.Controls[i]).Name.LastIndexOf("_") + 1);
                    if (keyy.StartsWith("0"))
                        keyy = keyy.Replace("0", "");

                    string path = pathToSave + ((PictureBox)flowLayoutPanelAnnexe.Controls[i]).Name.Substring(2, ((PictureBox)flowLayoutPanelAnnexe.Controls[i]).Name.Length - 2) + ".png";
                    if (File.Exists(path))
                    {

                        //doc.InlineShapes.AddPicture(CreateBigPictures(path, false), Type.Missing, Type.Missing, Type.Missing);
                        doc.InlineShapes.AddPicture(path, Type.Missing, Type.Missing, Type.Missing);
                        //File.Delete(AppDomain.CurrentDomain.BaseDirectory + "\\image.png");


                    }
                }

                if (((PictureBox)flowLayoutPanelAnnexe.Controls[i]).Name.StartsWith("\\PICTURES\\"))
                {
                    string keyy = ((PictureBox)flowLayoutPanelAnnexe.Controls[i]).Name.Substring(((PictureBox)flowLayoutPanelAnnexe.Controls[i]).Name.LastIndexOf("_") + 1).Split('.')[0];
                    if (keyy.StartsWith("0"))
                        keyy = keyy.Replace("0", "");

                    string path = pathToSave + "\\" +  ((PictureBox)flowLayoutPanelAnnexe.Controls[i]).Name.Substring(1, ((PictureBox)flowLayoutPanelAnnexe.Controls[i]).Name.Length - 1);
                    if (File.Exists(path))
                    {

                        //doc.InlineShapes.AddPicture(CreateBigPictures(path, false), Type.Missing, Type.Missing, Type.Missing);
                        doc.InlineShapes.AddPicture(path, Type.Missing, Type.Missing, Type.Missing);
                        //File.Delete(AppDomain.CurrentDomain.BaseDirectory + "\\image.png");


                    }
                }

            }


            if (File.Exists(AppDomain.CurrentDomain.BaseDirectory + "\\Annexe_" + textBoxNumeroAnnexe.Text + "_PV_" + textBoxPV.Text.Replace("/", "_"))) ;
            File.Delete(AppDomain.CurrentDomain.BaseDirectory + "\\Annexe_" + textBoxNumeroAnnexe.Text + "_PV_" + textBoxPV.Text.Replace("/", "_"));

            // file is saved.
            doc.SaveAs(AppDomain.CurrentDomain.BaseDirectory + "\\Annexe_" + textBoxNumeroAnnexe.Text + "_PV_" + textBoxPV.Text.Replace("/", "_"), Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing);
            // application is now quit.
            doc.Close();
            WordApp.Quit(Type.Missing, Type.Missing, Type.Missing);

            if (File.Exists(AppDomain.CurrentDomain.BaseDirectory + "\\Annexe_" + textBoxNumeroAnnexe.Text + "_PV_" + textBoxPV.Text.Replace("/", "_") + ".docx"))
                Process.Start(AppDomain.CurrentDomain.BaseDirectory + "\\Annexe_" + textBoxNumeroAnnexe.Text + "_PV_" + textBoxPV.Text.Replace("/", "_") + ".docx");
        }

        private void button6_Click(object sender, EventArgs e)
        {
            flowLayoutPanelAnnexe.Controls.Clear();
            textBoxPV.Text = "";
            textBoxNumeroAnnexe.Text = "";
        }
        private void textBoxPV_TextChanged(object sender, EventArgs e)
        {
            textBoxPVV.Text = textBoxPV.Text;
        }

        private void textBoxNumeroAnnexe_TextChanged(object sender, EventArgs e)
        {
            textBoxNumero.Text = textBoxNumeroAnnexe.Text;
        }

        private void pictureBox10_Click(object sender, EventArgs e)
        {
            if (NextMessenger > fichiers.Length)
                return;

            foreach (DataGridViewRow row in dataGridViewPictures.Rows)
            {
                Image img = (Image)row.Cells[0].Value;
                img.Dispose();


            }
            GC.Collect();

            dataGridViewPictures.Rows.Clear();


            for (int i = NextMessenger; i < NextMessenger + STEPP; i++)
            {

                if (i == NextMessenger + STEPP)
                    break;

                if (i > fichiers.Length - 1)
                    break;

                FileInfo fichier = fichiers[i];

                Rectangle rect = GetResolutionScreen();
                int hauteurGrid = dataGridViewPictures.Size.Height;
                int hauteurForm = MESSENGERR.Size.Height;

                try
                {
                    Image img = (Image)(new Bitmap(Image.FromFile(fichier.FullName), new Size(hauteurForm - 84, hauteurForm - 85)));

                    dataGridViewPictures.Rows.Add(img, fichier.Name);


                }
                catch (Exception ex)
                {
                    MessageBox.Show("error " + fichier.FullName);
                }

            }

            NextMessenger += STEPP;
            labelNbreMessenger.Text = "_____xx/xx_____".Replace("/xx", "/" + (fichiers.Length - 1).ToString()).Replace("xx/", (0 + (NextMessenger - STEPP)).ToString() + "/");
            //deA.Text = "_________xx/xx________".Replace("xx/", (0 + (Next - STEPP)).ToString() + "/");
        }

        private void pictureBox9_Click(object sender, EventArgs e)
        {
            if ((NextMessenger - (STEPP * 2)) < 0)
                return;

            foreach (DataGridViewRow row in dataGridViewPictures.Rows)
            {
                Image img = (Image)row.Cells[0].Value;
                img.Dispose();


            }
            GC.Collect();

            dataGridViewPictures.Rows.Clear();

            for (int i = (NextMessenger - (STEPP * 2)); i <= NextMessenger - STEPP; i++)
            {

                //if (i == Next - STEPP)
                //    break;

                FileInfo fichier = fichiers[i];

                Rectangle rect = GetResolutionScreen();
                int hauteurGrid = dataGridViewPictures.Size.Height;
                int hauteurForm = MESSENGERR.Size.Height;


                Image img = (Image)(new Bitmap(Image.FromFile(fichier.FullName), new Size(hauteurForm - 84, hauteurForm - 85)));
                dataGridViewPictures.Rows.Add(img, fichier.Name);



            }


            labelNbreMessenger.Text = "_____xx/xx_____".Replace("/xx", "/" + (fichiers.Length - 1).ToString()).Replace("xx/", (NextMessenger - (STEPP * 2) + 0) + "/");
            //deA.Text = "_________xx/xx________".Replace("xx/", (Next - (STEPP * 2) + 0) + "/");

            NextMessenger -= STEPP;
        }

        private void pictureBox8_Click(object sender, EventArgs e)
        {
            if (dataGridViewMessenger.Rows.Count > 0)//&& ((bool)dataGridViewMessenger.Rows[e.RowIndex].Cells[3].Value))
            {

                panel7.Visible = false;

                if (sortedListForSearching != null || sortedListForSearching.Count > 0)
                    sortedListForSearching.Clear();


                videos = new Dictionary<string, string>();
                string test = dataGridViewMessenger.SelectedRows[0].Cells[4].Value.ToString();
                dataGridViewPictures.Rows.Clear();
                var sorted = Directory.GetFiles(test, "*.png").Select(fn => new FileInfo(fn)).OrderBy(f => f.CreationTime);
                fichiers = sorted.ToArray();

                Rectangle rect = GetResolutionScreen();
                int hauteurGrid = dataGridView2.Size.Height;
                int hauteurForm = MESSENGERR.Size.Height;
                int indexPage = 0;


                foreach (FileInfo fichier in fichiers)
                {

                    if (indexPage == STEPP)
                        break;


                    Image img = (Image)(new Bitmap(Image.FromFile(fichier.FullName), new Size(hauteurForm - 84, hauteurForm - 85)));
                    dataGridViewPictures.Rows.Add(img);


                    indexPage++;
                }

                NextMessenger = STEPP;

                //deA.Text = "_________0/xx________".Replace("/xx", "/" + (0 + STEPP - 1).ToString());
                labelNbreMessenger.Text = "_____0/xx_____".Replace("/xx", "/" + (fichiers.Length - 1).ToString());

                //string test = @"C:\Users\frank\Documents\Facebook_Friends\Messenger\Stephane Hendrycks";
                if (File.Exists(test + "\\Messenger_Videos_With_Screenshots.txt"))
                {
                    string[] lignes = File.ReadAllLines(test + "\\Messenger_Videos_With_Screenshots.txt");


                    foreach (string li in lignes)
                    {
                        if (li == "")
                            continue;

                        string numeroLigne = (li.Split(';')[1]).Substring(li.Split(';')[1].LastIndexOf("_") + 1).Split(new string[] { ".png" }, StringSplitOptions.RemoveEmptyEntries)[0];
                        int indexx = 0;
                        Int32.TryParse(numeroLigne, out indexx);

                        if (!videos.ContainsKey((indexx - 1).ToString()))
                        {
                            //dataGridViewPictures.Rows[indexx - 1].DefaultCellStyle.BackColor = Color.LightBlue;
                            videos.Add(((indexx - 1).ToString()), ((indexx - 1).ToString()));
                        }



                    }
                }


            }
        }

        private void button10_Click(object sender, EventArgs e)
        {
            SearchKeywordsForHomepage(textBox2.Text);
        }

        private void SearchKeywordsForHomepage(string keyword)
        {
            if (textBox2.Text == "")
            {
                flowLayoutPanel3.Controls.Clear();
                return;
            }



            if (dataGridViewJournal.Rows.Count > 0)
            {
                dicoResultsIndexSearch = new Dictionary<int, int>();


                flowLayoutPanel3.Controls.Clear();

                if (!Directory.Exists(pathToSave + "\\HOMEPAGE"))
                    return;

                //var sorted = Directory.GetFiles(pathConfig + "\\HOMEPAGE", "*.jpg").Select(fn => new FileInfo(fn)).OrderBy(f => f.LastWriteTime);
                //fichiersJournal = sorted.ToArray();


                if (File.Exists(pathToSave + "\\HOMEPAGE\\HomepageComments_With_Screenshots.txt"))
                {
                    string[] lignes = File.ReadAllLines(pathToSave + "\\HOMEPAGE\\HomepageComments_With_Screenshots.txt");

                    if (sortedListForSearching.Count == 0)
                    {
                        foreach (string li in lignes)
                        {
                            if (li == "")
                                continue;

                            string numeroLigne = (li.Split(';')[3]).Substring(li.Split(';')[3].LastIndexOf("_") + 1).Split(new string[] { ".png" }, StringSplitOptions.RemoveEmptyEntries)[0];
                            sortedListForSearching.Add(li.Split(';')[0].ToLower() + ";" + numeroLigne);


                        }

                        try
                        {

                            List<string> resultatsRecherche = sortedListForSearching.FindAll(x => x.Contains(keyword));

                            foreach (string r in resultatsRecherche)
                            {
                                string numeroLigne = (r.Split(';')[1]);
                                string arechercher = r.Split(';')[0];

                                if (!arechercher.ToLower().Contains(keyword.ToLower()))
                                    continue;

                                int indexx = Int32.Parse(numeroLigne) - 1;

                                if (!dicoResultsIndexSearch.ContainsKey(indexx))
                                {
                                    dicoResultsIndexSearch.Add(indexx, indexx);
                                    LinkLabel link = new LinkLabel();
                                    link.Text = numeroLigne;
                                    link.AutoSize = true;
                                    link.Font = new System.Drawing.Font("Microsoft Sans Serif", 12F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
                                    link.Name = "linkLabel" + indexx;
                                    link.Size = new System.Drawing.Size(18, 20);
                                    link.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.linkLabel2_LinkClicked);
                                    flowLayoutPanel3.Controls.Add(link);
                                    //labelResultsSearch.Text += indexx.ToString() + " ";
                                }

                                labelResultsHomepage.Text = "Résultat : " + dicoResultsIndexSearch.Count + " trouvé(s)";


                            }



                            //int index = sortedListForSearching.FindIndex(x => x.Contains(keyword));

                            //if (index == -1)
                            //    return;

                            //string numeroLigne = (sortedListForSearching[index].Split(';')[1]).Substring(sortedListForSearching[index].Split(';')[1].LastIndexOf("_") + 1).Split(new string[] { ".jpg" }, StringSplitOptions.RemoveEmptyEntries)[0];

                            //int indexx = Int32.Parse(numeroLigne) - 1;

                            //if (dicoResultsIndexSearch.Count > 0)
                            //{
                            //    dataGridViewJournal.ClearSelection();
                            //    dataGridViewJournal.FirstDisplayedScrollingRowIndex = dicoResultsIndexSearch.ElementAt(0).Value;
                            //    dataGridViewJournal.Focus();
                            //}

                        }
                        catch (ArgumentNullException ex)
                        {
                            return;
                        }

                    }
                    else
                    {
                        try
                        {
                            List<string> resultatsRecherche = sortedListForSearching.FindAll(x => x.Contains(keyword));

                            foreach (string r in resultatsRecherche)
                            {
                                string numeroLigne = (r.Split(';')[1]);
                                int indexx = Int32.Parse(numeroLigne);

                                if (!dicoResultsIndexSearch.ContainsKey(indexx))
                                {
                                    dicoResultsIndexSearch.Add(indexx, indexx);
                                    LinkLabel link = new LinkLabel();
                                    link.Text = numeroLigne;
                                    link.AutoSize = true;
                                    link.Font = new System.Drawing.Font("Microsoft Sans Serif", 12F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
                                    link.Name = "linkLabel" + indexx;
                                    link.Size = new System.Drawing.Size(18, 20);
                                    link.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.linkLabel2_LinkClicked);
                                    flowLayoutPanel3.Controls.Add(link);
                                    //labelResultsSearch.Text += indexx.ToString() + " ";
                                }

                                labelResultsHomepage.Text = "Résultat : " + dicoResultsIndexSearch.Count + " trouvé(s)";


                            }

                            //if (dicoResultsIndexSearch.Count > 0)
                            //{
                            //    dataGridViewJournal.ClearSelection();
                            //    dataGridViewJournal.FirstDisplayedScrollingRowIndex = dicoResultsIndexSearch.ElementAt(0).Value;
                            //    dataGridViewJournal.Focus();
                            //}
                        }
                        catch (ArgumentNullException ex)
                        {
                            return;
                        }
                    }


                }
            }

        }

        private void pictureBoxRightArrow_Click(object sender, EventArgs e)
        {
            {
                if (Next > fichiersJournal.Length)
                    return;

                foreach (DataGridViewRow row in dataGridViewJournal.Rows)
                {
                    Image img = (Image)row.Cells[0].Value;
                    img.Dispose();


                }
                GC.Collect();

                dataGridViewJournal.Rows.Clear();


                for (int i = Next; i < Next + STEPP; i++)
                {

                    if (i == Next + STEPP)
                        break;

                    if (i > fichiersJournal.Length - 1)
                        break;

                    FileInfo fichier = fichiersJournal[i];

                    Rectangle rect = GetResolutionScreen();
                    int hauteurGrid = dataGridViewJournal.Size.Height;
                    int hauteurForm = JOURNAL.Size.Height;

                    try
                    {

                        //Image img = Image.FromFile(fichier.FullName);
                        if (!BUSINESSMODE)
                        {
                            Image tmp = Image.FromFile(fichier.FullName);
                            int differentiel = tmp.Width - tmp.Height;
                            Image imgg = (Image)(new Bitmap(Image.FromFile(fichier.FullName), new Size(hauteurForm - (120 - differentiel), hauteurForm - 120)));
                            dataGridViewJournal.Rows.Add(imgg);
                        }
                        else
                        {
                            Image tmp = Image.FromFile(fichier.FullName);
                            int differentiel = tmp.Width - tmp.Height;
                            Image imgg = (Image)(new Bitmap(Image.FromFile(fichier.FullName), new Size(tmp.Width, hauteurForm - 120)));
                            dataGridViewJournal.Rows.Add(imgg);
                        }


                    }
                    catch (Exception ex)
                    {
                        MessageBox.Show("error " + fichier.FullName);
                    }

                }

                Next += STEPP;
                deA.Text = "_____xx/xx_____".Replace("/xx", "/" + (fichiersJournal.Length - 1).ToString()).Replace("xx/", (0 + (Next - STEPP)).ToString() + "/");
                //deA.Text = "_________xx/xx________".Replace("xx/", (0 + (Next - STEPP)).ToString() + "/");
            }
        }

        private void pictureBoxLeftArrow_Click(object sender, EventArgs e)
        {
            {

                if ((Next - (STEPP * 2)) < 0)
                    return;

                foreach (DataGridViewRow row in dataGridViewJournal.Rows)
                {
                    Image img = (Image)row.Cells[0].Value;
                    img.Dispose();


                }
                GC.Collect();

                dataGridViewJournal.Rows.Clear();

                for (int i = (Next - (STEPP * 2)); i <= Next - STEPP; i++)
                {

                    //if (i == Next - STEPP)
                    //    break;

                    FileInfo fichier = fichiersJournal[i];

                    Rectangle rect = GetResolutionScreen();
                    int hauteurGrid = dataGridViewJournal.Size.Height;
                    int hauteurForm = JOURNAL.Size.Height;

                    if (!BUSINESSMODE)
                    {

                        Image tmp = Image.FromFile(fichier.FullName);
                        int differentiel = tmp.Width - tmp.Height;
                        Image imgg = (Image)(new Bitmap(Image.FromFile(fichier.FullName), new Size(hauteurForm - (120 - differentiel), hauteurForm - 120)));
                        dataGridViewJournal.Rows.Add(imgg);
                    }
                    else
                    {
                        Image tmp = Image.FromFile(fichier.FullName);
                        int differentiel = tmp.Width - tmp.Height;
                        Image imgg = (Image)(new Bitmap(Image.FromFile(fichier.FullName), new Size(tmp.Width, hauteurForm - 120)));
                        dataGridViewJournal.Rows.Add(imgg);
                    }
                    



                }


                deA.Text = "_____xx/xx_____".Replace("/xx", "/" + (fichiersJournal.Length - 1).ToString()).Replace("xx/", (Next - (STEPP * 2) + 0) + "/");
                //deA.Text = "_________xx/xx________".Replace("xx/", (Next - (STEPP * 2) + 0) + "/");

                Next -= STEPP;
            }

        }

        private void pictureBox12_Click(object sender, EventArgs e)
        {
            if (BUSINESSMODE)
                FillJournalViewForBusiness();
            else
            FillJournalView();
        }

        private void linkLabel2_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
        {
            try
            {
                //dataGridViewJournal.ClearSelection();
                //dataGridViewJournal.FirstDisplayedScrollingRowIndex = Int32.Parse(((LinkLabel)sender).Text) - 1;
                //dataGridViewJournal.Focus();

                //((LinkLabel)sender).ForeColor = Color.Red;

                int index = Int32.Parse(((LinkLabel)sender).Text) - 1;
                int indexAfficher = index % STEPP;
                int nbreStep = index / STEPP;

                Next = nbreStep * STEPP;


                foreach (DataGridViewRow row in dataGridViewJournal.Rows)
                {
                    Image img = (Image)row.Cells[0].Value;
                    img.Dispose();


                }


                dataGridViewJournal.Rows.Clear();


                for (int i = Next; i < Next + STEPP; i++)
                {

                    if (i == Next + STEPP)
                        break;

                    if (i > fichiersJournal.Length - 1)
                        break;

                    FileInfo fichier = fichiersJournal[i];

                    Rectangle rect = GetResolutionScreen();
                    int hauteurGrid = dataGridViewJournal.Size.Height;
                    int hauteurForm = JOURNAL.Size.Height;

                    try
                    {

                        Image img = Image.FromFile(fichier.FullName);
                        dataGridViewJournal.Rows.Add(img);


                    }
                    catch (Exception ex)
                    {
                        MessageBox.Show("error " + fichier.FullName);
                    }

                }

                Next += STEPP;

                dataGridViewJournal.ClearSelection();
                dataGridViewJournal.FirstDisplayedScrollingRowIndex = indexAfficher;
                dataGridViewJournal.Focus();
            }
            catch
            {
                int index = Int32.Parse(((LinkLabel)sender).Text) -1;
                int indexAfficher = index % STEPP;
                int nbreStep = index / STEPP;

                Next = nbreStep * STEPP;


                foreach (DataGridViewRow row in dataGridViewJournal.Rows)
                {
                    Image img = (Image)row.Cells[0].Value;
                    img.Dispose();


                }


                dataGridViewJournal.Rows.Clear();


                for (int i = Next; i < Next + STEPP; i++)
                {

                    if (i == Next + STEPP)
                        break;

                    if (i > fichiersJournal.Length - 1)
                        break;

                    FileInfo fichier = fichiersJournal[i];

                    Rectangle rect = GetResolutionScreen();
                    int hauteurGrid = dataGridViewJournal.Size.Height;
                    int hauteurForm = JOURNAL.Size.Height;

                    try
                    {

                        Image img = Image.FromFile(fichier.FullName);
                        dataGridViewJournal.Rows.Add(img);


                    }
                    catch (Exception ex)
                    {
                        MessageBox.Show("error " + fichier.FullName);
                    }

                }

                Next += STEPP;

                dataGridViewJournal.ClearSelection();
                dataGridViewJournal.FirstDisplayedScrollingRowIndex = indexAfficher;
                dataGridViewJournal.Focus();



            }

        }

        private void FillIdentifiants()
        {
            panelIdentifiantsVisible.Visible = true;
            Dictionary<string, string> identifiants = new Dictionary<string, string>();
            dataGridViewIdentifiants.Rows.Clear();

            if (!Directory.Exists(pathToSave + "\\TXT"))
                Directory.CreateDirectory(pathToSave + "\\TXT");


            string ligne = "";

            using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\TXT\\ForAnalytics.txt", true))
            {
                string textes = "";
                foreach (Analytics a in Analytics.Values)
                {
                    if (a.Url == "https://www.facebook.com")
                        continue;

                    textes += a.Category.Trim() + ";Key=" + a.Username + "@" + a.Url + "@;" + a.Username + ";" + a.Url + ";" + a.PathToPicture.Replace("\r\n", " ").Replace("\n", " ") + ";" + a.PathToFolder + "\n";
                }

                file.Write(textes);

            }

            if (dataGridViewTrace.Rows.Count > 0)
                using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\TXT\\Log.txt", true))
                {
                    string textes = "";
                    foreach (DataGridViewRow ro in dataGridViewTrace.Rows)
                    {
                        textes += ro.Cells[1].Value.ToString() + "\n";
                    }

                    file.Write(textes);

                }
            Analytics = new Dictionary<string, Analytics>();

                     

            if (File.Exists(pathToSave + "\\TXT\\ForAnalytics.txt"))
            {
                string[] lines = File.ReadAllLines(pathToSave + "\\TXT\\ForAnalytics.txt");
                foreach (string li in lines)
                {
                    if (!identifiants.ContainsKey(li.Split(';')[1]))
                    {
                        string valeur = li.Split(';')[1];
                        string username = valeur.Substring(valeur.IndexOf("Key=") + 4).Split('@')[0];
                        string link = valeur.Substring(valeur.IndexOf("@") + 1).Split('@')[0];



                        identifiants.Add(li.Split(';')[1], link + ";" + username + ";" + "");
                    }
                }


                if (identifiants.Count > 0)
                {
                    foreach (string li in identifiants.Values)
                    {
                        if (li.Split(';')[0] == "https://www.facebook.com")
                            continue;
                        
                        dataGridViewIdentifiants.Rows.Add(li.Split(';')[0], li.Split(';')[1], "");
                    }

                    

                    if (!File.Exists(pathToSave + "\\TXT\\AllIdentifiants.txt"))
                        using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\TXT\\AllIdentifiants.txt", false))
                        {
                            string textes = "";
                            foreach (string li in identifiants.Values)
                            {
                                textes += li.Trim() + "\n";
                            }

                            file.Write(textes);

                        }
                    else
                    {
                        using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\TXT\\AllIdentifiants.txt", true))
                        {
                            string textes = "";
                            foreach (string li in identifiants.Values)
                            {
                                textes += li.Trim() + "\n";
                            }

                            file.Write(textes);

                        }
                    }

                    panelIdentifiantsVisible.Visible = false;
                    pictureBoxIdentifiants.Visible = true;
                    labelIdentifiants.Text = "IDENTIFIANTS : " + dataGridViewIdentifiants.Rows.Count;

                }
                else
                    panelIdentifiantsVisible.Visible = false;



                return;

            }

                //Friends
            if (File.Exists(pathToSave + "\\TXT\\friends.txt"))
            {
                string[] lines = File.ReadAllLines(pathToSave + "\\TXT\\friends.txt");
                foreach (string li in lines)
                {
                    if (!identifiants.ContainsKey(li.Split(';')[0]))
                    {
                        identifiants.Add(li.Split(';')[0], li);
                    }
                }
            }

            //Friends
            if (File.Exists(pathToSave + "\\TXT\\followers.txt"))
            {
                string[] lines = File.ReadAllLines(pathToSave + "\\TXT\\followers.txt");
                foreach (string li in lines)
                {
                    if (!identifiants.ContainsKey(li.Split(';')[0]))
                    {
                        identifiants.Add(li.Split(';')[0], li);
                    }
                }

            }

            //FriendsFromPictures
            if (File.Exists(pathToSave + "\\TXT\\friendsFromComments.txt"))
            {
                string[] lines = File.ReadAllLines(pathToSave + "\\TXT\\friendsFromComments.txt");
                string tmp = "";
                foreach (string li in lines)
                {
                    string[] ident = li.Split(';');

                    string url = ident[0];
                    string username = ident[1];
                    string id = ident[2];

                    if (ident[0].Contains("?fref"))
                    {
                        url = ident[0].Split(new string[] { "?fref" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    }
                    if (ident[0].Contains("&fref"))
                    {
                        url = ident[0].Split(new string[] { "&fref" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    }
                    if (ident[0].Contains("&href"))
                    {
                        url = ident[0].Split(new string[] { "&href" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    }
                    if (ident[0].Contains("?comment"))
                    {
                        url = ident[0].Split(new string[] { "?comment" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    }
                    if (ident[0].Contains("&comment"))
                    {
                        url = ident[0].Split(new string[] { "&comment" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    }

                    tmp = url + ";" + username + ";" + id + "\n";

                    if (!identifiants.ContainsKey(url))
                    {
                        identifiants.Add(url, tmp);
                    }
                }
            }

            //FriendsFromPictures
            if (File.Exists(pathToSave + "\\TXT\\friendsFromHomepage.txt"))
            {
                string[] lines = File.ReadAllLines(pathToSave + "\\TXT\\friendsFromHomepage.txt");
                string tmp = "";
                foreach (string li in lines)
                {
                    string[] ident = li.Split(';');

                    string url = ident[0];
                    string username = ident[1];
                    string id = ident[2];

                    if (ident[0].Contains("?fref"))
                    {
                        url = ident[0].Split(new string[] { "?fref" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    }
                    if (ident[0].Contains("&fref"))
                    {
                        url = ident[0].Split(new string[] { "&fref" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    }
                    if (ident[0].Contains("&href"))
                    {
                        url = ident[0].Split(new string[] { "&href" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    }
                    if (ident[0].Contains("?comment"))
                    {
                        url = ident[0].Split(new string[] { "?comment" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    }
                    if (ident[0].Contains("&comment"))
                    {
                        url = ident[0].Split(new string[] { "&comment" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    }

                    tmp = url + ";" + username + ";" + id + "\n";


                    if (!identifiants.ContainsKey(url))
                    {
                        identifiants.Add(url, tmp.Trim());
                    }
                }
            }

            if (identifiants.Count > 0)
            {
                foreach (string li in identifiants.Values)
                {
                    dataGridViewIdentifiants.Rows.Add(li.Split(';')[0], li.Split(';')[1], "");
                }

                if (!Directory.Exists(pathToSave + "\\TXT"))
                    Directory.CreateDirectory(pathToSave + "\\TXT");

                if (!File.Exists(pathToSave +  "\\TXT\\AllIdentifiants.txt"))
                    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\TXT\\AllIdentifiants.txt", false))
                    {
                        string textes = "";
                        foreach (string li in identifiants.Values)
                        {
                            textes += li.Trim() + "\n";
                        }

                        file.Write(textes);

                    }
                else
                {
                    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\TXT\\AllIdentifiants.txt", true))
                    {
                        string textes = "";
                        foreach (string li in identifiants.Values)
                        {
                            textes += li.Trim() + "\n";
                        }

                        file.Write(textes);

                    }
                }

                panelIdentifiantsVisible.Visible = false;
                pictureBoxIdentifiants.Visible = true;
                labelIdentifiants.Text = "IDENTIFIANTS : " + dataGridViewIdentifiants.Rows.Count;

            }
            else
                panelIdentifiantsVisible.Visible = false;


        }
        private void FillParameters()
        {
            Dictionary<string, string> identifiants = new Dictionary<string, string>();
            
            

            //SessionsActives
            if (File.Exists(pathToSave + "\\PARAMETERS\\SessionsActives.txt"))
            {
                string[] lines = File.ReadAllLines(pathToSave  + "\\PARAMETERS\\SessionsActives.txt");
                foreach (string li in lines)
                {
                    richTextBoxSessionsActives.Text += li + "\n";
                }
            }

            //Connexionsdeconnexions
            if (File.Exists(pathToSave + "\\PARAMETERS\\ConnexionsDeconnexions.txt"))
            {
                string[] lines = File.ReadAllLines(pathToSave + "\\PARAMETERS\\ConnexionsDeconnexions.txt");
                foreach (string li in lines)
                {
                    richTextBoxConnexionsDeconnexions.Text += li + "\n";
                }
            }

            //Recherches
            if (File.Exists(pathToSave + "\\PARAMETERS\\Recherches.txt"))
            {
                string[] lines = File.ReadAllLines(pathToSave  + "\\PARAMETERS\\Recherches.txt");
                foreach (string li in lines)
                {
                    richTextBoxRecherches.Text += li + "\n";
                }
            }
            //Connexions
            if (File.Exists(pathToSave + "\\PARAMETERS\\Connexions.txt"))
            {
                string[] lines = File.ReadAllLines(pathToSave + "\\PARAMETERS\\Connexions.txt");
                foreach (string li in lines)
                {
                    richTextBox1Connexions.Text += li + "\n";
                }
            }

            //Parametres
            if (File.Exists(pathToSave + "\\PARAMETERS\\Parametres.txt"))
            {
                string[] lines = File.ReadAllLines(pathToSave + "\\PARAMETERS\\Parametres.txt");
                foreach (string li in lines)
                {
                    richTextBoxparam.Text += li + "\n";
                }
            }


        }
        private void GetPictures()
        {


            if (driver == null)
            {
                InitializeDriverForBusiness();
                // 2. Go to the "Google" homepage
                driver.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }

                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driver.FindElementById("email");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driver.FindElementById("pass");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driver.FindElementById("loginbutton").Click();
                //searchButton.Click();
                Thread.Sleep(2500);
            }

            string urlFriend = textBoxUSERNAMEFRIENDS.Text;

            if (!profilIsSet)
                GetProfileInformationsForBusiness(backgroundWorker1);


            try
            {
                backgroundWorker1.ReportProgress(-120);

                string targetName = textBoxops.Text;
                Dictionary<string, string> dicoMessagesFrom = new Dictionary<string, string>();
                Dictionary<string, string> messagesVisibles = new Dictionary<string, string>();
                Dictionary<string, string> messagesVisiblesForFile = new Dictionary<string, string>();


                int width = driver.Manage().Window.Size.Width;
                int height = driver.Manage().Window.Size.Height;



                if (!Directory.Exists(pathToSave + @"\PICTURES\"))
                    Directory.CreateDirectory(pathToSave + @"\PICTURES\");


                //driver.Navigate().GoToUrl(urlFriend + "/posts/?ref=page_internal");
                driver.Navigate().GoToUrl(urlFriend + "/photos");
                Thread.Sleep(5000);

                if (isElementFlyOutPresent(driver))
                {
                    driver.FindElementByXPath("//div[@class='fbNubFlyout fbDockChatTabFlyout uiContextualLayerParent']");

                    IList<IWebElement> el = driver.FindElementsByXPath("//div[@class='fbNubFlyout fbDockChatTabFlyout uiContextualLayerParent']");
                    foreach (IWebElement ell in el)
                    {
                        IList<IWebElement> divs = ell.FindElements(By.ClassName("close"));

                        foreach (IWebElement divv in divs)
                        {

                            try
                            {
                                divv.Click();
                                break;
                            }
                            catch
                            {

                            }


                        }
                    }

                }

                try
                {
                    Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");


                    int i = 1;
                    int hauteur = 450;
                    //int h = 0;
                    ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top

                    Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                    long innerHeightt = (long)innerHeight;
                    long scroll = (long)innerHeight;
                    long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                    scrollHeight = scrollHeight + scroll;
                    IList<IWebElement> elementsNew = driver.FindElements(By.TagName("div"));

                    IWebElement toResize = null;
                    if (toResize == null)
                        foreach (IWebElement el in elementsNew)
                        {
                            if (el.Size.Width >= 820 && el.Size.Width < 900)
                            {
                                toResize = el;

                                break;
                            }

                        }

                    while (scrollHeight >= innerHeightt)
                    {

                        CaptureElementScreenShot(toResize, pathToSave + @"\PICTURES\" + "ElementScreenshot_" + i + ".png");


                        Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                        imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                        //Save the screenshot
                        imageScreenshott.SaveAsFile(pathToSave + @"\PICTURES\" + "Screenshot_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                        Thread.Sleep(100);

                        string pathToFile = pathToSave + @"\PICTURES\" + "Screenshot_" + i + ".png";




                        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                        if ((scrollHeight - innerHeightt) < 200)
                        {
                            Thread.Sleep(5000);
                        }
                        else
                            Thread.Sleep(2500);


                        scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
                        Thread.Sleep(2000);


                        if (scrollHeight <= innerHeightt)
                        {
                            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                            Thread.Sleep(2000);
                            scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                        }

                        scrollHeight = scrollHeight + scroll;
                        innerHeightt = innerHeightt + hauteur;
                        i++;

                    }
                }
                catch (Exception ex)
                {
                    //e.printStackTrace();
                }






            }
            catch (OpenQA.Selenium.NoSuchElementException ex)//si pas d'acces à la page on essaie les annees manuellement
            {


            }

            backgroundWorker1.ReportProgress(-121);

            Thread.Sleep(2000);

            backgroundWorker1.CancelAsync();


        }
        private bool isElementFlyOutPresent(ChromeDriver driver)
        {
            try
            {
                return driver.FindElementByXPath("//div[@class='fbNubFlyout fbDockChatTabFlyout uiContextualLayerParent']").Displayed;
                //return true;
            }
            catch (OpenQA.Selenium.NoSuchElementException e)
            {
                return false;
            }
        }
        public Image CaptureElementScreenShot(IWebElement element, string uniqueName)
        {
            Screenshot screenshot = ((ITakesScreenshot)this.driver).GetScreenshot();
            screenshot.SaveAsFile(uniqueName, OpenQA.Selenium.ScreenshotImageFormat.Png);


            Image img = Bitmap.FromFile(uniqueName);
            Rectangle rect = new Rectangle();

            int width = 0;
            int height = 0;

            if (element != null)
            {
                // Get the Width and Height of the WebElement using
                width = element.Size.Width;
                height = element.Size.Height;

                // Get the Location of WebElement in a Point.
                // This will provide X & Y co-ordinates of the WebElement
                Point p = element.Location;

                // Create a rectangle using Width, Height and element location
                rect = new Rectangle(p.X - 6, 0, width + 10, img.Height);
                //rect.Intersect(new Rectangle(0, 0, width, height));
            }



            //rect.Height = finalHeight;
            Bitmap bmpImage = new Bitmap(img);
            img.Dispose();
            var cropedImag = bmpImage.Clone(rect, bmpImage.PixelFormat);
            cropedImag.Save(uniqueName);


            return cropedImag;
        }
        private void GetProfileInformationsForBusiness(BackgroundWorker t)
        {

            string targetName = textBoxops.Text;
            string titrePage = "";
            string urlFriend = textBoxUSERNAMEFRIENDS.Text;
            string ID = "";
            //pour cacher fenetre DOS

            if (driver == null)
            {
                InitializeDriver();
                // 2. Go to the "Google" homepage
                driver.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }

                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driver.FindElementById("email");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driver.FindElementById("pass");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driver.FindElementById("loginbutton").Click();
                Thread.Sleep(2500);
                //searchButton.Click();

                //u_0_8
                //"//div[@class='menuBar']//*[@class='menuItem']"
                // 2. Go to the "Google" homepage
                driver.Navigate().GoToUrl(urlFriend);
                titrePage = driver.Title;
                Thread.Sleep(5000);
            }
            //var driverService = ChromeDriverService.CreateDefaultService();
            //driverService.HideCommandPromptWindow = true;
            // progressBarfriends.Visible = true;

            //var driver = new ChromeDriver(driverService, new ChromeOptions());

            //System.Diagnostics.Process.Start(filepath);
            //ChromeOptions chromeOptions = new ChromeOptions();
            //chromeOptions.AddArguments("--disable-notifications");
            System.Random rnd = new System.Random();

            driver.Navigate().GoToUrl(urlFriend);
            titrePage = driver.Title;
            Thread.Sleep(5000);

            if (profilIsSet == false)
                try
                {


                    //var image = driver.FindElementByXPath("//a[@class='_2dgj']");
                    IList<IWebElement> el = driver.FindElementsByTagName("img");
                    IList<IWebElement> svg = driver.FindElementsByTagName("svg");
                    IList<IWebElement> ids = driver.FindElementsByTagName("a");

                    //foreach(IWebElement elId in ids)
                    //{
                    //    var tmp = elId.GetAttribute("aria-label");
                    //    if(tmp != null)
                    //        if (tmp.ToLower().Contains("profil"))
                    //        {
                    //            ID = elId.GetAttribute("href");
                    //            if (ID.Contains("facebook.com/"))
                    //            {
                    //                ID = ID.Substring(ID.IndexOf("facebook.com/") + 13).Split('/')[0];
                    //                //backgroundWorkerFriends.ReportProgress(-2, ID);
                    //            }

                    //            break;
                    //        }

                    //}

                    if (svg != null)//new look
                    {
                        try
                        {
                            foreach (IWebElement ell in svg)
                            {
                                if (ell.Size.Width == ell.Size.Height && ell.Size.Width == 132 && !isElementPresent(driver, "rq0escxv lpgh02oy tkr6xdv7 rek2kq2y"))
                                {
                                    IList<IWebElement> imgs = ell.FindElements(By.TagName("g"));
                                    IWebElement link = imgs[0];

                                    if (link.Size.Width == link.Size.Height && link.Size.Width == 132)// && link.Size.Width < 200)
                                    {
                                        var linkToImage = link.FindElement(By.TagName("image")).GetAttribute("xlink:href");

                                        if (linkToImage != "")
                                        {
                                            try
                                            {
                                                using (var client = new WebClient())
                                                {
                                                    if (!Directory.Exists(pathToSave + "\\"))
                                                        Directory.CreateDirectory(pathToSave  + "\\");

                                                    if (!File.Exists(pathToSave + "\\" + titrePage.Replace("\"", "") + ".jpg"))
                                                    {
                                                        client.DownloadFile(linkToImage, pathToSave + "\\" + titrePage.Replace("\"", "") + ".jpg");
                                                        Thread.Sleep(5000);


                                                        t.ReportProgress(-5, pathToSave + "\\" + titrePage.Replace("\"", "") + ".jpg");
                                                        //t.ReportProgress(-2, ID);

                                                        Thread.Sleep(2000);
                                                        profilIsSet = true;

                                                    }
                                                    else
                                                    {


                                                        t.ReportProgress(-5, pathToSave + "\\" + titrePage.Replace("\"", "") + ".jpg");
                                                        //t.ReportProgress(-2, ID);

                                                        profilIsSet = true;
                                                    }


                                                }
                                            }
                                            catch (Exception ex)
                                            {
                                                MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT POUR LA PHOTO DE PROFIL" + Environment.NewLine + ex.Message);
                                                return;
                                            }


                                        }
                                        break;
                                    }
                                }

                                if (!profilIsSet)//si groupe
                                {
                                    if (ell.Size.Width == ell.Size.Height && ell.Size.Width == 40 && ell.GetAttribute("class") == "pzggbiyp")
                                    {
                                        IList<IWebElement> imgs = ell.FindElements(By.TagName("g"));
                                        IWebElement link = imgs[0];

                                        if (link.Size.Width == link.Size.Height && link.Size.Width == 40)// && link.Size.Width < 200)
                                        {
                                            var linkToImage = link.FindElement(By.TagName("image")).GetAttribute("xlink:href");

                                            if (linkToImage != "")
                                            {
                                                try
                                                {
                                                    using (var client = new WebClient())
                                                    {
                                                        if (!Directory.Exists(pathToSave + "\\"))
                                                            Directory.CreateDirectory(pathToSave + "\\");

                                                        if (!File.Exists(pathToSave + "\\" + titrePage.Replace("\"", "") + ".jpg"))
                                                        {
                                                            client.DownloadFile(linkToImage, pathToSave + "\\" + titrePage.Replace("\"", "") + ".jpg");
                                                            Thread.Sleep(5000);


                                                            t.ReportProgress(-5, pathToSave + "\\" + titrePage.Replace("\"", "") + ".jpg");
                                                            //t.ReportProgress(-2, ID);

                                                            Thread.Sleep(2000);
                                                            profilIsSet = true;

                                                        }
                                                        else
                                                        {


                                                            t.ReportProgress(-5, pathToSave + "\\" + titrePage.Replace("\"", "") + ".jpg");
                                                            //t.ReportProgress(-2, ID);

                                                            profilIsSet = true;
                                                        }


                                                    }
                                                }
                                                catch (Exception ex)
                                                {
                                                    MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT POUR LA PHOTO DE PROFIL" + Environment.NewLine + ex.Message);
                                                    return;
                                                }


                                            }
                                            break;
                                        }
                                    }
                                }
                            }
                        }

                        catch
                        {

                        }
                    }

                    if (el != null && !profilIsSet)
                    {
                        try
                        {
                            //ID = el[0].GetAttribute("href");
                            //if (ID.Contains("facebook.com/"))
                            //{
                            //    ID = ID.Substring(ID.IndexOf("facebook.com/") + 13).Split('/')[0];
                            //    //backgroundWorkerFriends.ReportProgress(-2, ID);
                            //}
                            IList<IWebElement> els = el[0].FindElements(By.TagName("img"));// html / body / div[1] / div / div / div[2] / div / div / div[1] / div / div[1] / div[2] / div / div / div / div / div[1] / div / div / a / div / svg / g / image

                            foreach (IWebElement ell in el)
                            {

                                if (ell.Size.Width == ell.Size.Height && ell.Size.Width >= 132)
                                {


                                    var linkToImage = ell.GetAttribute("src");

                                    if (linkToImage != "")
                                    {
                                        try
                                        {
                                            using (var client = new WebClient())
                                            {
                                                if (!Directory.Exists(pathToSave + "\\"))
                                                    Directory.CreateDirectory(pathToSave + "\\");

                                                if (!File.Exists(pathToSave + "\\" + titrePage.Replace("\"", "") + ".jpg"))
                                                {
                                                    client.DownloadFile(linkToImage, pathToSave + "\\" + titrePage.Replace("\"", "") + ".jpg");
                                                    Thread.Sleep(5000);


                                                    t.ReportProgress(-5, pathToSave + "\\" + titrePage.Replace("\"", "") + ".jpg");
                                                    //t.ReportProgress(-2, ID);

                                                    Thread.Sleep(2000);
                                                    profilIsSet = true;

                                                }
                                                else
                                                {


                                                    t.ReportProgress(-5, pathToSave + "\\" + titrePage.Replace("\"", "") + ".jpg");
                                                    //t.ReportProgress(-2, ID);

                                                    profilIsSet = true;
                                                }


                                            }
                                        }
                                        catch (Exception ex)
                                        {
                                            MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT POUR LA PHOTO DE PROFIL" + Environment.NewLine + ex.Message);
                                            return;
                                        }


                                    }

                                    break;
                                }
                                else
                                    continue;
                            }
                        }
                        catch
                        {

                        }
                    }
                    //clic sur image dans href
                    //((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].click();", image);
                    //backgroundWorker1.ReportProgress(1);

                    Thread.Sleep(5000);
                }
                catch (OpenQA.Selenium.NoSuchElementException ex)
                {

                    try
                    {
                        var image = driver.FindElementByXPath("//a[@class='_1nv3 _1nv5 profilePicThumb']");
                        IWebElement el = driver.FindElementByXPath("//a[@class='_1nv3 _11kg _1nv5 profilePicThumb']");
                        if (el != null)
                        {
                            try
                            {
                                ID = el.GetAttribute("href");
                                if (ID.Contains("profile_id="))
                                {
                                    ID = ID.Substring(ID.IndexOf("profile_id=") + 11).Split('"')[0];
                                    //backgroundWorkerFriends.ReportProgress(-2, ID);
                                }
                            }
                            catch
                            {

                            }

                            IList<IWebElement> els = el.FindElements(By.TagName("img"));
                            foreach (IWebElement ell in els)
                            {
                                var linkToImage = ell.GetAttribute("src");

                                if (linkToImage != "")
                                {
                                    try
                                    {
                                        using (var client = new WebClient())
                                        {

                                            if (!Directory.Exists(pathToSave + "\\"))
                                                Directory.CreateDirectory(pathToSave + "\\");

                                            if (!File.Exists(pathToSave + "\\" + titrePage + ".jpg"))
                                            {
                                                client.DownloadFile(linkToImage, pathToSave + "\\" + titrePage + ".jpg");
                                                Thread.Sleep(5000);


                                                t.ReportProgress(-5, pathToSave + "\\" + titrePage + ".jpg");
                                                t.ReportProgress(-2, ID);

                                                Thread.Sleep(2000);

                                            }
                                            else
                                            {


                                                t.ReportProgress(-5, pathToSave + "\\" + titrePage + ".jpg");
                                                t.ReportProgress(-2, ID);


                                            }

                                            profilIsSet = true;
                                        }
                                    }
                                    catch (Exception exx)
                                    {
                                        MessageBox.Show("PROBLEME AVEC LE TELECHARGEMENT POUR LA PHOTO DE PROFIL" + Environment.NewLine + ex.Message);
                                        return;
                                    }


                                }
                            }

                        }
                        //clic sur image dans href
                        //((IJavaScriptExecutor)driver).ExecuteScript("arguments[0].click();", image);
                        //backgroundWorker1.ReportProgress(1);

                        //Thread.Sleep(5000);

                    }
                    catch (OpenQA.Selenium.NoSuchElementException exx)
                    {
                        MessageBox.Show("PROBLEME AVEC L'IDENTIFIEUR DE CLASSE POUR LA PHOTO DE PROFIL" + Environment.NewLine + ex.Message);
                        return;
                    }


                }
        }
        private void GetHomePageForBusiness()
        {
            string resultat = "";
            Dictionary<string, string> resultats = new Dictionary<string, string>();

            if (driver == null)
            {
                InitializeDriverForBusiness();
                // 2. Go to the "Google" homepage
                driver.Navigate().GoToUrl("https://facebook.com/login");
                Thread.Sleep(500);

                if (isElementPresent(driver, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
                {
                    driver.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                    Thread.Sleep(2000);
                }

                // 3. Find the username textbox (by ID) on the homepage
                var userNameBox = driver.FindElementById("email");

                // 4. Enter the text (to search for) in the textbox
                userNameBox.SendKeys(textBoxUSERNAME.Text);

                // 3. Find the username textbox (by ID) on the homepage
                var userpasswordBox = driver.FindElementById("pass");

                // 4. Enter the text (to search for) in the textbox
                userpasswordBox.SendKeys(textBoxPASSWORD.Text);
                Thread.Sleep(5000);

                // 5. Find the search button (by Name) on the homepage
                driver.FindElementById("loginbutton").Click();
                //searchButton.Click();
                Thread.Sleep(2500);
            }

            string urlFriend = textBoxUSERNAMEFRIENDS.Text;

            System.Random rnd = new System.Random();
            int nbreAnnee = 1;


            if (!profilIsSet)
                GetProfileInformationsForBusiness(backgroundWorker1);


            try
            {

                //backgroundWorker1.ReportProgress(-130);
                string targetName = textBoxops.Text;
                
                Dictionary<string, string> dicoMessagesFrom = new Dictionary<string, string>();
                Dictionary<string, string> messagesVisibles = new Dictionary<string, string>();
                Dictionary<string, string> messagesVisiblesForFile = new Dictionary<string, string>();

                int newHauteur = 0;

                int width = driver.Manage().Window.Size.Width;
                int height = driver.Manage().Window.Size.Height;



                if (!Directory.Exists(pathToSave + @"\HOMEPAGE\"))
                    Directory.CreateDirectory(pathToSave + @"\HOMEPAGE\");


                //driver.Navigate().GoToUrl(urlFriend + "/posts/?ref=page_internal");
                driver.Navigate().GoToUrl(urlFriend);
                Thread.Sleep(5000);

                if (isElementFlyOutPresent(driver))
                {
                    driver.FindElementByXPath("//div[@class='fbNubFlyout fbDockChatTabFlyout uiContextualLayerParent']");

                    IList<IWebElement> el = driver.FindElementsByXPath("//div[@class='fbNubFlyout fbDockChatTabFlyout uiContextualLayerParent']");
                    foreach (IWebElement ell in el)
                    {
                        IList<IWebElement> divs = ell.FindElements(By.ClassName("close"));

                        foreach (IWebElement divv in divs)
                        {

                            try
                            {
                                divv.Click();
                                break;
                            }
                            catch
                            {

                            }


                        }
                    }

                }

                try
                {
                    Object lastHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight");


                    int i = 1;
                    int hauteur = 450;

                    ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 0);"); //Scroll To Top

                    Object innerHeight = ((IJavaScriptExecutor)driver).ExecuteScript("return window.innerHeight;");
                    long innerHeightt = (long)innerHeight;
                    long scroll = (long)innerHeight;
                    long scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                    scrollHeight = scrollHeight + scroll;

                    IList<IWebElement> elements = driver.FindElements(By.XPath("//div[@class='_5pcr userContentWrapper']"));
                    IList<IWebElement> elementsNew = driver.FindElements(By.TagName("div"));

                    IWebElement toResize = null;
                    if (toResize == null)
                        foreach (IWebElement el in elementsNew)
                        {
                            if (el.Size.Width == 500)
                            {
                                toResize = el;
                                break;
                            }

                        }

                    while (scrollHeight >= innerHeightt)
                    {


                        if (elementsNew.Count > 0)//newLook
                        {

                            CaptureElementScreenShot(toResize, pathToSave + @"\HOMEPAGE\" + "ElementScreenshot_" + i + ".png");

                            Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                            imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                            //Save the screenshot
                            imageScreenshott.SaveAsFile(pathToSave + @"\HOMEPAGE\" + "Screenshot_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                            Thread.Sleep(100);

                            string pathToFile = pathToSave + @"\HOMEPAGE\" + "Screenshot_" + i + ".png";

                            if (!FASTJOURNALFORBUSINESS)
                            {


                                var messageFromm = driver.FindElementsByXPath("//div[@class='_5pcr userContentWrapper']");



                                ////on récupère les message provenant de from
                                object[] messageFroms = messageFromm.ToArray();

                                foreach (OpenQA.Selenium.Remote.RemoteWebElement o in messageFroms)
                                {

                                    string tentation = o.ToString();
                                    string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                    if (!dicoMessagesFrom.ContainsKey(idd))
                                    {
                                        dicoMessagesFrom.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                    }
                                    //else
                                    //    continue;

                                    if (o.LocationOnScreenOnceScrolledIntoView.Y > 15 && o.LocationOnScreenOnceScrolledIntoView.Y < (height - 250))
                                    {
                                        if (!messagesVisibles.ContainsKey(idd) && o.Text != "")
                                        {
                                            messagesVisibles.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                        }
                                    }

                                }

                                foreach (string cle in messagesVisibles.Keys)
                                {

                                    if (!messagesVisiblesForFile.ContainsKey(cle))
                                    {

                                        string[] lignes = messagesVisibles[cle].Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);

                                        string tmp = "";
                                        foreach (string li in lignes)
                                        {
                                            tmp += li.Trim().Replace("\r", "").Replace(";", "");
                                        }



                                        messagesVisiblesForFile.Add(cle, tmp + ";" + pathToFile + "\n");
                                    }

                                }

                            }

                        }
                        else
                        {
                            IWebElement findePage = null;

                            if (elements.Count > 0)
                            {
                                findePage = elements[0];
                                foreach (IWebElement el in elements)
                                {
                                    IList<IWebElement> ell = el.FindElements(By.TagName("i"));
                                    findePage = ell[0];
                                    //MakeElemScreenshot(driver, el);
                                    CaptureElementScreenShot(el, pathToSave + @"\HOMEPAGE\" + "ElementScreenshot_" + i + ".png");


                                    break;
                                }
                            }

                            if (!FASTJOURNALFORBUSINESS)
                            {


                                var messageFromm = driver.FindElementsByXPath("//div[@class='_5pcr userContentWrapper']");



                                ////on récupère les message provenant de from
                                object[] messageFroms = messageFromm.ToArray();

                                foreach (OpenQA.Selenium.Remote.RemoteWebElement o in messageFroms)
                                {

                                    string tentation = o.ToString();
                                    string idd = tentation.Substring(tentation.IndexOf("Element (id = ") + 14).Split(')')[0];

                                    if (!dicoMessagesFrom.ContainsKey(idd))
                                    {
                                        dicoMessagesFrom.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                    }
                                    //else
                                    //    continue;

                                    if (o.LocationOnScreenOnceScrolledIntoView.Y > 15 && o.LocationOnScreenOnceScrolledIntoView.Y < (height - 250))
                                    {
                                        if (!messagesVisibles.ContainsKey(idd) && o.Text != "")
                                        {
                                            messagesVisibles.Add(idd, o.Text.Trim().Replace("\n", "").Replace("\t", ""));
                                        }
                                    }

                                }

                            }


                            var messageFrom = driver.FindElementsByXPath("//div[@class='_5pcr userContentWrapper']");


                            Screenshot imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();
                            imageScreenshott = ((ITakesScreenshot)driver).GetScreenshot();

                            //Save the screenshot
                            imageScreenshott.SaveAsFile(pathToSave + @"\HOMEPAGE\" + "Screenshot_" + i + ".png", OpenQA.Selenium.ScreenshotImageFormat.Png);
                            Thread.Sleep(100);

                            string pathToFile = pathToSave + @"\HOMEPAGE\" + "Screenshot_" + i + ".png";

                            foreach (string cle in messagesVisibles.Keys)
                            {

                                if (!messagesVisiblesForFile.ContainsKey(cle))
                                {

                                    string[] lignes = messagesVisibles[cle].Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries);

                                    string tmp = "";
                                    foreach (string li in lignes)
                                    {
                                        tmp += li.Trim().Replace("\r", "").Replace(";", "");
                                    }



                                    messagesVisiblesForFile.Add(cle, tmp + ";" + pathToFile + "\n");
                                }

                            }
                        }



                        ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                        if ((scrollHeight - innerHeightt) < 200)
                        {
                            Thread.Sleep(5000);
                        }
                        else
                            Thread.Sleep(500);


                        scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");
                        Thread.Sleep(2000);


                        if (scrollHeight <= innerHeightt)
                        {
                            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollBy(0, " + hauteur + ");");
                            Thread.Sleep(2000);
                            scrollHeight = (long)((IJavaScriptExecutor)driver).ExecuteScript("return document.body.scrollHeight;");

                        }

                        scrollHeight = scrollHeight + scroll;
                        innerHeightt = innerHeightt + hauteur;
                        i++;

                    }
                }
                catch (Exception ex)
                {
                    //e.printStackTrace();
                }
                try
                {
                    string codePage = driver.PageSource;

                    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\HOMEPAGE\\Journal.html", false))
                    {
                        //if (File.Exists(saveFileDialog1.FileName))
                        //    File.Delete(saveFileDialog1.FileName);


                        file.Write(codePage);
                    }

                    if (!FASTJOURNAL)
                    {
                        Dictionary<string, string> newDico = new Dictionary<string, string>();
                        using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\HOMEPAGE\\friendsFromHomepage.txt", false))
                        {
                            //on essaie de recuperer les identifiants
                            string[] idfs = codePage.Split(new string[] { "<a class=\"_6qw4\"" }, StringSplitOptions.RemoveEmptyEntries);
                            //string resultat = "";
                            string id = "";
                            string username = "";
                            string url = "";
                            //Dictionary<string, string> resultats = new Dictionary<string, string>();



                            foreach (string li in idfs)
                            {
                                string tmp = li.Trim();
                                if (tmp.StartsWith("data-hovercard=") && tmp.Contains("?id="))
                                {
                                    id = tmp.Substring(tmp.IndexOf("?id=") + 4).Split('&')[0];

                                    if (tmp.Contains("href=\""))
                                    {


                                        url = "https://www.facebook.com/" + tmp.Substring(tmp.IndexOf("href=\"") + 6).Split('?')[0].Replace(";", "");
                                        username = tmp.Substring(tmp.IndexOf("\">") + 2).Split('<')[0];
                                    }

                                    resultat = url + ";" + username + ";" + id + "\n";
                                    if (!resultats.ContainsKey(resultat))
                                    {
                                        resultats.Add(resultat, resultat);
                                    }

                                }
                            }

                            idfs = codePage.Split(new string[] { "<a title=\"" }, StringSplitOptions.RemoveEmptyEntries);

                            foreach (string li in idfs)
                            {
                                string tmp = li.Trim();
                                if (tmp.Contains("href=\"") && tmp.Contains("?id="))


                                {
                                    id = tmp.Substring(tmp.IndexOf("?id=") + 4).Split('&')[0];

                                    if (tmp.Contains("href=\""))
                                    {
                                        url = tmp.Substring(tmp.IndexOf("href=\"") + 6).Split('?')[0].Replace(";", "");
                                        username = tmp.Split('"')[0];
                                    }

                                    resultat = url + ";" + username + ";" + id + "\n";
                                    if (!resultats.ContainsKey(resultat))
                                    {
                                        resultats.Add(resultat, resultat);
                                    }


                                }
                            }

                            idfs = codePage.Split(new string[] { "<a class=\"profileLink" }, StringSplitOptions.RemoveEmptyEntries);
                            foreach (string li in idfs)
                            {
                                string tmp = li.Trim();
                                if (tmp.StartsWith("\" title=\"") && tmp.Contains("?id="))
                                {
                                    id = tmp.Substring(tmp.IndexOf("?id=") + 4).Split('&')[0];



                                    if (tmp.Contains("href=\""))
                                    {
                                        url = tmp.Substring(tmp.IndexOf("href=\"") + 6).Split('?')[0].Replace(";", "");
                                        username = tmp.Substring(tmp.IndexOf("\" title=\"") + 9).Split('"')[0];
                                    }

                                    resultat = url + ";" + username + ";" + id + "\n";
                                    if (!resultats.ContainsKey(resultat))
                                    {
                                        resultats.Add(resultat, resultat);
                                    }


                                }
                            }

                           

                            string pourFichier = "";
                            foreach (string l in resultats.Values)
                            {
                                if (l.Contains("<img class") || l.Contains("<div class"))
                                    continue;
                                pourFichier += l;
                            }

                            file.Write(pourFichier);
                        }

                        //if (newDico.Count() > 0)
                        //{
                        //    using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\HOMEPAGE\\AllContactsFromHomepage.txt", false))
                        //    {
                        //        string pourFichier = "";
                        //        foreach (string ll in newDico.Values)
                        //        {
                        //            pourFichier += ll;
                        //        }
                        //        file.Write(pourFichier);
                        //    }
                        //}
                        //using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\HOMEPAGE\\HomepageComments_With_Screenshots.txt", false))
                        //{
                        //    string textes = "";
                        //    foreach (string t in messagesVisiblesForFile.Values)
                        //    {
                        //        textes += t;
                        //    }


                        //    file.Write(textes);
                        //    messagesVisiblesForFile = new Dictionary<string, string>();
                        //}
                    }




                }
                catch (Exception ex)
                {

                }


                using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\HOMEPAGE\\HomepageComments_With_Screenshots.txt", false))
                {
                    string textes = "";
                    foreach (string t in messagesVisiblesForFile.Values)
                    {
                        textes += t;
                    }


                    file.Write(textes);
                    messagesVisiblesForFile = new Dictionary<string, string>();
                }

                Thread.Sleep(2500);

               

            }
            catch (OpenQA.Selenium.NoSuchElementException ex)//si pas d'acces à la page on essaie les annees manuellement
            {
                try
                {
                    string targetName = textBoxops.Text;


                    string[] liYears = new string[] { DateTime.Now.Year.ToString(), ((DateTime.Now.Year) - 1).ToString() };

                    if (!Directory.Exists(pathToSave))
                        Directory.CreateDirectory(pathToSave);

                    backgroundWorkerJournal.ReportProgress(-1, liYears.Length);

                    //label18.Text = "Téléchargement des comments en cours ";
                    foreach (string y in liYears)
                    {
                        driver.Navigate().GoToUrl(urlFriend);
                        Thread.Sleep(5000);

                        while (!isElementPresentForComment(driver))
                        {


                            ((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, document.body.scrollHeight)");

                            //((IJavaScriptExecutor)driver).ExecuteScript("window.scrollTo(0, 100)");
                            Thread.Sleep(rnd.Next(500, 1500));



                        }


                        string codePage = driver.PageSource;

                        using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\HOMEPAGE\\Journal.html", false))
                        {
                            //if (File.Exists(saveFileDialog1.FileName))
                            //    File.Delete(saveFileDialog1.FileName);

                            file.Write(codePage);
                        }

                        //backgroundWorkerJournal.ReportProgress(nbreAnnee);
                        Thread.Sleep(100);
                        nbreAnnee++;
                    }






                    //driver.Close();



                }
                catch
                {

                }

            }


            //}
            //Thread.Sleep(2000);
            backgroundWorker1.ReportProgress(-122);
            Thread.Sleep(2000);
            backgroundWorker1.CancelAsync();
            //comments = false;
            //labelanalyseencours.Visible = false;
            //pictureBoxwaiting.Visible = false;
            //pictureBoxlogofacebook.Visible = false;

        }



        private void FillIdentifiantsImport(string pathConfig)
        {
            Dictionary<string, string> identifiants = new Dictionary<string, string>();
            dataGridViewIdentifiants.Rows.Clear();

            

            //Friends
            if (File.Exists(pathToSave + "\\TXT\\friends.txt"))
            {
                string[] lines = File.ReadAllLines(pathToSave + "\\TXT\\friends.txt");
                foreach (string li in lines)
                {
                    if (!identifiants.ContainsKey(li.Split(';')[2]))
                    {
                        identifiants.Add(li.Split(';')[2], li);
                    }
                }
                pictureBoxfriends.Visible = true;
            }

            //Friends
            if (File.Exists(pathToSave + "\\TXT\\followers.txt"))
            {
                string[] lines = File.ReadAllLines(pathToSave + "\\TXT\\followers.txt");
                foreach (string li in lines)
                {
                    if (!identifiants.ContainsKey(li.Split(';')[2]))
                    {
                        identifiants.Add(li.Split(';')[2], li);
                    }
                }
            }

            //FriendsFromPictures
            if (File.Exists(pathToSave + "\\PICTURES\\friendsFromComments.txt"))
            {
                string[] lines = File.ReadAllLines(pathToSave + "\\PICTURES\\friendsFromComments.txt");
                string tmp = "";
                foreach (string li in lines)
                {
                    string[] ident = li.Split(';');

                    string url = ident[0];
                    string username = ident[1];
                    string id = ident[2];

                    if (ident[0].Contains("?fref"))
                    {
                        url = ident[0].Split(new string[] { "?fref" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    }
                    if (ident[0].Contains("&fref"))
                    {
                        url = ident[0].Split(new string[] { "&fref" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    }
                    if (ident[0].Contains("&href"))
                    {
                        url = ident[0].Split(new string[] { "&href" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    }
                    if (ident[0].Contains("?comment"))
                    {
                        url = ident[0].Split(new string[] { "?comment" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    }
                    if (ident[0].Contains("&comment"))
                    {
                        url = ident[0].Split(new string[] { "&comment" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    }

                    tmp = url + ";" + username + ";" + id + "\n";

                    if (!identifiants.ContainsKey(id))
                    {
                        identifiants.Add(id, tmp);
                    }
                }
            }

            //FriendsFromPictures
            if (File.Exists(pathToSave + "\\HOMEPAGE\\friendsFromHomepage.txt"))
            {
                string[] lines = File.ReadAllLines(pathToSave + "\\HOMEPAGE\\friendsFromHomepage.txt");
                string tmp = "";
                foreach (string li in lines)
                {
                    string[] ident = li.Split(';');

                    string url = ident[0];
                    string username = ident[1];
                    string id = ident[2];

                    if (ident[0].Contains("?fref"))
                    {
                        url = ident[0].Split(new string[] { "?fref" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    }
                    if (ident[0].Contains("&fref"))
                    {
                        url = ident[0].Split(new string[] { "&fref" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    }
                    if (ident[0].Contains("&href"))
                    {
                        url = ident[0].Split(new string[] { "&href" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    }
                    if (ident[0].Contains("?comment"))
                    {
                        url = ident[0].Split(new string[] { "?comment" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    }
                    if (ident[0].Contains("&comment"))
                    {
                        url = ident[0].Split(new string[] { "&comment" }, StringSplitOptions.RemoveEmptyEntries)[0];
                    }

                    tmp = url + ";" + username + ";" + id + "\n";


                    if (!identifiants.ContainsKey(id))
                    {
                        identifiants.Add(id, tmp.Trim());
                    }
                }
            }

            if (identifiants.Count > 0)
            {
                foreach (string li in identifiants.Values)
                {
                    dataGridViewIdentifiants.Rows.Add(li.Split(';')[0], li.Split(';')[1], li.Split(';')[2]);
                }
            }

            if (!Directory.Exists(pathToSave + "\\TXT"))
                Directory.CreateDirectory(pathToSave + "\\TXT");

            if (!File.Exists(pathToSave + "\\TXT\\AllIdentifiants.txt"))
                using (System.IO.StreamWriter file = new System.IO.StreamWriter(pathToSave + "\\TXT\\AllIdentifiants.txt", false))
                {
                    string textes = "";
                    foreach (string li in identifiants.Values)
                    {
                        textes += li.Trim() + "\n";
                    }

                    file.Write(textes);

                }
        }
        private void FillParametersImport(string pathConfig)
        {
            

            //SessionsActives
            if (File.Exists(pathConfig + "\\PARAMETERS\\SessionsActives.txt"))
            {
                string[] lines = File.ReadAllLines(pathConfig +  "\\PARAMETERS\\SessionsActives.txt");
                foreach (string li in lines)
                {
                    if (li.Contains("Modifier"))
                    {
                        string lii = li.Replace("Modifier", "\n");

                        richTextBoxSessionsActives.Text += lii + "\n";
                    }
                    else
                        richTextBoxSessionsActives.Text += li + "\n";

                }

                pictureBoxParam.Visible = true;
            }

            //Connexionsdeconnexions
            if (File.Exists(pathConfig + "\\PARAMETERS\\ConnexionsDeconnexions.txt"))
            {
                string[] lines = File.ReadAllLines(pathConfig + "\\PARAMETERS\\ConnexionsDeconnexions.txt");
                foreach (string li in lines)
                {
                    richTextBoxConnexionsDeconnexions.Text += li + "\n";
                }

                pictureBoxParam.Visible = true;
            }

            //Recherches
            if (File.Exists(pathConfig + "\\PARAMETERS\\Recherches.txt"))
            {
                string[] lines = File.ReadAllLines(pathConfig + "\\PARAMETERS\\Recherches.txt");
                foreach (string li in lines)
                {
                    richTextBoxRecherches.Text += li + "\n";
                }

                pictureBoxParam.Visible = true;
            }
            //Connexions
            if (File.Exists(pathConfig + "\\PARAMETERS\\Connexions.txt"))
            {
                string[] lines = File.ReadAllLines(pathConfig + "\\PARAMETERS\\Connexions.txt");
                foreach (string li in lines)
                {
                    richTextBox1Connexions.Text += li + "\n";
                }

                pictureBoxParam.Visible = true;
            }

            //Parametres
            if (File.Exists(pathConfig +  "\\PARAMETERS\\Parametres.txt"))
            {
                string[] lines = File.ReadAllLines(pathConfig + "\\PARAMETERS\\Parametres.txt");
                foreach (string li in lines)
                {
                    richTextBoxparam.Text += li + "\n";
                }

                pictureBoxParam.Visible = true;
            }


        }

        private void dataGridViewIdentifiants_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            if(dataGridViewIdentifiants.Rows[e.RowIndex].Cells[2].Value.ToString() != "")
            {
                Process.Start("https://www.facebook.com/" + dataGridViewIdentifiants.Rows[e.RowIndex].Cells[2].Value.ToString().Trim());
            }
            else
            Process.Start(dataGridViewIdentifiants.Rows[e.RowIndex].Cells[0].Value.ToString());
        }

        private void dataGridViewJournal_Scroll(object sender, ScrollEventArgs e)
        {

            string texteAGarder = deA.Text.Split('/')[1];
            string numero = deA.Text.Split('/')[0].Replace("_____", "");
            Int32.Parse(numero);
            int step = dataGridViewJournal.FirstDisplayedScrollingRowIndex == 0 ? 0 : dataGridViewJournal.FirstDisplayedScrollingRowIndex;


            deA.Text = "_____" + (step + (Next - STEPP)) + "/" + texteAGarder;
            //deA.Text = deA.Text.Replace(texteAremplacer, dataGridViewJournal.FirstDisplayedScrollingRowIndex.ToString() + "/");



        }

        private void textBoxops_Validated(object sender, EventArgs e)
        {
           
        }

        private void button8_Click(object sender, EventArgs e)
        {

        }

        private void button8_Click_1(object sender, EventArgs e)
        {
            DateTime tempss;
            CultureInfo culture = new CultureInfo("fr-FR");
            string datum = "15 MAI 2020 à 22:22".Split('à')[0].Replace(" ", "/");
            tempss = Convert.ToDateTime("15/MAI/2020 à 22:22".Split('à')[0], culture);
            DateTime date2 = new DateTime(2020, 5, 1, 0, 0, 0);
        }

        private void dataGridViewForPictures_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            Process.Start(dataGridViewForPictures.Rows[e.RowIndex].Cells[0].Value.ToString());
        }

        private void contextMenuStrip3_ItemClicked(object sender, ToolStripItemClickedEventArgs e)
        {
            ContextMenuStrip menu = sender as ContextMenuStrip;
            Control sourceControl = menu.SourceControl;
            //PictureBox destination = ((PictureBox)sender);

            string pathToFolder = dataGridViewMessenger.SelectedRows[0].Cells[4].Value.ToString().Replace(".\\", "\\");
            string folderName = dataGridViewMessenger.SelectedRows[0].Cells[1].Value.ToString();

            PictureBox box = new PictureBox();
            box.Size = new Size(500, 500);
            box.Image = (Image)((DataGridView)sourceControl).SelectedRows[0].Cells[0].Value;
            //box.BorderStyle = BorderStyle.FixedSingle;
            box.Cursor = Cursors.Hand;
            box.SizeMode = System.Windows.Forms.PictureBoxSizeMode.Zoom;
            box.ContextMenuStrip = contextMenuStrip2;
            box.Name = pathToFolder + "\\Messenger_" + folderName.Trim() + "_" + (((DataGridView)sourceControl).SelectedRows[0].Index + 1).ToString();

            flowLayoutPanelAnnexe.Controls.Add(box);
        }

        private void checkBox8_CheckedChanged(object sender, EventArgs e)
        {
            if (checkBox8.Checked)
                FASTMESSENGER = true;
            else
                FASTMESSENGER = false;
        }

        private void checkBox9_CheckedChanged(object sender, EventArgs e)
        {
            if (checkBox9.Checked)
                FASTJOURNAL = true;
            else
                FASTJOURNAL = false;
        }

        private void checkBox9_CheckedChanged_1(object sender, EventArgs e)
        {
            checkBox2.Checked = checkBox9.Checked;
        }

        private void checkBox6_CheckedChanged(object sender, EventArgs e)
        {
            checkBox3.Checked = checkBox6.Checked;
        }

        private void checkBoxBusinessMode_CheckedChanged(object sender, EventArgs e)
        {
            //label13.Visible = checkBoxDiscreetMode.Checked;
            //pictureBox36.Visible = checkBoxDiscreetMode.Checked;
            //panelBusiness.Visible = checkBoxDiscreetMode.Checked;
            //panelTopBusiness.Visible = checkBoxDiscreetMode.Checked;
            //panel24.Visible = !checkBoxDiscreetMode.Checked;
            //panel30.Visible = !checkBoxDiscreetMode.Checked;
            //panel13.Visible = !checkBoxDiscreetMode.Checked;
            //panelBusinessResults.Visible = checkBoxDiscreetMode.Checked;
            //panelBusinessInProgress.Visible = checkBoxDiscreetMode.Checked;
            //BUSINESSMODE = checkBoxDiscreetMode.Checked;

            if(driver != null)
            {
                driver.Close();
                driver.Quit();
                driver = null;
                //InitializeDriver();
            }
            



            //TabControl tabControlBusiness = tabControl1;
            if (checkBoxDiscreetMode.Checked)
            {
                
                //tabControl1.TabPages.Remove(tabPageresults);
                //tabControl1.TabPages.Remove(MESSENGERR);
                //tabControl1.TabPages.Remove(tabPage2);
                //tabControl1.TabPages.Insert(2,tabPage5);
                checkBoxDiscreetMode.BackColor = Color.Black;
                checkBoxDiscreetMode.ForeColor = Color.White;
                panel1.BackColor = Color.Black;
                panel24.BackColor = Color.Black;
                panel22.BackColor = Color.Black;
                paneltango.BackColor = Color.Black;
                panel30.BackColor = Color.Black;
                panel14.BackColor = Color.Black;
                panelops.BackColor = Color.Black;
                pictureBoxtango.BackColor = Color.Black;
                pictureBoxtango.Image = global::FacebookAnalyzer.Properties.Resources.targetFacebook3B;
                panel3.BackColor = Color.White;
                panel4.BackColor = Color.White;
                oval.BackColor = Color.Black;



                //checkBox1.Checked = false;
                //checkBox2.Checked = false;
                //checkBox3.Checked = false;
                //checkBox4.Checked = false;
                //checkBox5.Checked = false;
                //checkBox6.Checked = false;
                //checkBox9.Checked = false;
                //tabControl1.Visible = !checkBoxBusinessMode.Checked;
                //tabControlBusiness.Visible = checkBoxBusinessMode.Checked;
                //this.Controls.Add(tabControlBusiness);
                //tabControlBusiness.BringToFront();
            }
            else
            {
                //this.Controls.Remove(tabControlBusiness);
                checkBoxDiscreetMode.BackColor = Color.White;
                checkBoxDiscreetMode.ForeColor = Color.Black;
                panel1.BackColor = Color.FromArgb(23, 120, 242);
                panel24.BackColor = Color.FromArgb(23, 120, 242);
                panel22.BackColor = Color.FromArgb(23, 120, 242);
                paneltango.BackColor = Color.FromArgb(23, 120, 242);
                panel30.BackColor = Color.FromArgb(23, 120, 242);
                panel14.BackColor = Color.FromArgb(23, 120, 242);
                panelops.BackColor = Color.FromArgb(23, 120, 242);
                pictureBoxtango.BackColor = Color.FromArgb(23, 120, 242);
                pictureBoxtango.Image = global::FacebookAnalyzer.Properties.Resources.targetFacebook3;
                panel3.BackColor = Color.Black;
                panel4.BackColor = Color.Black;
                oval.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(23)))), ((int)(((byte)(120)))), ((int)(((byte)(242)))));

                //tabControl1.TabPages.Insert(1, tabPageresults);
                //tabControl1.TabPages.Insert(3, tabPage2);
                //tabControl1.TabPages.Insert(4, MESSENGERR);
                //tabControl1.TabPages.Remove(tabPage5);
                //tabControl1.Visible = true;
                //tabControl1.BringToFront();
                //this.Controls.Add(tabControl1);
                //tabControl1.BringToFront();
            }

        }

        private void checkBoxBusinessFastPictures_CheckedChanged(object sender, EventArgs e)
        {
            checkBoxBusinessPictures.Checked = checkBoxBusinessFastPictures.Checked;
        }

        private void checkBoxBusinessFastJournal_CheckedChanged(object sender, EventArgs e)
        {
            checkBoxBusinessJournal.Checked = checkBoxBusinessFastJournal.Checked;
            FASTJOURNALFORBUSINESS = checkBoxBusinessFastJournal.Checked;
        }
        private void FillPicturesViewForBusiness()
        {
            if (!Directory.Exists(pathToSave + "\\PICTURES"))
                return;


            var sorted = Directory.GetFiles(pathToSave + "\\PICTURES", "*.png").Select(fn => new FileInfo(fn)).Where(f => f.Name.StartsWith("Element")).OrderBy(f => f.LastWriteTime);
            fichiersImagess = sorted.ToArray();

            dataGridView3.Rows.Clear();

            Rectangle rect = GetResolutionScreen();
            int hauteurGrid = dataGridView3.Size.Height;
            int hauteurForm = JOURNAL.Size.Height;

            int indexPage = 0;
            Previous = 0;

            foreach (FileInfo fichier in fichiersImagess)
            {

                if (indexPage == STEPP)
                    break;
                Image tmp = Image.FromFile(fichier.FullName);
                int differentiel = tmp.Width - tmp.Height;
                Image imgg = (Image)(new Bitmap(Image.FromFile(fichier.FullName), new Size(tmp.Width - 119, hauteurForm - 120)));
                //Image img = CreateThumbnail(fichier.FullName, hauteurForm - 79, hauteurForm - 120);

                dataGridView3.Rows.Add(imgg);


                indexPage++;
            }

            Next = STEPP;
            label18.Text = fichiersImagess.Length + " screenshots";
            //deA.Text = "_________0/xx________".Replace("/xx", "/" + (0 + STEPP - 1).ToString());
            label26.Text = "_____0/xx_____".Replace("/xx", "/" + (fichiersImagess.Length - 1).ToString());



        }

        private void pictureBox34_Click(object sender, EventArgs e)
        {
            FillPicturesViewForBusiness();
        }

        private void pictureBox53_Click(object sender, EventArgs e)
        {
            if (Next > fichiersImagess.Length)
                return;

            foreach (DataGridViewRow row in dataGridView3.Rows)
            {
                Image img = (Image)row.Cells[0].Value;
                img.Dispose();


            }
            GC.Collect();

            dataGridView3.Rows.Clear();


            for (int i = Next; i < Next + STEPP; i++)
            {

                if (i == Next + STEPP)
                    break;

                if (i > fichiersImagess.Length - 1)
                    break;

                FileInfo fichier = fichiersImagess[i];

                Rectangle rect = GetResolutionScreen();
                int hauteurGrid = dataGridView3.Size.Height;
                int hauteurForm = JOURNAL.Size.Height;

                try
                {

                    Image img = Image.FromFile(fichier.FullName);
                    Image imgg = (Image)(new Bitmap(Image.FromFile(fichier.FullName), new Size(img.Width - 119, hauteurForm - 120)));
                    dataGridView3.Rows.Add(img);


                }
                catch (Exception ex)
                {
                    MessageBox.Show("error " + fichier.FullName);
                }

            }

            Next += STEPP;
            label26.Text = "_____xx/xx_____".Replace("/xx", "/" + (fichiersImagess.Length - 1).ToString()).Replace("xx/", (0 + (Next - STEPP)).ToString() + "/");
            //deA.Text = "_________xx/xx________".Replace("xx/", (0 + (Next - STEPP)).ToString() + "/");
        }

        private void pictureBox38_Click(object sender, EventArgs e)
        {
            if ((Next - (STEPP * 2)) < 0)
                return;

            foreach (DataGridViewRow row in dataGridView3.Rows)
            {
                Image img = (Image)row.Cells[0].Value;
                img.Dispose();


            }
            GC.Collect();

            dataGridView3.Rows.Clear();

            for (int i = (Next - (STEPP * 2)); i <= Next - STEPP; i++)
            {

                //if (i == Next - STEPP)
                //    break;

                FileInfo fichier = fichiersImagess[i];

                Rectangle rect = GetResolutionScreen();
                int hauteurGrid = dataGridView3.Size.Height;
                int hauteurForm = JOURNAL.Size.Height;

                Image img = Image.FromFile(fichier.FullName);
                Image imgg = (Image)(new Bitmap(Image.FromFile(fichier.FullName), new Size(img.Width - 119, hauteurForm - 120)));
                dataGridView3.Rows.Add(imgg);



            }


            label26.Text = "_____xx/xx_____".Replace("/xx", "/" + (fichiersImagess.Length - 1).ToString()).Replace("xx/", (Next - (STEPP * 2) + 0) + "/");
            //deA.Text = "_________xx/xx________".Replace("xx/", (Next - (STEPP * 2) + 0) + "/");

            Next -= STEPP;
        }

        private void dataGridView3_Scroll(object sender, ScrollEventArgs e)
        {
            string texteAGarder = label26.Text.Split('/')[1];
            string numero = label26.Text.Split('/')[0].Replace("_____", "");
            Int32.Parse(numero);
            int step = dataGridView3.FirstDisplayedScrollingRowIndex == 0 ? 0 : dataGridView3.FirstDisplayedScrollingRowIndex;


            label26.Text = "_____" + (step + (Next - STEPP)) + "/" + texteAGarder;
        }

        private void contextMenuStrip5_ItemClicked(object sender, ToolStripItemClickedEventArgs e)
        {
            ContextMenuStrip menu = sender as ContextMenuStrip;
            Control sourceControl = menu.SourceControl;
            //PictureBox destination = ((PictureBox)sender);

            PictureBox box = new PictureBox();
            box.Size = new Size(500, 500);
            box.Image = (Image)((DataGridView)sourceControl).SelectedRows[0].Cells[0].Value;
            //box.BorderStyle = BorderStyle.FixedSingle;
            box.Cursor = Cursors.Hand;
            box.SizeMode = System.Windows.Forms.PictureBoxSizeMode.Zoom;
            box.ContextMenuStrip = contextMenuStrip2;
            box.Name = "\\PICTURES\\ElementScreenshot_" + (((DataGridView)sourceControl).SelectedRows[0].Index + 1).ToString();
            flowLayoutPanelAnnexe.Controls.Add(box);
        }

        private void dataGridViewLikes_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            Process.Start(dataGridViewLikes.Rows[e.RowIndex].Cells[1].Value.ToString());
        }

        private void button8_Click_2(object sender, EventArgs e)
        {
            if (!pathToSave.Contains(textBoxops.Text))
                pathToSave += textBoxops.Text;

            FillDataGridMessengerFromFile();
        }

        private void FillDataGridMessengerFromFile()
        {
            
            if(openFileDialog2.ShowDialog() == DialogResult.OK)            
            //if(File.Exists(pathToSave + "\\Messenger\\ContactsForGrid.txt"))
            {
                string[] lignes = File.ReadAllLines(openFileDialog2.FileName);

                foreach (DataGridViewRow row in dataGridViewMessenger.Rows)
                {
                    Image img = (Image)row.Cells[0].Value;
                    img.Dispose();


                }
                GC.Collect();

                dataGridViewMessenger.Rows.Clear();

                foreach (string li in lignes)
                {
                    string[] param = li.Split(';');

                    //texteForContactsMessenger += forGr.Username + ";" + pathToFolder + ";" + forGr.Url + ";" + forGridd.PathToPicture + "\n";
                    Image image = Image.FromFile(param[3]);
                    FillDataGridViewMessenger(image, param[0], param[2], param[1]);
                }
            }
        }

        private void button9_Click(object sender, EventArgs e)
        {
            if (textBoxops.Text == "")
            {
                textBoxops.BackColor = Color.Red;
                MessageBox.Show("Veuillez remplir le champ OPS");
                return;
            }
            else
                textBoxops.BackColor = Color.White;

            if (textBoxTitrePage.Text == "")
            {
                textBoxTitrePage.BackColor = Color.Red;
                MessageBox.Show("Veuillez remplir le champ OPS");
                return;
            }
            else
                textBoxTitrePage.BackColor = Color.White;

            if(!pathToSave.Contains(textBoxops.Text))
                pathToSave += textBoxops.Text;

            FROMURL = true;
            pictureBoxwaitingurl.Visible = true;
            pictureBoxwaitingurl.Refresh();

            IsANewThread("URL");
        }

        private void dataGridViewTags_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            if (dataGridViewTags.Rows.Count == 0)
                return;

            Process.Start(pathToSave + "\\PICTURES_TAGGED\\" + dataGridViewTags.Rows[e.RowIndex].Cells[3].Value.ToString());
        }

        private void pictureBox25_Click(object sender, EventArgs e)
        {
           // panelAbout.Visible =! panelAbout.Visible;
        }

        private void linkRCCU_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
        {
            Process.Start("mailto:frank.bastin@police.belgium.eu");
        }

        private void pictureBox25_MouseLeave(object sender, EventArgs e)
        {
            
        }

        private void checkBoxNewLook_CheckedChanged(object sender, EventArgs e)
        {
            dateTimePicker5.Visible = !checkBoxNewLook.Checked;

            if (checkBoxNewLook.Checked)
            {
                label14.Text = "à partir de";
                label14.Location = new Point(1, label14.Location.Y);
            }

            else
            {
                label14.Text = "à";
                label14.Location = new Point(61, label14.Location.Y);
            }
        }

        private void pictureBox59_DoubleClick(object sender, EventArgs e)
        {

        }

        private void pictureBox59_Click(object sender, EventArgs e)
        {
            Process.Start("mailto:frank.bastin@police.belgium.eu");
        }

        private void button4_Click(object sender, EventArgs e)
        {


            dataGridView8.Rows.Clear();
            //richTextBox1.Visible = true;

            openFileDialog1.FileName = "";
            openFileDialog1.Filter = "TXT Files (*.txt)|*.txt";


            openFileDialog1.ShowDialog();
            if (openFileDialog1.SafeFileName == "")
                return;

            string[] lignes = File.ReadAllLines(openFileDialog1.FileName);

            foreach (string l in lignes)
            {
                string[] fields = l.Split(';');
                string contact = fields[1];
                string url = fields[0];

                dataGridView8.Rows.Add(url, contact);
            }


        }

        private void button11_Click(object sender, EventArgs e)
        {
            string[] lignes = richTextBox1.Text.Split(new String[] { "\n" }, StringSplitOptions.None);
            dataGridView4.Rows.Clear();
            Dictionary<string, string> dico = new Dictionary<string, string>();

            foreach (string l in lignes)
            {
                int i = 0;
                string photos = "";
                if (!dico.Keys.Contains(l))
                {
                    dico.Add(l, l);

                    foreach (DataGridViewRow ro in dataGridView8.Rows)
                    {
                        if (dataGridView8.Rows[i].Cells[1].Value.ToString() == l)
                        {
                            if (dataGridView8.Rows[i].Cells[0].Value.ToString().Contains("id="))
                            {
                                photos = "&sk=photos";
                            }
                            else
                                photos = "/photos";

                            dataGridView4.Rows.Add(dataGridView8.Rows[i].Cells[1].Value.ToString(), dataGridView8.Rows[i].Cells[0].Value.ToString() + photos);

                            
                        }

                        i++;


                    }
                }



            }
            dataGridView1.Refresh();
        }

        private void dataGridView4_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {

        }

        private void dataGridView4_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            string url = (string)dataGridView4.Rows[e.RowIndex].Cells[1].Value;
            System.Diagnostics.Process.Start(url);
        }

        private void pictureBox63_Click(object sender, EventArgs e)
        {
            if (File.Exists(pathToSave + "\\TXT\\commentsFromPictures.txt"))
            {
                Comments msg = new Comments();
                msg.SetDatagridview(pathToSave + "\\TXT\\commentsFromPictures.txt");
                msg.Show();

            }
        }

        private void button12_Click(object sender, EventArgs e)
        {
            if (textBoxops.Text == "")
            {
                textBoxops.BackColor = Color.Red;
                MessageBox.Show("Veuillez remplir le champ OPS");
                return;
            }
            else
                textBoxops.BackColor = Color.White;
            

            if (!pathToSave.Contains(textBoxops.Text))
                pathToSave = pathToSaveBAK + textBoxops.Text;

            if (Directory.Exists(pathToSave))
            {
                if (MessageBox.Show("Ce dossier existe déjà. Voulez-vous le supprimer ? ", "", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    EraseDirectory(pathToSave, true);
                }

            }

            FROMINSTAGRAM = true;
            pictureBox64.Visible = true;
            pictureBox64.Refresh();

            IsANewThread("INSTAGRAM");
        }

        private void dataGridViewInstagram_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            if (dataGridViewInstagram.Rows.Count == 0)
                return;

            if (e.ColumnIndex == 0)
            //.Substring(0, screenshot.IndexOf("\\"))
            {
                string dire = dataGridViewInstagram.Rows[e.RowIndex].Cells[6].Value.ToString().Substring(0, dataGridViewInstagram.Rows[e.RowIndex].Cells[6].Value.ToString().IndexOf("\\"));
                Process.Start(pathToSave + "\\INSTAGRAM\\ALBUM\\" + dire);
                return;
            }

            Process.Start(pathToSave + "\\INSTAGRAM\\" + dataGridViewInstagram.Rows[e.RowIndex].Cells[6].Value.ToString());
        }

        private void dataGridViewIdentity_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            if (dataGridViewIdentity.Rows.Count == 0)
                return;

            Process.Start(pathToSave + "\\INSTAGRAM\\" + dataGridViewIdentity.Rows[e.RowIndex].Cells[5].Value.ToString());
        }

        private void pictureBoxlogofacebook_Click(object sender, EventArgs e)
        {

        }

        private void dataGridViewComments_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            if (dataGridViewComments.Rows.Count == 0)
                return;

            Process.Start(dataGridViewComments.Rows[e.RowIndex].Cells[2].Value.ToString());
        }

        private void textBox3_Click(object sender, EventArgs e)
        {
            textBox3.Visible = false;
        }

        private void dataGridViewFollowersInstagram_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            if (dataGridViewFollowersInstagram.Rows.Count == 0)
                return;

            Process.Start(dataGridViewFollowersInstagram.Rows[e.RowIndex].Cells[2].Value.ToString());
        }

        private void dataGridViewFollowingInstagram_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            if (dataGridViewFollowingInstagram.Rows.Count == 0)
                return;

            Process.Start(dataGridViewFollowingInstagram.Rows[e.RowIndex].Cells[2].Value.ToString());
        }

        private void pictureBox66_Click(object sender, EventArgs e)
        {
            if (File.Exists(pathToSave + "\\HOMEPAGE\\HomepageComments_With_Screenshots.txt"))
            {
                Comments msg = new Comments();
                msg.SetDatagridview(pathToSave + "\\HOMEPAGE\\HomepageComments_With_Screenshots.txt");
                msg.Show();

            }
        }

        private void checkBoxHidepassword_CheckedChanged(object sender, EventArgs e)
        {
            if (checkBoxHidepassword.Checked)
            {
                textBoxPASSWORD.PasswordChar = '*';
            }
            else
                textBoxPASSWORD.PasswordChar = '\0';
        }

        private void pictureBox36_DoubleClick(object sender, EventArgs e)
        {
            Market market = new Market();
            market.Show();
        }

        private void pictureBox67_Click(object sender, EventArgs e)
        {
            Market market = new Market();
            market.Show();
        }

        private void button13_Click(object sender, EventArgs e)
        {
            try
            {
                flowLayoutPanel4.Controls.Clear();

                foreach (DataGridViewRow ro in dataGridViewInstagram.Rows)
                {

                    ro.DefaultCellStyle.BackColor = Color.White;

                }

                foreach (DataGridViewRow ro in dataGridViewInstagram.Rows)
                {
                    if (dataGridViewInstagram.Rows[ro.Index].Cells[4].Value.ToString().ToLower().Contains(textBox4.Text.ToLower()))
                    {
                        ro.DefaultCellStyle.BackColor = Color.Red;

                        LinkLabel link = new LinkLabel();
                        //link.Text = numeroLigne;
                        link.Text = ro.Index.ToString();
                        link.AutoSize = true;
                        link.Font = new System.Drawing.Font("Microsoft Sans Serif", 12F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
                        //link.Name = "linkLabel" + indexx;
                        link.Name = "linkLabel" + ro.Index;
                        link.Size = new System.Drawing.Size(18, 20);
                        link.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.linkLabel5_LinkClicked);
                        flowLayoutPanel4.Controls.Add(link);


                    }
                }

            }
            catch
            {
                return;
            }
        }

        private void linkLabel5_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
        {
            dataGridViewInstagram.ClearSelection();
            dataGridViewInstagram.FirstDisplayedScrollingRowIndex = Int32.Parse(((LinkLabel)sender).Text);
            dataGridViewInstagram.Focus();
            dataGridViewInstagram.Rows[Int32.Parse(((LinkLabel)sender).Text)].DefaultCellStyle.BackColor = Color.Yellow;
        }

        private void dataGridViewAllPublicatons_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            //if (dataGridViewAllPublicatons.Rows.Count == 0)
            //    return;

           
            //Process.Start(dataGridViewAllPublicatons.Rows[e.RowIndex].Cells[1].Value.ToString());
        }

        private void checkBox12_CheckedChanged(object sender, EventArgs e)
        {
            ScreenshotComments = checkBox12.Checked;
        }

        private void buttonInfo_Click(object sender, EventArgs e)
        {
            panelAide1.Visible = !panelAide1.Visible;
            panelAide2.Visible = !panelAide2.Visible;
            panelAide3.Visible = !panelAide3.Visible;
            panelAide4.Visible = !panelAide4.Visible;
            panelAide7.Visible = !panelAide7.Visible;
            panelAide6.Visible = !panelAide6.Visible;
            panelAide8.Visible = !panelAide8.Visible;
            panelAide9.Visible = !panelAide9.Visible;
            panelAide10.Visible = !panelAide10.Visible;
            panel51.Visible = !panel51.Visible;
            textBox15.Visible = !textBox15.Visible;
            linkRCCU.Visible = !linkRCCU.Visible;
            pictureBox70.BringToFront();
            pictureBox70.Visible = !pictureBox70.Visible;

        }

        private void dataGridViewGroups_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            Process.Start(dataGridViewGroups.Rows[e.RowIndex].Cells[1].Value.ToString());
        }

        private void dataGridViewMap_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            Process.Start(dataGridViewMap.Rows[e.RowIndex].Cells[1].Value.ToString());
        }

        private void pictureBox71_Click(object sender, EventArgs e)
        {
            Group group = new Group();
            group.Show();
        }

        private void labelAMIS_Click(object sender, EventArgs e)
        {
            tabControl1.SelectedTab = tabControl1.TabPages["tabPageresults"];//tabControl1.Controls["AMIS"]

        }

        private void labelIMAGES_Click(object sender, EventArgs e)
        {
            tabControl1.SelectedTab = tabControl1.TabPages["tabPage2"];//tabControl1.Controls["AMIS"]
        }

        private void labelCommentss_Click(object sender, EventArgs e)
        {
            tabControl1.SelectedTab = tabControl1.TabPages["COMM"];//tabControl1.Controls["AMIS"]
        }

        private void labelJournal_Click(object sender, EventArgs e)
        {
            tabControl1.SelectedTab = tabControl1.TabPages["JOURNAL"];//tabControl1.Controls["AMIS"]
        }

        private void labelIdentifiants_Click(object sender, EventArgs e)
        {
            tabControl1.SelectedTab = tabControl1.TabPages["tabPage1"];//tabControl1.Controls["AMIS"]
        }

        private void labelLikes_Click(object sender, EventArgs e)
        {
            tabControl1.SelectedTab = tabControl1.TabPages["tabPageLikes"];//tabControl1.Controls["AMIS"]
        }

        private void labelMessenger_Click(object sender, EventArgs e)
        {
            tabControl1.SelectedTab = tabControl1.TabPages["MESSENGERR"];//tabControl1.Controls["AMIS"]
        }

        private void labelParam_Click(object sender, EventArgs e)
        {
            tabControl1.SelectedTab = tabControl1.TabPages["tabPageParameters"];//tabControl1.Controls["AMIS"]
        }

        private void labelTags_Click(object sender, EventArgs e)
        {
            tabControl1.SelectedTab = tabControl1.TabPages["TAGS"];//tabControl1.Controls["AMIS"]
        }

        private void button14_Click(object sender, EventArgs e)
        {
            //GimmeID("https://www.facebook.com/micheline.hendrycks.9");
        }

        private StringBuilder GimmeID(string [] urlss)
        {
            InitializeDriverInvisible();
            string urlFriend = textBoxUSERNAMEFRIENDS.Text;
            StringBuilder results = new StringBuilder();


            driverHidden.Navigate().GoToUrl("https://facebook.com/login");
            Thread.Sleep(500);

            if (isElementPresent(driverHidden, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
            {
                driverHidden.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                Thread.Sleep(2000);
            }

            // 3. Find the username textbox (by ID) on the homepage
            var userNameBox = driverHidden.FindElementById("email");

            // 4. Enter the text (to search for) in the textbox
            userNameBox.SendKeys(textBox16.Text);

            // 3. Find the username textbox (by ID) on the homepage
            var userpasswordBox = driverHidden.FindElementById("pass");

            // 4. Enter the text (to search for) in the textbox
            userpasswordBox.SendKeys(textBox17.Text);
            Thread.Sleep(5000);

            // 5. Find the search button (by Name) on the homepage
            driverHidden.FindElementById("loginbutton").Click();
            Thread.Sleep(2500);
            //searchButton.Click();

            //u_0_8
            //"menuBar']//*[@class='menuItem']"
            // 2. Go to the "Google" homepage

            backgroundWorker1.ReportProgress(-1616, urlss.Length);
            int i = 0;
            
            
            foreach (string v in urlss)
            {
                int nbrefois = 0;
                long id = 0;
                string ID = "";
                while (ID == "" && nbrefois < 5)
                {
                    driverHidden.Navigate().GoToUrl(v);
                    Thread.Sleep(5000);

                    try
                    {
                        ID = driverHidden.PageSource.Split(new string[] { "\"userID\":\"" }, StringSplitOptions.None)[1].Split('"')[0];
                        //ID = driverHidden.PageSource.Substring(driver.PageSource.IndexOf("profile_owner\":{\"id\":\"") + 22).Split('"')[0];//reg=/profile_owner":{"id":"
                        //ID = driverHidden.PageSource.Substring(driver.PageSource.IndexOf("owning_profile_id\":\"") + 20).Split('"')[0];//reg=/profile_owner":{"id":"

                        if (!long.TryParse(ID, out id))
                            ID = driverHidden.PageSource.Split(new string[] { "owning_profile_id\":\"" }, StringSplitOptions.None)[1].Split('"')[0];
                       

                        if (ID.StartsWith("0"))
                            ID = "1" + ID;

                        //results.Append(v + ";" + ID);
                        if(ID != "" && long.TryParse(ID, out id))
                        {
                            results.AppendLine(v.Replace("\r", "") + ";" + ID);

                            backgroundWorker1.ReportProgress(-161616, i++);
                            backgroundWorker1.ReportProgress(-111111, (v + ";" + ID));

                        }
                        else
                        {
                            results.AppendLine(v.Replace("\r", "") + ";" + ID);

                            backgroundWorker1.ReportProgress(-161616, i++);
                            backgroundWorker1.ReportProgress(-111111, (v + ";" + "PAS TROUVE"));
                        }
                       

                    }
                    catch (Exception ex)
                    {
                        try
                        {
                            ID = driverHidden.PageSource.Substring(driverHidden.PageSource.IndexOf("profile_owner\":{\"id\":\"") + 22).Split('"')[0];//reg=/profile_owner":{"id":"
                            if (ID != "" && long.TryParse(ID, out id))
                            {
                                results.AppendLine(v.Replace("\r", "") + ";" + ID);
                                backgroundWorker1.ReportProgress(-161616, i++);
                                backgroundWorker1.ReportProgress(-111111, (v + ";" + ID));
                            }
                            else
                            {
                                results.AppendLine(v.Replace("\r", "") + ";" + ID);

                                backgroundWorker1.ReportProgress(-161616, i++);
                                backgroundWorker1.ReportProgress(-111111, (v + ";" + "PAS TROUVE"));
                            }

                        }
                        catch
                        {
                            results.AppendLine(v.Replace("\r", "") + ";" + "PAS TROUVE");
                            backgroundWorker1.ReportProgress(-161616, i++);
                            backgroundWorker1.ReportProgress(-111111, (v + ";" + ID));
                        }
                        
                        

                    }

                    nbrefois++;

                    if(nbrefois == 5 && ID == "")
                    {
                        results.AppendLine(v + ";" + "PAS TROUVE");
                        backgroundWorker1.ReportProgress(-161616, i++);
                        backgroundWorker1.ReportProgress(-111111, (v + ";" + ID));
                    }
                }
               
            }

            backgroundWorker1.ReportProgress(-1111111);
            backgroundWorker1.CancelAsync();
            return results;
            
        }
        private StringBuilder GimmeID(Dictionary<string,string> urlss)
        {
            
            InitializeDriverInvisible();
            string urlFriend = textBoxUSERNAMEFRIENDS.Text;
            StringBuilder results = new StringBuilder();


            driverHidden.Navigate().GoToUrl("https://facebook.com/login");
            Thread.Sleep(500);

            if (isElementPresent(driverHidden, "//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']"))
            {
                driverHidden.FindElementByXPath("//button[@class='_42ft _4jy0 _9fws _4jy3 _4jy1 selected _51sy']").Click();
                Thread.Sleep(2000);
            }

            // 3. Find the username textbox (by ID) on the homepage
            var userNameBox = driverHidden.FindElementById("email");

            // 4. Enter the text (to search for) in the textbox
            userNameBox.SendKeys(textBox16.Text);

            // 3. Find the username textbox (by ID) on the homepage
            var userpasswordBox = driverHidden.FindElementById("pass");

            // 4. Enter the text (to search for) in the textbox
            userpasswordBox.SendKeys(textBox17.Text);
            Thread.Sleep(5000);

            // 5. Find the search button (by Name) on the homepage
            driverHidden.FindElementById("loginbutton").Click();
            Thread.Sleep(2500);
            //searchButton.Click();

            //u_0_8
            //"menuBar']//*[@class='menuItem']"
            // 2. Go to the "Google" homepage

            backgroundWorker1.ReportProgress(-363636);
            

            int i = 0;


            foreach (string v in urlss.Keys)
            {
                int nbrefois = 0;
                long id = 0;
                string ID = "";
                while (ID == "" && nbrefois < 5)
                {
                    driverHidden.Navigate().GoToUrl(urlss[v]);
                    Thread.Sleep(5000);

                    try
                    {
                        ID = driverHidden.PageSource.Split(new string[] { "\"userID\":\"" }, StringSplitOptions.None)[1].Split('"')[0];
                        //ID = driverHidden.PageSource.Substring(driver.PageSource.IndexOf("profile_owner\":{\"id\":\"") + 22).Split('"')[0];//reg=/profile_owner":{"id":"
                        //ID = driverHidden.PageSource.Substring(driver.PageSource.IndexOf("owning_profile_id\":\"") + 20).Split('"')[0];//reg=/profile_owner":{"id":"

                        if (!long.TryParse(ID, out id))
                            ID = driverHidden.PageSource.Split(new string[] { "owning_profile_id\":\"" }, StringSplitOptions.None)[1].Split('"')[0];
                        //owning_profile_id":"

                        if (ID.StartsWith("0"))
                            ID = "1" + ID;

                        //results.Append(v + ";" + ID);
                        if (ID != "" && long.TryParse(ID, out id))
                        {
                            results.AppendLine(v.Replace("\r", "") + ";" + ID);

                            //backgroundWorker1.ReportProgress(-161616, i++);
                            backgroundWorker1.ReportProgress(-222222, (v + ";" + ID));
                            backgroundWorker1.ReportProgress(-262626,Int32.Parse(v));

                        }
                        else
                        {
                            results.AppendLine(v.Replace("\r", "") + ";" + ID);

                            //backgroundWorker1.ReportProgress(-161616, i++);
                            backgroundWorker1.ReportProgress(-222222, (v + ";" + "PAS TROUVE"));
                            backgroundWorker1.ReportProgress(-262626, Int32.Parse(v));
                        }


                    }
                    catch (Exception ex)
                    {
                        try
                        {
                            ID = driverHidden.PageSource.Substring(driverHidden.PageSource.IndexOf("profile_owner\":{\"id\":\"") + 22).Split('"')[0];//reg=/profile_owner":{"id":"
                            if (ID != "" && long.TryParse(ID, out id))
                            {
                                results.AppendLine(v.Replace("\r", "") + ";" + ID);
                                //backgroundWorker1.ReportProgress(-161616, i++);
                                backgroundWorker1.ReportProgress(-222222, (v + ";" + ID));
                                backgroundWorker1.ReportProgress(-262626, Int32.Parse(v));
                            }
                            else
                            {
                                results.AppendLine(v.Replace("\r", "") + ";" + ID);

                                //backgroundWorker1.ReportProgress(-161616, i++);
                                backgroundWorker1.ReportProgress(-222222, (v + ";" + "PAS TROUVE"));
                                backgroundWorker1.ReportProgress(-262626, Int32.Parse(v));
                            }

                        }
                        catch
                        {
                            results.AppendLine(v.Replace("\r", "") + ";" + "PAS TROUVE");
                            //backgroundWorker1.ReportProgress(-161616, i++);
                            backgroundWorker1.ReportProgress(-222222, (v + ";" + ID));
                            backgroundWorker1.ReportProgress(-262626, Int32.Parse(v));
                        }



                    }

                    nbrefois++;

                    if (nbrefois == 5 && ID == "")
                    {
                        results.AppendLine(v + ";" + "PAS TROUVE");
                        //backgroundWorker1.ReportProgress(-161616, i++);
                        backgroundWorker1.ReportProgress(-222222, (v + ";" + ID));
                        backgroundWorker1.ReportProgress(-262626, Int32.Parse(v));
                    }
                }

            }

            backgroundWorker1.ReportProgress(-1111111);
            backgroundWorker1.CancelAsync();
            return results;

        }

       

        private void button15_Click(object sender, EventArgs e)
        {
            if (textBox16.Text == "")
            {
                textBox16.BackColor = Color.Red;
                MessageBox.Show("Veuillez remplir le champ USERNAME");
                return;
            }
            else
                textBox16.BackColor = Color.White;

            if (textBox17.Text == "")
            {
                textBox17.BackColor = Color.Red;
                MessageBox.Show("Veuillez remplir le champ PASSWORD");
                return;
            }
            else
                textBox17.BackColor = Color.White;

            if (textBoxops.Text == "")
            {
                textBoxops.BackColor = Color.Red;
                MessageBox.Show("Veuillez remplir le champ OPS");
                return;
            }
            else
                textBoxops.BackColor = Color.White;

            GIMMEID = true;
            progressBar2.Visible = true;
            progressBar2.Value = 0;
            progressBar2.Maximum = 0;
           



            //StringBuilder resultats = GimmeID(richTextBoxIDS.Text.Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries));

            dataGridViewIDS.Rows.Clear();
            resulttsID.Clear();

            if ( richTextBoxIDS.Text != "")
            {

                foreach (string ligne in richTextBoxIDS.Text.Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries))
                {
                    resulttsID.AppendLine(ligne);
                }


                   
            }

            //if(driver != null)
            //{
            //    //driver.Close();
            //    driver.Quit();

            //    driver = null;
            //}

            IsANewThread("gimmeid");
            return;




            //foreach (string l in resultats.ToString().Split(new string[] { "\n" }, StringSplitOptions.RemoveEmptyEntries))
            //{
            //    string [] para = l.Split(';');

            //    dataGridViewIDS.Rows.Add(para[0], para[1]);
            //}

            
        }

        private void textBoxUSERNAMEFRIENDS_Validated(object sender, EventArgs e)
        {
           
        }

        private void textBoxUSERNAME_Validated(object sender, EventArgs e)
        {
            textBox16.Text = textBoxUSERNAME.Text;
        }

        private void textBoxPASSWORD_Validated(object sender, EventArgs e)
        {
            textBox17.Text = textBoxPASSWORD.Text;
        }

        private void pictureBox74_Click(object sender, EventArgs e)
        {
            UserControl6 osint = new UserControl6();
            panelOSINT.Controls.Clear();

            osint.Show();
            panelOSINT.Controls.Add(osint);
            panelOSINT.Visible = !panelOSINT.Visible;

        }

        private void checkBoxOSINT_CheckedChanged(object sender, EventArgs e)
        {
            if (checkBoxOSINT.Checked)
            {
                Configuration config = ConfigurationManager.OpenExeConfiguration(Assembly.GetEntryAssembly().ManifestModule.FullyQualifiedName);


                
                textBoxUSERNAME.Text = config.AppSettings.Settings["OSINTusername"].Value;
                textBoxPASSWORD.Text = config.AppSettings.Settings["OSINTpassword"].Value;

                textBox16.Text = config.AppSettings.Settings["OSINTusername"].Value;
                textBox17.Text = config.AppSettings.Settings["OSINTpassword"].Value;
            }
            else
            {
                textBoxUSERNAME.Text = "";
                textBoxPASSWORD.Text = "";

                textBox16.Text = "";
                textBox17.Text = "";
            }
        }

        private void button14_Click_1(object sender, EventArgs e)
        {
            richTextBoxIDS.Text = "";
            dataGridViewIDS.Rows.Clear();
            resulttsID.Clear();
            GIMMEID = false;
        }

        private void dataGridViewIDS_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            Process.Start("https://www.facebook.com/" + dataGridViewIDS.Rows[e.RowIndex].Cells[1].Value.ToString());
        }

        private void dataGridViewDiscreet_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            if (dataGridViewDiscreet.Rows.Count == 0)
                return;

            if (dataGridViewDiscreet.Rows[e.RowIndex].Cells[1].Value.ToString().Contains(".png") || dataGridViewDiscreet.Rows[e.RowIndex].Cells[1].Value.ToString().Contains(".jpg"))
            {

                try
                {
                    if (File.Exists(pathToSave + dataGridViewDiscreet.Rows[e.RowIndex].Cells[1].Value.ToString().Substring(dataGridViewDiscreet.Rows[e.RowIndex].Cells[1].Value.ToString().IndexOf("\\"))))
                    {
                        try
                        {

                            Process.Start(pathToSave + dataGridViewDiscreet.Rows[e.RowIndex].Cells[1].Value.ToString().Substring(dataGridViewDiscreet.Rows[e.RowIndex].Cells[1].Value.ToString().IndexOf("\\")));
                        }
                        catch
                        {
                           
                        }
                    }

                }
                catch
                {
                    
                }


            }

            
        }

        private void contextMenuStrip6_ItemClicked(object sender, ToolStripItemClickedEventArgs e)
        {
            GIMMEIDFORIDENTIFIANT = true;            
            IsANewThread("gimmeid");
            
            dicoresulttsID.Clear();

            
            int i = 0;
            foreach (DataGridViewRow ro in dataGridViewIdentifiants.SelectedRows)
            {
                dicoresulttsID.Add(ro.Index.ToString(), ro.Cells[0].Value.ToString());
                ro.DefaultCellStyle.SelectionBackColor = Color.Crimson;
                ro.DefaultCellStyle.SelectionForeColor= Color.Black;
            }
        }

        private void button16_Click(object sender, EventArgs e)
        {
            batch = new Batch(dataGridViewBatch,labelBatch, dataGridView5);
            batch.Show();
        }

        private void labelBatch_TextChanged(object sender, EventArgs e)
        {

            BATCHING = true;
            pictureBox77.Enabled = false;
            string ecaseName = labelBatch.Text.Substring(labelBatch.Text.IndexOf("Ecase=") + 6).Split(';')[0];
            string discreet = labelBatch.Text.Substring(labelBatch.Text.IndexOf("Discreet=") + 9).Split(';')[0];
            string directoryy = labelBatch.Text.Substring(labelBatch.Text.IndexOf("Directory=") + 10).Split(';')[0]; 
            bool disc = false;
            BATCHDIRNAME = directoryy;

            if (discreet == "True")
            {
                disc = true;
                panel55.BackColor = Color.Black;
            }
            else
            {
                panel55.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(23)))), ((int)(((byte)(120)))), ((int)(((byte)(242)))));
            }
                

            panelBatching.Visible = true;
            dataGridView5.ClearSelection();

            LaunchBatch(ecaseName, IndexBatch, disc, directoryy);
        }

        private void pictureBox77_Click(object sender, EventArgs e)
        {
            BATCHDIRNAME = "";
            BATCHFOLDERNAME = "";
            BATCHING = false;
            panelBatching.Visible = false;

            foreach (Form f in Application.OpenForms)
            {

                if (f.Name == "Batch")
                {

                    f.Close();
                    break;
                }

            }

        }

        private void pictureBox78_Click(object sender, EventArgs e)
        {
            ClearForNewuser();
        }

        private void ClearForNewuser()
        {

            SaveCaseClosingForm();


            //on recupere les resultats à partir des labels de resultats
            labelAMIS.Text = "AMIS / ABONNES : 0";
            labelIMAGES.Text = "IMAGES : 0";
            labelCommentss.Text = "COMMENTAIRES : 0";
            labelJournal.Text = "JOURNAL : 0";
            labelIdentifiants.Text = "IDENTIFIANTS : 0";
            labelLikes.Text = "LIKES : 0";
            labelParam.Text = "PARAMETRES : 0";
            labelTags.Text = "TAGS : 0";
            labelMap.Text = "LIEUX : 0";
            labelGroupe.Text = "GROUPES : 0";

            pictureBoxwaiting.Visible = false;
            pictureBox64.Visible = false;
            panel53.Visible = false;
            pictureBoxfriends.Visible = false;
            pictureBoxIdentifiants.Visible = false;
            pictureBoxcomments.Visible = false;
            pictureBoxJournal.Visible = false;
            pictureBoxMapOK.Visible = false;
            pictureBoxParam.Visible = false;
            pictureBox5OKLikes.Visible = false;
            pictureBoxtango.Visible = true;
            pictureBoxtango.BringToFront();
            pictureBoxtango.Refresh();
            panel3.BringToFront();
            panel4.BringToFront();
            BATCHDIRNAME = "";
            BATCHFOLDERNAME = "";
            BATCHING = false;
            panelBatching.Visible = false;

            foreach (Form f in Application.OpenForms)
            {

                if (f.Name == "Batch")
                {

                    f.Close();
                    break;
                }

            }

            checkBox1.Checked = false;
            checkBoxFollowers.Checked = false;
            checkBoxGroupes.Checked = false;
            checkBox2.Checked = false;
            dateTimePicker4.Value =  new DateTime(DateTime.Now.Year, 01, 01);
            checkBox3.Checked = false;
            checkBoxLikes.Checked = false;
            checkBoxMap.Checked = false;
            checkBox4.Checked = false;
            checkBox5.Checked = false;
            checkBoxDiscreetMode.Checked = false;

            progressBarfriends.Value = 0;
            progressBarfriends.Maximum = 0;
            progressBarfriends.Visible = false;

            progressBarpictures.Value = 0;
            progressBarpictures.Maximum = 0;
            progressBarpictures.Visible = false;

            labelID.Text = "";
            textBoxops.Text = "";
            pathToSave = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments);
            pathToSave = pathToSave + @"\FacebookAnalyzer\" + textBoxops.Text;

            textBoxUSERNAMEFRIENDS.Text = "https://www.facebook.com/";
            dataGridView2.Rows.Clear();
            dataGridView4.Rows.Clear();
            dataGridViewLikes.Rows.Clear();
            dataGridViewMap.Rows.Clear();
            dataGridViewJournal.Rows.Clear();
            dataGridViewForPictures.Rows.Clear();
            dataGridViewBatch.Rows.Clear();
            dataGridView5.Rows.Clear();
            panelThumbnail.Controls.Clear();
            dataGridViewTags.Rows.Clear();
            dataGridView3.Rows.Clear();
            dataGridViewIdentifiants.Rows.Clear();
            dataGridViewComments.Rows.Clear();
            richTextBoxRecherches.Text = "";
            richTextBoxSessionsActives.Text = "";
            richTextBoxConnexionsDeconnexions.Text = "";
            flowLayoutPanelAnnexe.Controls.Clear();
            dataGridViewDiscreet.Rows.Clear();
            dataGridViewTrace.Rows.Clear();
            profilIsSet = false;
           

            ONLYSCREENSHOT = false;
            FASTMESSENGER = false;
            FASTJOURNAL = false;
            FASTJOURNALFORBUSINESS = false;
            BUSINESSMODE = false;
            FROMURL = false;
            FROMINSTAGRAM = false;
            FRIENDS = true;
            FOLLOWERS = true;
            GROUPS = true;
            INSTAGRAM = false;
            
            GIMMEID = false;
            GIMMEIDFORIDENTIFIANT = false;
            BATCHING = false;
            batch = null;
            ScreenshotComments = true;
            LANGUAGESELECTED = "";
            nbrePublications = "";

            dicoMessenger = new Dictionary<string, string>();       
            dicoDestinatairesFromGrid = new Dictionary<string, string>();
            selected = false;
    
            sortedListForSearching = new System.Collections.Generic.List<string>();
            dicoResultsIndexSearch = new Dictionary<int, int>();        
            videos = new Dictionary<string, string>();       
       
            audios = new Dictionary<string, string>();
            Analytics = new Dictionary<string, Analytics>();
            resulttsID = new StringBuilder();
            dicoresulttsID = new Dictionary<string, string>();

    }

        private void pictureBoxLogo_Click(object sender, EventArgs e)
        {

        }
    }
}
